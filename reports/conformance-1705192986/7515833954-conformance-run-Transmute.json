{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1d83175e-834a-49b3-8402-35fed4bcc998",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0365387c-0269-4d7a-963d-7f20a78c9c0a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed374f8b-c27f-4a44-b115-ab4b4b4054ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9e52354b-59ff-48b6-b3dd-0e76fc79d1fa"
                }
              }
            ]
          },
          {
            "id": "49828a3e-84a0-4265-a25e-b3a4de0e0adb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c032e749-cef0-4ef1-9cfe-7e52980a431b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8fbb2c1-9c5e-4ada-ae92-731366d3674a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1d822b4-131e-4e46-92a6-cf2bee919898",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e6b5a1c9-66d7-46e8-9aaf-14966d730ac8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22e025cb-0657-4fd5-bd71-077cf6fbcacd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45cc946d-57b8-4e31-964b-9b9e5eb47000",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f22e62f-7e24-4947-afc4-f0d5f22e2cd6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ef8b595-f165-4673-9fad-55879fc1f776",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f45baf0-9b7f-44be-aa4c-917e1210a800"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "40df133d-f860-49b6-b1ad-683421f3f9d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbf5bcd4-daf4-4fb7-9982-84711faff56c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c62267e6-ca7e-4468-aefe-6cff64129aec",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7fa0f7c2-3dbd-4627-80ad-2c2c37f81ed2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "150e3e06-818a-43c4-b365-e5b8f56e833d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89940a69-7333-45cc-9f5c-0c68ad3e7891"
            }
          }
        ]
      },
      {
        "id": "69479d98-9a37-4457-b88c-fa7cea94b7d6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7b5a8bfc-8d0f-4861-b9fd-56086c0532ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af288453-bb2d-46d0-b273-b2dcb3c30bef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1aa1782f-7aa3-4094-8354-ce4aadaca937",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f25530-3fe3-4d72-8fae-e0044c704d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9c7fd3e-f18d-4285-865e-39f87659006c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373cbbe5-eeb3-4a25-a9b4-3f60c6b44044",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f614242-c10c-44e7-9ce2-4b2c16704692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df0399bb-226c-4bc9-836d-49b9076e0dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0802305f-f091-4cca-9fdc-35ec419d6a12",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852f0b4f-8410-43b9-96ac-e9af4fe49d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "078f6c9d-5b7f-43c9-aa96-676f2f47f8e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "284e5ac2-e2da-4e30-bc9d-cd6ce027fbae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3932434b-14a4-4c2c-b12c-6070e54f20ed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d373d056-fd07-4966-acab-92a05186186b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96486a7e-b6d5-4b21-aed6-3c8c5a2bde14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c25a9fc-5d67-4712-beb1-b6832f5e71e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a3b82d-5f6a-40e9-a325-9c68de2276ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6e49d1a7-2f32-4d09-b39f-f3b148fd21cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a722c3a8-d8d0-4732-b86c-31044023d0d3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22754de2-ea03-46db-a2a1-2aa3da7da807",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cd60576a-922d-4be2-a08e-b9d7b9a9c4f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee09341d-9878-4030-811c-cebec732f7cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a934a48a-a6f5-4e92-929c-cd82d945b5ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "463d0304-5309-4db0-8b1e-69fe2a6ed98d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "513427a8-0733-430d-b0f2-6728c7452d25"
            }
          }
        ]
      },
      {
        "id": "846698db-89db-4cc8-9366-a727f70f3a87",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "86a58dd6-c17b-453a-98d9-4fa0b7ee1be9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce39fe23-adc4-4fd0-9c08-1bd1927377df",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ec5f5b27-93c5-4307-adf5-05c830885262",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4bd09c-da4f-4ab3-992c-1f6b506be84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7aeb5b-6dea-499f-b6ef-997755845e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09854d2-0580-499a-8187-2e411e5663ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e2241e8-499c-4a97-b321-ddc5d29c88cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ec2ff4-a065-4cd8-a5e1-7f77956e8927",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1d5eeb-317a-4f51-9c79-405fbfaae207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408cea7c-d0f4-4a0a-92ef-9736beb484f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12db27f-5789-470e-ae12-a76e89236e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b060d3a-05ab-42b9-b979-1fa94de00077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aed79d-33e9-4866-b41b-bc0ce64ebe11",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fba6e7e-318c-4a95-9003-af04315a3838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b79ec3-3765-4b34-86e2-4775ac27f084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee63576-fab4-47d2-9e4c-ed57edd405ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce5b31d6-377c-417a-a699-ecf817918f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dcdb95-da49-4920-9713-60759cf10bc9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602c2962-efdc-494c-98a3-602c699f511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b59eeb-665e-421f-b077-478617ba888f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547ece66-29e0-42ff-9a68-602b6384c4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4d1c2cb-d585-4fda-959f-dd1b1ab07aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0be1204-725c-43ee-a5db-b19feb73a4e6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69315cf1-2e5d-4902-9ab8-0ae037fd4362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb5a1ff-448d-469e-a0fd-9013a16a6819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a9d3d4-892b-4c86-b3e1-6e45fb3428c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68fbad28-4d3c-4fe9-981d-1e75bb9b2ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708f873-a358-411f-bc4b-a578312ae776",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2870d9-6ebc-4bfc-b7a4-ef0cb05070ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153f9a7b-8a93-47f9-860e-4198dfe1db02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9973bdfe-7ce8-4a7d-9493-e20e566b98b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1f0e342-b1aa-44e4-8321-0284786efff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4ba42a-ac7a-4a6e-af39-2d14cd5b36f9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f05021c-db19-4eb4-a5a2-e0accdb4baa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1226e0a-ca8c-4f35-9cbf-9cea24c2bc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570ed820-a0b5-4b19-b6b9-34faebdf6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e3a9e4d-b55d-4bf2-8881-adeaf1a5450a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f06318d-2ac8-4fac-923c-8534a463c96c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6c9d9c-9b1a-4ff1-8292-a791729b6bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d4f296-ddbe-4d60-ad19-3c33d2431be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8b911f-ad3c-49f6-b343-dda203fbd29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1d9e496-2c42-483a-959a-56aefd9582f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9c1d25-b7a2-4102-8ef9-c674cdaac915",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df587b2-a64b-45b8-b40e-c6700ab093ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a954f7-c582-481c-80a3-6bb9a415ee7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d1efed-1124-4e6b-879b-421b643d5c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83ba97cd-bfd1-42ea-b9a1-93f28ce06d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8475d31-f07f-41a9-a012-db543c4c14ec",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119f3dd2-82b5-49c4-9637-206398dde44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cc6b46-971a-428c-a099-923d2cb2178f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb4ed4d-79ea-4dac-8da1-a114e3bc3e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ce80851-2b0a-4031-a169-29a08287f7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6956bb9-c04b-4497-a884-f68789c469e4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2fc187-b69a-4156-a26c-6d4a1be8b953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b1f1ef-8976-4925-b1e9-c6a81e36e16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c277b6-06bd-4e04-9629-7b788ed819fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33a69223-9338-484e-8cfa-b1eeb26e36c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcf5769-f1ec-4d6b-94a5-67393311b28b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf7eb82-8188-4bd2-863b-77aa90e2ff60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f727ea4-a132-463c-955d-6f5ed8566a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66de872d-ae92-4df2-abf7-b2f0c90a3d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cfa907a-7b1f-4598-8833-3e34b04c08c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c18304-a299-4dcb-b226-9669b9952c4a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0043ab-f9d3-47e7-97ae-c8f28491a333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5697f2af-ab30-4d7c-9701-3766b3f3272b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb2c5d9-dde6-4500-88d8-eb48309a0ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a56d063-be58-425d-9a56-692d1314575d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e348ac3-3278-4235-a0f0-ef78c3928ce8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc07aa68-edf9-494d-8f14-e4615fa7a585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ffa309-5c0d-4b8b-bd62-7bb4db339bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f65c641-3e32-43b9-80fa-5de9729e1442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a80fb57-639d-449a-b923-cb3d769df5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f46a788-a858-4d99-85ea-8ae39d3f262a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd5d905-0cfb-4c19-9fba-25abcdd65e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0051ea98-506f-4096-bbf7-949f26d2cd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4817bb-0504-4598-b6b8-186eb6b113a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ea7ae4e-63b1-480d-8402-c2d11562bd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8fae8e-c3e8-4986-a4b5-c4d2fcbd1e8e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b22bd8f-c9ab-43bb-887b-945c25c81e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5082038-b728-4c08-ba31-aeec8959c50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c63b50-1d89-416c-8d13-830613b6cb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a04785a1-638d-431d-84fd-d25aaa03e5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09284cbf-4d60-4786-96b9-9670700c9b97",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c836e0-b7ab-4ca9-99f5-0dab0b88adf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0a320e-e9d0-489e-bd62-6198f7b7098c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f59eae2-12b8-42ee-93a0-ca764999c398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79872edb-b9e2-4abd-9e38-ac517b318284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047a229b-f25a-4f67-873d-865aeb99d4f0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33ffd2d-f983-461b-a561-176978ee57f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9b6a13-b6d7-4de0-ad82-9857bb1f1513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b5d13b-f48b-41b8-a489-d35c5d24c6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7e8734-8225-40c9-b8dd-a80996080a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12244d60-6b4c-4a1f-aa5c-1f8463ee6137",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13e8517-1fda-4f0c-b05c-71598fd5f489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e38bf6-16e5-46b5-98ce-b9df0020be43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30261be6-9eb9-42df-801b-a525db565c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e88b5ba-7aad-42d2-b355-f26c4ce2d04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c87333-9bd4-4c23-bd47-c89586a4a857",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b733954-cd5d-406d-9ce1-39427560b5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7c8918-1329-4262-b898-f59b7c07cd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477d052c-e218-47e2-89f2-9b30d5f5e14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4dc693-99c5-47dd-8887-10cd7207f2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93387a10-73d5-4773-86be-3468f062ceb5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacdc438-9ac8-4346-b24a-325f25f17004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e9995c-f2e1-4914-b0cf-33c2a8857aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff029b53-001e-4ee1-b786-dcb0d5f5a66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5270fad-4dc5-414b-9d0a-54ad83bc5cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16a3f3b-bd31-4a13-b7f9-00e1728d6dea",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76521bc-e1e4-407b-8ec9-a13a4a31e977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2787c3b-aa8b-4c3c-971e-9382dbabb302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d12fce-0905-4cdd-b3d9-e96b207cbf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed21077-d22f-4f63-9366-ac3a281b167b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecd7487-98d3-498a-a31f-36c4a876ddf7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8257e5-eb4e-46a0-a17c-fd2de986fac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37f65a5-3734-43e3-85c5-d2b6d7df077d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b110bc2f-9634-4f47-b3ef-51e2a90b980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0489c0-e066-4cde-9f74-2a733c21d84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4305fbb7-d07d-4216-a796-7a45bc58784d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58094c80-befd-4ede-b9b2-5188541b9887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35ddfd2-0982-4a8a-a1d1-6be5e2fbceb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f297d0-d236-4cda-88e8-ef6df8c6e013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6d4471-be58-47a4-ae87-48bb19f5b8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b537ac2-c371-43e5-ab11-c71296898666",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2e5158-d4a2-4dd7-96ae-dbe717c6ed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b41c0b-faff-4650-b142-5ef4438d7955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543639bf-d51b-467c-b4ab-d585aba4ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c26fd49a-96f5-4bc4-bcc8-cce40fae0154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57422f1a-5ca9-4fd0-a1a5-ac508da530b7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db4381-aa47-41da-8a6b-5e9b22fda55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76aa42d-919a-4417-b712-4726a41e5b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e053a152-b2bf-45aa-93a5-4228100c6d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0df9c2d-252d-4513-bdd6-2367dbd2df8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701d146e-2d4e-4a43-a49f-a1536c1add8d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94c1d5e-b365-47a8-95c0-91f9866ba039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1e7ca0-3f40-48dc-9fb0-f2eb28af02cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0703330e-73c6-4abf-85eb-5024b7e86def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6301f391-2a4a-489e-86c4-5d28f291a591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ada284c-ccd8-4068-b66d-156f11a62ea1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5417be6f-ee50-4f92-a31f-6eee2693d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c8615c-12e7-45f9-a198-dd4927171e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99941328-487a-444e-8375-4c9a3f131711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5c006e-6152-48fa-bc5c-4f5bb8b0bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc7dbf3-c0c4-47ac-9074-a3732959222c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856ee7ee-1165-4ac0-a715-69b415e41ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59783083-c649-4a20-8762-e0b4bb0de440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd62632d-68aa-4b10-8f33-8be445523042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58439a86-2d8f-4d43-ab3f-7c896100790b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcf6f47-f21a-4f05-8b49-45298f227165",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213cd2ef-dc84-41a4-a083-3700cd0e033e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca2b68e-94df-4021-a492-9cecda9c924e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ee9510-2cd7-416a-a642-3b2e57d1ceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "da9c4b10-6005-4b53-afaf-7e66ea9af941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041485a5-0276-4061-9447-f8ccc629e27e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a4dbd1-15fe-4bdd-94f9-0a5c4bd453ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e9b8ac-8601-4528-9e7f-51d13af2c5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f84f080-cadc-41ae-ba66-1de9cc4bcad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc28d6c1-6894-4d06-bde3-15be3fb27ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac22475-3bfc-411b-854b-2266f3623379",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bcac35-6ecd-4580-89f0-2a0c695d70b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72403325-3d1b-4f90-a07f-21943878c9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55c3853-f439-406b-95fc-98ee18a2390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3092e291-98e2-4d77-848a-4e633ed76cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fefb69-d045-4a23-b543-388e3fcbaa60",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703662d6-bc97-4198-a0cc-00163c498460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f281b16-2430-4e28-8721-a07d3c16acfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86f330d-614c-4e4f-92b1-5b8208c2f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33502298-53bd-4668-bc61-1ba354ceaf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c15eae-acc4-435a-b3e7-27981862625b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0edd0c-5cdb-4024-ae28-b05c1a39ba23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c480cd-026b-469c-abcb-61bb4fc99283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4c9d1c-574d-4fdc-beb8-8bfc570b181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "578f9bb8-755c-48c2-8405-401727992e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360cdbe9-20e2-4814-a983-fc22b3d140da",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567cb4eb-a312-49d3-838c-8640b9ca6e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b4b704-c802-415f-8cfc-ed16f4006fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdf8541-d160-41f7-8905-29842b2d5f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2960d9a9-8222-470c-8678-79794c39f2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc0ecab-4e3b-4616-9adc-c98ce55f70d0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea73c707-ef55-4d98-9937-0b5b45946b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d628028c-1a6c-49b8-8000-6ab7849fff28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919e9cbd-9d9b-4a67-a9e6-cde21fe5d7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61ecabe4-b77d-497f-bd44-d2a1be449996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de5febd-047f-4582-ba97-0509dd0255e8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd786f78-647a-4e0d-92af-c131b9e4293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffa0d1f-a2cb-484b-a32f-0d6808100579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3448bf-85b2-493b-8796-8dcd9063c426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d84a0f84-e73a-486a-8883-6eafcb58d53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fdf627-4b08-4110-9d03-adf81ad91fba",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79708e3f-9cc9-4a09-9a4e-e08f5599b2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9628cf8-096e-42e3-a733-1aeb8063ee29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9da430-13ad-480a-a019-bc8466410c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d6d8c6-f4df-4bb1-9fe0-ad2cf9921066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34589e1e-6af2-4f87-92e8-934ae686cc21",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c6898c-d707-4de7-b9f3-f91e29bd0750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66975239-b09e-4a82-8909-9d567e59ad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f724739-ac73-4202-8aed-a9e1cb897bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2de6fefd-45cd-4ad6-99d1-d8c9eeb1ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4ad096-b9b0-4ffe-849e-7169b53a3d13",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4f33da-cbe9-4686-af4a-933d28e72b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bc1572-7d7d-4106-8bfc-a18d33f492c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ba54b3-9c64-4792-b955-9ab850af1058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "babc2110-1904-4ab5-9b44-5f7e06ba985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2160b9b6-de19-4bd6-a509-806cd505e954",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40a8127-3ece-44b9-b00a-723376516a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eebe2dd-f579-4c69-b319-6dc49e2b3ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbe89d6-a012-436d-b5f1-8b14db7f1deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "88aa6dea-2932-4e59-99f3-9293fa376beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e0c5dc-e95f-4074-9926-3e30a595089a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e7d054-fd72-42ea-8211-1023d8c437f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9475d4d5-7a94-4945-904e-5bcaed0d1ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fdce95-524c-4e38-9587-b650b1c187a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4b146445-4a9f-40a6-b1bc-f2fed31eb13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c0e814-d9c6-4afb-840f-31312e26cff6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9071da2d-6107-446e-9d77-55b5f28f735f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd43d4b3-9167-4069-868f-759d7758f000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad2886-1a88-4e84-b148-5cf9aff43545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d68e5a4-8c9d-474e-bf0a-4f04f97f59f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa08daa-b2b3-4af8-9c6a-454c43c8c631",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27b2af5-85fe-4f34-a2e4-a34ca18dc070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f38d33-f5d0-41de-8d98-abf5ad811ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb7c41-60e2-40ed-9402-42ada42f3343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ef4226-9fbf-431a-b6ac-19699493c5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0a0c6b-f88e-4488-af54-fd90c1fc2477",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4864a480-2ab5-4d91-b47b-348ea673770b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d916fbe2-816a-44e7-b05e-5a5280dfd1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198fef5b-996a-418b-a3ab-6ba5af8972b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb76258-703c-41ae-976e-c1852cb3fac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c212bb-c633-404b-9ade-02f556550ffc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6994ff9f-e9a2-41dc-b01f-c421cbd7984a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741830e8-7937-4a12-a881-f750cbae107e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2211cc6f-9935-4831-8844-180104b93082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9ff090-016a-4839-96df-921f17fb9e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a12f94-e0a2-4928-8897-f8479bd78916",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186e9598-9307-4cc7-b002-f14926240640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b46df6-4bc5-4106-8d46-2f68e8dddb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5d32af-5c63-4926-a7e2-e7191f387999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d007f4-5198-42e5-a2e1-b8ab58cef9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8922a4ab-86ac-4eaa-8ca8-b546e29a282b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27556386-f88f-4e31-afc5-edd023418df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabeabba-1768-4c46-af05-9c35582627c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379e9b99-8326-4d17-a3e7-d50876c7910e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4c24a8-4d8f-477c-97e4-bb7adbbf741e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf377e5-aaa8-434b-8e95-94484cc00ed2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c043c7-d846-4294-ba82-fc23d345bded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8470bc38-8660-42be-b5ba-aee84c1346f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18e29df-ea86-46d6-b8e1-5455f8affb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a079646e-ae0f-462c-a10e-0cf9b8f7cbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6863e8-4af3-497c-8468-75cfa8c47343",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f53dc2-c178-4400-9667-074fbe535c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0bdb8d-ac23-4acb-9ae5-6b1335101a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532791f7-dd90-4289-ba54-879d085e188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68b618cb-1e2b-4e12-a461-5dffdd0247b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa5f283-bd6a-41f8-ad68-211312fcdfd1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc8e60e-ad61-4618-bdfa-5984932b25b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253da067-f7a7-4ca9-bd8d-76db61b7cc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d6f911-3be4-4898-b215-d4ab2b0335dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccfd45c-790b-4d40-a564-9dad2d2c72d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204590ce-22b3-402b-8c23-75ed82921833",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf3219e-2033-4657-9de5-3d97b3a9efa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0741a998-861a-485e-815b-a897634174bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0c0560-ab35-4724-807a-c839ba7b3e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c2b2bd-1fa0-45f9-97a5-93aab6688f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcbe5eb-028a-4f1c-b63c-4180d591aa5d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f60a98c-e6ca-4569-9cee-6b46ecdc707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e070e2a5-1ed0-47e6-8abd-f1d25b4b7910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6129b5e2-f452-4f7c-8bb1-2a34f7a91e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d663ab9-ef5b-4442-b5d1-a565e6c8073b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e32952-04cd-4e97-b5f7-c67e8473bf39",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac92bc9-5b68-4e0f-a756-fb32ac45ae09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efe008c-38fc-4afa-ad48-d7d355cf7712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f6daf5-591d-4365-9f31-c48f66a0d8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b897637a-d646-4797-b4dd-7b99e185f70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a4b1dc-d21d-44cf-94d9-d863c69c63ff",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f016d3-bf64-4db3-a8b5-f5c8ce7cd7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382eeedc-ab3c-4ee2-b844-5970fd9521b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad2ecb4-53a6-49cd-9434-eb3c809665ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c02879c-a2cb-4f99-a79a-c157cd1c2c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02200a73-58c5-4d73-9c9b-7fc75dd729c9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414d3ae3-3b49-4c62-815b-c94b30eac1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476edb2f-8890-4af3-855a-2c0395d3b5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c390789b-47e5-47fc-826c-67c8a09137d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b98839ae-3889-4c9e-9af7-b4d983f63857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7195687b-3804-4fca-81ba-f2ee0f912503",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d49ff35-5050-423a-b286-a3c542392db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af96a6e-7e6a-48a6-b99a-1321429b97ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d83be19-439d-429c-a5d2-43c9f2a3852f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b74d0250-bfe6-4721-9797-8d9147c48b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91792ae-519c-4d57-b081-0dd4e58bdeb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc184bf5-fed9-4169-a890-3905f1fde244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f80a1c-09fc-4568-a2b6-b4bea653c172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b61df47-7b8c-40c8-a7bf-7b618b5593f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c40ebbb-ce21-4d31-a22d-bb50440c2360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269c2bd0-b5dc-40a5-b17e-74a34894ce6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc99bf38-6602-4d67-a3d8-6649ec2db192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cd3fef-b222-441e-b928-3bf256fae119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e15ec5-6e8e-4989-b98d-dc1127976ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54fe9967-d264-4050-ba80-452ca388bd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7d2801-e8f8-4f02-b0c9-d1c7448600c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba7cd0-ebf9-4af7-b979-a1d5856f9d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70afa01e-b8d8-4246-bbcc-9f0a7b4ec992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e94370-ef62-4673-8def-c61860a1df68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6916bb-eaee-4441-ac09-962af1ad26e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a979aa3-1164-4723-af85-65fe8cefa821",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce97fce-707b-4d5b-b2f1-87f3db6c50a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4c15ab-715b-48fa-bf5a-0715999d276c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ce7039-2513-469c-85d3-2ff0d1506981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9fcffa-ad51-4585-a661-4583b91f196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606f1fd6-ad82-4fac-9349-1801b8fe2aaf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95498b48-fe8c-4478-9c0b-0acb6ff1982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508724af-a798-4c67-a7f7-db3e95b56c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fca7ca-9865-4751-aac9-b4c5aceafcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86e9f67-bc71-4a57-b041-4d76c19e8581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a456f6e-41a3-488e-a14e-592312a9eb0c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2db315-28e7-48fe-a3c4-39122005c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28faaff3-a0d4-4805-a7bb-17901e834fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270b5ad4-4672-4937-8649-2e74fc9b59a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ec427f-fc4f-4237-88a3-5bf75e19be94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ec1436-35f0-48f5-9dc8-713c27aa8ce4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84aee67-63ac-4022-bf44-a5c5aee8bd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa80f7c-acc0-45de-b87c-3fd0e7fddda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898fa996-18e4-4a0e-8f9e-be68b8b505ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "041f9bd1-2702-4907-8849-76ee6a678aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d27c189-f700-4b73-84cb-f9f3d30971e1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb743a2-5b69-4778-a409-5e5d6cbf8545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887247a5-dadd-468d-ae81-1639634b8ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ede07f-e883-4d8c-bd7a-b62b56fe277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "247e0f27-272f-4435-81e7-260e16ed9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce01fd6-313a-4476-a909-fbbfb09e67d4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f648bb13-5a74-4a2e-9235-28acf06bd1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf7d112-c4f5-4a14-b843-ad32f86c62c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4797be3-6e47-42d1-b5b5-7754a02820a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2075e181-6175-43d2-b05d-cd033e032469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1c13aa-9ee3-46b9-80a4-f1dbccdf2120",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b36328-85cf-4476-8396-584dd8560aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c184d6d0-65ad-4c4e-8fb7-2c5427b82a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b16c3c8-04f9-48e9-be9f-9d0d38cb47f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93dc6308-1c4a-4655-9e8e-b9b33f624835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7451c8-cd41-4ca0-8cb5-0ebcf8b6e77e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421706a7-7a15-4f71-98d5-fc1d27cee20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572c243d-0e5a-45ae-ac73-36d1dfa0770e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30185172-1a36-4397-a6ce-0af9c829645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f6d344-100b-4a76-aaf0-72fa1827660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0661bfea-c8c1-4c3c-8d72-2d664c6e4312",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec81ce88-4686-4ef5-bcbe-7b5f95382c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29c0a1e-7ed2-45eb-b133-eef16de6b9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f58fff-c509-4e29-b8cf-fde3662830b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c664a0-b217-4c29-916e-8eb2e81a9c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dc5fde-1c3d-4f55-b306-20a5fe61e3c1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c77c8f9-ae13-461f-ae31-6f67d67cd0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddadb65b-fa2a-4a77-b3e2-5c3584b179f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08201630-4e48-4990-b120-9291aaf50045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e87c8b-01c8-440f-ac20-44c7b638308c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e77c3c-6dfd-4bf9-bda7-bb0db6a2206a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0e273e-4a4e-400a-8434-f0a331bbd025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c805fdb-cdaa-482e-bfab-02cf9964a9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a215721-2c1c-4eb3-bead-7322c4905315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "416e37b5-c6a2-4b2c-9aba-5c7a7564c72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25a7c86-3bdd-41c8-94e3-fc216f705018",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224d9438-24aa-41d5-8951-28f813b67aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a012eb9-6a35-44b9-9f8f-ef728944bc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34307524-66e8-4bac-a69f-11533d4a7ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8adebc6e-135d-4b34-be3c-9633156e21e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3f38a7-b9c0-4f21-9ce6-f73ad76179f5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c765ad-3d4f-46fa-85c1-1d78e4e607ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c596483b-26da-470d-b3b1-9fd72a5c5978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e81eae-76b9-4d70-b6ec-698b37eac92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a165535-6f65-402a-83f4-57b477649805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053d2ec2-f27a-4a22-9743-2fb801b4cc26",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d5f185-96a6-4b96-8e9c-9ad13cf4b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0141d4-9465-4b92-87ef-c75b54d0b019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdb6ec3-f40a-43a5-beb1-cdd3bebdfefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88e535b4-9e5b-4c49-8f06-687dc361db6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91973915-029f-40c1-a6c1-d831c4101c9c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bbf465-671d-40a6-995b-d5ea59ad0bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5137e027-bb62-4901-995d-d9643b950dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3926663e-14a4-4c8f-9f3f-51341edd8257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ceea68b-7f28-48c3-a12e-852faee2e3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b5a591-2c55-4665-9356-1a028b3999dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467a1567-b875-493a-ae1e-9673bc90765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6378cbd-f4c3-4504-b649-6708ad1ba320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51b76c7-1956-4737-a539-b9f8d512afd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12e80532-7fdc-4fcf-a7bc-27e90fe7cb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fc167d-bc6a-4697-a98e-218d48ca2ca5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7608db-3e19-4e7d-a829-71432376026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58101234-8125-4355-a9d1-4419f0acdaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d415b75d-1fd5-4920-b5a0-b6499f61b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06878860-f500-4030-a757-612782d9da8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129276da-9e52-4b05-b4f4-7d16ea42c8ff",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c4f649-7c02-439c-97bb-d78d0416a0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca86045-ee38-408e-a98f-5c0fb5dc8ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b8cabf-be00-4852-b8ae-9cbeba192f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2321b2-59a2-4fb4-8798-cfa1866122ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14277472-5aa9-42e9-bad0-cd1cfa60cbe7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507925f2-d7ce-48f8-b9cb-9071271bd41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3880be4f-9b85-4f4a-a4d1-5368647f9b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6b3616-0292-4fb3-b18b-ebf0b4482445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cffae411-18de-46f8-af2a-4fc1b49d7db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97447a1a-fe4e-4491-bb43-cfc332cfdbb8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770bf0cd-81f2-423f-b453-0d281b393dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0760fe9-d131-4dec-b3e0-f260783ba37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3092f90-75d0-49c2-9811-ffad472d12ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7010c506-224f-495f-ad65-a93d5edd2300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e69e6d-b8ef-4e4f-bec0-82325884c43d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c987766-8607-49a2-9063-9a89783f072c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becb37aa-d853-401d-9ee9-d959e7ce8dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd12f095-e8ff-4174-9f38-b45f635346df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ee1362-de0a-4e39-bb66-7fe9bb9c3a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953ad2d8-9a83-4d66-967f-43219e8cd3ac",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e9d6db-1788-47be-9129-5a36740267fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ed4adb-0562-446c-832e-1a462839ddb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd22dce3-2fc0-46e7-b022-6cf74e030ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dee0ee-1114-4019-8b26-c93b3f7844b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23a61d8-fd35-47d0-9d1b-4c44ab2b0e3e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286b8612-13cd-44a5-a879-379baea8808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a8b5b9-cf9b-4557-8f36-0586b6223a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43cfd75-7d88-49a4-9936-61e08fdfaeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "858fd681-6188-4d8e-85de-393ef2b87701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fc7d07-00b7-4605-a683-6c5af59ffaa6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5237e1-8d55-4342-b7dd-23b282b66256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d2b93f-b1e8-49e8-b6d0-93d4988d8ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd7745e-1c0c-4c99-b7b2-996dac2599d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80fa8062-b8db-4f9a-b3db-402b16976979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28242191-8fc4-440f-9062-4b63b3ee9085",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bee8a97-ba9f-434e-8f69-e35e71777a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98148540-f77d-458d-bf2b-fb53f35e3405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4ff7b0-e47e-49bd-bb62-69bb1afd547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "564c290b-a5be-4b92-ba81-ce9e13f48bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d149d7c-18bf-474b-b2e9-73000d42c415",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9d951f-56e5-4f61-8984-174d51864514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b0921-9f6e-4e7a-ae70-2ca0ef53455e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb94683-ea32-48b0-b9c5-b194b8e8d018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a31a9bc-9f92-45d4-ab3f-ede90f80fd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d62e84-c396-4656-a13b-bf862997b8e1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c886a8a1-4c24-468b-a1bf-b647198b9e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6615bd7a-a8da-43e5-88d2-0f388931ff09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e902d3a6-43d1-4a65-8b57-d602e1bb59a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d5be56-6196-48a6-bd5a-70de895262b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bee9273-6c1a-4136-8054-9c6fee012aff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4805c39-86b1-4d3e-b814-3e7de79b9f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69996aeb-424b-47ed-8612-7ec19d553956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88bc6f2-d40f-4418-a1a7-59049e8bf283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7e0c16-e544-455b-afaf-dcbdb28ee329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7c043b-ae80-412b-915e-8abdc9d81c40",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d520e70-790c-4982-8bef-9c430ad5b622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221463ba-d35a-4844-8770-2a7afe45c041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ee40bd-d2ee-4b18-8910-de4680ceecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "682d5a54-f888-4fea-b90f-3b996793ea4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0a5078-4ba0-4908-a392-fc25969f6594",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d4f466-6ab0-4f0f-8dda-54d1ea773093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4074327d-743c-4461-b7c5-e63911e2e99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf57a77-7b37-4ddf-8316-acb533dd5187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca5e28a-ac5d-4e6d-9f86-521444087d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa73eac4-445c-46f9-adc6-b1a44aab4d60",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244fbd8c-e449-49ef-9533-4b685288bb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d898c32-1716-4fa7-8b2b-34f0aa48382e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b47777a-b369-4a97-9213-45e1facc9d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "830ff323-e8cd-4ec8-92ee-ccb9f6911304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a981e732-1c31-4c9a-aee9-3b429577d0e8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a55a6d-7c30-4911-acd9-0c8c7c72b96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "886625db-f137-43bd-9ea7-f3a31a66d6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2226480-ac96-4413-8334-2fd6bd0c0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c9771a-c2fb-4008-8182-4deb7a96fb44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "effb7690-0a1f-46ba-ac73-d5f05e82891a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fd712c2-dc29-4366-90bb-b4066e582b72",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5945eb7-2558-481a-a94d-9e7a0c3369ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c800a28-251b-4ebe-8f35-9ee9bb0cdd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6f8683-46b6-4710-9106-8a50a508fd61",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d408684-38dd-49ce-be29-9a40cbb0de00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f70e189-d42e-4438-87ac-5c60fa6cc86d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f03ea7f0-c4f8-4565-a8be-47185a5e9d6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e15e9119-8d93-44b6-a67b-25a6778aedde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad986b9f-6eb5-4a2b-91ab-64f7420d8080"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4266fb0-c6c8-49e7-b394-0a54dde8e1c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6cb72631-71bd-4269-96cd-901ce7c93846"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e988d5b6-d012-42ee-9d48-8a4b368dfa63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "025fd9bb-ac3e-4987-9dd2-66d39e770151"
                }
              }
            ]
          },
          {
            "id": "1eaffbc2-bc86-46e1-b56c-5fd6adc13bf6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbd1b3bd-9642-428c-802d-565486a4cca8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "58357d32-602a-4c26-b506-41c58faefc8e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cc5555-1009-4b57-a953-366834135c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "701bbdea-35ab-4de4-9de4-0896bae6e478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf200da-cb40-451d-9321-69270e46942d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd84a837-6eee-46e9-af1c-02fbf1ae39b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "773883b1-c58b-4199-a471-33bef30be16c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6975b953-9a2b-46f5-99e7-b1bfdeceaff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9267221-5de0-4ffe-95f4-d4ffe7bfe15e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a82c97f-6416-4be3-afed-aef16c376781",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e342053-937d-4f04-bfaa-aa706717ee1d"
                    }
                  }
                ]
              },
              {
                "id": "eb2fa28e-6197-4585-83f3-951de3954dc1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0cba834-c35c-4ec8-8fb4-65e8fb93f792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "922279bc-118e-4968-83e1-4816b41ef05c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b67cc5de-fd2f-4fff-a1a0-9b09fbb059ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f66e2b0-5e68-4e4a-802d-f36c2787bcbc"
                    }
                  }
                ]
              },
              {
                "id": "29c59758-073d-4542-81b6-b85834e4b0f7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0436625-34c5-46ae-ad5b-363d8ae8326a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7a4c90f-ec88-48de-bfe6-747e359c057c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26a966b0-26bd-47f4-a6b8-abd8d6ffc52c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a68cf3f5-d5d3-4ab1-a969-b9c7edce0ba5"
                    }
                  }
                ]
              },
              {
                "id": "bc9f2378-4cd6-4aa9-8a93-fbe6a79088d1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "402a24c8-4731-46d6-901b-16cfbad6424b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29633cba-423d-4d40-893a-e976a9274a1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6d64715-6e35-4d48-bdef-1d6bbcd86d4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ba61aa7a-6b87-409d-a8e3-61229716fef1"
                    }
                  }
                ]
              },
              {
                "id": "c2706028-c2db-45e4-aec1-01e8299eb7b3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f3ad2d0-b814-4497-b07f-9e6eb963b049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c2d906b-1a8f-42d2-a6cc-d64736617b7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56595d85-9150-4cf9-8830-c5327e6202de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8b475655-dad1-47c2-bede-1c13c6f5f6f2"
                    }
                  }
                ]
              },
              {
                "id": "c437dd29-5944-408e-9e6b-ae35f42058bb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a20d2a6-e6d9-4349-8664-415e142eeae3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc482145-c603-4d1c-bb3f-fedab81b2359"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51b3664d-204e-4fea-a6f1-dc752150c46e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d31d662-5804-4edd-802b-3f75c6059e39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d219f944-6260-471c-a480-3879bc29a792",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a06a2ac5-37c5-4900-b818-966c40c3d3c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ae20754-78d8-4b56-b249-6ea562b1f13a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3614837-02dc-4402-ac9e-2720832763a4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9142b04d-381c-445e-9e91-101cdf7dcf88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f241e1b-f390-4746-be65-b9198e254c28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d1db648-cf2e-4d7f-a76b-88437e850533",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72c56158-9e0d-4c37-8741-d5716506c479"
            }
          }
        ]
      },
      {
        "id": "62eb3de9-6564-4d15-95cf-dfc371632e84",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1fb39d49-297c-4d88-8e36-85951dc81ee7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ad507ce-ce94-4b36-9555-901d8c55a6f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57c2166d-21d0-48b5-afe1-993217bb2179",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb795c8b-0223-4b25-9d07-d45928df0022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3705c1-182c-43e9-8337-f8f5546b08bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a41b0e-5c50-4c94-abba-9eaa9255319e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f37a42-c10f-4552-9af0-c6b24389be50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880c14a8-4816-4729-ad3a-267c9f485b03",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e27552-de99-41ec-8e8f-a4fbd2c0b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2ba209-fe97-4945-9a5a-99cd6ad7f979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52809e73-0ce8-4015-b79b-2a8f0c1299d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d13eea-7708-4673-a3eb-606aac51ce58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae8ded1-b342-4e01-9a85-3c141291fc36",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb38727-8b55-4a58-8658-95eff811a215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71c14d0-2c33-4232-a153-cb7f77c5756e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c44ddf1-81e0-4a45-aafd-634efd74446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "852c1bc5-87d6-4745-b4be-c18a20bf5c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5d5c94-4622-45ed-a56d-1ba28d9d1159",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1877797a-517e-4e0b-9e68-868d75049558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620cc9d1-e144-49f8-af6c-238518a9451f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a7e0c-9519-4a17-ba61-e3eb11603a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0602f13-dc96-4141-9f6b-b3c65a6338c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db448b4-47e5-41de-aa00-d2e6c39a0c9e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0499cadd-c242-4ddd-a457-48536d378594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bc6b93-8de7-451e-9769-a4f393fa8d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d91fc5-128b-451c-aad0-11f3cb72ad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc94cb2-f3fd-4d8a-9d51-4f91df07fdfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd5b98a-d407-4a3b-8f49-9bdeed07c734",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c36d29b-480f-4b70-8154-581b5ce38fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b21b7dc-02b2-4968-a4cf-ff19ce674f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cd5c63-6903-44bf-a324-f8c5f2dffe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c881d4bb-c4ac-4eb7-a9fa-a4e1b5f0f514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee5d055-3e93-495c-856b-e96bfb6a77f8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55058dcb-5b8d-42cc-90c6-e0ae78190ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d14d4e-fd39-43cf-beb3-7c1759cfb747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9c5e33-14d3-44f1-a93b-23da3ccbdeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb31817-eff9-4a65-9e2d-737973f2b54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13e29d7-ba2e-4c76-88d9-dc61d0f7c6eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155536d4-4309-433e-907a-6ca7fae53067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec3f112-84ef-4f37-8849-5ef6badacea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b9dbf-4942-4a15-9382-f33ad0339570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "874399e3-5b61-4d4d-8732-22f1ed007a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8a1540-9b3b-476a-925e-f57a4f6e4bf5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfa1414-e9fe-4cb2-9597-67dadaf0b6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e9fa93-b75e-488d-ab21-f0d6b144882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feab5d5-663e-48d0-b622-1c6757eeee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ef0f93-515e-4125-9627-7acdf3ae0f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e164e1-379d-43b7-8cac-ad716a972eae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510cdc0e-33ea-42a1-af91-a7c0fc6aae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4cb6dd-57c5-4560-b7d8-83461f5f3a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebbeaae-064c-4d9e-8027-36e8faac17ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b3c504-4bd9-46d8-8c0c-b588b66d71d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3610ce01-657e-4547-9957-8c74b9ab5cc8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eeca96-c413-41bb-8111-f085fc6f27e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746bbefd-9fd7-463f-8c5b-9736e3f4d7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed94745d-4a20-464a-9b5b-35975a023f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6265b104-5a86-49f3-8ded-39d80d831a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407d0c83-4563-42a7-91cd-b1075f4019bf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c420c96-f963-4d79-990c-66a75879a403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cda9ad-810a-4358-b412-1d4604cc150e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f37c8d7-3ba6-4b91-ad57-4765c2f70a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c10f6e1f-f6b7-4438-af29-cdda540dd198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8cc2cc-d960-473d-82e9-7dc9830bd2b5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8493b7c4-c5c5-4c7e-bd3d-23dc302913ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e3a1dd-82c6-4648-a7be-06df7609e4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d12d48-421c-47d0-8e9a-b54436b0d77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c342654b-2565-4f6f-9ea6-962bbfd9f679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885be5c7-0cd2-420c-b8de-2d329af5bace",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75062022-7ab4-4467-b746-4bf5684d99c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45187b02-c8c3-4469-a613-e3e8e7454a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115bbadf-dd97-402a-948e-9b6dc83435d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c20e53-15d1-4c58-b881-c67063cd1219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24f1f96-2c63-4e1c-9619-c76283b3497a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0c5c6a-987d-464d-aaeb-c49d815f6210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06567b82-8380-44cf-aaca-1685cc274f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1502d6-eb17-406d-91aa-383fec1ca889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "99732c9a-bf98-472a-a5d3-9467f3da0e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647afeb5-2446-4674-a01c-98140469651a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66f5005-e7ca-4f8d-a0da-e47e4c5c29b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f856042-fb6c-4b96-ac4f-0ec9f11304c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d35a68d-f4af-4ea6-8a8c-e38396464f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "84be4d81-c3fd-43ce-8136-815c3071ed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdda0d9-fc96-49e1-b320-90701bee3c79",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9558ae46-e679-4a3d-bf8b-a0fb012a29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2696627c-401b-4bf1-b33e-4d7e3cb24ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c7eaac-70f7-4fe3-ac1c-60698dc79bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "77204f02-3e22-4a2c-815d-22a122a275ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93922525-e261-4b2d-ab25-7a9d7322e78c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db1f8e5-cdec-4e33-9561-ca4e82cc0b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7d19c1-9a30-4fa7-8c6c-8cc38454088c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5be50f5-fee4-4cad-a6bb-2ba5efa4a47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4164b7-304e-4194-8592-7c041687029e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9de106-02f5-439c-ab9e-2a964e57b4e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0e7793-610a-42e3-867c-426e4b2dbfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87bfe8f-779d-42ab-8a99-2cbfb7f01e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf96d0ad-20ec-4329-8408-cf196d1a4032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd18f2b1-0995-45a2-bbc7-c7a31d541f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e34eee-c15c-4d76-ba28-aa1f51d90a51",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcf4a81-fb7a-4b45-8973-a4eb34178726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412598ad-fb84-4262-9c56-b331caa9e566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783e2332-b727-474b-bfa6-35545d36187a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "164bac5f-b958-4214-8ed1-fcb1e152114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f576a8a-b2dc-45f8-a716-401c292542e6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb69f68-ddde-434d-b770-c8f919ba570a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a438f5-9746-4f38-9305-2ccbc97f8f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a957abd-986e-479e-9420-03c28782d320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb2b0dd-e743-4c59-8c27-7a877eece5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e1e12a-5f45-4c20-b481-8df2a9ac9054",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522981e9-235f-4ca7-831b-1a27e1a5d8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eef2ea4-2622-4ee8-9b73-cd701b364338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f737bef5-2091-4785-b97c-0f383e9c6839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcf0282-9e66-4ac6-98ad-cff86898e35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5a9259-39fb-4b06-81e7-b36565dcf8fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1336c89-f600-403f-af90-27d1f53b9a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892a738d-1f2e-4f01-a8b3-08523ccd02f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58d7b5b-5e0f-4114-8bbc-afa0137cfe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a02e9e5-c3e1-467e-b77a-748ddfc4ed1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ea499-f40d-4497-91bc-01c365c90329",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db6cda9-269e-4670-9d6a-26193dda8b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b6dde1-e930-4fbf-89a2-86c7d8192ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52d9e64-9ee7-4515-bd1a-407e691b3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d23704-9289-467e-b29d-324a83fc8aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9203de-3d0e-4499-8b3d-950a156ecb0a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f0c3dc-4317-427b-93a0-5559a8d58568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cd4b89-0a80-45a4-9c8f-0f88b7421273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea480cfb-9c74-4dfe-afd7-17c101c64fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f29a825-8cbc-4431-a1a5-c521f95318d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412704b6-317b-48f9-8af1-a08481b9b28d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa9becd-cb3c-4aed-b8a0-5293425a91ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6794c398-1682-4d91-bf76-cd9bfd0bfad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaed6d1-79d0-4968-8b25-131ad9772f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "635b5bdc-4ad0-4cfe-8adc-7a65be4891e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5c11ed-10dd-4c70-bd30-a79ebae71bb6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36942e4-0cf0-405e-96a4-ce545a3902e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1942b28-5aae-47b5-a1b1-15380bdcbc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e037dfe-1bf5-4e67-a889-33dbf942a960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b200483f-f95c-4d52-8175-c2dfc11374df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189ab7aa-3efc-4a98-85c6-c2b1419f9629",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5228e1-4ba7-4516-8379-b1a317a4bbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faba752b-f589-445e-b646-71fefdf1cd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08ff1ff-76af-491a-87e2-62c21f3e68f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96b276b-9657-4c4d-ad29-0372123bfbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678cdcdb-88b0-4f18-a288-ba2408313c8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69799142-d1ae-43c8-9aca-590190c8b41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c190369b-f4dd-4d6a-a225-170dfced3c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402ab3a3-16b3-4102-a437-d39b820bf708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "622b0708-592a-44b8-9754-e88aa23fa25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e4778e-c2de-478e-9667-04ddc88ba091",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3687b4a1-4a16-4d58-9d6d-f8e80ef65b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b1a5b4-6801-4e1b-a65b-cdc297bff1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcaf094-b92f-4b93-8012-979411bd906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e6868d-0ca6-4dba-89a4-e7b68532132a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6f6d0c-9e91-4ebd-8451-4d4007d0162b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86ec726-1480-47c7-aeef-1250e51ee8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab58a62f-a179-4b0f-aad6-5eff46ea9855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c90d466-b52c-4971-ae58-bd3af3540bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b35754d7-aa51-4e19-86f0-7a57f8897168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cbda68-c257-40d0-b8be-3055b73734c0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbd5960-075b-4524-8504-47208dcb8c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953453d4-4bf6-42cc-8ad9-d7d9714c87c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7be2c1-5da4-4e70-b19f-c6c8e1cc2137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2a7f58-721c-4ca1-afca-0aba3bbc39fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2545093b-9c9a-430c-92ae-203f56bab72d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efb2bbc2-2e41-45e8-974f-b7ab91b6cfe6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db177f2f-59f2-4647-b001-737a74b94fe5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb664d7-1bdc-454a-a9de-16ed36cc57a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63256569-0d79-41a5-9a12-f3ada0bc088d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b2ad922-3ef9-4429-adcc-1f8bec7546f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2852b79-65fb-45c8-a841-a7616375fdc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ed61d41-cc84-4a44-a927-2fbcf17aa38e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03ebe118-f407-4dca-a16e-5d4cd36dd23c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10e80c95-f64f-47cc-8101-dd145c8420b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85d88fae-036a-4192-a2db-aadd4af2d3ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c50ee42-d7b2-4867-867c-042becbfdfdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a8eafcc-e558-4cdc-b8a0-df48deb0c011",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f92379b-74cc-405c-a8b9-1acff5a1360b"
            }
          }
        ]
      },
      {
        "id": "e984bbd0-770b-43a1-8d29-86e67462d210",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "09031b33-8113-4eda-b7c6-0b5ee92cb929",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c1af127-aca8-44ac-972f-891bf2be0cc4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "027f059e-f554-4d70-8619-2d08e080790a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d765e81d-aa13-4600-b027-3130eda8a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae6226f-17cd-493c-9d47-a955ff048c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62135e6-d750-40c9-a1c2-d1d40cd2c6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e8d088-d1d8-45d1-824d-6d32f57ed7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273b3170-888e-4887-b53c-edc08adcad4b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4a2e4e-ce10-4634-9437-f8217474c224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35a2fb-7d68-4b3b-a50a-40e35b08893f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d455d540-3b4f-4dcd-b223-e825ab14a952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2195c06-731c-4660-9516-b1869b61a100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e30240b-7391-4829-8074-9b06534a009c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e2015-34f1-4db0-ba37-4ee7a7bc93e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd8bdac-eea5-42e2-9d61-83f958ad7ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8b3a8a-f37b-44e7-93db-b43b99ff9bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f71b362-01ff-4f90-b3af-0f29c6c67ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8cbdcc-f219-43ec-9ee2-333fb9b683da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641b1814-4568-4c6f-8130-dcd53234f371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309aef48-0ecb-49d1-bfb1-362cc0ca4393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124dc5f2-6957-4be3-8951-84bc363e5301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f14f9126-8662-4665-ae65-804501a8e6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510ec152-f631-47b6-a20b-974dcbc8d3a1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8690132-d073-43ef-95c4-27c226000350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301f4d1a-da1b-4d50-a6e3-39ebd69bcdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e6eda4-db02-4abb-b213-3e6485304845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2c4716-35bf-4629-9836-5bff4c9a7f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5262529d-b583-43d8-a8a1-ec639de1ea6b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d99e3d-91e3-44ee-a073-341b48a42494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1488c043-c09a-4026-952a-33e0ac5953b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842b49d3-0826-491a-b771-52fcb3c83cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5855c666-a282-4ba6-b8c3-9c9c1aa6eeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0628f13a-4f87-4f76-893f-be539f96ca46",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a8c1b5-9f69-4a95-89fd-5f3fb768ad98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd8eecf-ec25-48ce-b69e-c115996c687b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49379d2d-ad43-4f35-9181-f47bc272eec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd12014-6e1d-4ae9-97c2-e2bc3e0c669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec00138-cbfa-4c1f-bea9-d40a8b2e9131",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382509d-2fca-414b-a7ad-0a37d6ddf386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aef7bbc-0554-4591-9803-661d2bca423d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3fa46e-1afc-4668-93b3-0547b976d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2709bc-7789-45f6-8936-cb6f97886603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e00786-47fd-418c-a4ca-b52ec5c56888",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb95b2d8-8b2e-4092-8758-c97406a46957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8b9e2e-87d6-46ec-a924-132d27395269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b418aef-f2de-480b-8c1c-0557089b3f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "230a4115-a2d5-4bd2-ba0d-fbec029f2c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e4fcba-94d0-4b49-862a-2c0ccb0714d0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5dc250-de81-4c28-903c-9ef8b81a4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b737ac70-ebc1-49f8-aced-135049fc0dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f45a84-c99f-4131-bc81-5d9fe77555bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b061ee-b493-4e99-88f5-fbb9132a0473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5542b1-2068-4303-9a58-08c625f8f884",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07040a1-5be0-495e-a165-54f4e8bf3b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4a404d-ad0a-4267-985a-3be2ed94a7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b5c65-2889-4cc4-a7e4-30764ccaa65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ceea6993-5117-4034-a571-72146f2e4c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2e5b60-26f3-4208-9cb6-f4206d83cdd1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72b99a2-db7d-4861-8e95-775823dc561c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf2f231-2ae1-463e-9b28-9f7be26ff449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a077add-5e72-4a2c-9d86-73e33a8d8715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e016ead8-1b44-4132-8699-a7711f523d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f530a4-5f20-4d24-9763-56fc62c4bc80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d6058e-955c-40e2-905e-5b74a28905f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73467573-d83b-4cc1-a5d2-82a85cb167d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d393b9dc-39a9-48d0-9318-ef10725e1c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c5e071-a679-4e7f-94ed-1a142d61d22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313064d8-2bc9-4d34-a1ed-14e40db7afa7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fb0699-27f6-41a9-b1a5-c0c749616b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da69c54-92a2-4841-b36e-263f8ffb754c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800f91e4-d8f8-4544-b7c1-455c84138aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e466d64-716d-4959-8505-e77e3f771075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688dd68f-4ff8-4aa4-be70-b3a4b744befc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6df61b-d8f7-4f78-95c9-744f65f076f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da793b9-c4a9-4607-8a07-48888c6ed859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3609130-8420-42ab-b8d5-68745d25bfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0931632c-fe7d-42b3-9130-625c8b1164c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be570c1-c995-41e5-a2ea-8593ba278870",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae712828-fe54-48d7-b14d-2618cb7e3266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b148f779-e37d-4b42-8263-fd4466510533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d18ed5-5a91-48c9-b46d-e8c8f01afc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c99bb39-5f53-471a-a0ce-004e568c3719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7e29c5-a293-4782-b795-ae445315c611",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4f84ac-c0ce-428f-82ef-d74a0e27df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d658aa-7642-4f49-826e-d2cae8050c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec516bed-a829-4c90-a75a-205c21a822df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcc115c-b157-4bde-9a7b-d674e8885a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae2c287-b2d4-4e38-ae29-75e7a69adcdf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c20069b-6123-4785-aa09-089bd1d29c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9af2bb-fd12-4175-b31d-b0ab430a4201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30392ba1-0efa-40b7-a8e1-a434d203752b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ca6a66-7dc8-47c9-8f15-8f4e3d731f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd10a3c-b5a9-4774-94d1-c0212c43b85e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2637623a-0523-4b4e-b7c4-2e608e6b3e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4eed90-ab71-4bff-a916-87a48222597b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b643130a-0c91-4a12-a0b9-d2b94b4b4933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d02b579d-3560-4b59-aeaa-c4f2a4f0bf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2abf92-4e1e-415d-8337-f613ca56b0f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2d33a3-9e5e-492a-9757-a1c1fba971e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eeac2ec-6c52-4106-a612-7ce2892d18eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef88a8f-3912-4971-bb0f-de4d4516a43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6aca653-fff2-4dfb-ab21-53d8135d8b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5600491-28ba-4d59-8d8a-3d196740a777",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b2cc8c-fec7-4eb9-b101-8b0fb29b9839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c2dab1-2c84-450e-96d8-0d88bbd8dc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daaee8a-981a-4110-8bb9-d6be9bfd36f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c6a5e9-3139-4b5c-9f83-f2c0c4bbb437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6435c43-a047-4e10-922b-2763460a64cc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ad706c-5b92-4f3d-b9d4-225f040b8adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e130a915-0b48-4bf8-b328-e318f908f75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219f10fe-d2fa-4a76-a6a1-d236562e0b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df50666f-0da5-436b-8e3a-da0bec532539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f605d41b-b78e-4f9b-a756-f95297fbb2fe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb4c9ea-6fa6-43fa-ad89-710c6816935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483b132b-8886-4a42-b216-573530b5d3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630bc2fd-1edd-49a8-9c30-2578c8d5936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "029a0eae-48bc-4892-8713-3567e2707d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f67566a-c819-4cb0-bd9d-79192be0b5d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f4d2c9-ea33-4de6-bb37-b4189d8ab455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05d4f9c-9df8-4a82-a566-01dd9573ab84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed05806e-c2ed-4831-97ec-180f2a626021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3619bc61-b016-4372-8460-299d3b349609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ae072e-285e-4483-bb58-e98178019c0a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c7f82e-22ca-4081-a954-341f0a8a9f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3688f0d9-13d6-4e90-a022-262f10ce8fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecddd506-65bb-4c4a-9b76-bdb6729fe734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3291a6-9dca-4fff-92e1-ca699544c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139c0961-2683-497f-9061-5cd24f4ae2ff",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c247e1de-ef5f-4540-8f09-d42ec766afc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e97eab-f01c-44ca-ab66-363f21690933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1f7c8f-0ccd-4d52-a906-711698bf5aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d60d20c-cef7-4333-9bc3-19e8a8a6fc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57641d04-9712-4701-b2d9-40f3412a7efe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6544187a-8408-48be-add1-f5fa2e327334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3016ea49-87a7-4514-b45c-d7075f942f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81958cc5-a047-4f6d-a5da-a5fb42fe7bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dedba6f3-927f-4337-951f-b5a3a0924272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d24d0c-715e-4115-ac1b-b025496ef20d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a34b49-7781-41e8-a9ee-a735dcf37ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41820ada-de2e-454d-9d10-852400d0999c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5f6819-9b1d-4149-9df9-d53972d48ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "048657b1-9db8-4b89-bb19-545b37bf87ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbc83c9-a967-4d13-88a8-f8ab0fa5078c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02caf24-9f07-4d8f-9047-ae830ce94516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9510b1d0-1b3c-4b78-84b9-26b2f742d48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d06265-2204-4625-8003-f58c922df420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad2395d-2832-445d-9c53-b6baf64941d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6965f9b1-8391-4107-924c-8d7459d71f45",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6492341d-6422-4dcc-9941-2fb5133b404d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2a8e40-af54-42aa-89a6-2eda0947c898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d453466-2c68-4bd3-8a49-1605d23c534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b908c7a-b82b-4054-a235-3a2cb4e1f3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe79f16-d0fb-4dfd-9765-b2039a8f9b9e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aa9b0e-7205-4e0a-b670-34a581aa2281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9e2b05-587d-4c48-b4c8-3aaa8e101dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ab0980-e2b3-4e15-96a5-a29523bc8779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a738dabe-efd5-45b3-8532-613864010069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6378f54-2b6e-4048-ab8f-48062a30d229",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbc4c95-2967-4935-aa58-4dcab64281ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c4c517-ec17-4e50-9925-ad82d830d7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f1aced-ec19-4a19-afa1-f0417cfb054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75680932-9434-4ce6-af0d-9fbd5bf92edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dae9b5-50a4-49f9-99fc-011c6d996640",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f14381-0a23-485a-b278-517c902c56d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b43dbb-c347-43fa-a679-75eef13dcac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95558080-d9a7-4257-aef4-b2f912f5a1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a77a6fa0-fa6e-4a6c-ad4e-6e06f8cb6b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1bcf41-623c-4627-82c1-f2198f556860",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08fb65c-1ec6-405a-8340-c85c45f9b9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc0a5ce-2728-4485-a5cc-b3f51aa932ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6fb3e5-7842-4bc9-b1fa-5e49a3d61b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dacf499-f51f-49e8-9ce8-b6a024fd122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b5ab18-b6a2-4a74-a6a3-3966f2f9c84b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dea9718-affc-4a8d-82bf-eede47952c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31ef764-56f1-4f82-ad54-24aac59e3e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcda9c2d-e0cc-4554-9812-8843c458c692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7e2a5a-ef0d-48b6-84f6-8d433512fc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a946667-2a79-44d4-9ab9-9ffa479830f5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e2056e-d975-447d-91ae-744ff193e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd14cd5-f881-4dac-8706-0a4f249f56ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2e198c-462e-4a09-a458-3eb111a41390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db6cc0e-cad1-41f4-a024-d925c4356839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc66599-fcf0-4169-b3b1-ae585681579f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16c28ef-f749-4d29-9695-6a74c1e9e45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839c9bc5-7e44-4cdb-96ea-7744f6a05912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb4b3fd-f58d-4d2b-9d7c-49b7a70777fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9170a60-12ac-4d85-bbaf-f94a8c9b5dd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e408f59f-8eca-46e4-9430-d002a54317c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc39e19f-f8c1-47b8-82f0-207dd4a610be",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251ec56f-988f-45b4-9da6-e08202db1b11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a54451-86fd-491e-894d-0eb280cb53bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3de34b6-ec9a-4471-9b71-d86c8e704976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8578b387-0d08-4c24-b6e8-5d3c6201cf0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a978176-94a3-4334-9e24-ce8234a61be6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c4b270e-0305-406f-80a2-342034d38cbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a450b1a0-3702-4b84-9724-c9e5d56e8a86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7ae3398-500e-4bfb-91cb-77d2ae2518cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f90a00c-793d-4c3c-ae23-bac1e765ebac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bbeea9e-0fdd-4539-94d7-421a53c5a624"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a51c5801-0966-4044-ae75-f5c21f5994e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f630eba-44be-4ed6-bd40-7562df81b887"
            }
          }
        ]
      },
      {
        "id": "fb2d0807-046b-4625-8eb5-3b352ff811c9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3f98f2f8-2b71-4259-b773-78e5785f3c52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01282771-4ce3-4656-b8ea-fe685c9257bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44ab02bd-21c5-4a2e-9ebe-29add11c0bb1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb794f84-cb85-4961-96a4-88f36c8f11be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12c16d2-b00b-494f-a0e6-e527db609fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12aee5c1-6fbe-48b6-8b39-bc543fc8227a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b09346b-d3f2-4d04-828c-966af52a23ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d150cb7-12b6-411d-8269-0d3061ca7ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bcead0-cef0-4710-9b86-603303053a7b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d9149d-243c-43e4-b529-801b3106206a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d18b5a7-1637-475a-90e4-ed2b838071fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a55917b-e406-4386-ad9c-6474145bc64a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b1583-e0c2-446d-a109-cf380d01e847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3928b60-6299-47d7-a123-511c78df296b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4a1a2e-bc25-4745-9b98-384c3ac0826a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95809887-f306-48bb-800f-2b874f05d067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c72dfe4-77d0-4c8a-8bda-9e82ee5d9ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f8285a-7655-46d4-b969-bd1707553048",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6127529f-a6a7-422b-a57e-238ccaf12f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6c65c9-1a02-4580-9da2-ebfee3ae2758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72eb591-00c3-4ad6-8d58-c7ace3fd40c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaec65bb-3c1b-4541-9c42-ce3189b85eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e23223-3d6a-4151-a0ec-e2ec06eca19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeea893-521d-4a40-b7da-7f56f3408657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee4d414-798d-4443-92ce-cad4d0042775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acf110d-1dbc-484c-b487-0cb9db7fbbd5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1e8afb-178a-41ff-bf5e-c338113f0977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee66e7f6-c74d-46cb-a25e-744e852c85ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646f01f0-628e-4723-9047-491ab944d5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b77bc9-b0fc-4cae-8f4d-1cfec7b16d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40d1a9-987b-4947-9edf-346d6e78959a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233e261d-00b2-4ee6-89ad-8e11041ddcae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c793019e-a90c-4d61-9b3f-81f8bdeb2e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe7e88-a602-42af-bb10-9d76f90c9610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3435e7-484f-47d7-b703-564af07ff961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a6a991-516c-4eca-820a-b41e1e74eeed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8411902-f260-4b2e-ada5-4a49c98785da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad87f8dd-8f7b-4e89-b5a5-95ce9a8fc48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acdcc36-bee4-44e3-bdcd-46596f23b65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6158f4a1-ec43-43c6-96ab-4bce4e147799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dade0a9e-585e-4549-9664-a2ea6d2c522a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6be7b60-a293-4c1f-8750-36aa01356d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e831938a-657d-4b40-b7df-b4a1a8df4450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af47ecaf-52b5-4395-89e6-65e081cddfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3d26ff-7d1c-43be-ab30-02a1ecdd5900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71bac04-931d-40d9-8d35-061e9c648b08",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf23cfd-2e8e-4b20-a949-3d6add3a7868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971f9bd1-8ff7-4a30-b990-80da2740de9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26295c1e-af27-40d6-a4e0-de7c5b68dbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f107b11-4c83-4652-b779-08fdf4b8937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51eac04-7eba-457d-b41a-cb6c9f9733f4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6ce2c2-917d-4192-8184-db007065fd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4937a4fd-f659-4cd8-8a71-dd97c6d4bc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e36d70-86bc-4c7c-aac7-6a07a5822efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96676c2c-c4f8-49ff-bd1e-e45ee957438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5d6d7f-9345-40eb-8f6e-955ca2abbc2b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f523ce-5c03-4b0a-b70e-ccff2a781645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d781a08-e3c9-4a3d-9214-9de09f305e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc9e234-1f40-4979-91ea-b63121c43e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53dc83f-f04d-4f27-84ea-07418cb58bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda0735c-f4b2-4a01-8a60-621313b19ef5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3543f24d-5736-491b-8322-1108386cdb32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11faa51c-215e-4b6d-8d92-36eaa383737f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48123741-2c6f-4df0-b5a4-c4e22f6c1163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464225c6-dbe1-4f00-82ca-d63dcdbb6711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d313a77-de3e-41a8-9304-323928d89cc5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff866fa0-4127-405d-b767-caa12cb03dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4c54eb-2a95-4f78-8e2f-3aa863f9de0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00feab83-7c54-4b35-a878-7cb747e51ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cecc7e-f3de-49ad-b884-a4e63d81c0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc7b505-941e-422f-be20-8611685115bb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b8aee9-b715-47c7-925b-659320efbf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c9318a-4467-491e-96f8-84d38b3d4775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2eb1ed-336b-4d2b-84b0-6c7616ffb9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd29b63-f56e-4027-8b5c-59bd79002f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98aff7c0-be33-44d7-81b2-2da9bd3644e4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe399ad-5e60-4106-be8c-065d732c0281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528647c8-56c2-4b98-a702-8ccc759f21f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df57b2d-4bcc-41a7-8bf0-c1cd5c1708c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c93ed9c-89da-497f-93f7-b94491ca2fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff351a82-77d6-45fd-962a-3ac6a32ef4cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d04a91-a333-4ad6-9663-0d188e610db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbb5d57-4fb6-4bdf-ae4b-71ece4afbf30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe9ec7d-4a37-473f-b67d-741ee928c5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdffc36-409e-4093-bf38-80c691d219a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944fa49f-7ed8-4924-8007-960d94b59eba",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2170348a-f88b-4dfd-b645-49ee55fdced5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f388fe-5b75-4e8d-bb3e-ea4c6ffcdb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb03076-b9b9-405c-b5cb-56a03be46140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b688e92-4959-4e6b-94bd-5a0fb6848a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662465c3-fc86-4a4e-a1c7-f5351e3c001f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73b713e-28ee-4e04-9b88-7441409dab0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f21464-105a-48cd-8990-77b1c8853e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4d863a-0ddd-4ed3-a95b-496590a31a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b212d6fa-4781-4b3f-a2cf-9511c3c04722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f737e9a-405a-4e0a-8227-c3f9a7e960df",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c07a8c-be5c-4823-812b-bd39daec9594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2f0580-2ef7-4766-8911-6089e4a8e268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca383592-2f8c-4406-b455-ab9db5f87b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c38528-98d0-4138-9185-a67c08b0684e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460afac9-aa3f-4b76-aa5c-46ce2777c143",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1c4cbb-3f4b-4437-bdba-bc1a37b39c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c9f575-1ea7-4d59-a533-dea5906b9686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04bec22-c9e9-410e-8399-821ccc580d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e55cb2f-76f3-46ad-a30e-bb5c2b2cd259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4bcf6a-6831-4413-92ec-27e67782b324",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d51cf83-dd1f-45dc-8e07-13c69f848e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95598dc6-3c29-4cce-93f8-16c2e2edcf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3108e2ec-637c-4af2-bdd1-f3925f3212c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18ce26d-b648-44c8-928d-a8dff63e66f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21b8dec-c121-4cf0-8e87-5d09a6358325",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041cb64d-bcf7-4795-b7f5-bf5ce291ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f74f546-af23-4d61-a7d6-3aa12e6b4fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556c6230-555e-49fb-8ea9-6ce5e5415e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4e4406-a8a2-411b-a106-e30f1843e066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69854fd-474c-4754-81e1-ac902ec4198a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e6ed90-a80d-4818-a4a0-af22f763f7c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e594cc2-ac8d-48d4-8c4b-251f219250fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41fff4-bad5-4e86-a64d-4ccb5cb27e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ea400c-358d-4b6b-a43b-940c2a126042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058ed553-fab9-45bb-a3a2-c5786b863d72",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d348d7-4054-4979-849f-02479158bb58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3978d674-8f4a-4f5e-9717-f265c29c5e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2ac706-7e57-41f2-8b11-1dcc45616f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db514f3-3537-408f-9297-0f449f2e2676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ec17fd-35fe-462d-b58c-1afd016f0297",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad63cf8-f43f-4cac-acb2-715d9956223f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8d6f7e-313a-4d02-902c-ccdc2a6fe950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fea076-27dd-4085-b0f7-ed2247586b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c9816c-7206-4f89-ac89-ee4015800749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7d45fc-e6b1-423e-bc85-fe2c5884f6ed",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fd4a0a-90ad-48f3-b92f-445cb4c4f304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d23ef4-b5a7-4d0f-9465-c6e6f64de462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7f7a63-8cf6-450a-ac56-9feefb29a91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4788820e-f2ba-47af-8e37-3ab699d1ab0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039abf64-f83d-47ea-b471-1226a42121b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c67c1c2-18ef-4fd5-9a41-af4bbd017d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44cd6d39-8cb2-4bf2-97c9-6ecf8f326b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261473d6-57b0-4299-bbf8-475cb61bafbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d783957-0d3a-402d-93dd-cffa7af7a1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe75323-d0e2-4ca4-91cd-d8d246a0ddc3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262d4d9a-a3b0-45db-80a5-9ff1b5463b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ffff9e0-ad78-4a4d-bf22-36b2f869c70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb737fe5-e549-400f-a1aa-57135b8274cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eddc5ec-d540-4d8c-9f82-b9698b8e511e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d187211-7c34-4a66-91f4-c6c5d5eb23f1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3ba6a3-8f16-4812-a734-e8196ef749b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e74988-9f21-460a-9077-7c4cb59b7c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1cefdb-739b-4b82-ab84-fa9f950dec30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e224506a-386f-44ab-a26a-8916d5628b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e37360-554c-4c2d-848a-1cead0accc77",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bec0d3-b3af-4437-9d3e-6b313c458a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a869fec8-c8b0-4dcc-8fb4-9a02193cadde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82edff1e-40a4-487b-aeaf-5bff7c8730c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fc2fe5-8c25-4108-9544-901800c71fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55660c09-3f5e-4a0d-8c99-2cd33a48c66e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6db504-5380-4071-9bed-04806c2cb889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18707c6c-bfdb-40ea-ab71-74cdebf3c91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dfa2c3-2dc4-4b19-b01f-354e6d56de6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93e4e23-acf8-4244-b839-e04e7b854ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b938f1a-f393-4abc-8baa-c42a774e0643",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bdc8e7-6223-4616-9d77-cb53f8177dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050c8432-bb05-4361-8fc5-c57c463a4eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d5330a-f5a5-422f-b89a-a7d8e29a437d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064a140b-9530-48ac-836e-eea522eb9bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d6c46d-a3ea-43be-b892-aadd806bd8e2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b345420-3e5b-4d18-a6ee-e7bad4d295b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb79b74-4389-4897-afb5-49d997fd69ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e737f134-52c9-4773-b792-4b1ef5a4a8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377cd58b-f1ca-45ee-b3f7-c7ac1e25b9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b044836d-b4f6-4019-bd00-37cc816e9d33",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef33f53-28d7-4c5c-be15-f0d62661c60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53a0b08-8659-441b-bcf0-1ef45582b206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75612fb8-7939-4175-8738-d28c02199132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bfec86-e1e9-4a65-8ee7-6bc009b40ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b36fe4-e047-43e8-bccf-eafa13243539",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a837f62-1f88-4a59-82a1-7ad8a9ba69e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db78ca7-abd5-49c4-a91c-185701c0db1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490b1b8d-4561-435e-bcba-fb17cbed8303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab9ac9e-fed2-4ac8-906e-017db6e034fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d55879d-5f26-4d39-a4c9-b5a318911063",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf52fe7-c2ab-47f1-9d51-ebedb85c1da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bd541c-a7be-4b82-b9a7-0ef7f2fe974d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5672a55b-866e-4f17-8bb5-cc02d6c98955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c05285-05f2-4f8f-b28d-1263172a33ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdf7c62-6581-4069-abc1-6372148ad7b7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4b556d-2bba-49bd-849b-a91fa65d5741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd67c84a-f357-4b2d-8de6-d281cf55793c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abcdfe7-ac8b-4688-8c23-9d0cbb8967a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f13f82f-5281-4768-90da-e31e2cedcc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1e2cff-d32f-4bff-97c0-d6254cb86544",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daef667-a988-4b67-963b-df84dfb5f0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90607228-ea46-4d6c-a987-6745ed4687bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e864eba7-9dab-46d1-ad0f-93b52b688034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e9e792-655c-4657-bf71-588802efac0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d468cde0-b739-4860-8f3f-5f207f497f42",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f883721-32aa-4f6c-a0ed-3db1ea896a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27519673-77fa-4238-9a47-e9933a294bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bf7767-f228-4eff-aa9a-aff906d78fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4513820f-634e-4a23-8609-e050c084c3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37db3b25-c19d-4630-b4b9-e46fe311f8fc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b403cb9e-9ad1-4240-ae81-2edbc09b5f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f9b166-a2e4-4d79-9bd4-c954361ff019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639b255e-527c-426e-b565-b475c15430d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f90a1e2-8c78-45bc-9e77-0f075d1c19ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1fe059-e901-415b-af0c-a2199edcae0f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda33fd9-732a-463a-9433-a37602e81619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9b435e-bc88-46c0-8ebf-b33a7ef61310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec6b331-9fc7-42bf-ab0e-9613853f45c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc9803-d2f1-4d51-9529-eb5882b1ac94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba85c7a3-5d72-4654-b52b-36d9989d62fc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4b315b-5ca8-4789-92ff-79fb1ac1b6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409556c4-ba5a-4b01-9e5e-3bca5302d271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08744406-c8c2-4fc7-9895-7874ef9aa013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc51da5-59da-4b07-81fe-942abda9fd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c80da2f-feef-4071-94b5-412618ce4f25",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ba81c1-814f-422a-b820-7e41a0538307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b83bcf-29a4-4fd6-a63e-d1077a784298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ae915b-f4cb-46e0-9847-8f794cb0c9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffb8f63-ad07-4e21-9715-6b8bb40df503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1ca053-4a1b-4e33-aa31-a22a0427584e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11330d5b-4684-4270-93ef-073d93a84998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad1d6b2-10c1-45f3-a506-c843df2001cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc8a8b8-1ff8-4ce0-8961-8bb86588103a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3979b1-4b67-40ff-b8d0-d2616d21c5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cb69ae-0e41-4125-9a5f-c62cac1369ed",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93709867-653e-4e53-9a48-502a102eeee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2f8241-514b-4c32-8122-a35a7d3ab1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ff1417-64a8-4ca7-8447-c42dd2e88491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0762bae0-f18d-4366-aaec-76bf20ef0d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83704f23-6f90-4d5b-9085-c6c9655c83d4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0a2c7e-d79f-4e7a-a012-122fd741e915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715be03e-3992-48b9-9514-8b1a828a82c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbfb1bf-3c33-47e7-ba66-e66c9f754506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8a4045-de86-4fb9-b286-91a5068f411b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be869ef-c140-4c02-947c-f7063a1cc37b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092aac47-4b24-4375-bb81-9394e887ddee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8795e3f1-38c4-4342-a75b-64380340b58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a12a7c-4671-435c-810e-72d05c67bdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd928b4e-b0dd-4224-87d7-5b75baf83f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f1f835-9508-4f07-9eac-53f7901f4fbd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8a4c38-f8f0-4dc4-9156-53569a05834f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf12598-1d5b-4f38-88c6-693ac0ce5755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a800cef0-6c5f-4abe-837c-2e666151f4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c26eda-eaf5-481c-91c5-55a46597bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf98e4-28e1-40c0-8eb6-7a59764aa4cf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d12f7a-807f-47f1-a284-19075b0596a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70551146-cd48-4add-8b12-f353fe82b76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d177a-6b01-4447-b0ad-48b70b42d099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871e4e53-ba1a-437e-b2b6-1c9bd70be918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794c6a96-5e27-4ff2-ad79-8711e64187cc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4849beda-deff-4321-957d-3d95c20bfe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae188a2-099f-4e2c-8498-63c583be8a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafab95a-33be-48f0-a093-300d37b65d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc92ef1-ddfb-4c29-b7e7-1e0412ba8233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df79735a-89d3-4be1-b7fd-98ff17d6823a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ec6572-7253-4a5f-a2d9-5d15527af227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2016ba0-b94a-4c5d-8f49-f309089ef896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2d35c3-f269-4606-b57e-e43afd9dc458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d40e1f-bcf9-4561-b9c6-0f72cfb7cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7786af25-d106-4797-b8f5-efccd4a1ac7f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39874d2c-c4e1-40ba-b823-93d59e7d0d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa02e7e7-545e-4b33-8b4f-ec1ade412c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca2e4b-266e-4633-a5a7-737987e8f14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7e9c89-979d-416b-898f-19108c42067c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def31ef6-ba46-440b-86e1-dd0d72f4e995",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b52bc0-6c7e-416d-b731-efd8f5c5c2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f1c162-5fa3-4022-a5f9-ba029e545dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cefbcc-5024-4aa4-a91f-8934f808a393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ae30ce-a939-48a2-8fe5-e6d33b39533a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339549e2-4cca-40dc-9acd-d282f6a06688",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b30b866-0d26-4ac5-9fe9-c26affc3c4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11e09fb-c16b-4b18-991a-4ff0ff3acbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8eb765-a961-4007-a051-33ae0dd9e02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ce63ab-3378-44ac-9738-52956943dfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26b1496-28fa-4822-ab62-f9d48b98c8f2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbbcd5b-08ae-47ee-8651-a8773b6d82b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1565249-d051-42fc-b817-2b0706595dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9405b518-30ee-489f-ac83-65a2d8ed0bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba720af-aae7-40e6-bfc6-602d8b19967f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37f0a2f-eee1-4829-b488-271ba987d775",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f57a66-7c9d-4467-b76d-c060d2e94b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7c75b5-4b46-44b4-9070-007ee9435d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525c52cc-de21-443a-9bf5-decca7f749b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e1bd80-5e48-4a26-9341-f2d365062d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa10a3c-46b9-4140-b5bb-432f0a2ba7c3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bbaa16-72d5-4a06-aed1-fa29cc131d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d8e92c-d41b-4101-8905-938a02c1fe77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbf07f5-6147-4856-b620-c28da59e241c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43c1332-1c33-4919-9487-9b964657d8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa867564-aae4-446e-ae53-5d9862110d65",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babe85db-e8f0-42ca-8373-80581361b4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cb96ea-9283-41d1-bfad-336b66c38f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4821728d-14d9-4a79-9261-d2eb9123c30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb0190d-b991-409a-ba54-0b5e9389006e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd79a3f-8f46-4966-8047-6596333f0e6c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fe9571-1dc7-4e06-bc43-7d759157cce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8771928-aa0a-4b29-911a-32a22697b2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88ef869-0837-4c5f-86a4-72af9338b4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21751056-6f78-497b-b07c-a0919ffa0ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889d0f30-7147-46fa-b15b-ead22e56736e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9c3b5d-7aaa-4077-a3e5-c484a7dfc058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d799701f-7ff7-4af7-84c7-6e178ec3129b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824087f5-ce1e-4831-831a-3376026cf53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21dae6b-65fa-446b-86e0-4ddaed0b0af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7cd323-49d1-4227-a711-07e4f01b236d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66642ed6-f468-4bfa-874f-e459d70c383b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc11c206-6796-4bfa-8249-c408e2c6c291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d228b47-b5d8-4a8a-94d6-9ec39273f28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d868fe-b2b7-4c6c-8042-25aad48fa008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aefdc8-68fa-483b-acff-f78865d4cf01",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49712b3e-c9f7-492b-a5d1-bc2ec2cb8b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10d46b37-b260-41cf-9819-77e7ed426c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba80631e-4822-490f-9e09-13322faa2868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949d0ac9-da3b-4baa-a3c4-77e165fb2986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47830404-7448-4f08-8dca-f53e338c1325",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d0da52-0bed-415a-ab98-1db4fdebef7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9114c00-59c0-4421-8c31-da6909c1ae4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0203dc8f-7e4e-47d3-b297-edd3bae51024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed906aa7-127c-46c5-8003-591a60ccb348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2e4ac4-70cd-4b3b-91c3-73351089ce19",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7561cdd5-ce31-4ac3-8bf8-31450b457ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d4b362-6ce1-4dc6-a31e-2a64998bb2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c799a6-e4db-42a6-975b-aa89a20289d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476323bb-fb02-4689-a300-a4c106a7d9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18228fb2-f6bd-4dca-ae45-a6608a658ac3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dad8030-2f86-4e3e-9f19-5ce79ee2ca40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8feb8211-941f-45a5-8201-94c887c1ec9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b2204b-959a-4ba1-946f-8f781e685f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39166780-389a-447b-a44f-e3844bed6e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3876129-99da-4c1e-986f-91c2938cc311",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c559bb7-8023-4bbe-8501-f2638aed936e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35be28b6-97aa-44f6-9e9c-045be23ae8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2421d05-bb6b-4ecc-ad3b-0d061e5202e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ac5c22-3609-4a46-8360-df95672f86bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30b1018-1ba5-4787-8e64-19746a954439",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fda7e46-b073-4599-85ed-18de497e68b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8fb60c-388f-4672-9585-0d07ea1fb141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7bcab6-fa8d-4539-84af-f3c9bddeac35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe6c353-0234-4fa4-b8fa-5f329953d7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d9e936-c1e4-471c-a94f-243b66bdd293",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172bc59e-9de7-4631-adbe-b81a13e2f9d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5384cd0-8697-44f9-a145-8ce918ce4819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f954f0b-e2a9-412d-8225-88266607dbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cb2bea-2493-484e-800d-c0b17a7d9d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a706eb-1aa4-4268-ab48-7da3429e19b2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456e4734-0530-4b7f-8c3c-f7c470f0926b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99202200-713d-471e-9a99-14a1be70bda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5c7ff9-c7e5-46dc-a710-bdb956e63a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42f8ab1-47ac-41ca-967c-78e985c2f25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a15c003-452e-4c2f-8cfc-e67e66b3573a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4810e6-2fe8-46bb-a062-6c76aab476e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef0c610f-473a-429e-87f4-3444b1e06b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dafe39-25c8-40f5-a7e1-b1d1a1b6ddc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13362738-0154-4bcb-9984-f396d3c5a9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be118463-234b-421e-b5b0-95dd338efacc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4df22a3-4a22-485e-a08c-e98231899d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6285d2c2-30b4-4828-a91c-fa569c70951b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca0eee0-7a30-409f-9190-ba5cf5da1105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1551b3-71de-471d-b662-39b6d64b0082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c48eb8a-3258-445e-8a02-8b66ad497945",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270e57e2-cb58-409b-8763-6b2c130a864e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f25c1c8-d778-48d4-984f-7a951c495f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e92fae7-d136-4793-bac0-fd7d4d491c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fb892f-57dd-46c0-966b-cee148c0bb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f36c33-388c-4ea4-b5cc-fde2e22f47b7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec680da-8529-4732-b0e7-3a37c82b9b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699b9a14-0287-44ae-ac5b-dbf92a5e8c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bc3dd0-acb6-466c-90bc-a0bc26ab00d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3211cbda-c8cc-4c61-8cfd-88986ddecb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8427f079-3f8c-47bb-aec5-9c6e684c7136",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473ff2eb-c932-470b-a237-6a613284c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8297e79-2ec2-4678-b5f8-8834e91148eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c76ac9-937c-4f61-ba21-5c3fc6852c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95aad5f-2250-4371-b150-ae051f9864de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b3a2c2-f80b-4b78-be89-0177dbee0afd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072be7c5-bde9-409a-8be1-81138624737a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b46c0a17-fde6-4cdf-83f2-c2171b44161d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da712c56-80cc-4987-a913-b11c1a95b49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d8d187-0ae6-4cea-869d-1103225670f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0eeee9-13d3-4f1e-a4d2-6935bfe02ab6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f5b3b4-abd7-406a-b6aa-ce6f53edef3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa746b6-245e-4505-b7ad-9fe7a0092c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8049738-7cdf-400c-94c4-53f8145fb326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ff28f9-2ee9-47da-bbd8-9763831bc55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277ca6bf-bea6-4b38-b60b-1fc26c168310",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475f79f4-2aac-47db-bfc2-d18c85050ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e0b171-c1f8-44de-a93c-4efaec2a7bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a1e4ad-eef1-424f-9815-ea435ac09910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db861f90-5a17-43b5-8518-3f1786e7931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7037c4-ddde-440a-bde5-8d85b2811ce9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a14c760-58fb-4bb6-8912-aa6b0a21a71d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc3c917-b83a-4f18-9b90-62bd599641c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b46d6f4-0d82-4c7d-afd2-985733e19e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f38cf5-d343-439b-a004-d3d1b52634ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8c9e8b-bb81-4aaf-8460-4f37ad4c3312",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94aad2e-45ef-4c23-85f2-94876608e992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be90bd6-cde0-4edd-9237-0de983c7879f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd9b092-d163-4d7d-a881-e5a660e81b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbb76b5-660a-46d9-a958-4dfca9da4900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ff7f14-8e35-4e65-bdd7-d25deccc8f84",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fa93c3-83a7-4885-8695-a41a4e4269c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67bf4c03-14fb-4796-bdf4-d19b61bc3239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42f45ae-ed6a-400a-b449-3a923fd4281b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a7153e-d5b2-4ec0-a3a8-c37d2a1d15bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1c548e-da69-4a00-abae-b379488561e0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ffc7fd-9722-4bf3-8a86-f45360a8ace1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de029439-0a9a-4aaa-9af9-7f46d51ea27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c14ade7-15af-4eca-9f73-281291de36f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728c97e4-b56d-4767-aa33-c2971f73f548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbc8758-39ed-443f-9cb7-c7e556fcf89b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8b322f-7e78-4d38-9df3-adabee9f40e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0b272f-c5a5-4333-8e60-d41ba523179a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86135e2-b135-4ba0-8c4e-2399aa3c4293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b2c387-87c6-4926-9817-2a4fe7ef857b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed87b67-5668-4761-89b0-321e22eebba3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4cfa69-c244-4edd-b7a9-d5d9043fc977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713be903-d971-4c9c-82ac-a361ef1f0f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3040246c-91a9-49b9-b4a0-79a46e0a1488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51b712c-25f0-4d40-aa63-cb9a8e3636f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ff9c65-0478-4728-8eb6-a40b4ff9f0b3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50665944-cbf0-49a2-bd9b-cd699006725b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d612ca-90d4-4940-b57d-1c720822e925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491769e5-4e8a-4b5f-af87-51a4c067c4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ac4476-fc62-4678-b2d5-7f2e5ee5007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775b1511-d28a-42b7-93d0-8d0e797e4a84",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c13cde-3aa7-41d9-beb3-6f3a80822847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b2d54b-e07d-4157-bc2d-ee8397e59838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f10d20-34d0-4307-9cf4-984949c80255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209705e3-cfe5-4d7a-a648-63a80579c80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5931197-08b1-4d38-9727-186d5a1ddb29",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf70fd09-4701-4c73-b84c-c9412ba779a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8360325-d9cc-4ad1-b4b5-2a7cbe4a06c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46efe374-b9a0-4a95-b67d-715181985a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708ca59c-fd59-4b27-bd36-daf1e9d62efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1911aa-78ff-45f8-949c-f1375cb182c4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d731f0e-8d97-4f05-aca0-744ca91a4060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3312e0e2-e2f3-4921-95d9-5b3d770c1a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0d3522-385f-4cb7-bc84-16bf2de34d19",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395674b6-2fbf-472d-b8b2-ba15dac5b51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743b78a0-5752-4007-a1ec-bf9a09237719",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07ee45a-9b8c-4e35-873c-a8110c5e2ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb73576-5433-45ec-b338-9fb1203c1969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14966fa-d43f-4082-b44b-658df667f7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bded01c-ebdf-4fee-8767-abc676a9bec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72acb970-7547-4cd9-810e-906eb4965713",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02371621-fde6-4b2a-88ce-e4e92200b123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ff421d-562c-45d2-a877-a03e0f7a45e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5deaf60-6c64-47c0-8ff4-89e825f56384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf2bd88-5378-4ea0-85d8-6ddac1626d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c320c0bf-2f6c-44cb-9893-baf52f02770d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdbf7bb-3067-407e-9f66-ced41cbd0b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52e5aca-814d-401d-9232-967005fdf37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925e6f7-38bc-4c92-a2fb-2f1ec1559023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2902e894-a844-415c-9547-01a20fbca7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f56800-a8cc-4231-962d-86477df2ec01",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c08096-8a3c-4a7e-a1ff-6db39d0a2c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520cdbc2-33c8-47af-a3e2-04d8ea0ebe0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c13214d-461e-4389-8061-28640b1f1a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a8b9f9-8637-4737-aaf4-bf0fed427cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11814422-5d37-4b30-a0e7-7a4f6e30d609",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f1d2df-6750-4a9a-89b6-8d2e4cab834b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502de8e8-1e70-4ae2-b65d-f91ee5d1f885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c6754e-2ffb-4ed7-87c7-d1b557172f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c60644e-c7ac-4725-8245-e06d19b5b85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103a2e4a-2fb7-44b6-ba9d-c11d12394996",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cca0937-7e61-4e55-a6a0-f01117163907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed8be87-c623-44df-866f-89dd16bf62e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b3c592-3d8b-40c7-90ef-f28a8b92c53f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecf9621-1123-49ca-ad06-2426dfddbe39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bfcfb5-45f8-4755-a63f-5519d07b338b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a675079-59bb-4c1a-a162-3b999e2abd50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaac06ec-87dc-4b36-97a7-38687424293e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4f8c1d-33fb-45f5-9bf1-3e27ff686f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bbe8eb-95c9-4caa-b83b-8ed96439db34"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb06629c-170b-4e18-9abc-a785115283c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "437aa0a7-2505-453e-ab41-8ff25d77cf81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd9a9bd4-65f5-431c-8ff4-6f9653ca77e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff8ad218-aa17-401d-ba87-1f42b58f5b1d"
                    }
                  }
                ]
              },
              {
                "id": "430023c5-fb5d-4b15-8e21-0c1e99969cfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63b14e67-ebf1-4c6a-a5b8-d57e19042538",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cb5c6f-e907-4c3b-bf7c-3ea79cad8e9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6be125a2-4511-4ef3-b372-d36aad582faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6450fa1b-8f79-45f2-b52f-017bdfbed053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dabf805-0bff-478f-b277-1dd1607fe2ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37172f16-5a58-4048-966c-55f246210fe4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd75165f-fb30-4dac-981f-a3a7ff8dec47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cde1777-2742-4067-8810-94e3e6750415",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "852b4577-a2d0-47d5-ab27-08f1a758f8b6"
                    }
                  }
                ]
              },
              {
                "id": "72138ffc-ef4f-483f-8503-8866b73857d1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b1105b43-ba38-47f7-93d7-abe2aaa13cda",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de00591-cf30-4fee-9a15-e7578c141f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "07d1b432-af33-4dca-8b28-30b9543a258a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0285f5d6-06a6-43c5-95a4-de8feefa7af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f97086-9062-4c35-847d-bd998ea4d8e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3c56be0-b84d-4ed3-b8aa-843089c1c00f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6c616cc-f839-4d8e-886a-1063b396a123",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33ea218f-d798-4cec-92fc-a5e8a4bb8bcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0638b402-39e8-4efd-b2d2-c31b9e4c48cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b77cd48-362c-416e-a19f-f306c8b8bf7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fac58f7-f353-4d7f-a9f0-de6c927f51dd"
                    }
                  }
                ]
              },
              {
                "id": "c924677d-97da-4dac-9e1b-bab0e9ef350b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bca4d577-2328-4771-a691-c2edc9802039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a940d0e1-ebc6-48fb-ba97-0d7ced28b164"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd185346-1116-4a93-bb6c-e6e22a262d4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15436b63-d8d1-4a2f-b252-374086da8144"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bde6619-ed13-459e-a41f-1db28b82f0f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "10f3f3af-3945-4cd6-971f-e664e00ed69f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aca1d6bd-4e1e-49dd-9af8-80fbed01d9f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea913b50-8dfa-4e14-8092-8c5abe6e9a2b"
            }
          }
        ]
      },
      {
        "id": "d3d80a03-536f-4a43-b234-72e9b704a9e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a72d568-776b-45b3-b0ef-0f218e4894cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be078129-12f0-4eee-a7c1-74a3b97c9dad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b210d21a-a830-4331-9003-eb729dbe3549",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cad96f-bb23-4f14-8a0a-a5ea35086e0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "397cda88-1f4c-4eba-a00a-4fbfd7f8703a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833a3786-bee0-4bf8-8eca-2dc4b2ecd95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3383f0a5-d2e5-4214-9795-ada9c4b32db0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "033b1552-89c1-4f26-8964-27fcc791fd7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4d8bcd0-531d-472a-92ed-c80d7947fc0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02d572a1-c01d-4fa9-b67a-5c3718c0c3a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c072e379-8a68-4d7e-88b2-6ca6eef6bc2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82ea43cd-a75c-4aa4-b263-d1301b4ae84b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c3e2a39e-7959-4ca2-bea1-54ceba14d543"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d76854c0-c977-4a4a-bff3-bca331911ee9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abe355a1-a335-4c4f-b597-6a80a310444d"
            }
          }
        ]
      },
      {
        "id": "9439265f-6e3c-468f-ac67-1e0bc34df401",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "73502c72-ab43-4017-901e-11182ec5717a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18ef238b-abdb-459e-bece-d1457bedeb89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65495e20-581b-4980-933f-55c879d1a3db",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7943b6-8f08-4b5d-9e44-a9db018f0e01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d13990c9-0e20-4383-8c95-dcf36e771e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f4b4b4-3584-4544-b2a1-9c3e381acfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27e8265d-bc98-420e-a281-7074af12a31b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "106ab25a-c2d6-4182-8fba-3d7226f1dfca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6971e941-c865-422f-a534-2af936cc54ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c74a8745-9347-4d81-b196-b912757b0f38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e802956f-ff9b-4d83-af9f-20e3d209462d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73ac491a-7227-4d46-9e5e-6a8db1c4de83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "885fdca8-ef67-4e85-9e5c-183fe1a4f2a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3fb38f0-84a3-4a79-981c-2ec745b03291",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ad8d720-707d-4e77-8a9f-36db41e3b80e"
            }
          }
        ]
      },
      {
        "id": "15751238-e8de-4466-a75c-74422780f900",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6135d9ce-599c-48ea-a962-3db0936604d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fb3ca75-88dd-48c3-b149-b579731ddc4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83336369-f617-4a54-91b9-e08a48c6c505",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56583c4-997f-4ee6-b977-f13a97f6cbe5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fd7849e-e340-4094-9deb-9bf80b3b088e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d882073c-c4ac-41cd-aaf8-d3b6972d4966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd799f85-5fb7-4036-8ce2-045ee6a4d664"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "186acd92-6382-40cf-a854-825f1cebb09e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dffc1c6a-575e-4922-ac6d-8c5d83f547ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18ca62f7-d814-4741-b7fb-c16759ccd472",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "277afd4f-c262-4084-ae31-761d99dd4eff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc565c23-65a8-4f74-b0ff-052b7b854b78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df2c03a1-9310-4aae-bf68-38fdd5360194"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6ee9482-5ac2-44a7-8ec0-ccb68e2860b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3dfdd6b9-3833-43e0-823f-6e9e9f491d17"
            }
          }
        ]
      },
      {
        "id": "4e0b1d8d-9d3e-4948-962b-93a6b391ce70",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fb3a0f2-ea0b-4077-b5e2-2ac72d5ecaee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92410913-35bd-4f08-9383-cba8cef19012",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb8eb4cf-e7bd-46a1-877e-5b91094d03e1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06572abb-2f5b-433a-a5c6-1378bb897544",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99f8865b-d0c1-45cd-9235-244b0d2a4426",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.76491228070174,
      "responseMin": 4,
      "responseMax": 3037,
      "responseSd": 346.716008208158,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705192780622,
      "completed": 1705192822135
    },
    "executions": [
      {
        "id": "0365387c-0269-4d7a-963d-7f20a78c9c0a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ef8cae9d-132b-4b72-bb97-87203c2dadfd",
          "httpRequestId": "74431705-97f1-4db5-a2a2-16b1d7447967"
        },
        "item": {
          "id": "0365387c-0269-4d7a-963d-7f20a78c9c0a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9fcdfcb2-df71-4f49-b2bb-a3b076d05127",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "49828a3e-84a0-4265-a25e-b3a4de0e0adb",
        "cursor": {
          "ref": "68e81193-0c6c-481d-b607-cc4bedeec9f1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8bf32f0f-1c66-4eb7-a81a-0f2ef47dbdb3"
        },
        "item": {
          "id": "49828a3e-84a0-4265-a25e-b3a4de0e0adb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8cbe72f6-507a-44fa-b1eb-1b2f0740a6ed",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 0
        }
      },
      {
        "id": "22e025cb-0657-4fd5-bd71-077cf6fbcacd",
        "cursor": {
          "ref": "ba621fe5-59d6-416e-ab23-1356b3fe2f7a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b2b2b28d-102e-4423-bf22-d5382b5fe8bd"
        },
        "item": {
          "id": "22e025cb-0657-4fd5-bd71-077cf6fbcacd",
          "name": "did_json"
        },
        "response": {
          "id": "cfa85966-8218-4bb1-9c48-b8c5b050775a",
          "status": "OK",
          "code": 200,
          "responseTime": 508,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa1782f-7aa3-4094-8354-ce4aadaca937",
        "cursor": {
          "ref": "e74ab09e-fe1b-4156-a5ba-91448e887c72",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f151d7a2-89ec-4005-889a-a5c8b70318de"
        },
        "item": {
          "id": "1aa1782f-7aa3-4094-8354-ce4aadaca937",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ea0cc56-6a2c-4a7d-8769-0eb3480e4797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa1782f-7aa3-4094-8354-ce4aadaca937",
        "cursor": {
          "ref": "e74ab09e-fe1b-4156-a5ba-91448e887c72",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f151d7a2-89ec-4005-889a-a5c8b70318de"
        },
        "item": {
          "id": "1aa1782f-7aa3-4094-8354-ce4aadaca937",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ea0cc56-6a2c-4a7d-8769-0eb3480e4797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373cbbe5-eeb3-4a25-a9b4-3f60c6b44044",
        "cursor": {
          "ref": "7d1bdd63-2409-47e6-8bf0-1f2aefb5114e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "93caab8e-96f4-4cfc-9254-3fb0aeab1e07"
        },
        "item": {
          "id": "373cbbe5-eeb3-4a25-a9b4-3f60c6b44044",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "63dd165b-29f9-4984-b725-ed39e927fc8c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 120,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802305f-f091-4cca-9fdc-35ec419d6a12",
        "cursor": {
          "ref": "eac87440-34e2-4fd4-bf25-c3554e5fc097",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f286298f-276b-44a7-a617-9b0d3f7dc369"
        },
        "item": {
          "id": "0802305f-f091-4cca-9fdc-35ec419d6a12",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "31845250-09be-4872-85d7-a7c988a8ab79",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3932434b-14a4-4c2c-b12c-6070e54f20ed",
        "cursor": {
          "ref": "54e41e67-551e-4c34-8476-e0befe8935be",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5c5c7d81-e4ea-4dee-b807-182735d3af28"
        },
        "item": {
          "id": "3932434b-14a4-4c2c-b12c-6070e54f20ed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7800307c-588c-45ce-ac95-0cc9606a9f84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a722c3a8-d8d0-4732-b86c-31044023d0d3",
        "cursor": {
          "ref": "c56914ea-e5c8-4b68-932d-0bbcda26c846",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ba716da-54c1-4cd2-812d-68c9509b1833"
        },
        "item": {
          "id": "a722c3a8-d8d0-4732-b86c-31044023d0d3",
          "name": "identifiers"
        },
        "response": {
          "id": "692714fd-e3be-445c-8158-df5d6790583a",
          "status": "OK",
          "code": 200,
          "responseTime": 301,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5f5b27-93c5-4307-adf5-05c830885262",
        "cursor": {
          "ref": "423fee2a-1d35-4ad2-9e6f-b297d4462a36",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "14ebf476-9abf-4662-8ae8-df08f6015767"
        },
        "item": {
          "id": "ec5f5b27-93c5-4307-adf5-05c830885262",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a963476d-1a98-46e4-9474-b6a760851052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ec2ff4-a065-4cd8-a5e1-7f77956e8927",
        "cursor": {
          "ref": "4f7e71e4-f66c-40d0-99b7-4c428bc5cdbb",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5b21985-7fc8-4cbb-8314-82e78d80f39c"
        },
        "item": {
          "id": "32ec2ff4-a065-4cd8-a5e1-7f77956e8927",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "129e4dfd-e820-4f9c-ab1a-b48c273446d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aed79d-33e9-4866-b41b-bc0ce64ebe11",
        "cursor": {
          "ref": "b6dd6522-b256-4220-b3be-cdf6927e0c98",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3903e71c-ddca-400a-89e2-283d2c479503"
        },
        "item": {
          "id": "b6aed79d-33e9-4866-b41b-bc0ce64ebe11",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2e7cfb63-84ff-4c59-954e-53124167fc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dcdb95-da49-4920-9713-60759cf10bc9",
        "cursor": {
          "ref": "01f5679c-d863-480e-baa2-ea062e00ff9c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "42aff172-78c2-4e64-8340-6c3eb27aaf07"
        },
        "item": {
          "id": "48dcdb95-da49-4920-9713-60759cf10bc9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "648efcb1-02d9-459e-8c77-f28f094a6ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0be1204-725c-43ee-a5db-b19feb73a4e6",
        "cursor": {
          "ref": "71110c58-64f3-47a8-8325-164a3ad3cc3d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f355dbab-9ac4-4c35-8117-b7cb9e84251f"
        },
        "item": {
          "id": "d0be1204-725c-43ee-a5db-b19feb73a4e6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4d950d19-ef06-4d3a-ac6b-f2a16c5b4814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708f873-a358-411f-bc4b-a578312ae776",
        "cursor": {
          "ref": "b4b19b2c-169d-4173-8e07-22606a7ab20c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d381ce44-005e-44bf-8845-983a6f764e32"
        },
        "item": {
          "id": "c708f873-a358-411f-bc4b-a578312ae776",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e568a430-55fd-43b2-807e-cef611f69467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4ba42a-ac7a-4a6e-af39-2d14cd5b36f9",
        "cursor": {
          "ref": "a3d988e4-dc0a-4b3f-bae7-2c633634a1b3",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0e4adf3a-03ba-464f-98e0-691e4b5e2da8"
        },
        "item": {
          "id": "ad4ba42a-ac7a-4a6e-af39-2d14cd5b36f9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c854e6cf-a9f2-4646-a0fb-5f76cab882aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f06318d-2ac8-4fac-923c-8534a463c96c",
        "cursor": {
          "ref": "4e9f6949-dfa1-4e63-bcd3-136c19fb4abc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0f2dda65-6c83-4b5a-9aaa-96ca88f8ef84"
        },
        "item": {
          "id": "8f06318d-2ac8-4fac-923c-8534a463c96c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "47405402-0851-40f3-ad10-1ebda2c708f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9c1d25-b7a2-4102-8ef9-c674cdaac915",
        "cursor": {
          "ref": "b9958e0a-430a-45e6-a597-83c835740cab",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "72c71f14-5f2b-4f8e-8d73-5e34a145d12e"
        },
        "item": {
          "id": "9a9c1d25-b7a2-4102-8ef9-c674cdaac915",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d91e7799-995a-494f-a260-ff6e1a0df9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8475d31-f07f-41a9-a012-db543c4c14ec",
        "cursor": {
          "ref": "3b8e5407-3203-489b-b394-3b7e00d03bb6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cb4f1e00-8aed-4024-8a8c-2db88576e607"
        },
        "item": {
          "id": "c8475d31-f07f-41a9-a012-db543c4c14ec",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "27c189e9-549f-49e3-9a47-964d13bfb182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6956bb9-c04b-4497-a884-f68789c469e4",
        "cursor": {
          "ref": "ba4e519a-1ab8-4d67-81ad-3dc1408e0117",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8ba50f05-28fb-442b-b77f-f6974dd480bd"
        },
        "item": {
          "id": "d6956bb9-c04b-4497-a884-f68789c469e4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5ae8469f-2ca6-4493-9e6e-012183b26478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcf5769-f1ec-4d6b-94a5-67393311b28b",
        "cursor": {
          "ref": "d9062f7e-b563-463b-80aa-054078073569",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c69ad566-bec3-4343-9478-5462799fd11d"
        },
        "item": {
          "id": "2dcf5769-f1ec-4d6b-94a5-67393311b28b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7083f20a-2789-43bb-a9fc-cb545569876d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c18304-a299-4dcb-b226-9669b9952c4a",
        "cursor": {
          "ref": "7619c102-5794-4fdf-80bf-68de1c330581",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "77b827cb-daf2-4916-a093-5244ff322ea7"
        },
        "item": {
          "id": "38c18304-a299-4dcb-b226-9669b9952c4a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a659843d-01ee-4a77-87f4-5d42dffad1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e348ac3-3278-4235-a0f0-ef78c3928ce8",
        "cursor": {
          "ref": "b336509a-66ec-4830-be2a-e3a7731ac1b9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "afa8fcb8-fe19-41f5-b3b9-6f60dd35bc10"
        },
        "item": {
          "id": "5e348ac3-3278-4235-a0f0-ef78c3928ce8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e830c360-6314-4d8f-b814-86f9802e073f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f46a788-a858-4d99-85ea-8ae39d3f262a",
        "cursor": {
          "ref": "b3a32b82-1fee-445a-86cf-b8a088f74f8e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "74bbb0e0-01e2-4124-8a1f-67c43c494380"
        },
        "item": {
          "id": "8f46a788-a858-4d99-85ea-8ae39d3f262a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c669a23f-8177-430e-bb6f-4e8075a82ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8fae8e-c3e8-4986-a4b5-c4d2fcbd1e8e",
        "cursor": {
          "ref": "f8e9b2f5-309a-44df-b029-8367292f9b0c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eceae30b-6ade-4e70-b97c-c01297d98241"
        },
        "item": {
          "id": "cd8fae8e-c3e8-4986-a4b5-c4d2fcbd1e8e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e1f63262-0d3c-4aa7-8868-d848d9c25d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09284cbf-4d60-4786-96b9-9670700c9b97",
        "cursor": {
          "ref": "4a68f022-8c1f-4128-9466-05c6a8660034",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "60c773ec-73da-4b3a-be78-74670b5ad467"
        },
        "item": {
          "id": "09284cbf-4d60-4786-96b9-9670700c9b97",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2df6ef17-8656-405c-85de-56b9ab1184e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047a229b-f25a-4f67-873d-865aeb99d4f0",
        "cursor": {
          "ref": "adb4e122-fa24-4d81-afc6-934cdc1e9fcf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "46606daf-a504-4032-b212-3ea4dc850569"
        },
        "item": {
          "id": "047a229b-f25a-4f67-873d-865aeb99d4f0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63056889-6b2b-4b62-b3cb-ca75434e6259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12244d60-6b4c-4a1f-aa5c-1f8463ee6137",
        "cursor": {
          "ref": "03a3e756-0677-44a3-bff7-ad1bd5f64012",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3434b3e7-b705-47ab-878e-2bd00388ef2a"
        },
        "item": {
          "id": "12244d60-6b4c-4a1f-aa5c-1f8463ee6137",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "01eda06f-bf3a-4bd8-8233-f7e5dc54696d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c87333-9bd4-4c23-bd47-c89586a4a857",
        "cursor": {
          "ref": "829f7ac0-1471-4b82-94e8-532fcaa3c1a9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a8b8067d-fc23-4231-b843-48ac2d6e5971"
        },
        "item": {
          "id": "10c87333-9bd4-4c23-bd47-c89586a4a857",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9adce4e1-3d83-4392-9629-dff8a6e27028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93387a10-73d5-4773-86be-3468f062ceb5",
        "cursor": {
          "ref": "7df37a34-157b-4727-b352-607510f92ace",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5877bf79-3dfe-48c9-9730-245b40fbffc8"
        },
        "item": {
          "id": "93387a10-73d5-4773-86be-3468f062ceb5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "49853728-15d8-47c2-b9dd-329d246fa4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16a3f3b-bd31-4a13-b7f9-00e1728d6dea",
        "cursor": {
          "ref": "c0cccddd-fcca-40de-817b-76bc575db151",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4f0bb028-3455-4320-8483-a8120c77c5a8"
        },
        "item": {
          "id": "b16a3f3b-bd31-4a13-b7f9-00e1728d6dea",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e3d5f275-6608-4766-9364-c6f85751d9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecd7487-98d3-498a-a31f-36c4a876ddf7",
        "cursor": {
          "ref": "f64679ad-44e7-49a1-9796-e43b3fafcf6a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dc60ca00-999f-4966-83cd-d8e12cb0ef4a"
        },
        "item": {
          "id": "2ecd7487-98d3-498a-a31f-36c4a876ddf7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7b6d573d-d702-4f22-96f2-052d13db4662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4305fbb7-d07d-4216-a796-7a45bc58784d",
        "cursor": {
          "ref": "1ba31bbf-7d34-46c6-aafa-e0f3ca4ebbde",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "25d69a8a-4dbc-4e27-9d1e-74fea5fcc436"
        },
        "item": {
          "id": "4305fbb7-d07d-4216-a796-7a45bc58784d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "307f6e92-ee61-439b-8baf-d001cbd83566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b537ac2-c371-43e5-ab11-c71296898666",
        "cursor": {
          "ref": "d110f577-0d05-4934-a05e-13a86e4587b5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bd30cf36-a0ce-4ce6-88d2-0dcf9100c7d6"
        },
        "item": {
          "id": "1b537ac2-c371-43e5-ab11-c71296898666",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5cf43e8-1c13-45d5-a3d9-0262efaec007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57422f1a-5ca9-4fd0-a1a5-ac508da530b7",
        "cursor": {
          "ref": "49594254-071d-4557-ba12-a1de2e2ffab5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5ed4ffb-8d0c-4797-b12d-20f41d7cab2f"
        },
        "item": {
          "id": "57422f1a-5ca9-4fd0-a1a5-ac508da530b7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1b477e43-b5f1-4a87-ab01-be9e09e8063f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701d146e-2d4e-4a43-a49f-a1536c1add8d",
        "cursor": {
          "ref": "736be04f-ab36-4b40-ad46-1746154dc617",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fd8f7a61-c53f-4e40-b198-b2caaa1ff7aa"
        },
        "item": {
          "id": "701d146e-2d4e-4a43-a49f-a1536c1add8d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b1c82e80-87a2-460e-bc97-0e06bcccedf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ada284c-ccd8-4068-b66d-156f11a62ea1",
        "cursor": {
          "ref": "43f16365-e859-490e-a2b0-739bf238eed9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c026ee43-5e0e-4d92-aca5-527dc4e8d807"
        },
        "item": {
          "id": "6ada284c-ccd8-4068-b66d-156f11a62ea1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e722a91c-d886-4f5e-9cf0-94c0486a0475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc7dbf3-c0c4-47ac-9074-a3732959222c",
        "cursor": {
          "ref": "4c5f82af-d34d-47ec-b415-cd312e075bf0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e24a5bef-5d87-48e7-bf70-fd001b7a1ecd"
        },
        "item": {
          "id": "1fc7dbf3-c0c4-47ac-9074-a3732959222c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "89fcf41a-b458-434c-945a-757c113b69f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcf6f47-f21a-4f05-8b49-45298f227165",
        "cursor": {
          "ref": "16510c2a-7616-43e5-a330-6b0a0c14fccd",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0f9ef375-9098-4ffb-abe2-2a8cf8042752"
        },
        "item": {
          "id": "6dcf6f47-f21a-4f05-8b49-45298f227165",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "267af91b-1cc1-481d-8998-6518f35ed4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041485a5-0276-4061-9447-f8ccc629e27e",
        "cursor": {
          "ref": "be7206ba-e6fd-4c7f-85fe-c99a8a3936a7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ce677677-1de7-45fd-b782-16ef749d7eff"
        },
        "item": {
          "id": "041485a5-0276-4061-9447-f8ccc629e27e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b4e80b22-4bea-47fd-9ac1-4b539276f24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac22475-3bfc-411b-854b-2266f3623379",
        "cursor": {
          "ref": "dfc5e7bb-cd19-49be-8a9a-721d68330d3c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2c94106f-d790-4af6-a3bf-bd26c5c85a70"
        },
        "item": {
          "id": "dac22475-3bfc-411b-854b-2266f3623379",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f9e7e52f-dda5-46a6-a1f2-d9fc0bdbb05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fefb69-d045-4a23-b543-388e3fcbaa60",
        "cursor": {
          "ref": "e30478bf-2839-40cb-8011-81abe7483ecf",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0ef951be-efd3-490b-9a12-afcda31bf08c"
        },
        "item": {
          "id": "b8fefb69-d045-4a23-b543-388e3fcbaa60",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "89e7f405-01d4-43ea-a1f1-1d68be76f2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c15eae-acc4-435a-b3e7-27981862625b",
        "cursor": {
          "ref": "459a5902-fd86-4309-8d41-ae28e5b646fa",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ec10c6d9-5bb1-4124-a3f9-05396e68eafc"
        },
        "item": {
          "id": "14c15eae-acc4-435a-b3e7-27981862625b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fcbeb66c-2897-4b0e-bd2e-ee2f6d18668f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360cdbe9-20e2-4814-a983-fc22b3d140da",
        "cursor": {
          "ref": "a6fa135b-1739-4aa5-9935-be57563990be",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "16e58922-119a-4255-8bc7-310f96165868"
        },
        "item": {
          "id": "360cdbe9-20e2-4814-a983-fc22b3d140da",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8b133db3-6218-47fa-91e6-ea6371963715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc0ecab-4e3b-4616-9adc-c98ce55f70d0",
        "cursor": {
          "ref": "f0a3bf8f-7bfa-423e-aa93-c869a7ce01c8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7cd20455-2b76-4407-99c4-4a632b2e7ef3"
        },
        "item": {
          "id": "0fc0ecab-4e3b-4616-9adc-c98ce55f70d0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b65ad2d9-50e5-4a4b-8374-07368fd2fdef",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 324,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de5febd-047f-4582-ba97-0509dd0255e8",
        "cursor": {
          "ref": "9248b2be-a4a2-4d82-bb2b-d26875811add",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b1208250-a92a-4ccb-b56b-3b8abfc8c91c"
        },
        "item": {
          "id": "5de5febd-047f-4582-ba97-0509dd0255e8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f1fbf934-4ebc-4a44-8ce0-a1801fa6942f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fdf627-4b08-4110-9d03-adf81ad91fba",
        "cursor": {
          "ref": "37e87004-02ef-4f4a-a78b-f5883d45e823",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c73c9b23-5e5a-4796-b757-11994407425a"
        },
        "item": {
          "id": "e6fdf627-4b08-4110-9d03-adf81ad91fba",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2708a783-46ae-44c4-a731-8a5ebae51f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34589e1e-6af2-4f87-92e8-934ae686cc21",
        "cursor": {
          "ref": "3c1a5d9c-e061-472b-b226-e19fb7c9a28a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a509e791-b55b-452e-8c83-dae1c636bc86"
        },
        "item": {
          "id": "34589e1e-6af2-4f87-92e8-934ae686cc21",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "102578cc-19ff-4fd0-b889-cd957a59987b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4ad096-b9b0-4ffe-849e-7169b53a3d13",
        "cursor": {
          "ref": "e9c27718-f5b8-460b-828e-1d75f5a94b03",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "46acfa7e-d60c-4de8-9b97-f851a6c92efb"
        },
        "item": {
          "id": "3d4ad096-b9b0-4ffe-849e-7169b53a3d13",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db3894b2-1de5-43ea-983c-9c549f6bcae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2160b9b6-de19-4bd6-a509-806cd505e954",
        "cursor": {
          "ref": "b9ea20e5-731e-4624-b605-a2e44504e53c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c14372a7-837e-4311-92a8-6bfbce57b17a"
        },
        "item": {
          "id": "2160b9b6-de19-4bd6-a509-806cd505e954",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "58ccad99-a439-4d78-945c-2b5378e59756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e0c5dc-e95f-4074-9926-3e30a595089a",
        "cursor": {
          "ref": "14886864-db51-4cd4-a390-e2afd26bddb8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "018b1bc1-6fe1-4894-bc1b-e3ad18d73559"
        },
        "item": {
          "id": "43e0c5dc-e95f-4074-9926-3e30a595089a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cd9c8e35-9f29-44e1-a159-d235bf164fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c0e814-d9c6-4afb-840f-31312e26cff6",
        "cursor": {
          "ref": "f3287e61-8bee-4672-b335-604f6b3be14e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dabb0a7f-4162-4dc7-93b1-1978d8d439ec"
        },
        "item": {
          "id": "83c0e814-d9c6-4afb-840f-31312e26cff6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d56a3aa5-cca4-45da-a40f-ef1d411af8c3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 327,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa08daa-b2b3-4af8-9c6a-454c43c8c631",
        "cursor": {
          "ref": "109158d9-1a66-4658-9cfb-56757ed8ce51",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6c2da49a-4a57-4c3a-9fcf-22259932208d"
        },
        "item": {
          "id": "bfa08daa-b2b3-4af8-9c6a-454c43c8c631",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "35ac76f0-f747-496a-b3ae-f914b608b249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0a0c6b-f88e-4488-af54-fd90c1fc2477",
        "cursor": {
          "ref": "507fb5f0-d525-40d9-aa2d-22af5ce32bc1",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f11af15-e0fa-4035-a02b-0b72adbf108b"
        },
        "item": {
          "id": "1d0a0c6b-f88e-4488-af54-fd90c1fc2477",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "61b69fb7-3cb7-43be-97b8-444e4e68c18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c212bb-c633-404b-9ade-02f556550ffc",
        "cursor": {
          "ref": "fff1b120-1a8b-4fc5-8fd1-ad2709b2c63e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c18fa992-842a-4870-91f3-e70ec3485cda"
        },
        "item": {
          "id": "29c212bb-c633-404b-9ade-02f556550ffc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ccbfb7b9-b0f6-46e0-84ea-4dfe278460ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a12f94-e0a2-4928-8897-f8479bd78916",
        "cursor": {
          "ref": "cb236d14-2f6f-4477-b751-550dec4b7ec4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0fefbfd7-0c63-4071-9389-af4499bb1835"
        },
        "item": {
          "id": "b2a12f94-e0a2-4928-8897-f8479bd78916",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cf6c3145-bf5e-431a-a32a-b82cc3cd52a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8922a4ab-86ac-4eaa-8ca8-b546e29a282b",
        "cursor": {
          "ref": "bc6bc893-fd08-4c92-9391-bb9a885726ad",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b3e0a208-8013-4fec-a7e9-758b029bd811"
        },
        "item": {
          "id": "8922a4ab-86ac-4eaa-8ca8-b546e29a282b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "850a304c-58cd-470f-9255-9373ebc64c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf377e5-aaa8-434b-8e95-94484cc00ed2",
        "cursor": {
          "ref": "16f2f1d6-4efc-4ba9-bb59-c5db8b2a7ad2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2cc2ee4e-3490-4cf3-890c-6b9239d88754"
        },
        "item": {
          "id": "7bf377e5-aaa8-434b-8e95-94484cc00ed2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a8fb6ce7-6615-496e-a58d-40cb05988202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6863e8-4af3-497c-8468-75cfa8c47343",
        "cursor": {
          "ref": "08cc3085-c890-404d-aa33-9e152fc998a6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a1a9fa6a-2853-4d37-be17-42b1b5ab8082"
        },
        "item": {
          "id": "7a6863e8-4af3-497c-8468-75cfa8c47343",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c20f5d66-91c9-430a-a567-08db6a3678d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa5f283-bd6a-41f8-ad68-211312fcdfd1",
        "cursor": {
          "ref": "f6337203-701d-47c6-8542-49acf58d3f1a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6937a1b5-7441-4be4-a6eb-5381a23238dc"
        },
        "item": {
          "id": "ffa5f283-bd6a-41f8-ad68-211312fcdfd1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d28458fe-021d-4885-adf8-2fa509afec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204590ce-22b3-402b-8c23-75ed82921833",
        "cursor": {
          "ref": "7d125b64-d211-43c9-b652-9b9661aa739f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0a61578b-e5d2-42dc-8915-bf64f940d48c"
        },
        "item": {
          "id": "204590ce-22b3-402b-8c23-75ed82921833",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "aa644f5a-2f91-4e0b-b873-6ff9042ac3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcbe5eb-028a-4f1c-b63c-4180d591aa5d",
        "cursor": {
          "ref": "a7d4b02b-6af0-46ec-a916-d0959f092088",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e4d06d19-f22d-4413-aa9f-3ef182c8b818"
        },
        "item": {
          "id": "bbcbe5eb-028a-4f1c-b63c-4180d591aa5d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4780ed39-0f35-4737-95a7-4fc87abfa327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e32952-04cd-4e97-b5f7-c67e8473bf39",
        "cursor": {
          "ref": "df887401-802f-464f-a8fb-02018be24b0b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "48f675f5-2959-4bf0-84da-0035f90686a8"
        },
        "item": {
          "id": "b6e32952-04cd-4e97-b5f7-c67e8473bf39",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6c953fb1-a24f-4a29-8632-8a8324697b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a4b1dc-d21d-44cf-94d9-d863c69c63ff",
        "cursor": {
          "ref": "86f58658-e1af-480c-b802-21557a464590",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c3937c95-62ae-4a82-9449-e8638072e0da"
        },
        "item": {
          "id": "40a4b1dc-d21d-44cf-94d9-d863c69c63ff",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "95d1623b-5834-40fb-911b-940ffdcb1da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02200a73-58c5-4d73-9c9b-7fc75dd729c9",
        "cursor": {
          "ref": "d8a501fb-5622-45b4-a944-ca631120323c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "14648989-9136-42ae-938a-e135f5e7f2c2"
        },
        "item": {
          "id": "02200a73-58c5-4d73-9c9b-7fc75dd729c9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8074314a-a741-4d64-b965-077ab66e52c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7195687b-3804-4fca-81ba-f2ee0f912503",
        "cursor": {
          "ref": "e102753c-8efa-47c5-9f4b-ffc7865628a0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b0080d3a-baf3-4ee1-92f1-f795c25a5cdf"
        },
        "item": {
          "id": "7195687b-3804-4fca-81ba-f2ee0f912503",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aafaf3ad-72f0-45b2-a0c0-50b208a7a0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91792ae-519c-4d57-b081-0dd4e58bdeb3",
        "cursor": {
          "ref": "b675baea-6f3a-4b82-9b06-e548c99aa4d3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "75119b69-c06c-48c0-a305-2749f3c07d8c"
        },
        "item": {
          "id": "f91792ae-519c-4d57-b081-0dd4e58bdeb3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "62208c31-7971-4fc0-b595-49cdd54f4a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269c2bd0-b5dc-40a5-b17e-74a34894ce6e",
        "cursor": {
          "ref": "c7a9dcc3-9fa7-43ab-bab2-18588cb72c3d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dcf83368-9298-4fa4-a188-317da70eb7e7"
        },
        "item": {
          "id": "269c2bd0-b5dc-40a5-b17e-74a34894ce6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9517bc0-8aeb-4f70-a524-9f7ca7e7ebe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7d2801-e8f8-4f02-b0c9-d1c7448600c8",
        "cursor": {
          "ref": "54d2180e-a33b-462c-ab81-28a285c935fb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2c4fce91-6cc3-4802-abfd-2c8c577a7121"
        },
        "item": {
          "id": "5b7d2801-e8f8-4f02-b0c9-d1c7448600c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9faa6661-1270-4eb3-9963-7306209459cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a979aa3-1164-4723-af85-65fe8cefa821",
        "cursor": {
          "ref": "7b208fdf-5d9d-4660-85b6-c7fa3e9ad30e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "43f01e3f-abb4-4db5-b5a3-ce1039ee1959"
        },
        "item": {
          "id": "0a979aa3-1164-4723-af85-65fe8cefa821",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5123d0dc-0e54-4980-b581-a3310add3a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606f1fd6-ad82-4fac-9349-1801b8fe2aaf",
        "cursor": {
          "ref": "3ea80e2e-34f6-4a51-84b4-afa96155bb88",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ecfbbe04-9cda-45e2-a0d7-ff4b8f0dfe0a"
        },
        "item": {
          "id": "606f1fd6-ad82-4fac-9349-1801b8fe2aaf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "810c3866-d8fd-4a33-b048-e2c482f5a5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a456f6e-41a3-488e-a14e-592312a9eb0c",
        "cursor": {
          "ref": "aea1b30a-2c0e-456a-b085-6d51dc386b3c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d63b0cb4-3f12-4de4-a266-411c6b2aa596"
        },
        "item": {
          "id": "4a456f6e-41a3-488e-a14e-592312a9eb0c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d8fe2763-66b7-4051-aafa-38d57a8f20df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ec1436-35f0-48f5-9dc8-713c27aa8ce4",
        "cursor": {
          "ref": "00e32f55-a517-479a-abff-3d785d257086",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f83d7db9-0f8b-4fd0-9828-9275febc220e"
        },
        "item": {
          "id": "67ec1436-35f0-48f5-9dc8-713c27aa8ce4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4557ff11-60b8-4bfb-8eff-47392e49042a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d27c189-f700-4b73-84cb-f9f3d30971e1",
        "cursor": {
          "ref": "5b0adfc4-4c20-4903-a57e-a2c40253d5ad",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "857d096a-67ed-4c30-8c46-0f5724394a04"
        },
        "item": {
          "id": "2d27c189-f700-4b73-84cb-f9f3d30971e1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "390d4431-41e1-4955-ab81-d22d2329452f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce01fd6-313a-4476-a909-fbbfb09e67d4",
        "cursor": {
          "ref": "62effcf7-bf21-4ecb-9d4f-0c3018a64526",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b21b7c54-78f8-4056-8d1f-845df1478bb8"
        },
        "item": {
          "id": "bce01fd6-313a-4476-a909-fbbfb09e67d4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a389f146-b4bb-4a3f-a3e7-606f55ef30c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1c13aa-9ee3-46b9-80a4-f1dbccdf2120",
        "cursor": {
          "ref": "71d96f73-114e-42b7-be06-1612adde4961",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4e11d690-93d4-489d-8043-0b837031a2d2"
        },
        "item": {
          "id": "7c1c13aa-9ee3-46b9-80a4-f1dbccdf2120",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5604e784-c0b1-4f5f-8ab3-54daab1ad7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7451c8-cd41-4ca0-8cb5-0ebcf8b6e77e",
        "cursor": {
          "ref": "fb316cce-828f-40d3-9a11-9a5110a23f47",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bc1f4c10-c3db-408b-a450-af6b4ee2e805"
        },
        "item": {
          "id": "cc7451c8-cd41-4ca0-8cb5-0ebcf8b6e77e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a2f8c37e-4e30-4871-8239-36601aed527c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0661bfea-c8c1-4c3c-8d72-2d664c6e4312",
        "cursor": {
          "ref": "77c7e291-b53e-43b9-8613-1b91272d3c03",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aa035cd1-7f73-447d-8d09-ff21459df3af"
        },
        "item": {
          "id": "0661bfea-c8c1-4c3c-8d72-2d664c6e4312",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8bdb1970-dd68-470e-9807-bb23d50a0628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dc5fde-1c3d-4f55-b306-20a5fe61e3c1",
        "cursor": {
          "ref": "48d78e1d-12ea-483c-8ff9-67b4272d0b6e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f125238d-ae6a-4d83-9ed0-c1b57da2352b"
        },
        "item": {
          "id": "35dc5fde-1c3d-4f55-b306-20a5fe61e3c1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b01a813d-56c6-44d0-8b4c-5fcc9095dba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e77c3c-6dfd-4bf9-bda7-bb0db6a2206a",
        "cursor": {
          "ref": "0db91033-23d4-403a-a977-cc148d442608",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "051c53cb-7ce9-4b7d-ab0e-759d084a78a5"
        },
        "item": {
          "id": "99e77c3c-6dfd-4bf9-bda7-bb0db6a2206a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3cad2cc1-2c94-4488-a251-a07536adab5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25a7c86-3bdd-41c8-94e3-fc216f705018",
        "cursor": {
          "ref": "6b31803c-01bb-4519-a5db-8af89dc3b3ed",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a553ae49-c510-4a0d-a241-fa324f611ff8"
        },
        "item": {
          "id": "d25a7c86-3bdd-41c8-94e3-fc216f705018",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ed7fba14-c0ba-41a8-8f8c-7dc7887e3d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3f38a7-b9c0-4f21-9ce6-f73ad76179f5",
        "cursor": {
          "ref": "3db1c3fd-3ccc-44a4-8327-df7ba1b17b44",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "87e3163d-54e9-45ec-a403-f87f73b001fa"
        },
        "item": {
          "id": "de3f38a7-b9c0-4f21-9ce6-f73ad76179f5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f3525ccb-37a3-47e7-aa45-eb08265d3fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053d2ec2-f27a-4a22-9743-2fb801b4cc26",
        "cursor": {
          "ref": "0e7d032a-47eb-4c27-a4a7-3ea21388bd74",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e7917f2-4349-498e-9ed1-6020aac68458"
        },
        "item": {
          "id": "053d2ec2-f27a-4a22-9743-2fb801b4cc26",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b11b9421-d76f-415a-b279-f1c3c3457dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91973915-029f-40c1-a6c1-d831c4101c9c",
        "cursor": {
          "ref": "e73bf30a-6a16-45ca-96c7-63c04fcf36b6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c7720c67-c061-440b-bd95-abd723b4f186"
        },
        "item": {
          "id": "91973915-029f-40c1-a6c1-d831c4101c9c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "addb8f07-5a59-4292-bdb8-33aa4c121739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b5a591-2c55-4665-9356-1a028b3999dc",
        "cursor": {
          "ref": "4f798a96-6acd-43c9-a14c-259d6d32ab62",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "97931255-5fce-42bd-ba9b-51c0896a2bfd"
        },
        "item": {
          "id": "d3b5a591-2c55-4665-9356-1a028b3999dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8887cab1-abe0-4034-b6d7-c22980c995fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fc167d-bc6a-4697-a98e-218d48ca2ca5",
        "cursor": {
          "ref": "775484b1-aa77-47d3-a131-13ec392a1925",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "508a920c-87c6-436e-8b39-175937a0971b"
        },
        "item": {
          "id": "96fc167d-bc6a-4697-a98e-218d48ca2ca5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d5c861d8-3163-4d86-be3f-ae438775f3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129276da-9e52-4b05-b4f4-7d16ea42c8ff",
        "cursor": {
          "ref": "9759ba4d-b1a7-4c51-848a-9c88fd79a7da",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c4cab35d-b66c-4e94-a264-1f72ac395dd0"
        },
        "item": {
          "id": "129276da-9e52-4b05-b4f4-7d16ea42c8ff",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "35294a1e-9201-495f-9464-fab7a764c38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14277472-5aa9-42e9-bad0-cd1cfa60cbe7",
        "cursor": {
          "ref": "6144ff07-31a8-415e-af1a-bf8df7dd5e49",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f06b9061-8674-4d1e-9f00-7886c203c4cf"
        },
        "item": {
          "id": "14277472-5aa9-42e9-bad0-cd1cfa60cbe7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "87863adb-4d10-4214-bbf6-a8b696360d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97447a1a-fe4e-4491-bb43-cfc332cfdbb8",
        "cursor": {
          "ref": "82342196-b9da-4631-a6fa-b2943db0e65e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "76766673-a9f5-43a1-9389-aee6c8f05948"
        },
        "item": {
          "id": "97447a1a-fe4e-4491-bb43-cfc332cfdbb8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cc46b3ce-46e5-4dc1-88d7-a2e45571cee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e69e6d-b8ef-4e4f-bec0-82325884c43d",
        "cursor": {
          "ref": "be4feacf-5713-498d-9fc7-643adfdfa700",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "64af8d4b-94a3-49af-aca8-4707dd0211fa"
        },
        "item": {
          "id": "27e69e6d-b8ef-4e4f-bec0-82325884c43d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "934b22e2-f368-4f57-8e3e-b0d4478691cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953ad2d8-9a83-4d66-967f-43219e8cd3ac",
        "cursor": {
          "ref": "c0ecef9c-2feb-4846-b7f8-07902187197b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1ce84331-ecad-4c57-b828-faf4564b63e9"
        },
        "item": {
          "id": "953ad2d8-9a83-4d66-967f-43219e8cd3ac",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "035790d8-13cd-4f32-965b-f047e35f1fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23a61d8-fd35-47d0-9d1b-4c44ab2b0e3e",
        "cursor": {
          "ref": "bfbbc8a6-7c5f-4aa8-afb3-906834be1a7a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "855f4ecf-26fe-4e55-8ecd-32baaaf62810"
        },
        "item": {
          "id": "b23a61d8-fd35-47d0-9d1b-4c44ab2b0e3e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bd79522b-7d46-4dd1-976b-8042b06385a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fc7d07-00b7-4605-a683-6c5af59ffaa6",
        "cursor": {
          "ref": "0901e1ea-3366-4396-a398-e163187062d3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6f56d83-6c39-4e8a-a6c7-f79dad20eb9d"
        },
        "item": {
          "id": "86fc7d07-00b7-4605-a683-6c5af59ffaa6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aa653bc1-e56c-43f9-9c8b-a62402d8296c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28242191-8fc4-440f-9062-4b63b3ee9085",
        "cursor": {
          "ref": "0a5d99e7-52b5-4e44-ab67-a53b596e8b1c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3bef3c56-6bc9-4bac-8d78-beea776fdf81"
        },
        "item": {
          "id": "28242191-8fc4-440f-9062-4b63b3ee9085",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "212a997c-f390-4619-a1a1-c2f64c879ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d149d7c-18bf-474b-b2e9-73000d42c415",
        "cursor": {
          "ref": "cf4885e7-6388-4bc5-8554-a032f4becac2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "761f7fa4-ddc9-4619-a3bc-5173d58216ed"
        },
        "item": {
          "id": "1d149d7c-18bf-474b-b2e9-73000d42c415",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "606f9a3d-7f58-4a41-9276-205057dcddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d62e84-c396-4656-a13b-bf862997b8e1",
        "cursor": {
          "ref": "19c4ae42-87f7-4d56-8e3d-c9b0bf9b6dc8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3648feb6-2a5f-47df-af5e-ee8c56239e79"
        },
        "item": {
          "id": "66d62e84-c396-4656-a13b-bf862997b8e1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "deb64374-9bcc-4f0f-b909-e92bb922b70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bee9273-6c1a-4136-8054-9c6fee012aff",
        "cursor": {
          "ref": "bdbb7629-1fd3-41a5-afb3-bde3329182ee",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "755017e4-21c5-4b8a-a3db-c29558d0537d"
        },
        "item": {
          "id": "8bee9273-6c1a-4136-8054-9c6fee012aff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d02ad823-02cb-4570-94b5-4b8bbd53e920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7c043b-ae80-412b-915e-8abdc9d81c40",
        "cursor": {
          "ref": "7876886a-8a40-4496-a453-fc6a6fb7346c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fbbf9953-ca8f-4c1b-8f9f-23c6b299e2ca"
        },
        "item": {
          "id": "ca7c043b-ae80-412b-915e-8abdc9d81c40",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "210d5191-fafd-4886-b616-053909618be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0a5078-4ba0-4908-a392-fc25969f6594",
        "cursor": {
          "ref": "56a252bc-3a66-45b7-b175-6545dc6273d5",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8d9026a1-bd62-4f2b-86ae-9db173e72402"
        },
        "item": {
          "id": "6d0a5078-4ba0-4908-a392-fc25969f6594",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5fa0c3a7-99e7-473f-ab15-b2d4cff0a9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa73eac4-445c-46f9-adc6-b1a44aab4d60",
        "cursor": {
          "ref": "485a300f-5de5-4e4f-8bac-882b0dd8f08d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f7655f24-19b3-4dac-8295-cf71626f4692"
        },
        "item": {
          "id": "fa73eac4-445c-46f9-adc6-b1a44aab4d60",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0b6ff1b6-92dd-4541-aa05-8d8edfda8d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a981e732-1c31-4c9a-aee9-3b429577d0e8",
        "cursor": {
          "ref": "5ab22eb7-1ce2-4279-a207-5b3c1c3deee4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3cbbd260-4e75-4e14-a569-5ff239619a75"
        },
        "item": {
          "id": "a981e732-1c31-4c9a-aee9-3b429577d0e8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6cdfec61-3e03-40be-8e8e-1b143698c406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd712c2-dc29-4366-90bb-b4066e582b72",
        "cursor": {
          "ref": "f320cde5-c075-48fc-95a3-bd22818a6d01",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "27303258-f108-4c2c-8209-2d2d959d9321"
        },
        "item": {
          "id": "8fd712c2-dc29-4366-90bb-b4066e582b72",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0c11411c-d49b-4952-81bb-eabe5b7471b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58357d32-602a-4c26-b506-41c58faefc8e",
        "cursor": {
          "ref": "8502e425-9de4-42aa-9397-14570ecbfff9",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eceaa018-888c-4be9-b963-1003f2b16972"
        },
        "item": {
          "id": "58357d32-602a-4c26-b506-41c58faefc8e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e3c2f324-56e1-4fbc-808d-ddfce727e19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "773883b1-c58b-4199-a471-33bef30be16c",
        "cursor": {
          "ref": "f7a68ab1-003b-47d9-9055-aff2b78b73ab",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "12578831-d537-4e26-9273-ff29ad483afa"
        },
        "item": {
          "id": "773883b1-c58b-4199-a471-33bef30be16c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6165eab6-cbcf-4514-9033-6f968b4850a7",
          "status": "Created",
          "code": 201,
          "responseTime": 3037,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2fa28e-6197-4585-83f3-951de3954dc1",
        "cursor": {
          "ref": "ab9c5c2e-da93-426e-8171-33cfe04d80eb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "94020b9e-ec8d-4f84-a84d-d68d74977b6c"
        },
        "item": {
          "id": "eb2fa28e-6197-4585-83f3-951de3954dc1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "773563e1-1696-476a-8f57-99cdd0bc7291",
          "status": "Created",
          "code": 201,
          "responseTime": 2771,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c59758-073d-4542-81b6-b85834e4b0f7",
        "cursor": {
          "ref": "d2050f5b-8127-4bb5-80fc-a09afab81fcc",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fe8b5aa4-2407-465a-bb56-05080d18b5d9"
        },
        "item": {
          "id": "29c59758-073d-4542-81b6-b85834e4b0f7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8111939c-3067-4d98-add0-31dfc3aeae9f",
          "status": "Created",
          "code": 201,
          "responseTime": 2200,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9f2378-4cd6-4aa9-8a93-fbe6a79088d1",
        "cursor": {
          "ref": "f8f5e81c-398e-45ff-865e-d380e3a3396c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "613e6734-a98e-4b1f-afd2-6ef33b3e4a76"
        },
        "item": {
          "id": "bc9f2378-4cd6-4aa9-8a93-fbe6a79088d1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ebd3df4e-2d0b-4adf-a360-1c046a94f10f",
          "status": "Created",
          "code": 201,
          "responseTime": 2165,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2706028-c2db-45e4-aec1-01e8299eb7b3",
        "cursor": {
          "ref": "d6587268-598e-4738-b950-cccee243e758",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e8082de-3b3f-4547-a237-d9ca9af0d4b4"
        },
        "item": {
          "id": "c2706028-c2db-45e4-aec1-01e8299eb7b3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "20994adf-2d0f-4ac0-95e6-234e2408642e",
          "status": "Created",
          "code": 201,
          "responseTime": 2346,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c437dd29-5944-408e-9e6b-ae35f42058bb",
        "cursor": {
          "ref": "a2d6a07f-9120-41af-9e7c-442855817e86",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "429bfb97-18a9-444e-8c9b-234a1ef959c0"
        },
        "item": {
          "id": "c437dd29-5944-408e-9e6b-ae35f42058bb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6ad56f23-e8f4-4f41-a7d5-df0327b9154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "57c2166d-21d0-48b5-afe1-993217bb2179",
        "cursor": {
          "ref": "9166c144-3ba7-49a5-9c68-69837a7e11c1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "860cfdc2-87b1-4669-9c7a-df5504ab6e6f"
        },
        "item": {
          "id": "57c2166d-21d0-48b5-afe1-993217bb2179",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e29fce69-0ba1-4e77-b702-42cd70bd1108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880c14a8-4816-4729-ad3a-267c9f485b03",
        "cursor": {
          "ref": "938255a3-058b-4f1e-b3c9-72f316c0c011",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "add36e53-77e0-4ec2-817d-e4227048cb12"
        },
        "item": {
          "id": "880c14a8-4816-4729-ad3a-267c9f485b03",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db4e6204-40b7-4179-afd0-324b4a42f027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae8ded1-b342-4e01-9a85-3c141291fc36",
        "cursor": {
          "ref": "02098dcf-c60b-4976-8a62-17e165ee7b0b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4b7a718d-f661-4b99-a29b-f4e4afb7920f"
        },
        "item": {
          "id": "1ae8ded1-b342-4e01-9a85-3c141291fc36",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c22abbd3-113a-4d74-9a8f-c47079113316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5d5c94-4622-45ed-a56d-1ba28d9d1159",
        "cursor": {
          "ref": "b9017f04-61d7-47f5-8987-d7894421ffad",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "243ed304-1e0e-4982-870d-197756acd77e"
        },
        "item": {
          "id": "be5d5c94-4622-45ed-a56d-1ba28d9d1159",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "598f3c2d-737c-45f4-99d5-25d90afa7453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db448b4-47e5-41de-aa00-d2e6c39a0c9e",
        "cursor": {
          "ref": "e5688026-7d1e-45c7-8afd-a19be761bf9f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95616e7c-7c6b-4c2b-b6ae-f6df2b674789"
        },
        "item": {
          "id": "1db448b4-47e5-41de-aa00-d2e6c39a0c9e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d9e4c645-364b-4161-927c-4ecef048f52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd5b98a-d407-4a3b-8f49-9bdeed07c734",
        "cursor": {
          "ref": "79a0153d-3e91-4a29-b02a-9e8496866bd7",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ef33834e-b6e0-49d2-8801-eb0ca000f5c8"
        },
        "item": {
          "id": "fdd5b98a-d407-4a3b-8f49-9bdeed07c734",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cc6c623e-dfea-47ff-8b77-e7b16f3670c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee5d055-3e93-495c-856b-e96bfb6a77f8",
        "cursor": {
          "ref": "55c10528-a82b-472b-8135-f6fec2bfc593",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "be89914a-9ebc-486e-86cd-71eb7803108d"
        },
        "item": {
          "id": "bee5d055-3e93-495c-856b-e96bfb6a77f8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "39af9e1f-7fa5-4ba8-a090-4e31e16f3121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13e29d7-ba2e-4c76-88d9-dc61d0f7c6eb",
        "cursor": {
          "ref": "7c6e063e-a151-4065-a533-79a4091ca634",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8c2020f7-9ac1-480c-a902-43227a4ab425"
        },
        "item": {
          "id": "d13e29d7-ba2e-4c76-88d9-dc61d0f7c6eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fd1fd70c-c237-48e5-9100-afe5d168adbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8a1540-9b3b-476a-925e-f57a4f6e4bf5",
        "cursor": {
          "ref": "7dea4101-58d2-4f90-9467-b5ad3e1b2377",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7c431d4f-169c-4f4d-a41b-47100c40c9a8"
        },
        "item": {
          "id": "ae8a1540-9b3b-476a-925e-f57a4f6e4bf5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "badcc9d8-6640-4cc8-8179-9df28f232a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e164e1-379d-43b7-8cac-ad716a972eae",
        "cursor": {
          "ref": "0c4b3681-e32f-4817-82c6-57535e09fbd2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ad85b956-bb4d-4d7b-949d-0583ac3a905a"
        },
        "item": {
          "id": "69e164e1-379d-43b7-8cac-ad716a972eae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e75ba36c-6cfe-4bd5-b0bc-a22593c072e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3610ce01-657e-4547-9957-8c74b9ab5cc8",
        "cursor": {
          "ref": "e8c703fc-c02f-4999-bbf6-f8835c121a40",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d4910e69-66ca-46b2-8b85-ad023fd48619"
        },
        "item": {
          "id": "3610ce01-657e-4547-9957-8c74b9ab5cc8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "818bd50d-3d13-4f5b-84f6-1b55a698ac90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407d0c83-4563-42a7-91cd-b1075f4019bf",
        "cursor": {
          "ref": "181e05bb-b3b3-41ca-867e-f81e2edacd26",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "34326d07-7982-4901-8af3-9dedaf95a171"
        },
        "item": {
          "id": "407d0c83-4563-42a7-91cd-b1075f4019bf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2b0bca4e-bf7f-48b0-9aa9-4a2032ccf16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8cc2cc-d960-473d-82e9-7dc9830bd2b5",
        "cursor": {
          "ref": "3ffb463d-fc7a-4db8-ac46-6f4b54435def",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4af4ca78-e4e2-408d-a070-8c70d773af06"
        },
        "item": {
          "id": "da8cc2cc-d960-473d-82e9-7dc9830bd2b5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "31e2f7ec-302b-4b78-815c-c71b9adf0d31",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 120,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885be5c7-0cd2-420c-b8de-2d329af5bace",
        "cursor": {
          "ref": "02f86b87-3093-4e53-b236-513c673ca361",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bd2ec76f-addb-48f6-9818-2ef6fffb112d"
        },
        "item": {
          "id": "885be5c7-0cd2-420c-b8de-2d329af5bace",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "342d9238-0429-4013-ae5a-8d1abcb1679f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24f1f96-2c63-4e1c-9619-c76283b3497a",
        "cursor": {
          "ref": "1a6e6398-0d46-4cab-a975-c091e6fd6d73",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "72d0fff7-78b0-47be-9f17-9a66d474afa9"
        },
        "item": {
          "id": "c24f1f96-2c63-4e1c-9619-c76283b3497a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "28f34343-81a0-469a-82cc-da9024f2102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647afeb5-2446-4674-a01c-98140469651a",
        "cursor": {
          "ref": "c28f6180-8cd6-4434-a8cd-3c59e0c453c5",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "969d718b-d6a4-468a-894a-32a8700cc701"
        },
        "item": {
          "id": "647afeb5-2446-4674-a01c-98140469651a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f06112f1-d46b-48d8-97dc-e2c1b9c8c320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdda0d9-fc96-49e1-b320-90701bee3c79",
        "cursor": {
          "ref": "baffc0fa-e558-40ad-920f-9e19f92fc47f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "516797d6-0a84-4c85-a040-6f96459ea9a6"
        },
        "item": {
          "id": "2bdda0d9-fc96-49e1-b320-90701bee3c79",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "890be64c-8696-4801-b87a-64c993c8615e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93922525-e261-4b2d-ab25-7a9d7322e78c",
        "cursor": {
          "ref": "ebf5bc5d-ede4-48d8-9295-dbf81b0b0f1d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fc255800-9cb2-4476-821e-5b48f557449a"
        },
        "item": {
          "id": "93922525-e261-4b2d-ab25-7a9d7322e78c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f029554e-b84b-4daf-8b99-6df4b0223c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9de106-02f5-439c-ab9e-2a964e57b4e1",
        "cursor": {
          "ref": "918ad417-ea1c-4174-aade-deff2c4415f9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3ab60196-7b37-4b8f-a5f4-4e10f6077ebb"
        },
        "item": {
          "id": "bc9de106-02f5-439c-ab9e-2a964e57b4e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "759b92eb-6463-41e2-a8d5-0e31d25986ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e34eee-c15c-4d76-ba28-aa1f51d90a51",
        "cursor": {
          "ref": "27c0c24b-f6f9-493b-b38e-018e0ee7f5f0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dd3816b7-ee1d-4873-9e5b-cd4013af4887"
        },
        "item": {
          "id": "b2e34eee-c15c-4d76-ba28-aa1f51d90a51",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f971db21-3fd1-4568-93f2-90ed0ccbafad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f576a8a-b2dc-45f8-a716-401c292542e6",
        "cursor": {
          "ref": "cb1de5be-3412-4354-8a52-7b1b09fa7827",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b66b07b8-d477-4239-87e8-513f7034cbd7"
        },
        "item": {
          "id": "3f576a8a-b2dc-45f8-a716-401c292542e6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db7a9ba1-6a66-47f6-b737-e7b93b34fc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e1e12a-5f45-4c20-b481-8df2a9ac9054",
        "cursor": {
          "ref": "c6e1ef1c-e7c7-48b9-ae04-517d667d345c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e67dc5fd-be3c-447b-9b2c-fa64c8ed08fb"
        },
        "item": {
          "id": "23e1e12a-5f45-4c20-b481-8df2a9ac9054",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c88dc70d-4d80-4a00-96fa-84abb2debc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5a9259-39fb-4b06-81e7-b36565dcf8fc",
        "cursor": {
          "ref": "e22e3cdb-61b3-4968-8cbc-251a30addeac",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f25d87e0-54fb-44a3-9d16-ab92b87f4171"
        },
        "item": {
          "id": "3f5a9259-39fb-4b06-81e7-b36565dcf8fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa62e069-dd10-455d-9e3e-d82b870273b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ea499-f40d-4497-91bc-01c365c90329",
        "cursor": {
          "ref": "ea3bce76-7220-4141-b0a6-4ca0d7318038",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e138c672-ce7c-472b-b2de-d839aaf1e305"
        },
        "item": {
          "id": "6e6ea499-f40d-4497-91bc-01c365c90329",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b1fe5d99-14c3-408e-a642-2abf5800ddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9203de-3d0e-4499-8b3d-950a156ecb0a",
        "cursor": {
          "ref": "be06eb32-b368-46fd-aa7c-22dd7eb58096",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6fecc8c2-90a6-4692-9389-dc1d67b41238"
        },
        "item": {
          "id": "fc9203de-3d0e-4499-8b3d-950a156ecb0a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b133cae3-3cb2-4155-9c8d-436af0497b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412704b6-317b-48f9-8af1-a08481b9b28d",
        "cursor": {
          "ref": "e7248943-6a50-4b8a-b876-227d30511563",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "58944bf6-686a-40b7-aae1-ac9beba05aa0"
        },
        "item": {
          "id": "412704b6-317b-48f9-8af1-a08481b9b28d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a42256a8-b680-4565-95a7-8fea26d72d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5c11ed-10dd-4c70-bd30-a79ebae71bb6",
        "cursor": {
          "ref": "2903365a-cb2e-4d5f-9ab7-2389a7a326f8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "723704b6-aa91-4729-b177-eaecc8bf4a37"
        },
        "item": {
          "id": "ae5c11ed-10dd-4c70-bd30-a79ebae71bb6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b552c90b-1f1c-4752-a3c8-3468fda58625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189ab7aa-3efc-4a98-85c6-c2b1419f9629",
        "cursor": {
          "ref": "406648df-8e3e-4e67-8217-a690b022f9af",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f6e3b24c-ef5d-4ce1-82e8-39e64af21dd7"
        },
        "item": {
          "id": "189ab7aa-3efc-4a98-85c6-c2b1419f9629",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "07f7ada3-dd79-420b-ae85-208d2ee8abb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678cdcdb-88b0-4f18-a288-ba2408313c8e",
        "cursor": {
          "ref": "39ec5d1c-df40-4817-815a-c9d90b0908f1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5e14e746-9ddf-4976-932f-b150a7a9fc0d"
        },
        "item": {
          "id": "678cdcdb-88b0-4f18-a288-ba2408313c8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dc30bbf0-035d-4290-a947-d1e70d7b8c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e4778e-c2de-478e-9667-04ddc88ba091",
        "cursor": {
          "ref": "1e325b23-3e11-48c1-8cb6-e1b4d121405d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5ee11220-0774-4f08-94c2-5af392aa2c8a"
        },
        "item": {
          "id": "12e4778e-c2de-478e-9667-04ddc88ba091",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2b2dff32-e8f9-45ee-a64d-8b36506c70df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f6d0c-9e91-4ebd-8451-4d4007d0162b",
        "cursor": {
          "ref": "08bc2d7a-2a2b-4a8d-873e-3c31a901e6ff",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5387ff98-d7b7-4300-abb6-415e2844092d"
        },
        "item": {
          "id": "2a6f6d0c-9e91-4ebd-8451-4d4007d0162b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "99b1e83c-2b43-4521-9c42-8fb29ba4fca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cbda68-c257-40d0-b8be-3055b73734c0",
        "cursor": {
          "ref": "8cd65900-5193-4c6b-8579-ec6860fd782f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d4259974-e2d5-4646-b23d-85c9fb85ba40"
        },
        "item": {
          "id": "16cbda68-c257-40d0-b8be-3055b73734c0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f08bc519-45ed-4612-a0e7-d247abe0531b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb2bbc2-2e41-45e8-974f-b7ab91b6cfe6",
        "cursor": {
          "ref": "62f3ac6a-1ec2-4a67-a3e5-fb4be34599d0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4ea83188-8b76-4e85-8f91-cbce7ac94fed"
        },
        "item": {
          "id": "efb2bbc2-2e41-45e8-974f-b7ab91b6cfe6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9b97a4a9-b72e-4a93-91ae-61e2a0c253f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027f059e-f554-4d70-8619-2d08e080790a",
        "cursor": {
          "ref": "6a0b6ae0-9538-4ca0-b14c-d07ee133e79a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "710e95ee-e0ce-465d-8647-fd760d331288"
        },
        "item": {
          "id": "027f059e-f554-4d70-8619-2d08e080790a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2085cf52-7064-441e-9e5b-ba4f4444bb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273b3170-888e-4887-b53c-edc08adcad4b",
        "cursor": {
          "ref": "9183e7b4-f808-4539-a5ed-7823ee12d631",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f25819d5-f151-4d72-8b5d-8060b5a39175"
        },
        "item": {
          "id": "273b3170-888e-4887-b53c-edc08adcad4b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7cce3516-eb49-4caf-a089-842638e9f2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e30240b-7391-4829-8074-9b06534a009c",
        "cursor": {
          "ref": "73d7c942-9d17-4bbb-953a-a5af168e8a66",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c2721843-efec-4cf1-9eb3-e58964d2abdd"
        },
        "item": {
          "id": "6e30240b-7391-4829-8074-9b06534a009c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b77330ab-4bba-46ed-915f-dbd75428fdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8cbdcc-f219-43ec-9ee2-333fb9b683da",
        "cursor": {
          "ref": "e2bfde25-2c42-4402-bd51-cef38c98074f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a4db9466-1af8-4100-be23-6666672ea083"
        },
        "item": {
          "id": "2b8cbdcc-f219-43ec-9ee2-333fb9b683da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "17b9d65c-b116-45f2-aac7-f206a051160e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510ec152-f631-47b6-a20b-974dcbc8d3a1",
        "cursor": {
          "ref": "e1eacbb0-f477-4b8c-b21d-34dec7bd78a2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "999e5b8d-b271-4fcc-9c6a-469591d63520"
        },
        "item": {
          "id": "510ec152-f631-47b6-a20b-974dcbc8d3a1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fe1ef84d-212a-4743-baf0-e35934dfe04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5262529d-b583-43d8-a8a1-ec639de1ea6b",
        "cursor": {
          "ref": "a6ac3b99-500a-4b52-aba0-69e714f0d043",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8f28a8e4-ac16-41dc-b7a1-c79a78cd5211"
        },
        "item": {
          "id": "5262529d-b583-43d8-a8a1-ec639de1ea6b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b5d6bb81-28a4-4eab-87f4-1d6a4201cd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0628f13a-4f87-4f76-893f-be539f96ca46",
        "cursor": {
          "ref": "c99aa746-d4d5-496e-ab31-6a74f603ffff",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "868bbadc-94ac-4cd1-bbcd-beadf04235c6"
        },
        "item": {
          "id": "0628f13a-4f87-4f76-893f-be539f96ca46",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0f0eba2c-cf98-4870-9688-21fdacb756a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec00138-cbfa-4c1f-bea9-d40a8b2e9131",
        "cursor": {
          "ref": "84530cc4-df0d-4a84-b8c7-66c3dd435c45",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7639d773-8623-4f37-b5ea-4f8c981acf7a"
        },
        "item": {
          "id": "dec00138-cbfa-4c1f-bea9-d40a8b2e9131",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9de98cdd-adf5-4903-b7c3-9dcb7c32fd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e00786-47fd-418c-a4ca-b52ec5c56888",
        "cursor": {
          "ref": "4d683f07-edb5-4ff7-b590-b46818abb153",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "857e64a1-c5b1-498b-8ce7-c5cb79d6d47c"
        },
        "item": {
          "id": "c2e00786-47fd-418c-a4ca-b52ec5c56888",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "45ae7587-514d-4e48-a0f8-f49b858cc690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e4fcba-94d0-4b49-862a-2c0ccb0714d0",
        "cursor": {
          "ref": "6709d5b4-9140-4c0a-a4b0-6c83a291c925",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6fcc4664-e2be-4c76-aa2d-c4e5c973e7b2"
        },
        "item": {
          "id": "40e4fcba-94d0-4b49-862a-2c0ccb0714d0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c52ca9cb-47f0-42ca-882b-9417c3c75ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5542b1-2068-4303-9a58-08c625f8f884",
        "cursor": {
          "ref": "f7d4b8c9-3e19-4beb-aef7-d59464242879",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1db4b42f-5470-4ab5-b012-49bb493cbe43"
        },
        "item": {
          "id": "2b5542b1-2068-4303-9a58-08c625f8f884",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cae1fe5c-bfae-4b5a-b570-551fa74a3ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2e5b60-26f3-4208-9cb6-f4206d83cdd1",
        "cursor": {
          "ref": "187a4540-f86f-4c47-8a09-5e8eb18822d1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "de0abe41-dc0b-49e7-bb18-c42a44656822"
        },
        "item": {
          "id": "dc2e5b60-26f3-4208-9cb6-f4206d83cdd1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "81e2d1a9-ac77-4e8d-871e-b2fe983fd5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f530a4-5f20-4d24-9763-56fc62c4bc80",
        "cursor": {
          "ref": "5190b18e-7fd8-4bd1-bc92-faec2a9ed8ef",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7a762d92-a3c0-422a-82e5-37bcd3d674f8"
        },
        "item": {
          "id": "81f530a4-5f20-4d24-9763-56fc62c4bc80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d2990acd-1611-48c1-ad09-f1c4a0673937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313064d8-2bc9-4d34-a1ed-14e40db7afa7",
        "cursor": {
          "ref": "78d77a3e-2ac3-4c13-a6bd-de12b5fe362d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a63f0966-33f7-4b7d-8c94-37093207c131"
        },
        "item": {
          "id": "313064d8-2bc9-4d34-a1ed-14e40db7afa7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4fb7f9dc-1703-437c-8bb3-438f5f0dc901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688dd68f-4ff8-4aa4-be70-b3a4b744befc",
        "cursor": {
          "ref": "63f2a6f0-8081-4c04-b740-d896233704c8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e58cf13b-40b7-4e6e-a750-f4f4bd6e9dff"
        },
        "item": {
          "id": "688dd68f-4ff8-4aa4-be70-b3a4b744befc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9404620e-cc63-4189-917b-bfe7f002ff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be570c1-c995-41e5-a2ea-8593ba278870",
        "cursor": {
          "ref": "b3f826de-77c4-41e0-b8d4-9773fd90ae54",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2fcbc35b-1f1f-4cc3-9a10-dbc736548319"
        },
        "item": {
          "id": "6be570c1-c995-41e5-a2ea-8593ba278870",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c7059f9-c464-4c29-a572-4b503ca54560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7e29c5-a293-4782-b795-ae445315c611",
        "cursor": {
          "ref": "d877c514-4763-4386-93b9-ae28dde88857",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "010e63dc-66d7-4147-9bee-7dc6fb32c1cb"
        },
        "item": {
          "id": "8a7e29c5-a293-4782-b795-ae445315c611",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8c8a33e-5112-4ac7-afb5-dc5c83ff6c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae2c287-b2d4-4e38-ae29-75e7a69adcdf",
        "cursor": {
          "ref": "9e056c8b-f854-4b71-9a26-29a13f6742eb",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7bef2107-9f17-4a2a-97bd-d6ece5f287b8"
        },
        "item": {
          "id": "cae2c287-b2d4-4e38-ae29-75e7a69adcdf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8feadd04-64b8-427d-a147-1faba48bdb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd10a3c-b5a9-4774-94d1-c0212c43b85e",
        "cursor": {
          "ref": "5f6eabbc-f538-44a2-9cdd-87827c263cb3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "145f6589-2d99-440f-adfc-53429fea53c9"
        },
        "item": {
          "id": "cdd10a3c-b5a9-4774-94d1-c0212c43b85e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c298eeb5-7376-4235-812e-98ee78ba7a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2abf92-4e1e-415d-8337-f613ca56b0f1",
        "cursor": {
          "ref": "faae598a-b6bc-47c2-89eb-bb4b8be1b395",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f66a79bf-75ba-48e8-9ccc-26a335484c5f"
        },
        "item": {
          "id": "cb2abf92-4e1e-415d-8337-f613ca56b0f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "badbfc86-a796-469d-867d-5185ef23a863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5600491-28ba-4d59-8d8a-3d196740a777",
        "cursor": {
          "ref": "9eeba7ee-7a95-4180-93e3-9795257aaf2e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9055a558-8e77-4f4d-a0d9-e2e44fc99556"
        },
        "item": {
          "id": "d5600491-28ba-4d59-8d8a-3d196740a777",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc87125e-cb95-4968-b669-2ad2a57e806f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6435c43-a047-4e10-922b-2763460a64cc",
        "cursor": {
          "ref": "55702600-2495-4c01-a474-994518881cd1",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1e905246-601c-488e-97c8-cf7df4a4ca2f"
        },
        "item": {
          "id": "b6435c43-a047-4e10-922b-2763460a64cc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e1515cf3-aea5-4418-ace6-c3f77cb3b4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f605d41b-b78e-4f9b-a756-f95297fbb2fe",
        "cursor": {
          "ref": "b729f1e1-40e6-47b5-9afc-343d03bce74b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e7d1454d-12c1-4079-bcd1-9fb442fbef71"
        },
        "item": {
          "id": "f605d41b-b78e-4f9b-a756-f95297fbb2fe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2e646107-da72-40da-a261-a13a519e1d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f67566a-c819-4cb0-bd9d-79192be0b5d5",
        "cursor": {
          "ref": "7d574150-78f6-4c2a-aa35-a2658807437e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "90d59315-4087-4648-aefb-013fdb15cad1"
        },
        "item": {
          "id": "1f67566a-c819-4cb0-bd9d-79192be0b5d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40344df6-c895-4c17-9867-6e46491a77db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ae072e-285e-4483-bb58-e98178019c0a",
        "cursor": {
          "ref": "80f7ca6f-4067-40bb-a572-b3ce70d88e59",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cb48568c-6cd7-44ca-951d-4f122b3f9d4c"
        },
        "item": {
          "id": "97ae072e-285e-4483-bb58-e98178019c0a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0f802b4-fe7f-4354-8a87-34f686c6a0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139c0961-2683-497f-9061-5cd24f4ae2ff",
        "cursor": {
          "ref": "bb319bff-aac9-46c9-a634-559aaad2385b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6637df73-6397-4ebd-8bd4-4547d6e81f13"
        },
        "item": {
          "id": "139c0961-2683-497f-9061-5cd24f4ae2ff",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "013c4ab1-69e6-4df4-a8b4-c7397e0f3c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57641d04-9712-4701-b2d9-40f3412a7efe",
        "cursor": {
          "ref": "edd6f9a4-1966-4d59-8fa4-88279222e4ed",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aa267efa-b70a-423a-af17-8d9f45da82e7"
        },
        "item": {
          "id": "57641d04-9712-4701-b2d9-40f3412a7efe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9751c043-2112-48b3-a342-fddb42bd3623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d24d0c-715e-4115-ac1b-b025496ef20d",
        "cursor": {
          "ref": "178d3fa0-98c3-4bdd-9164-cfa6dee5ab97",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2d18c9de-cada-41f6-a371-6e981d8ef735"
        },
        "item": {
          "id": "37d24d0c-715e-4115-ac1b-b025496ef20d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cdbab09e-b10b-4e52-a25a-9b5488633948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbc83c9-a967-4d13-88a8-f8ab0fa5078c",
        "cursor": {
          "ref": "4d28d71d-dbbe-4b2d-b762-b02d7ee641e5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5b357f00-0025-4792-8128-609212bafa84"
        },
        "item": {
          "id": "9dbc83c9-a967-4d13-88a8-f8ab0fa5078c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2614bc0e-9ff2-4668-9ac8-e267503bba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6965f9b1-8391-4107-924c-8d7459d71f45",
        "cursor": {
          "ref": "d3908a33-9ae8-4099-a053-f56ae46e139c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "eb145cac-1bb8-478c-834d-67f2989e9858"
        },
        "item": {
          "id": "6965f9b1-8391-4107-924c-8d7459d71f45",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f99dcf0e-b463-499c-a8dd-cfc853e7640f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe79f16-d0fb-4dfd-9765-b2039a8f9b9e",
        "cursor": {
          "ref": "eaafe9e5-ce1c-437a-9d3f-c227e47cda56",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7bb73086-5b53-409a-823f-81a9cc7a4c72"
        },
        "item": {
          "id": "6fe79f16-d0fb-4dfd-9765-b2039a8f9b9e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6d97fa6a-f21c-4c23-8df5-641d67f33fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6378f54-2b6e-4048-ab8f-48062a30d229",
        "cursor": {
          "ref": "60298cd1-6c26-4261-8629-9d8278466c16",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4e20fa5d-d4df-4d86-88d7-bfed5f0fd86f"
        },
        "item": {
          "id": "f6378f54-2b6e-4048-ab8f-48062a30d229",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b4372cc3-bd0f-4ebf-aa61-b8aaf67a4145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dae9b5-50a4-49f9-99fc-011c6d996640",
        "cursor": {
          "ref": "e02616ec-2d34-4a23-b60f-f765b007ba6d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fe0a8466-3425-430d-a930-88cfd3083974"
        },
        "item": {
          "id": "64dae9b5-50a4-49f9-99fc-011c6d996640",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ecdd3f0c-7720-40a0-a39c-64128d19572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1bcf41-623c-4627-82c1-f2198f556860",
        "cursor": {
          "ref": "9bdf64f6-d51a-4324-a54f-e8d4db5f1aba",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0e621e47-f210-44ff-aa66-06c1b2cb8439"
        },
        "item": {
          "id": "1d1bcf41-623c-4627-82c1-f2198f556860",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4e0e4e5b-cd9c-44dc-95f7-3f275399ea98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b5ab18-b6a2-4a74-a6a3-3966f2f9c84b",
        "cursor": {
          "ref": "dff5afaa-201f-42dd-b75a-80528e9f1556",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b01cf982-a5a3-4d26-926b-ef1fbe9e51f6"
        },
        "item": {
          "id": "a5b5ab18-b6a2-4a74-a6a3-3966f2f9c84b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "047eb246-748d-4f39-9f4c-f3bbad79a4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a946667-2a79-44d4-9ab9-9ffa479830f5",
        "cursor": {
          "ref": "46265f53-ab23-4dc9-b074-8d6d6212ff7a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba365c3a-66d4-4b59-a1f9-9ecaa2878ee7"
        },
        "item": {
          "id": "0a946667-2a79-44d4-9ab9-9ffa479830f5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fd42a74e-ef35-40ab-8bf9-fcb4d3fa9b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc66599-fcf0-4169-b3b1-ae585681579f",
        "cursor": {
          "ref": "01f082a3-d9e8-4abf-a29d-20bb82ffe272",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "046a844a-17f1-44e1-b732-01fcf7148ebb"
        },
        "item": {
          "id": "bdc66599-fcf0-4169-b3b1-ae585681579f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "50132e9b-6f25-440a-b646-a0b7597c443c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc39e19f-f8c1-47b8-82f0-207dd4a610be",
        "cursor": {
          "ref": "adc9e574-b761-4353-891b-70588c41187a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99510a79-eb79-44c7-bf93-02a163e32678"
        },
        "item": {
          "id": "cc39e19f-f8c1-47b8-82f0-207dd4a610be",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fd2c9502-046a-480a-bb31-cea35003e489",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ab02bd-21c5-4a2e-9ebe-29add11c0bb1",
        "cursor": {
          "ref": "a9daf53c-8575-4020-865a-41c3a26711c5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "059638cf-3736-4782-8c48-a9d75b9b1a0e"
        },
        "item": {
          "id": "44ab02bd-21c5-4a2e-9ebe-29add11c0bb1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e6013ab4-e15e-4545-8c85-afba4aa16c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12aee5c1-6fbe-48b6-8b39-bc543fc8227a",
        "cursor": {
          "ref": "ededb5ea-ddac-4a0f-989c-32ccf98bdeac",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0d4078f5-b3ea-4227-8c5c-4d667a776af2"
        },
        "item": {
          "id": "12aee5c1-6fbe-48b6-8b39-bc543fc8227a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5c077c6e-d071-4358-a7bc-f3c4cd52a825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bcead0-cef0-4710-9b86-603303053a7b",
        "cursor": {
          "ref": "a3a2ef9b-24af-45d6-9909-c8f1c4f21706",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "af2b345a-6855-4ab8-bcb2-026b5a7e8a04"
        },
        "item": {
          "id": "48bcead0-cef0-4710-9b86-603303053a7b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a8431b1e-6139-4e04-abda-ad85a69b5b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a55917b-e406-4386-ad9c-6474145bc64a",
        "cursor": {
          "ref": "e0f66242-afd4-46be-adbd-8a5a28758213",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "32e45edc-15c5-42dd-be33-83168feebbb1"
        },
        "item": {
          "id": "5a55917b-e406-4386-ad9c-6474145bc64a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "defd9b80-fa9a-4823-9f5c-bee4dd3acbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4a1a2e-bc25-4745-9b98-384c3ac0826a",
        "cursor": {
          "ref": "fc202215-dae1-49a1-9160-b824d34ed128",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c1a52a07-6b8d-4845-ba07-bd76ddc14c9a"
        },
        "item": {
          "id": "ac4a1a2e-bc25-4745-9b98-384c3ac0826a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "21f3b5df-f774-455f-a4f1-63aa69778a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f8285a-7655-46d4-b969-bd1707553048",
        "cursor": {
          "ref": "57fcc628-07a0-4ffb-9469-9b8ca3dd11b9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "226ac902-d30e-43ce-92f3-50aa2844a93f"
        },
        "item": {
          "id": "29f8285a-7655-46d4-b969-bd1707553048",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8efed6e7-1c50-4740-889f-c5dab4510506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72eb591-00c3-4ad6-8d58-c7ace3fd40c6",
        "cursor": {
          "ref": "c56cf372-eb14-4207-b871-d6e2d18d0c5c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "749b75b3-5398-4e71-a9b9-3518f56ab3f6"
        },
        "item": {
          "id": "e72eb591-00c3-4ad6-8d58-c7ace3fd40c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0256c75c-76ae-4790-b3c8-4a99f0850aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acf110d-1dbc-484c-b487-0cb9db7fbbd5",
        "cursor": {
          "ref": "8c9d51ce-1124-4a29-8cac-205a64de3f3b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d1d3b85f-65cb-4b1b-ad40-a5cd42abebcd"
        },
        "item": {
          "id": "6acf110d-1dbc-484c-b487-0cb9db7fbbd5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "17694493-3887-474b-8c85-5b9d73e9e8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40d1a9-987b-4947-9edf-346d6e78959a",
        "cursor": {
          "ref": "85548a7d-a719-48d5-8f08-73d72607ebe4",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2eff1f2d-20b9-40e5-8131-4a55e6960169"
        },
        "item": {
          "id": "2a40d1a9-987b-4947-9edf-346d6e78959a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "da171ad9-4c05-4838-8e20-f52bfeee455a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a6a991-516c-4eca-820a-b41e1e74eeed",
        "cursor": {
          "ref": "7585db23-9adf-45e5-8a09-008e2eedfad8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "67b2d4cd-75cb-42d7-b258-4de52d565aa7"
        },
        "item": {
          "id": "c7a6a991-516c-4eca-820a-b41e1e74eeed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ff1c4d30-ddff-4422-be29-a451842dedf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dade0a9e-585e-4549-9664-a2ea6d2c522a",
        "cursor": {
          "ref": "273e5d0e-c931-4ffa-b37a-bfbbf86b2cf9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "082a7232-663d-4883-90bb-7a569030075d"
        },
        "item": {
          "id": "dade0a9e-585e-4549-9664-a2ea6d2c522a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "790b9398-46a5-49c3-84e9-8d23f16a253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71bac04-931d-40d9-8d35-061e9c648b08",
        "cursor": {
          "ref": "5823c005-59c9-4474-a846-f53d140ceeb8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c0203deb-673a-41b7-9b7b-f73478797855"
        },
        "item": {
          "id": "b71bac04-931d-40d9-8d35-061e9c648b08",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5a0ade5a-b07b-47be-b783-245966209b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51eac04-7eba-457d-b41a-cb6c9f9733f4",
        "cursor": {
          "ref": "00ed7648-2378-4bfb-9deb-076a87a3597d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9822f6d7-57c2-4898-8835-f6ec5d671751"
        },
        "item": {
          "id": "f51eac04-7eba-457d-b41a-cb6c9f9733f4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "585c6ab2-8e0e-47bc-ae14-813c8262aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5d6d7f-9345-40eb-8f6e-955ca2abbc2b",
        "cursor": {
          "ref": "643f5bd2-7efc-40fc-a5d9-12495f88593f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fd87c71d-da8e-416a-90bd-5a48ea6ae767"
        },
        "item": {
          "id": "8e5d6d7f-9345-40eb-8f6e-955ca2abbc2b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "811b9450-e148-49da-8baf-a0959f5165be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda0735c-f4b2-4a01-8a60-621313b19ef5",
        "cursor": {
          "ref": "b4adfe58-f0c5-4357-a0d0-05c397a46b7d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3cfaf00e-19c3-4d50-af9d-98d823721168"
        },
        "item": {
          "id": "dda0735c-f4b2-4a01-8a60-621313b19ef5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5168ff94-1d02-416e-80e5-56980c5966f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d313a77-de3e-41a8-9304-323928d89cc5",
        "cursor": {
          "ref": "b99f81e7-86a8-4e9c-8688-308b0778e04f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9124d31a-0954-4059-a283-1b9462c17365"
        },
        "item": {
          "id": "3d313a77-de3e-41a8-9304-323928d89cc5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e1ae0a43-46c4-4806-bf08-0f5d5b8ceca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc7b505-941e-422f-be20-8611685115bb",
        "cursor": {
          "ref": "e6a90a77-07da-496b-a7ad-424d34abf466",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8f05d8ca-97ba-4ce1-aa09-2726813d3a28"
        },
        "item": {
          "id": "0dc7b505-941e-422f-be20-8611685115bb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e42ca37d-fa35-4c87-a258-c3fda562698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98aff7c0-be33-44d7-81b2-2da9bd3644e4",
        "cursor": {
          "ref": "bdc29e6a-df96-434e-aba1-738911e3a931",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2e6ee460-04c6-494b-b608-7f6d3a9319e5"
        },
        "item": {
          "id": "98aff7c0-be33-44d7-81b2-2da9bd3644e4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "619c56b3-0026-4814-9f65-64cbdc14b0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff351a82-77d6-45fd-962a-3ac6a32ef4cf",
        "cursor": {
          "ref": "3c3cba2d-cf5a-4c82-959f-0a59bce17e0f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "165d2e84-7ede-4293-869d-3b7eda492645"
        },
        "item": {
          "id": "ff351a82-77d6-45fd-962a-3ac6a32ef4cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "81b1d601-fd91-4ddc-a5c9-cb715d0f918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944fa49f-7ed8-4924-8007-960d94b59eba",
        "cursor": {
          "ref": "7eb3226c-64f8-4ad5-a0f9-c2b73d741c3c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2d104fc4-ffa7-4ea7-8118-0b12acd60687"
        },
        "item": {
          "id": "944fa49f-7ed8-4924-8007-960d94b59eba",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "091ef4f8-334c-4645-a4ed-7197552aa86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662465c3-fc86-4a4e-a1c7-f5351e3c001f",
        "cursor": {
          "ref": "1de629ed-ba51-4fa6-9025-8c22da2cbbef",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cb6d88c2-4a63-4239-b355-d266d94c43d4"
        },
        "item": {
          "id": "662465c3-fc86-4a4e-a1c7-f5351e3c001f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d96b6a43-d7e2-457a-822a-79d9d54fdb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f737e9a-405a-4e0a-8227-c3f9a7e960df",
        "cursor": {
          "ref": "9b6713c7-9611-45ca-985b-0da5696d4a5d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "20789dde-f4e9-4864-aaf8-af1f52d160c1"
        },
        "item": {
          "id": "7f737e9a-405a-4e0a-8227-c3f9a7e960df",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a66fc0d2-0880-456e-9ef2-1db4a8656960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460afac9-aa3f-4b76-aa5c-46ce2777c143",
        "cursor": {
          "ref": "eec89edb-91cc-4040-814b-7e608edfbffd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7f8a5a67-ae34-4769-bd44-98ec128a9930"
        },
        "item": {
          "id": "460afac9-aa3f-4b76-aa5c-46ce2777c143",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2bb8ac06-aadc-4f06-9181-41943a2bbdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4bcf6a-6831-4413-92ec-27e67782b324",
        "cursor": {
          "ref": "035ac9cf-845b-40e0-a76b-274c78f1d372",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4ffe1619-ae77-46d7-81ff-7045b3237939"
        },
        "item": {
          "id": "8c4bcf6a-6831-4413-92ec-27e67782b324",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c70ecc3f-3ce9-411a-b024-f5ec47a7f5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21b8dec-c121-4cf0-8e87-5d09a6358325",
        "cursor": {
          "ref": "f2fef619-807e-41fd-9dc4-175ba295d05a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "19c87fff-54c5-46b9-b312-b4b66914f592"
        },
        "item": {
          "id": "a21b8dec-c121-4cf0-8e87-5d09a6358325",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d224fb62-bd82-41f4-aaba-eccc62ada6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69854fd-474c-4754-81e1-ac902ec4198a",
        "cursor": {
          "ref": "cca0e493-3221-4fc1-93a9-c3ddc361dca6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1d733e11-2df2-47a7-bbfd-73c4aa777f59"
        },
        "item": {
          "id": "b69854fd-474c-4754-81e1-ac902ec4198a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ffb1ded-cd36-4c0c-a9e3-300a6f1a8016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058ed553-fab9-45bb-a3a2-c5786b863d72",
        "cursor": {
          "ref": "a308de10-c354-4452-a07d-f20471a8134b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a28ca175-ddb9-4101-8de5-a60294ad9a35"
        },
        "item": {
          "id": "058ed553-fab9-45bb-a3a2-c5786b863d72",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "877dc1e5-511a-480b-a2fa-028136a7d816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ec17fd-35fe-462d-b58c-1afd016f0297",
        "cursor": {
          "ref": "926484cf-4b61-4720-86b7-d86c338f57f0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b9cb03fd-dbd0-4342-a330-f3e6d6e3ddd8"
        },
        "item": {
          "id": "08ec17fd-35fe-462d-b58c-1afd016f0297",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "364f52cd-1bf1-4242-bdf0-511bcfb7cb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7d45fc-e6b1-423e-bc85-fe2c5884f6ed",
        "cursor": {
          "ref": "c6496737-c411-4b38-a5ac-9bfd7050a591",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d82e64c7-cefc-450d-9b43-f84fc0b1e715"
        },
        "item": {
          "id": "9a7d45fc-e6b1-423e-bc85-fe2c5884f6ed",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a6657ae0-a62c-4b6a-9d08-632f8d461b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039abf64-f83d-47ea-b471-1226a42121b3",
        "cursor": {
          "ref": "bbf3eb9d-4a16-492e-be2f-a832d1ba8295",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "69783e2d-5a76-4f91-849b-bab0aae41ce9"
        },
        "item": {
          "id": "039abf64-f83d-47ea-b471-1226a42121b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "92671839-7e05-4f25-9af6-80bacdfd7786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe75323-d0e2-4ca4-91cd-d8d246a0ddc3",
        "cursor": {
          "ref": "d4f795d4-c730-4dd5-8712-91d9003cde9f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0502e6ae-1168-4a3a-959d-5fc7525ea582"
        },
        "item": {
          "id": "1fe75323-d0e2-4ca4-91cd-d8d246a0ddc3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "af710b20-44fe-40fe-944e-4a456e310d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d187211-7c34-4a66-91f4-c6c5d5eb23f1",
        "cursor": {
          "ref": "8943197b-74eb-46b4-aa0e-4e83fcd487c4",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1ad94953-e165-4086-8407-93b11a7a2137"
        },
        "item": {
          "id": "9d187211-7c34-4a66-91f4-c6c5d5eb23f1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "42d320f7-8110-4eef-ab46-3d8c636fb3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e37360-554c-4c2d-848a-1cead0accc77",
        "cursor": {
          "ref": "16189d5a-9811-4b3c-85ae-f4233af6662e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f2d01969-54dc-4189-95d6-651f2af5f3dd"
        },
        "item": {
          "id": "62e37360-554c-4c2d-848a-1cead0accc77",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2a94f22e-b36b-47a0-87c5-450a0a7a660e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55660c09-3f5e-4a0d-8c99-2cd33a48c66e",
        "cursor": {
          "ref": "965d2439-095b-4118-9a4f-6d4cde4f085b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fa74bab8-5dc3-46d0-8a14-7676b4779bf6"
        },
        "item": {
          "id": "55660c09-3f5e-4a0d-8c99-2cd33a48c66e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8b6f5167-2736-4549-96ef-28f491050326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b938f1a-f393-4abc-8baa-c42a774e0643",
        "cursor": {
          "ref": "95ee514c-7582-4354-a577-bf00bba58431",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d701b872-7e1e-4c55-8cb3-1ab5026fe183"
        },
        "item": {
          "id": "8b938f1a-f393-4abc-8baa-c42a774e0643",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ac87fa75-814a-49e1-a77e-3fbfc5a229da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d6c46d-a3ea-43be-b892-aadd806bd8e2",
        "cursor": {
          "ref": "cef69c1e-92c6-4e4b-b9b6-5de3db9b2a46",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c8f89b2e-64a9-43c8-b4aa-a49439a2d9a6"
        },
        "item": {
          "id": "36d6c46d-a3ea-43be-b892-aadd806bd8e2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "426c585d-a461-4f19-a0ac-47095e0f7970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b044836d-b4f6-4019-bd00-37cc816e9d33",
        "cursor": {
          "ref": "a05eb283-b0d6-496d-85b4-f2125d70bdc6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f315e4b1-52b4-4202-91a9-014b6323382d"
        },
        "item": {
          "id": "b044836d-b4f6-4019-bd00-37cc816e9d33",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a00ba339-4b14-422b-8505-6d6a9fe373c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b36fe4-e047-43e8-bccf-eafa13243539",
        "cursor": {
          "ref": "a33dcad0-a3c7-4df4-a9c0-4d917e9c7f31",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8d6a47d4-fc8e-4773-a412-4ad98592c657"
        },
        "item": {
          "id": "73b36fe4-e047-43e8-bccf-eafa13243539",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9e12f597-4650-4437-b10a-caeddf472b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d55879d-5f26-4d39-a4c9-b5a318911063",
        "cursor": {
          "ref": "2f09ee30-bbbd-467e-8f07-01c00a803dfd",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f089feb2-fe89-4a2a-bcb1-5c132f8cfce1"
        },
        "item": {
          "id": "1d55879d-5f26-4d39-a4c9-b5a318911063",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "af452c2f-e39c-4de0-8fce-ba790e27e555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdf7c62-6581-4069-abc1-6372148ad7b7",
        "cursor": {
          "ref": "45c485fa-44b7-4390-811c-614b21c96d4f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cf225bfe-8390-4536-a4bf-67f67543dbc4"
        },
        "item": {
          "id": "ccdf7c62-6581-4069-abc1-6372148ad7b7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b5eb6203-3199-4c39-9483-a5363efbdd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1e2cff-d32f-4bff-97c0-d6254cb86544",
        "cursor": {
          "ref": "a9ed699d-4a8c-442d-9a39-e137206ecf25",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "10acbc28-a6ef-40dc-8c37-4253e5c9d0b3"
        },
        "item": {
          "id": "ab1e2cff-d32f-4bff-97c0-d6254cb86544",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a0cf0bb5-bd52-4691-aad6-492c54747c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d468cde0-b739-4860-8f3f-5f207f497f42",
        "cursor": {
          "ref": "48399ba6-8eb3-44aa-948e-f224d73106c0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f66dfb8b-8188-407f-a590-e6aea0a74ebf"
        },
        "item": {
          "id": "d468cde0-b739-4860-8f3f-5f207f497f42",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ab6bc2fd-f6b7-4e8a-af3b-7443e0e91a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37db3b25-c19d-4630-b4b9-e46fe311f8fc",
        "cursor": {
          "ref": "c04d4b0b-ea1e-4f42-b318-a762f9466fce",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5e9af49d-3201-4e8c-848e-c64686fc26ce"
        },
        "item": {
          "id": "37db3b25-c19d-4630-b4b9-e46fe311f8fc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b96b1bc4-50ee-4014-b2ca-2874b6cb108a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1fe059-e901-415b-af0c-a2199edcae0f",
        "cursor": {
          "ref": "6b32948f-0276-419f-8e53-bcf5173a7e1a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4fe587a2-d4c7-495e-a701-fc5796952962"
        },
        "item": {
          "id": "6c1fe059-e901-415b-af0c-a2199edcae0f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e21dc0b9-64db-4084-9db2-76b63ed11b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba85c7a3-5d72-4654-b52b-36d9989d62fc",
        "cursor": {
          "ref": "e70766c8-3ac4-49dd-b0a6-69da7c262913",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "05eeeb52-67ae-47a2-9922-4e6e379f3731"
        },
        "item": {
          "id": "ba85c7a3-5d72-4654-b52b-36d9989d62fc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8c58b164-6264-4461-8dc0-327dd4153e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c80da2f-feef-4071-94b5-412618ce4f25",
        "cursor": {
          "ref": "90f0543f-3afc-4833-89af-2d710436f71b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c210ab54-ea73-41d6-833e-6caad7e41157"
        },
        "item": {
          "id": "5c80da2f-feef-4071-94b5-412618ce4f25",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8d0789e3-13f7-428e-ae8c-f348f0a1786c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1ca053-4a1b-4e33-aa31-a22a0427584e",
        "cursor": {
          "ref": "3fe1f6c1-aa01-46c2-ad50-78ef1548db2d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e8462e5c-a0f5-48a8-af0b-a36327f79dbe"
        },
        "item": {
          "id": "6c1ca053-4a1b-4e33-aa31-a22a0427584e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c0c20d15-ea89-46c0-a09e-c912c7ad2b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cb69ae-0e41-4125-9a5f-c62cac1369ed",
        "cursor": {
          "ref": "32ef7599-68a0-470d-93bd-2714d85385f3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5de32f96-b868-4933-ae30-99d43118b982"
        },
        "item": {
          "id": "d9cb69ae-0e41-4125-9a5f-c62cac1369ed",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "543c0935-43bf-44e1-818d-be3e99684b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83704f23-6f90-4d5b-9085-c6c9655c83d4",
        "cursor": {
          "ref": "ddcbe2d3-a05c-4375-bd94-a3022673baed",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c6492cd9-b440-434e-b76f-699353fc62c8"
        },
        "item": {
          "id": "83704f23-6f90-4d5b-9085-c6c9655c83d4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3f9363df-89e1-415f-8598-e45edddf439a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be869ef-c140-4c02-947c-f7063a1cc37b",
        "cursor": {
          "ref": "66f57e70-f722-4b6f-aad2-9a2fc5718f97",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2e71245b-ca5a-4e84-afaf-ea7251d9fff8"
        },
        "item": {
          "id": "5be869ef-c140-4c02-947c-f7063a1cc37b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b83eb3de-8ff9-4057-8cc1-f64bd30cf2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f1f835-9508-4f07-9eac-53f7901f4fbd",
        "cursor": {
          "ref": "41d094e3-b415-4639-99d9-2193195ec837",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b36a1091-3d04-40cc-a8ef-51c08c219bc0"
        },
        "item": {
          "id": "80f1f835-9508-4f07-9eac-53f7901f4fbd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "92d185a3-ed35-49ca-a24a-a81d0ebb13bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf98e4-28e1-40c0-8eb6-7a59764aa4cf",
        "cursor": {
          "ref": "6fe0c72c-113e-481c-9a91-490465161a37",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "671ad5d5-f90c-4f94-b20c-440db56b82e9"
        },
        "item": {
          "id": "6cbf98e4-28e1-40c0-8eb6-7a59764aa4cf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "db38a4d9-62ce-4055-ac55-821018dbf42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794c6a96-5e27-4ff2-ad79-8711e64187cc",
        "cursor": {
          "ref": "042d5549-5043-47d7-805d-1d677f87504a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "59ab8f18-3445-4e2d-ade8-f05d903a50f3"
        },
        "item": {
          "id": "794c6a96-5e27-4ff2-ad79-8711e64187cc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "07284b7f-fc92-422a-bfe4-f40a06c27465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df79735a-89d3-4be1-b7fd-98ff17d6823a",
        "cursor": {
          "ref": "f473e9d3-8a1f-4ca7-a514-b1adbaf861c5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9089ec3c-d9fd-4ce1-8100-0aaddb7e1f95"
        },
        "item": {
          "id": "df79735a-89d3-4be1-b7fd-98ff17d6823a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "38351cd9-d23d-4a48-ab74-b8f49a17b173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7786af25-d106-4797-b8f5-efccd4a1ac7f",
        "cursor": {
          "ref": "a5493b4a-df0d-4a62-bdbe-6a611c13072a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "37366d88-221e-4e24-b059-b532d9b72e90"
        },
        "item": {
          "id": "7786af25-d106-4797-b8f5-efccd4a1ac7f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9bc5190d-6ea0-48de-9ebe-3229d070f855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def31ef6-ba46-440b-86e1-dd0d72f4e995",
        "cursor": {
          "ref": "8ddca0ea-cb4e-4f30-8ea9-abe82ff63a5e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e4697758-3666-4798-8225-412949afd9ca"
        },
        "item": {
          "id": "def31ef6-ba46-440b-86e1-dd0d72f4e995",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d5bf69aa-6951-437e-9e4a-333dc0ff3c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339549e2-4cca-40dc-9acd-d282f6a06688",
        "cursor": {
          "ref": "6df971ab-ed3e-49af-9966-2d3e04446476",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "afdca8d1-6562-4ca4-80d2-d5aad44aaede"
        },
        "item": {
          "id": "339549e2-4cca-40dc-9acd-d282f6a06688",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2b3bba94-35f9-4842-b7cf-d08d8280691f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26b1496-28fa-4822-ab62-f9d48b98c8f2",
        "cursor": {
          "ref": "182e9408-2098-4d40-8b28-affe1c09b928",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "21bd465f-06f2-4713-baa3-0c4af7f0283a"
        },
        "item": {
          "id": "e26b1496-28fa-4822-ab62-f9d48b98c8f2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cbb0b0e9-8fd8-49e4-b28b-9adef58b147a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37f0a2f-eee1-4829-b488-271ba987d775",
        "cursor": {
          "ref": "f8c5fb57-bd8f-460a-87a1-c85f47b27632",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c9068a08-f980-4cc0-a26e-9007ce972452"
        },
        "item": {
          "id": "a37f0a2f-eee1-4829-b488-271ba987d775",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4264642e-7869-4e76-9d7d-bb4985f73ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa10a3c-46b9-4140-b5bb-432f0a2ba7c3",
        "cursor": {
          "ref": "db32184b-feec-41f1-8350-61c2e44991c0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "05ef6015-c61b-4f4e-9943-ccb4f08b98f0"
        },
        "item": {
          "id": "4aa10a3c-46b9-4140-b5bb-432f0a2ba7c3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "43d99a38-9976-43ab-a5fb-3bf3daa78fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa867564-aae4-446e-ae53-5d9862110d65",
        "cursor": {
          "ref": "eb90dd0a-88f7-4d3e-83e9-44893fd4820f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d19dc1b0-210f-40dd-8740-86a5c1bc8ada"
        },
        "item": {
          "id": "fa867564-aae4-446e-ae53-5d9862110d65",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "619b25af-e1c9-48bb-b5e2-a43bb0c4f68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd79a3f-8f46-4966-8047-6596333f0e6c",
        "cursor": {
          "ref": "5c0e2496-52fa-4ffa-8b95-c9a06aff0227",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8d114728-cfb2-43b4-9ed8-0f017603fbcc"
        },
        "item": {
          "id": "4cd79a3f-8f46-4966-8047-6596333f0e6c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "59c4cd7b-4605-4076-94de-d9aa5e68b2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889d0f30-7147-46fa-b15b-ead22e56736e",
        "cursor": {
          "ref": "d1cad547-6427-472c-8edb-a0a9e94e7d6f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cdbc7e94-0a59-42dd-bcb8-ce658169f6f0"
        },
        "item": {
          "id": "889d0f30-7147-46fa-b15b-ead22e56736e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "01b95362-afcb-4281-ab39-82c4d98c51f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7cd323-49d1-4227-a711-07e4f01b236d",
        "cursor": {
          "ref": "d867a958-c5c2-4cef-af95-874243d51c70",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d211cf1e-27c6-4c3b-99d0-1c4a70da3c2c"
        },
        "item": {
          "id": "ff7cd323-49d1-4227-a711-07e4f01b236d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f9249374-3e7b-4a74-9676-c1ac1faf9206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aefdc8-68fa-483b-acff-f78865d4cf01",
        "cursor": {
          "ref": "5fac1d21-e178-4abe-80bf-b5f474688c92",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "babebaa2-559c-49a8-bb40-c087a7bdf883"
        },
        "item": {
          "id": "39aefdc8-68fa-483b-acff-f78865d4cf01",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "12169ea3-1c49-41e4-9897-da6977c45c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47830404-7448-4f08-8dca-f53e338c1325",
        "cursor": {
          "ref": "9362c3f1-ec2a-46f1-9ee8-28a63e188f75",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cfc0bc07-4ef6-41c6-bda4-5cf6057512ed"
        },
        "item": {
          "id": "47830404-7448-4f08-8dca-f53e338c1325",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7a9639bf-4893-42aa-bfc9-dcfead9a3fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2e4ac4-70cd-4b3b-91c3-73351089ce19",
        "cursor": {
          "ref": "ec12488d-8b3e-4483-984b-531cb706201d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e25a2b5d-4d84-4d01-9dce-6d2c4b311a54"
        },
        "item": {
          "id": "4e2e4ac4-70cd-4b3b-91c3-73351089ce19",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "647be8d4-621f-4a34-9fac-47d093fac520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18228fb2-f6bd-4dca-ae45-a6608a658ac3",
        "cursor": {
          "ref": "39d00be0-ced0-419c-9822-bb9d965a61f9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9fd90364-bb05-484c-85b6-2e49d3d8d2b7"
        },
        "item": {
          "id": "18228fb2-f6bd-4dca-ae45-a6608a658ac3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "425f677e-ae68-4286-bc4e-642a93ba8712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3876129-99da-4c1e-986f-91c2938cc311",
        "cursor": {
          "ref": "7d2d5ecc-d975-4d77-94c5-48e1e36d0ec7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d0067934-3fa3-4937-bf02-47b94a6260b2"
        },
        "item": {
          "id": "b3876129-99da-4c1e-986f-91c2938cc311",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9283f6a6-64dc-415e-b75e-2f2cf68eca46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30b1018-1ba5-4787-8e64-19746a954439",
        "cursor": {
          "ref": "87854c86-4e63-4057-b418-b6ca280f9fd3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5c001f1f-d7aa-486e-81bc-2744c10a0eee"
        },
        "item": {
          "id": "a30b1018-1ba5-4787-8e64-19746a954439",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3f381abc-e681-4fdf-a958-430aa75e648b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d9e936-c1e4-471c-a94f-243b66bdd293",
        "cursor": {
          "ref": "98705f27-2377-4e11-957f-821dc544eaf0",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eba786dc-d9f2-47c8-a660-8d29a257f38b"
        },
        "item": {
          "id": "60d9e936-c1e4-471c-a94f-243b66bdd293",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8df9fdb4-427c-4fde-859e-f9aaacbff75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a706eb-1aa4-4268-ab48-7da3429e19b2",
        "cursor": {
          "ref": "d1600fb4-6237-4952-a729-d6936d612052",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c1addbbd-9689-485c-a13a-c29d003ad2f9"
        },
        "item": {
          "id": "75a706eb-1aa4-4268-ab48-7da3429e19b2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d6f793b-cc1b-4eb9-b141-7162ffc27df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a15c003-452e-4c2f-8cfc-e67e66b3573a",
        "cursor": {
          "ref": "b9dbc005-9e3c-4a83-be21-254a0373ebb8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f8d9705e-e29e-4519-a1c9-f1f5bd52cd3f"
        },
        "item": {
          "id": "1a15c003-452e-4c2f-8cfc-e67e66b3573a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ddddb9cf-22ee-45cf-be58-b6297c2be1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be118463-234b-421e-b5b0-95dd338efacc",
        "cursor": {
          "ref": "13e7e785-19ab-440b-ba5d-51a237b065df",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c5b21445-a715-4740-b1db-1109ddbf341b"
        },
        "item": {
          "id": "be118463-234b-421e-b5b0-95dd338efacc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "40393597-9af7-4b5a-8a68-ff59ed40a024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c48eb8a-3258-445e-8a02-8b66ad497945",
        "cursor": {
          "ref": "a1960cd6-714f-4835-bd44-afd8f0e17db1",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f6d5396d-0305-4cf8-b151-3328079962a8"
        },
        "item": {
          "id": "8c48eb8a-3258-445e-8a02-8b66ad497945",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "143de7ad-827e-4b47-a116-1136a45f4575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f36c33-388c-4ea4-b5cc-fde2e22f47b7",
        "cursor": {
          "ref": "5b267476-d294-4535-b83a-d42ffe193e37",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1f746280-6f8f-48d5-89b9-67e5ed3016cd"
        },
        "item": {
          "id": "35f36c33-388c-4ea4-b5cc-fde2e22f47b7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c00f667e-2e6b-40b5-aafb-a96f466d01c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8427f079-3f8c-47bb-aec5-9c6e684c7136",
        "cursor": {
          "ref": "6b51506e-242b-444b-959f-1ee1819bee63",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9530d9cf-1b44-46c0-a8b1-b4acefc60513"
        },
        "item": {
          "id": "8427f079-3f8c-47bb-aec5-9c6e684c7136",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7b6792f6-efd1-4cdf-92b6-315ef59cbbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b3a2c2-f80b-4b78-be89-0177dbee0afd",
        "cursor": {
          "ref": "f9f86313-888e-4a05-b0eb-d95559a4ec12",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "71f88d68-970b-4556-b675-555c1d2d159a"
        },
        "item": {
          "id": "e9b3a2c2-f80b-4b78-be89-0177dbee0afd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "edf18576-e961-4b2e-88a3-0a7f5ca3b4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0eeee9-13d3-4f1e-a4d2-6935bfe02ab6",
        "cursor": {
          "ref": "b2caf3a1-7251-4282-8b4f-705880b06649",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "65a4018c-b94d-4b1b-86e4-658e68a4d73d"
        },
        "item": {
          "id": "fb0eeee9-13d3-4f1e-a4d2-6935bfe02ab6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "252588b8-ce9b-4b88-863d-92a6c34b09da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277ca6bf-bea6-4b38-b60b-1fc26c168310",
        "cursor": {
          "ref": "6e6c2809-ac06-40f9-965b-4f37d8d21559",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "32ca412e-874b-46a5-a73a-13f154598c2c"
        },
        "item": {
          "id": "277ca6bf-bea6-4b38-b60b-1fc26c168310",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2c147960-df8f-4e9c-8aa3-9a42e805b342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7037c4-ddde-440a-bde5-8d85b2811ce9",
        "cursor": {
          "ref": "17db79be-46a9-41d9-89fd-758bdd79b9a6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "51333d98-4cba-4e47-ab24-fc3bc3f34f93"
        },
        "item": {
          "id": "8d7037c4-ddde-440a-bde5-8d85b2811ce9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f9e3e6da-4a1f-4ba8-b538-d8f4a1413e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8c9e8b-bb81-4aaf-8460-4f37ad4c3312",
        "cursor": {
          "ref": "ac2fa1d7-4d4d-46e2-8ed1-7834134fc710",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "53ab0a22-aec0-4653-a090-fc3571ad97f0"
        },
        "item": {
          "id": "5e8c9e8b-bb81-4aaf-8460-4f37ad4c3312",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5d9bc481-fcf0-48ab-a8a7-fc49c373e4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ff7f14-8e35-4e65-bdd7-d25deccc8f84",
        "cursor": {
          "ref": "27aa6ba4-bea6-4416-8161-ef8c4efc33c1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cda54c0f-fb47-4e88-b00f-08f1d64ed686"
        },
        "item": {
          "id": "26ff7f14-8e35-4e65-bdd7-d25deccc8f84",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8d4fe356-8bb5-4bc6-bcd4-966612dfdca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1c548e-da69-4a00-abae-b379488561e0",
        "cursor": {
          "ref": "44334bc3-81bc-4eb5-a94b-dcd1d1c28e4a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d75cfeba-99e5-4128-b0f4-e66913e08553"
        },
        "item": {
          "id": "fc1c548e-da69-4a00-abae-b379488561e0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "948976db-bca9-41f0-b922-4ef31c08da69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbc8758-39ed-443f-9cb7-c7e556fcf89b",
        "cursor": {
          "ref": "a05330fc-959f-45ff-aa5d-f92b73b826dd",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9eb01be6-7b8f-478e-a7cd-b5a998aa9a63"
        },
        "item": {
          "id": "dfbc8758-39ed-443f-9cb7-c7e556fcf89b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7ea5501e-efec-4f98-bde2-bf165143d38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed87b67-5668-4761-89b0-321e22eebba3",
        "cursor": {
          "ref": "0b92a145-114d-46f3-8329-e4705e1f1451",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "23709d9d-9306-471c-98c7-27572e2aa763"
        },
        "item": {
          "id": "fed87b67-5668-4761-89b0-321e22eebba3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f183b2b8-72cd-4427-aff3-2a55a6294a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ff9c65-0478-4728-8eb6-a40b4ff9f0b3",
        "cursor": {
          "ref": "1cfdc1d4-ace5-4a62-a3bf-d8208d635812",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4de7d34b-cec9-4d05-b48f-0812b9fcb2a7"
        },
        "item": {
          "id": "53ff9c65-0478-4728-8eb6-a40b4ff9f0b3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6686a50c-ce4e-40d6-bd08-7589247c3ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775b1511-d28a-42b7-93d0-8d0e797e4a84",
        "cursor": {
          "ref": "6377dc87-f50f-4479-a5ea-edb2934c1684",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "23655e2c-10b9-4e9a-941d-67d9d0a0fcf3"
        },
        "item": {
          "id": "775b1511-d28a-42b7-93d0-8d0e797e4a84",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e47cf0ee-70f4-4648-94b2-47ac2c644ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5931197-08b1-4d38-9727-186d5a1ddb29",
        "cursor": {
          "ref": "a3e34fa1-667e-49a9-bf5a-fe97af9904ff",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a9fbc265-b4b6-402e-9d1a-b9af6b6f1a27"
        },
        "item": {
          "id": "c5931197-08b1-4d38-9727-186d5a1ddb29",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "21e4cd4d-1209-4a0c-b0db-aa170fd995ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1911aa-78ff-45f8-949c-f1375cb182c4",
        "cursor": {
          "ref": "eaf33651-dac5-4221-a546-d86b46f3ca0e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a0e28bfc-a6e6-4d0c-a561-0af7b64df9a4"
        },
        "item": {
          "id": "8f1911aa-78ff-45f8-949c-f1375cb182c4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2ac81752-6b63-4359-8cdc-b8de22b091c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743b78a0-5752-4007-a1ec-bf9a09237719",
        "cursor": {
          "ref": "13804570-0724-42d4-be1f-11b165e5c94a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7fb0d88e-9e19-4859-a6b9-bad9dc2eface"
        },
        "item": {
          "id": "743b78a0-5752-4007-a1ec-bf9a09237719",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24748eeb-a9d5-4732-afc9-ec5c9025ebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72acb970-7547-4cd9-810e-906eb4965713",
        "cursor": {
          "ref": "8f9af258-9d5c-4360-9316-313ad0392e55",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3c70508d-3a54-4fdd-92b4-cf4aa6d1d4f0"
        },
        "item": {
          "id": "72acb970-7547-4cd9-810e-906eb4965713",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba3cfe8a-3baf-4dfb-ac6b-0a1af764f4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c320c0bf-2f6c-44cb-9893-baf52f02770d",
        "cursor": {
          "ref": "732cf204-bfcb-4352-b24f-5c68444af616",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0c5d21af-bc2c-431d-9778-e301127605c9"
        },
        "item": {
          "id": "c320c0bf-2f6c-44cb-9893-baf52f02770d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0654d3d1-6360-4afc-a635-765e1604d850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f56800-a8cc-4231-962d-86477df2ec01",
        "cursor": {
          "ref": "de092271-6b8a-4913-ad68-93d206187eb3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6076afdd-c486-4b86-a01f-522ca078b740"
        },
        "item": {
          "id": "05f56800-a8cc-4231-962d-86477df2ec01",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "30d6f2ba-0a7c-4e8a-816d-ae81a17e8de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11814422-5d37-4b30-a0e7-7a4f6e30d609",
        "cursor": {
          "ref": "df5dbf13-c13b-4913-8d01-010d0f4f1782",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9aa6d0c5-7c6c-45a7-957a-1c967faecae9"
        },
        "item": {
          "id": "11814422-5d37-4b30-a0e7-7a4f6e30d609",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8426bbd3-ed5d-4cdc-98ca-775503210a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103a2e4a-2fb7-44b6-ba9d-c11d12394996",
        "cursor": {
          "ref": "021338a5-9a02-4604-992e-f23d0f0d086c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "31fc675e-9fde-47e6-9e12-62c9d493d193"
        },
        "item": {
          "id": "103a2e4a-2fb7-44b6-ba9d-c11d12394996",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "22e47dfd-46fd-4b73-80b4-67696bc00081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bfcfb5-45f8-4755-a63f-5519d07b338b",
        "cursor": {
          "ref": "e784e49b-4936-4f87-b4b8-9d36e2c715f6",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "67a98c20-c33b-4c5e-8232-4840db26a4b0"
        },
        "item": {
          "id": "a7bfcfb5-45f8-4755-a63f-5519d07b338b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0ae3e86f-227c-4a2a-b67f-dc78ec132c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b14e67-ebf1-4c6a-a5b8-d57e19042538",
        "cursor": {
          "ref": "7d06fdd6-cb81-407b-8f24-e8a94f46371b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a283d05f-ff8f-4332-a65f-1b75014b2a50"
        },
        "item": {
          "id": "63b14e67-ebf1-4c6a-a5b8-d57e19042538",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "de111091-dabf-4c6d-ac8c-6581c126dcb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1105b43-ba38-47f7-93d7-abe2aaa13cda",
        "cursor": {
          "ref": "0ee96019-f5ae-4a20-a7ee-e9b8f3b8df65",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c697103b-001d-46a8-80a5-955cd9e74308"
        },
        "item": {
          "id": "b1105b43-ba38-47f7-93d7-abe2aaa13cda",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bb6f9e83-718e-4977-ad43-7d602972a724",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c616cc-f839-4d8e-886a-1063b396a123",
        "cursor": {
          "ref": "3f2ce845-1492-4991-93df-3c529f7ae5c5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ed36feed-65c0-4a8e-923b-03422dd69584"
        },
        "item": {
          "id": "f6c616cc-f839-4d8e-886a-1063b396a123",
          "name": "credentials_verify"
        },
        "response": {
          "id": "67eb2e7a-16cb-403b-a382-327acfdddd12",
          "status": "OK",
          "code": 200,
          "responseTime": 1448,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c924677d-97da-4dac-9e1b-bab0e9ef350b",
        "cursor": {
          "ref": "da50b9fd-ed06-4cb3-a2cb-0a8d81796800",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b83a873b-603a-425a-bea5-365d8bb37f31"
        },
        "item": {
          "id": "c924677d-97da-4dac-9e1b-bab0e9ef350b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2e6504be-2925-4621-a99a-c0544a485a08",
          "status": "OK",
          "code": 200,
          "responseTime": 1437,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210d21a-a830-4331-9003-eb729dbe3549",
        "cursor": {
          "ref": "54d77ad0-43db-4440-be22-5de8f3197a0a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b1314625-41bd-40e3-953e-68af53c6eb57"
        },
        "item": {
          "id": "b210d21a-a830-4331-9003-eb729dbe3549",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bd2ed3d0-f4a9-48ff-9bea-4aabd96ce667",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210d21a-a830-4331-9003-eb729dbe3549",
        "cursor": {
          "ref": "54d77ad0-43db-4440-be22-5de8f3197a0a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b1314625-41bd-40e3-953e-68af53c6eb57"
        },
        "item": {
          "id": "b210d21a-a830-4331-9003-eb729dbe3549",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bd2ed3d0-f4a9-48ff-9bea-4aabd96ce667",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65495e20-581b-4980-933f-55c879d1a3db",
        "cursor": {
          "ref": "ecdd8b62-0da3-48a6-b54d-f1a50725ccff",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b2d81439-bba0-4a9b-8f93-e25d0eec0ce3"
        },
        "item": {
          "id": "65495e20-581b-4980-933f-55c879d1a3db",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d7f281e1-2ac9-49cf-9e95-a20867ed93d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83336369-f617-4a54-91b9-e08a48c6c505",
        "cursor": {
          "ref": "1e5316f0-dc6d-4dd9-9a10-d1678bdf9ba8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f3e33f74-afcb-49d9-affd-7871d8ff4ae3"
        },
        "item": {
          "id": "83336369-f617-4a54-91b9-e08a48c6c505",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a0b44542-066b-4efe-9a0b-b8f0abac53aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}