{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6628b07e-a46a-4db3-9803-562accfa2130",
        "name": "Clear Cache",
        "item": [
          {
            "id": "829f5973-8c1c-49fc-a506-2a86d14dcb38",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdd1565e-8d83-47be-8444-c22650438645",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eaf8dd33-ea5e-4b6d-9725-7f5525093a8b"
                }
              }
            ]
          },
          {
            "id": "b60340c7-8c21-4266-ac70-d0aba3327ac5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "471f0164-4a22-4697-87e4-6296ed692015",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc9c98e7-7931-4235-9aa9-83f1b000c6cf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "afa0813e-93b9-4d03-83a9-26e9e6bf9ca3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "253416b1-85eb-4314-9be5-89c3667c7d6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffa82536-07d9-4e59-bca8-d1f44fabd995",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa66bc7-eb98-47c8-9142-095f074cc6aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fb92e5f-55bb-4906-a8ce-eeaed253aa95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e98c7a6b-ab95-46f0-af9b-1deb0a2952a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3f22009-6df6-4913-b4a0-98e53ced3212"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "977ef8e1-f8e7-4782-a40e-5d5b3cc4a2ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97e018dc-5c09-4c85-bfb8-f2248dc25f65"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9154d356-9277-4a28-9136-72ac6a15a4e8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b68f41cf-347d-4add-b654-d2dbdf1a9a6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e7401a8-a6bc-466c-8527-0b10cec52714",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecd3829d-5d74-49df-9162-1ab9bad8e78c"
            }
          }
        ]
      },
      {
        "id": "055a401b-745d-4a4f-b8ef-561b7b5c1897",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "874c1048-adc1-4e33-8019-2d41b667fe9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5a3a8d9-5f21-4ba5-ada6-e3ba45a0112d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52eaf41e-fa7b-490e-897a-65bad060e608",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049b2ef8-33d7-40f4-b57d-a530881e205f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9abcbe8a-9864-4d3d-a829-b1c48ad92ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5826978b-05fa-4cb4-9935-bba527d7623a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08409431-c098-41ab-a44e-867adf6ee144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f95d60b-2069-426d-87bd-4f824ced999d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da49cafa-0764-4990-a1c7-e779281c40cf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a570d80-8376-4918-b170-9bf6a1b3c2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b86e0969-adaf-44a0-973a-18bed63a2163"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3e355f9-1961-462f-8ef2-6b2210378a7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66e27ca9-7d60-45f1-a85f-8927d0a01133",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5f0bd4-5c1f-431a-b38c-c70abf10766b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "892b4f0b-ca41-4b06-bf9b-e36fc2d6753c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b31949-d094-49c7-948e-f4defd51ea41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df2fc8d-e875-407c-b198-efc0bc42d5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06493009-4a9f-48f2-9240-5acca01fcba1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189a9adb-925a-4cec-a7dd-beb803741b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b78bc8ff-0384-480a-88fa-930b6ba4c4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f423afe-f450-4e48-a760-4fd8231bd2d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1a92f88a-064d-43cb-b724-77747aab1ba6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a97938f2-f158-4f4d-ae2f-9a5afa263928",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c99c5cdd-e7d9-4100-b7e7-946e53f28582",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e295a5e6-f7e3-48d3-b88e-e3aab2440646",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0923d877-ac23-4d49-a292-261f6dae277f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "868a1f19-02bb-4f2d-9a67-883960f61452",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a86f1bd7-bc03-4263-93f1-ef7e998a8b87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98561975-638f-406a-8f44-64e2646db9a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb74e974-bafb-4a2a-b342-ac36389c7765"
            }
          }
        ]
      },
      {
        "id": "11a4d4a3-4090-4c87-ad19-2bd200758c61",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a0b4d828-a37b-401d-89fd-2c2d05eee03b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02d78e20-673b-4a74-93b8-a4abf5b7aca6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b5087123-b1ba-4093-a4d2-2032867f2fac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a48927a-036b-4836-9dd8-0b7f2e898f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10c61e7-0aac-4d66-9c43-27e08d2707eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f193986d-eea5-4acb-97ee-03a504082b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d1c620a-0fea-4bf1-bb15-7aefbdde402e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5048f684-78f4-4b7c-82f3-b44f1aaa0e4b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7173ca22-27ac-4706-b222-79cd295be52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f193e845-0a61-40be-a3f9-86782a2c9941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d9a9a6-1bcc-4a2e-be55-4f11ec0240ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "272ede61-f344-46b2-80c5-5c6f91372972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25582a8d-e161-48dd-b076-96c180c7e9af",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcffb8e-804c-4ee4-99a5-567c9a3d6280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce211e6f-77e7-4103-8f66-3accf4eddedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b615c30e-7759-4caf-87de-67ab1fd7ae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c1839fd-67af-4d76-ba5e-74c0e585c43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fc2314-cb37-487d-ae34-e711932152bd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3f898f-5b40-4631-bc33-eb4e64edbd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e1c2bb-8ad5-4e1a-ac0b-90fad9706e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf4cab5-6a60-45c3-8fe6-e49f5ea7f4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d6f0b5f-98d2-4fc3-bfcb-16bd1ae1000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069eb2b9-7319-4c61-b72e-b726eddf5587",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b9361c-6023-4ce2-9602-60f0a22bda08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8398dd08-d486-4f92-a2ec-1a3b42592388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2c300f-a599-4f9a-879f-4f32b11a507c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c7a1314-57d0-46dc-9c38-ed18be751894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa262da-1091-4b87-958b-952e633ba112",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7161920-4490-4bd9-b9cf-61f50185014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4cc3d3-26f0-4a2a-9d01-f16bd00ea16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0ba620-b3de-425f-81e9-d66cc119077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1521d9ba-647a-4ae3-ad59-59defa71cbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c7cacd-4686-482a-a67e-9cec9f73bc01",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a5115a-1998-4718-b950-0e712de211d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64b86bd-5c8e-4ed1-8177-fa4bf10a364a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33954a9-38fc-4bc3-be57-978be947484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "038debdb-c261-463b-b203-2c7462e1e257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b6d9bc-ad5c-4901-b7c7-329f17f87e98",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688086fc-7f15-4e83-ab11-952b9f617d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434f9da1-b516-427e-9b07-cf39405c32fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cec0c10-cba9-49dd-9441-86cf20f7766d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85cab87b-bf46-4b6c-877a-3a718cf794fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe12a78-9520-473c-a957-b72db372c0ac",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1d3dc0-3903-4992-9f52-a7c30242c0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2841cf63-6ec9-4757-a2fb-2525ceab834b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396001bd-860c-46b6-b3a4-fd667bfa10ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1700a7b-1b31-4971-bb6e-cd91b38bf0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e10593-a9a3-44be-9a39-2ecd240726f2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ea979d-5dd9-4429-819b-d6786205f1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61adaa8f-eab7-4b69-8866-a7a6fe74b6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01cad1-a0d8-4d3e-aafe-a106898458d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5edacbbc-ffd8-443f-aa15-89d144e27d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52311836-d248-471b-b7c7-6a2c3708899e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeeaa5f-5639-4c6c-89e5-86b9f7e3ee98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfaff7ab-df24-4354-92b0-1bc00124721d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7cb88f-76b4-4eb3-897b-a69cfde995f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb3f01e4-d323-474a-b374-544d26007de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306a7bcc-9014-4a9c-bcbd-1d566355dd31",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9add6a-d4f5-4d93-9b0a-358b6efede02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e274cb6f-31f8-427e-861a-6fe75e78eb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7295a3ff-a500-4615-b696-ab4a0f76cb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c1dd0b1-8873-4455-80bb-48a00cca69d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127bd27b-d3f9-4d59-b4a4-6f5ffaa88901",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5bd515-1672-4371-8fde-15b7e0e343b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680a2af4-883f-4431-b5b1-5d6de1713571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32b9168-d65b-4610-8358-35537509e547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e58f5fda-b4ea-4e7d-a920-c944b7d9d8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5501eafc-ac16-4e1d-89a8-3fc184f46c10",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0339d98f-4a58-4b67-a61a-d1f653870f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dba39ee-ec96-4cb4-ba66-0868f0c39c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9af36fa-f239-4570-b092-01d8bcc96a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70bef329-3703-436d-99e2-b8133ecc96a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841e47cc-7fba-4a26-b35e-bed3f8519c76",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc4780e-45fe-42e4-9dfd-71c378245c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc225c19-3ac9-471b-90e0-8931f39de1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6200ded-3f20-4cb5-91d8-f2511a31fdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db5e6746-2374-4b8e-89e3-29a420a0a39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa228b-ece0-408d-84ab-89f9272d40db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b306f9a-cc06-468d-b191-b9a8543bc90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971caa36-5292-4dae-a23f-d267cb80993b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90805455-99b6-4937-bb4f-c61d4c8b9b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "071b122d-8484-4b1a-88c7-699d56d4ecb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e636f4-099e-4a6f-a805-5467c31b91e1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e68aae-af4a-4287-ac9f-bdcbf004c48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb77b074-3cb4-498a-9a6b-a2d920b54b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166f3132-ed59-4796-8bee-675b96f91f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff71ffe7-06de-4ccd-8d1b-24cc74ff77cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f9fc2e-fb9a-42f0-96a6-2c19ff675091",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a01564-64ab-46e2-8ec1-b46a54af0ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149b4b86-204b-4f31-a68d-0534ba8fd6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d19cfab-b9fe-411f-b299-aa46352985f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bac6825d-428a-4e8b-a0ac-b29771f81384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a6ee8-ccbb-4639-bc37-d9ef896ea10e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1f229b-667b-48b5-97fd-14ac2c79818b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1beac5a7-ad5a-433e-9dbf-28d1330695b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24bc4cf-2da0-49d3-bb86-fb98d6a67cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2e7b91-8958-4d2b-85e5-c2ef5453f0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd6f0c3-b19c-4758-b127-cde19a4d70f1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb7d877-9138-4cd9-838f-c4777b03b134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3876c6-6ebe-45cf-88d4-2132703af17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a22760-e4b9-4714-8887-50efa4bee367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d93567-f362-4226-a0ef-ded775161df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b6efe1-cc0c-412f-b1e8-464cf0213ac7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01914876-954e-4b7b-8cfa-42e16de84a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5348fbb7-d27d-476d-84d3-490fbc16b3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db72673-9245-4dbe-a134-8b4b64bf2448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a40c7f6-e4d1-4e16-8aff-2004a62fa6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d173e4-1f62-4698-befa-fe0b4a65046c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682fb1ff-dc4d-4f1a-ba4e-618c0d336e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cb9ed2-f3dd-4925-92ca-20b14782674f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b40cf9b-adab-4a94-89c4-4bed36d8a6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8a96b8-ed13-436a-8d0a-ea677a987080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bb45f0-ccc0-4e07-9825-21eaf96f2487",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752f4a43-ac8c-48e6-939c-4860bf52218e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f1aa9a-6d7b-4b46-b359-28584ba2a24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb35cfd-74e2-4813-a55a-6ed28fe83197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2378d5a9-4de8-4cfb-b214-228c7a516b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d57a185-ef2b-496f-b390-6095b20235e5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac37404-1d67-4086-a90b-a0954915105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6195a4b-682e-4e48-b7e8-42294932f85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5b617b-000d-444a-8441-1eca2aeb1ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e555eaaa-5779-44c9-9a61-578cb3914417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f620e6-0a81-4233-a0b7-e5bdaae5df73",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d5cba9-d8fa-4e76-bc75-78f74d4cc045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d70c28e-7fdd-458f-8cf9-f8448834fecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f77527d-748e-485a-89e2-11ba91bd32ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef90d346-1143-4cb2-a29e-9584acb0c567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eb40f3-5ad9-455d-aaa5-c4a5f35fc224",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f3ee10-8612-4098-a92c-af2fe5ad9432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721b1539-5d4a-49c1-8b56-6df8785b1ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf1c36d-59c0-486c-810b-ad716f71d7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11f5fef-b9bc-4fc4-922a-b6d6b4250682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3893b7-fbe6-4d51-8553-adb592e39948",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3168d78d-7ba5-4831-828a-24b67daf39c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936ded7e-c4b2-415d-aa7e-f80b537cccda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd53d94a-9b4a-4590-b2bf-b02b970da6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c012bc73-d570-41f6-8194-d2e965d94137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e917cdf-f8fd-4515-bdda-104bb8920afd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a1d6fe-e9ab-472f-9062-07bbcccad4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cd5466-d617-4d6a-9dbb-bb7a1cb01c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d021734-0849-406a-8a34-651caee99c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8fd62b-b760-4264-87cf-bdc4b09142e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c989e8-a742-4768-82dc-989a1177ec98",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d53b53-fa69-4103-b136-5c276ee64ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f358f051-3638-4c1a-9cd1-50bd46d991b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357f5c49-1502-489e-b425-8d398dd9e243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ad1215-ade6-493f-9ce6-3c82183db695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83e80cb-7498-4bee-a3d3-3341112a5a3e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1655a4-08ea-4244-be0c-9d128555586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871680ea-16d4-48f7-b703-f3c7ac520063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dcc7a1-bfd5-4fa4-8cd1-c1e0a40fca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "981a7c89-ee8a-440c-9175-3f4968e46aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd91c77d-e98b-4ea6-9c39-0260e1d2b225",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d277a571-9be9-4b91-91b2-ec0e823e018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65545af3-97b9-4c9b-8b41-0a0c6420526b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b007ce-2a5d-4169-807f-d1794b8e70e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7c9aa3-3f49-4d0a-aca1-5428624ee881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7c9034-0739-433e-95b5-fdc239eb3d19",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6cbdd1-227e-4d17-9050-38b4020d1605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc907f13-f574-4923-a6df-d05cdf9332b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2662355-224d-40a9-9218-9d8e413d86f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c23986-c126-4a53-8b6c-0de652a720ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a4b6f4-f3d6-4662-b6aa-8fc67cb78fad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1aeaaf0-d8b3-45c9-9dbe-6945540c16b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645a47bc-c3f1-42f1-9606-32fcf410829c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d45ddd9-9b53-4596-b383-34388dab37fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "364eebd8-c5e6-4055-ac83-c363aad45922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae26e41-12f2-4081-baa3-5deafa685336",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6695e176-2afe-4524-9ecc-26fb975770e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a95122b-8865-44e5-830a-4c26245f18d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e590dfc-7438-4c73-9d63-3e769af28a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68c0f26-ca94-47a1-9135-d55d67772890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f7e37e-7bef-4b1a-ba06-9e6b2b0db750",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e303723d-b1c7-4472-8c88-af31ed4cfc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96aa3958-cb59-4b47-8bb8-6aab35969c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaacbe7-42dc-46c0-bfdf-1091cc5fb70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "557ded99-afde-4125-be9b-414078267ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10e6ad2-97bf-4c24-8d20-9e96b537303e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0397b650-8919-450f-ae72-f26d5a3346f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3654fe1d-ea37-43ac-bc97-3e5e0e0bca04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90635e24-38e1-480e-bfee-2502e5e8bf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4612442a-3c83-4960-9cfb-71a9c9bfab97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ff8bea-bad6-4598-9209-d58c1b0bf992",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078944e4-7f39-4ef7-bec2-d6a401c4e504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2307c8-c3ca-45d6-9bf6-38954b9d0862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc573486-5069-4cb3-9dca-988b48db07bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20baa953-451b-471f-8627-c1ef396f339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dad51bf-2b3f-4830-8c80-d7200f74b4d3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b239b25-7550-4a06-a148-fecc780ce2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4771d2f1-c610-4f46-a8ea-a365b2cbe733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6671a0b3-d3b4-4391-a7f5-e12ccf3ac05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3409db9-caf0-407b-8333-e85f47547b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958f4e1a-fe8e-41aa-bcbf-a85e81e59f38",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc59af0e-820d-4037-ad7c-f9e33f126920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d1b41f-e605-4c85-90ae-d592df36777b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fe87fc-ee62-41a9-a5df-7cfad7ee7ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73ec179-e521-4bd2-a0fd-18eefa126b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da96ed1-24ae-4c8e-acf1-056c7dd9ba18",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08a95ff-9612-422b-b6f8-1c54c229f036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c250249-5111-41aa-8f2f-377a1e955944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90da342-fbe6-4292-a40a-a0b11531c305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a88364f-d47e-40cc-acb2-901fccd72689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a253b14e-8ff0-4caf-ae21-ced26daa06e0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd105925-171b-4a33-a8dd-3533c75c5023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e6d8a3-3bda-4682-828f-02e69dc82760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5eed61-f680-4af7-8973-40f1185d0e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f46c2dd-e3a9-4ad8-881e-f2f90cb8b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89dbc4a-31d0-4a57-ac2a-31da7629e765",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46160b7d-016d-49a3-bbec-1256f4690db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22cc079-1962-4253-b738-59ffb6043fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d839a8-d198-4d65-8f94-3c67485f4f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "417c30eb-9554-4a9f-8339-f6d526c3ec5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b638b9-6673-44ea-b753-1bce88343bda",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650543c0-0bee-460a-bd6f-e0a117e98994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0d7e20-8c6d-4230-a4a5-41515f32e242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46fabb0-f0d0-4331-ab12-801740ff35c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2174eb56-2045-4097-ad1a-5e483dc7d125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ccd719-5243-4f28-9129-4d787f1b957c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ac4cfa-868f-40a8-ab5d-04981bd1a515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f69063f-b0fc-4dae-a206-670b238c249f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15297910-bd3f-4986-93b5-38e077d553ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f2e16f-05ce-4fb4-b3ea-c85bb6229311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1694ba-46f8-4303-9418-022c87d694ca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e33ff6-4179-4076-8a1a-2275e748eef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430a6517-4ea3-4912-ad2e-431ac39af0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a636e82-292f-49a1-a033-9da8fe8d1580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e065c03-ffae-485e-ad24-a9651c8bf7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d185ef-fb5a-43df-b429-ed0a13eb6997",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5fcd78-453a-49eb-84d3-3209c035881a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e677b494-e411-4750-b06f-3b20bb9dd308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbec33ef-7613-47e5-9c34-97fe94248f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6104d28c-c872-46da-a9e8-647e51cc070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9561fd-cd39-4ea8-942f-01e6d9eeebea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c14510-0f22-4367-bbee-a9b9eeb5cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bec34f-51e1-4f2a-acf9-f42531d7330b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff42d41c-becb-47d3-8772-296e40aefcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b76a92bb-cbad-4c5c-82b7-4ec9b22a2421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aa54dc-ae15-45b5-83de-76db4f923dc5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da71812d-34b1-4a20-9b0f-294f7cbb5e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041c8302-81b3-475b-bb10-902c3f7b3e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213b87e9-5e75-4e47-a6ca-7f1b6201f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1183d5-576e-4e01-b806-f6017c98fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45d88a5-b7d2-4f5c-a4c1-45f7f2599510",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bcc35b-054a-4f37-aeae-a593e3338cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc229475-eecd-41f9-904b-45739a334190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5492d54-35d1-491a-b7cf-ed5cb0bca8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7bbaf0-97b4-4175-804a-4c6acc8257c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc9426c-acdd-47d1-baa9-a7ebd288a468",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20727f4-bbf9-40d7-9ac8-3e209d56c594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a950b71-518e-4081-9994-58b247bccc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6cda5b-572b-4cef-a914-194c5346e2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe10a8bf-11fe-4d37-a092-4e2c29f84a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec6478-8bb2-4c02-9bf5-97157d439517",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e82f8-03af-4375-a167-002cc80d2b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e34f6e-fda2-43fc-b22e-810962001453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cac7b1-1453-495d-b094-93e96074a9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e19000-46d9-48d3-882c-c745c4a5a90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28914e4e-b695-47a5-99e6-14fa3cbb729f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd32cb2e-9569-420f-8809-9beee491ed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8adc8093-b4c5-4238-a425-c388e833c8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87901754-567d-4caa-af0f-e4ca35bc6283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d2dd4c-378c-45ea-bca8-1c4a0c53768b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a918a107-4a0d-47b5-b639-d237f6b3234e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4728220c-d3b5-427e-8c2a-a32b169e9cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b60a65c-0a27-41a8-b5c9-e2607404d9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b373f1-2326-4468-afb2-ab1ae576884a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "012525dd-2d34-4b77-8bde-2815567cd2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2d2683-c426-4864-a86d-bd94ea71f5d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aceceb03-d673-4be6-854b-e7c1ef766c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e8fc17-b5c7-44fe-9bc8-23a0cbf36473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112f3b1-1f43-4b0e-b6e9-95fc3f18caef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30fdc55-0288-40b1-9666-4afd6000e970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23f94d7-25bc-4be9-8ebf-1e5299a2c87a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5fcced-a5a4-4629-b1a9-00f70943ab76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acee30c-465b-409b-bdfd-3c95c98f2618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac862d8-0528-46f9-8eda-2746a4b2fe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccabb02-ea14-446a-a566-a7467f180c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f126d1-1c95-499d-b16f-16007da1b29e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e195b4-fc15-4990-b1c9-31b77bcbde56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3de1329-5fc0-44e0-9891-65a3e96e0583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e5335e-60e6-4903-bd92-cd4e180ccb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4a52a02c-8412-4cae-8ef1-626110f79cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2911601-f6a5-436c-b94d-9ec4eff5d709",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7f0b10-0910-4f34-bd8c-07b66a5c7ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca08ee5-8cf1-40f5-abec-3e72deff6420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51cfd46-d401-4ca4-a133-280077b20a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "afd72a2b-ee10-4cc4-b1e6-f042f10d6354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700166be-bfe2-47e9-b511-81da405d5869",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36894fa-c7aa-45f4-870f-565d5d6313d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184c9090-420e-45a0-9334-8421a1baa24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff725750-2ffd-43da-aa06-6176621e8874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20b98065-9231-450c-a062-ae5253596ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978b544a-e325-4111-9337-c4335e550627",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd840b-a654-4094-be3a-491b1745dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03ccc35-e56c-4629-8b4d-d1abd1458a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe0e375-e69a-4c05-9c4c-8778730b182e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4bfb61-67a9-4505-8f70-62c1078265fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb2f9a7-be33-400e-82a7-177cc70fffae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2ba942-9cce-4af6-8b19-3da895bb0277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e9ecf6-0b2b-4118-a26c-f5e7cd77f9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90aa40f-bc28-48c0-a8b7-3fea4bfcf773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cff04a7-1f85-4dff-935c-660d6112f628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c2ce0a-26dc-4a7e-ae3f-961778f1be2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea1f73-bb13-48f7-b500-1dfe83d92c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d6cf1a-1c5e-49da-b42e-6152f1499928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ae072d-8210-482c-b091-2a8be7997fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "390ddc38-57a6-4442-b3e1-6b500a439c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6f4cfc-afd1-49c9-8598-e3ce1c38590a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e9f534-930d-44c7-bb8d-a14c22a9d681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a749299-e8a7-47c5-9c54-95f7e3ff4b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9018f8-6c07-4efd-aadd-b4a9b8049aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd2fc44-fb94-4c8b-bd57-bcc733d201e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8bbf01-74af-4135-a5b9-ccc940d7c101",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4729f6f-90f5-429a-9de8-c17f6f1d1831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b969a7d3-e666-4665-a59e-bc0ed6cfb441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e069cf0-c4cc-4779-b5ba-0b0d956abf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2e0212-7a07-4386-ac41-e10d34260a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed28837-0b40-491b-83fd-4966454328a6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff72c07-766e-4851-a08d-083f043c997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792192eb-e097-4fa0-b6df-be70269b6744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6b6994-1165-4254-948a-13305e1689e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7f4915-9f28-4b41-9818-c9b988a7b5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bfadd8-aa7d-4a82-a330-5a549b426612",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba6a994-2485-4042-87db-71f1d6b26d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56786f5-8377-4427-8fc3-f1ad7df64bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d900f1-e908-4866-9401-ac7227287261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27fdd69c-b3b1-45a1-af30-094395f626c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c9582-bb14-4377-a87e-c78610b1c191",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97fc8a-6e9a-46ef-a3c8-3d3608af7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013066e9-e0b7-42c1-9bef-98f0307e2aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48639103-056c-47f7-80f0-e1d2e18aa9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4ff50e-252c-4f2d-85d1-2866171169b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65ee748-e567-4dbe-b178-54849be98026",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e53447-701f-44af-920f-7c72a02ad349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abeec7d4-f66c-4ee5-839b-8dda9b17560a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4573598-bd10-424f-9726-0600e9394db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b00775-1a42-4bed-9c25-b487ddba055e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae220235-6b4c-4774-a3ea-cf4b5a73e7eb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723ec93a-a12a-47d7-96ae-945804aa8eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9819816d-0517-4df1-bd3a-51454478de80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118f6e23-835a-492d-9fb2-dba583f2e17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "936f3314-dfba-4f85-ad65-de38adffd459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ef87d1-96c6-4b7a-b7c5-a6bc19db6a06",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cafa6af-4c43-4841-9072-d9d6789cdb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55aaddeb-387f-4c38-a166-a1fb7504e522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f949571-60f6-419f-96d1-5406756c7074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9136281d-c389-45dc-a486-f232fe99e438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640908a7-14c0-44cc-b224-4939953c6e3f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4a74d3-f7a1-40c3-b3ee-405f9345dc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d96c71-c24b-4c83-b30b-e27fd2d106cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381d774b-00e3-47c7-9ba3-a2366fe94114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb07ebe-5d40-448d-9f28-99d25cef7c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01237fd1-0c51-450b-86ad-f9de38a3ce43",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c8783e-82c3-4db9-bf5f-8b331f5fe064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89aae035-1cc4-4d4e-ac66-4dc46cc98d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcee828e-5a7b-45f2-b282-cb2a9a887d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dc33f1-d0ba-4129-ade0-edca87267e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2edc38-2f32-4798-ab9a-870913bacea7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8064b3-8750-4d3f-8e36-5875476abd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85169dd4-5da5-443f-ac3e-f6a328f4ff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7479ce58-8847-46f9-b4f1-a51e71248ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c3070f-d845-4e57-b68e-82ad62776e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3098be32-0d4c-4fdf-aff2-325bbe053034",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1063a985-3b7f-4ecd-b0ce-a63e2f9f4ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089fb668-c236-4d7b-9590-1bdd9c86776f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8e1c3d-ae71-414d-b1b4-ec1c6c9bfc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e535f2-81a8-4ffc-941f-ac08813dcf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40a588c-830f-4292-ad37-43928a2d469b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98762eb2-a5ec-4563-8245-eaddd79321b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572ea7e0-32f5-4628-9aa9-c7604ae1f8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036456f8-689f-4b3e-a48a-7467d4c0b40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cde63ecc-290e-4a28-90b6-9b018dcc81a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f99d7-221a-4dfb-9bc3-ee2112d1860b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0a6713-8a0c-44bc-8961-e0c4154aed9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2390e8b4-2dc9-45ce-a2b6-edbb7698852b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de490a4-9ad1-43b9-8715-6963a790e2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c948e41b-af04-4901-86f7-a78e1c3c6604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a31da4a-77a4-4907-8ee9-b9025f6bfc1d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7b5552-665b-4727-bdeb-2c60fecbe73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf11bfa-0b8b-4b3f-a2f8-337088d75906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9872235-1f43-4e91-99d5-b0b2cfc79737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce62877-dbce-41c4-a061-de3cb96641ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5453a4f4-1a7f-42c8-86f1-a7bd6c384191",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b3a62f-5e1a-41cc-bd32-e667988e58c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142ef17e-c0bb-4632-9e01-1bc3e2535d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c9cba9-17ca-4db6-83c9-94535200aa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace16dd5-1f4b-4146-897a-81613f6fa4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ae6177-887d-4c2b-b1d6-06934bd0ad19",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645106e6-0dd3-4d46-8f44-2006e39f6f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dfb299-eb38-42c2-8b96-57c1fba819ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10a3700-e1de-4bb9-b1cd-eccd51fe4e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "828fa6ba-34d6-49aa-8d6d-6c271cb26f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fde8fb6-2983-4e62-a29e-9263983d45b0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c3f882-3cdb-4890-9c93-69d2907e5e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fdb119-1910-4987-b535-550490633e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a78b42-1153-4220-8d06-57943d8fa0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4d3550-6808-47f2-a7c8-51f7b0524764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5003550c-a4ae-4035-afbf-ac2d328eb1f2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba3469e-5caf-4d12-b61a-c10a75221cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a389778-2b24-43d1-a501-1c31b1216b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8889a0d0-0d32-40e9-a732-94b19d97cb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27595315-7bad-4638-ba45-ad5eb1455a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52184d8-151e-4f2c-b054-fa5daad132d1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc99e0b-1e21-43e3-b8ad-e96c6727fa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cf277a-90a1-4182-861a-3a5458f9ffde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef23e741-b2e5-407f-ae78-5f2efc2b0ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3931323b-4918-4cad-8141-4b16e0bd79bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9e7e37-f519-4ddb-808e-b624d2560ad8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db5e8ae-33d9-47e9-9e17-39808d4fca72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5657e8c7-e83c-4941-87ff-f29d9efe615b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87795a24-137d-4992-a2e7-1568a84423c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a08bb42-d2de-4b6f-bbd2-3c955eeca739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f672197-b237-4d3d-9d0c-61cc48a3c4a7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afe9ba6-0e1e-45de-91b6-de3d6c9da748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ca7fa3-dfe8-4097-906e-3afc5cb3c2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc46881-876b-492a-a105-d7ec34f6de88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb74af05-9268-4d33-9102-1b0e957239af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e245df-d198-45b1-bed0-db453865b224",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052d026b-a0c1-4e9c-be7d-6e14b4b9d5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fd6c67-dc7c-4348-919d-371c8c4dc3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492497f0-cec6-4bae-b98b-8317726895bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf6bcba-6110-4800-91f0-de39fed39d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630792c6-759d-4ef8-9d79-8cd887114817",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ebaa1-5472-48a9-a236-cc4c63ff22c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aea18ce-5255-47b7-84a9-b1738107ad8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6b2f91-4535-41c9-b7aa-f834b33b849e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6baa28-c03d-4dc2-aa6e-8c7472a59f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c31698d-84c5-430b-86ab-ce3b9da2f68c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abbab9c-f385-43f4-8897-3bd0bb4f289e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c4fc0f-7a80-4d85-9189-147fab252e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67baf6fa-48a3-4ccf-872b-9acb912485af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93c3673-c809-4f45-901e-c3944741ddec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106f478b-0bb4-46f9-b29f-9ef111979e31",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8b3385-0d32-493d-9f92-0e44ff734528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf78dab1-bf9c-411d-9815-8c2ea9f483f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b0044d-3fad-4580-9633-eb6cc4aff2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4a385f-d56f-440a-85c4-4c6e55df0a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b096bfe7-2e70-43ac-9fbc-064fd488ec5c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3274f2a-d141-4560-88e4-ca0dde912dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c39def-dba8-49f6-a591-648b04563cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a07c4d-a4d0-4b78-bcca-574de065e7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2931eb0a-3f9f-4c03-bb4b-2d585899d1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7d2056-710c-463a-8f57-06acb91ac76b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea16cbe-9de6-4204-b078-3d4a81c5e2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f6bd98-be74-4f55-ab54-251037196a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5efadd4-61e2-4bf0-803e-d2b8d2c242e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0a0fb0-fb79-4fc2-a3d5-81e236a44029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2bed85-e713-4d5c-aae5-23b794108798",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fd666a-f9be-4aef-9833-04e34bbecd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a6e5f2-a4ea-44b0-8c45-8beb1062a7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f979d28-90dd-4a95-af6e-5ff0eaef1130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8e9c0a-af18-4ddc-affd-508cc15f9f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a75ad9-d7bc-4e82-8eaf-de0dfba8dfa7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0903709b-e5d9-41cf-8a05-466cc66d0cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fccac3-3ab1-45db-9c50-8eec1ba192ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070f3f8f-f167-4140-a7fb-b4df3101e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6862c173-d95c-4fc8-84e5-f42c69f2a0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b0ab9a-f18e-4609-9ad0-719ab153dc93",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a11a999-f19b-4364-816d-cc362a255a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "91033d62-5e4a-4ae8-8b95-b22d0775df6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c4ef31-eb2d-440e-a7b8-6468275446a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "13849cbb-dc32-4867-b8b4-702a188fd413"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54b378b7-00bb-4b79-9fb6-8f7cfbb155e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7315780a-99f0-4b20-b847-adae5d94fb9a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26042dc8-f772-4e5d-a44e-e21427c3799b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e66fe2dd-4ced-48b2-ab8b-47a0010fe3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9cdaaa-eb89-4b27-8651-a4dd3c48bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "040f905a-0cd4-438f-bd49-b584b01a186d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f0891f-f35d-41ba-b137-5487c983332d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e3e925-9543-47b8-b578-0bdebd94eb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4ac5d8c-dc03-4803-ae74-45a4df8d2c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f721c04e-dcec-4478-a352-ac8231a623ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7f3a212-8085-404a-b45d-bbac76253e00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fcf3abd-9a84-4f7a-87d5-65aab48fa093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5abb8ed-3ed8-4f0f-9709-2b1a8dc103a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "085f413b-4e23-46e0-8958-f942f6860951",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7451af7c-10a0-4212-8b44-37c08cd8f624"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a45006a-e5fc-4365-8bae-174cfd8fca8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2100302d-c5fb-4bfe-90ee-c4904adf3031"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71e52d36-437e-4d0f-97e3-8b215070549c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afd9efff-a290-4ce7-a971-55fa7705d982"
                }
              }
            ]
          },
          {
            "id": "85c8cf4d-aa42-42c6-9201-c727d5c0ceb9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "139548da-72e7-4b50-a48a-2b285c1b74cf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2fa5d74-9864-471c-8db7-ec2c6785d57b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9e2fbcc-1acd-4398-85c7-6bdbe9f367a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de9bcdce-8b5b-480b-93f1-b9b29f55e9cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66ad9b29-81ba-4dcc-81e7-29a600450283"
                    }
                  }
                ]
              },
              {
                "id": "ba937f01-3d8c-43e7-a0a8-78f5b923a355",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11746c8e-aa15-4110-99b6-8c642dc69870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40435c23-9d83-46c1-92bb-adb3b436556c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af1fd839-0a84-4aac-a511-6d4ad76eb6d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dbe72556-fb37-4e49-a650-a4349ad2e2f1"
                    }
                  }
                ]
              },
              {
                "id": "95dc2922-eace-4592-b2dd-d748877adec7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee5adf33-830d-4f99-a2ed-b970b7f9d9d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07c3cc0c-52c8-4d17-8c4e-fe2f122edab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edb1d75f-cff3-45b9-965f-06109bccf295",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19cb0cba-97f1-4ed7-9911-79bece243c2a"
                    }
                  }
                ]
              },
              {
                "id": "d3f1a104-0d09-4722-ab7d-441422ffb39e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e2797d5-db94-4e07-a1a5-107b59ecbc3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "343131fb-da89-48a0-af4e-dc4d0be27123"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0132044-1bde-4411-96d4-e73572e3b740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "27f3b50b-80f6-4ec9-b344-96b89f066cff"
                    }
                  }
                ]
              },
              {
                "id": "0e10a339-0b4a-4630-b93c-d02d3fbc3d83",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31c3219b-2a8d-4f56-bc0f-3af05fdd5c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f43b798-1bf2-4da9-95f1-754b1710e245"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eebc2be0-9fd4-4ddc-b49e-d1f350f6128d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "407250e1-19cf-471c-8da2-b7f0fc311868"
                    }
                  }
                ]
              },
              {
                "id": "4249dc05-5ca2-4048-850d-2fe2a65b1223",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "597d936c-340d-43f5-a4fe-23761436562e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91b1c702-22da-491a-a805-c91364179333"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6549816c-71cd-428b-a627-c0a4b63a01ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c8c3fc9-7b93-4a0b-8045-3af528e9afda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b297f0c-006a-4b48-8f46-b1e41f8d77b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af546b0a-9936-467d-90a8-0d78fa6559f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22fc6a20-42c7-4954-9e4c-29427e412076",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9eb58ed-342d-4850-817d-991732ce2a6f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8ce729c-ee64-4e29-99cf-e07677d72fa8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b6c1a02c-8e02-4fe4-b21d-b50542b510ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34b49dfd-8dd2-4a0f-9837-0086849a86c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37a5f561-f8ab-40f4-9beb-7fe30cc4753c"
            }
          }
        ]
      },
      {
        "id": "a2316c64-e794-42aa-a169-d43e5be356a6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a900b07a-6412-42cc-9160-e5dfd6195f8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d5bfb49-75a3-4bd9-8970-999d0e920740",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8831a370-864c-4651-b2ae-61cdbce97b32",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3806679-1f2e-42f3-80c5-e536085c5560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d1842e-7c0e-4b6d-9d0b-e6b72d695791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e218bc76-854b-430f-9130-a425997e8503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3f400f-82d3-430d-a7ba-4b12e57b8562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8d540-ab6a-4d7d-b951-e2f344ed0d54",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca612d9a-c17d-4351-9089-a1bf228a27fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623f5f0c-c716-4b5f-8a16-61b5238b1c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873a5a6d-56fb-4374-a7b0-a024362ea416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59c62ce-6987-4e09-9e80-3e94bd963ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8307983b-a149-42eb-be67-394d80296128",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf7d614-0d65-4a13-94c2-f0e2b4505a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c7a355-a1ec-4eac-ae9c-755919dc4d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db98e54f-43da-45f6-9418-67a97edec558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb65dcf-4b26-402c-9d4f-7c64fb0c0ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72b1c00-ca4d-4f2d-92cd-4c2ebd3bd586",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a88b6b-cdb4-47cb-960d-66c48daf53ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c522608-4c91-401d-8a5e-6ee472eed7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd50f1d-346e-49d5-bcda-8999da4b5635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d404ec97-9fdf-4492-909a-e4f03d13f012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7c33a2-3a7a-4fa7-8cc5-ba31c0326a6d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851b6e71-a268-48ad-bed4-d3be581602dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdb7fe5-2007-40dc-8597-881f0b2c3d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1598551-da96-4918-aec9-b37c18170ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1494a165-78d3-4a15-ba1e-f5352aad46c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f518e9c-378b-4686-a31d-ba0e728107ed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e43b470-74fd-4355-8152-4e08219c18bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f3d592-62d9-4b25-9737-9a1e2def579c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4499f2e-2abc-4e4c-9ea4-b5a61fd7c6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b99223-f789-486e-a981-e667bd70bb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cbf10c-79ea-4b6c-a978-e2c8d0952532",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b865a77-a4f2-4460-ba41-fa770433c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4d25e5-4b84-44be-9477-205cf18fe98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd6df23-d50b-4c4d-b7e1-e65d9cf68c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6761643-3492-4e91-ac02-a1cb90048bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6afe90-d74e-4439-927e-e3740028bbf8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909535cc-e130-4f75-aca4-d58dc93b9476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637da1b6-b98a-4de3-8bdf-a0a30678a393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817c4347-5d06-4a62-be2c-f9e2e22772e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "608b6ef2-8858-4b8a-a634-f4a9aa95ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fadf62b-526d-4bce-a71d-02170f0f04e6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ccb673-3040-4afe-8847-83dbd76774a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc562a9c-6a12-4448-af0a-8a28e67def24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196df448-e30e-4c68-b696-0b4404ad723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcefe00-d948-456c-8293-5a312e282a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8957b5-d94f-4745-b84a-711dafdc2ddd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aec02c-dff1-42a5-a578-e457619b649e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1481b99c-3df1-4987-a364-9b8dc1a2af81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5469d4-0e63-4c99-938b-e777b9998b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0e6d1b-6d62-4bc9-a152-e01362723bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a087fa9-75eb-4a4f-961d-d86421e07051",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870e8254-7f5b-465a-bd22-2f07a0752092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db296ab2-bbf8-4810-8e8b-3c5f81fcba00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b58afb-20a8-41d7-8935-9251cf4dd18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38f642ef-5083-46e9-bd09-728bfb68a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328c55bf-a734-4840-a91c-a0a13ebdb4a1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8537992-4dc6-46de-bc09-6f9d6b8881ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f750f2-df73-4ad3-8124-eabc82e54fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edad4b8-f8d2-4758-a7cb-6473ec345b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8167c256-424d-4ad1-bacd-95c63b585c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941f4787-39da-4608-b622-89492fee41b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498ca087-653a-4fc9-9a72-78f045a25280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f203b0c-3d42-4a40-a6ae-f7962e819417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0aa81ab-30eb-4c0a-bc36-3f509c90a126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8eda541-e4e7-4b73-a641-c1a543a0ca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7653ef0b-d2ce-46d6-ba89-1cc7423064bc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6a6dac-3ccc-4ce4-8e64-d6f1bf1fc3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f2e184-ae27-4fec-805f-2da6a10500a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb1377e-8135-408f-a885-5a2fece1ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6c4d97-c948-4412-8ea7-3a3895768ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148bb2bc-7318-4d4e-ac92-3e2f6dd5d2cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b340043-0341-48d8-ba6b-ae4440c8a11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12028cd-39b0-43c6-8ce9-8cd686ef7072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632cd772-08a2-478b-a0d2-5316b58bdd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6000cf21-1160-499f-ba4c-5fd809aa8da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f403f778-8ed5-4aea-9b43-b91396c6ec1e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cdd1e3-b606-4122-8b23-0b79f171d4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c98b7ed-bcc0-47ef-8952-aad53ec36905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7dec4d-1a6d-47c2-a3d8-3f03b8e86bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "05369af1-e634-45e4-8bb5-d492ed7d00d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd4cff3-da2f-4b2e-b237-19ced2ee8b33",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0300b5-13eb-4739-8ea1-9f03873e3e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bedbc8-5f0e-4768-b317-229f81ca7518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81bcd10-8e61-4437-819d-2c28e7858436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fce42c-65cb-40f3-bd0a-fa56879e7923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3268c5-5c87-4a6f-b958-dfad6af08855",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f7d85a-3596-4039-908d-ef4e95b804cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c34aa4-8c01-4d92-9c3e-9a990b8f005e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53efdc0a-9835-4ee0-9ae5-9459895efad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ddec0f-231f-4b39-9209-52552173da3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88d1256-4eb9-4cf4-9d99-10ae8ce6f0b5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d8fb94-c51d-44d1-98df-eb74fe902654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e99da6b-f030-4e45-b470-64e2146dab3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fa8a67-213e-42f9-a62c-a8e96ecee31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94890118-e268-43e1-9ada-1a267b417ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4191891d-f670-4b65-a2e2-d14f828c61d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82db2fcd-13e7-45dc-9ae7-f33d29029cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b76bb00-2480-4dae-81d9-21ad09b319d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e719880e-e044-42b7-9cdf-9a6b3ed885a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02ae142-a8d2-46b7-ae48-27128bb8a0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d4a7f9-7b1b-4bb5-be85-2c8803935569",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090ed209-ae41-4f84-9394-bfd9567b7973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208c7600-2af0-479b-9a74-37b8b26af15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f408b49-abaf-4e3d-8bb7-f78ed135077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fd041d-01c1-4bbf-8d9b-902646d254a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41123fe4-ddc0-4a50-9ce9-f25b580084af",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2636e908-e89a-4bab-84e7-d0c09d87c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fed4a5-4aae-455e-a0a5-046116c151c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44803703-ea73-4193-9c49-130a41318981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba42c3b3-4864-478e-922f-3c73addb35ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb59a82-f1b8-47ea-9280-556c8a0f6dda",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d59db24-957f-4a52-af22-90b0db7454c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ad3f75-1056-4a03-9eda-db98e3b63b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453a992f-e247-4335-bca3-e5324b8d35c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df28467-b1f7-4b5d-bca2-e183dbe1f382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2dbbb8-7175-412a-a910-1b209ddcd536",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29054b9-19a1-44b5-9d27-5241d557358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac81f76a-ea46-4db1-89cd-97a8d29b671d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01298881-4f41-4b88-b42c-93ca7d7dc5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11badcc-950f-4fcd-a098-83c33e75b438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7586de8b-0cad-40fe-a81e-33306eafc6f9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b67fbc-5c94-4cd9-840d-4c89cd3452ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486f29d1-3bbb-4a8e-bc6f-d8be9d33fad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732dbd65-2a09-4f36-96cf-27452b8f1589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65810620-a0c6-4d8a-81f5-91d22c7d7d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366299f7-1a74-4fd7-b396-cd3056268491",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d974f575-ba97-4379-8ab3-23164d87f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808dc037-13b4-4535-9bf6-718d1c0948a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b3e590-c64a-4a9a-ba44-7548a7876b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0244237-77b5-424c-846f-cc1b16e5e7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02add45c-f68a-46a3-871a-9db9a9a2c955",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c355e3d-697d-4619-aa15-77e48864d309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420cd7a3-5f73-44d6-a181-ad5886cc9aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6bfdad-61aa-4ea4-8d31-78973e45881c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30b2d94-e447-41f7-8769-6e66aa75b830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebea2272-7cb0-47d9-82d6-96bebea93b67",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912b45ca-a509-475b-9c3b-bee13be23707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592b86d2-83a5-48d7-81d8-32175c57c5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26de668-0d75-40d2-80b7-2d19fce0b241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f027273-19f5-4b8e-9de3-de9167be41a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9cc29d-c2c7-415a-a6a1-c81af054ab16",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2af399-2496-458a-95f0-c2b8218039fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b912efcd-a4ff-4650-95e5-a85a8feb76c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47eb974-61a9-4558-8c07-c30a958b7693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6202ab98-fbc3-48d5-8ef0-391f873bcfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf850d1-3ba2-4b2d-9ea8-0272e9fe727b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd0b235-3149-4e77-bba1-3fbfdd28af28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c78bbf-7c6b-426f-b413-e00984b64836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0e4f77-9a27-4513-9883-fe207162e87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a519394a-a493-49bb-b388-dadc2b43edee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48e2ed-0f7c-4685-9b3d-a64fb75a2d27",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6503f272-ea4a-4182-bd66-dbd5ca9c677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b15fec3-df36-4de0-8ae9-70d41949c53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70cf40d-4ac9-479d-b161-964ace51be9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98462c25-a427-4c23-ba25-e50d81cb7680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612c80d4-f7c9-4d51-8c63-89125b3fe2fd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c291ad1-8213-47ce-8230-79044812c3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0601e350-29c4-481b-b660-dcc6e2ef5eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0e6ce7-ab84-4ed5-b9cc-e4bbb1727574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "295a100a-08bf-48e1-85fd-322a142b12a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9479a238-5fa6-4c0b-9b91-46b7f46f6659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "365b6ce4-1750-480f-9e99-a3f0e277e4c9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ecb17c-aa0a-467b-83e5-e70771b6e10b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "561ee1af-1037-4e5c-9cee-521e662f6e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc61d96-026d-4fec-b56c-486e3dbc7de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6875d0f6-babf-4288-aee2-c88e0e8898a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1069a6d5-6102-41e7-a55f-44136c021436",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62927c49-8937-493e-ba8d-ea70bd3e51dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2abb88af-b46f-450e-a19e-d3ce212012f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4e0e25-45e0-4bcc-b6ba-64681d71e2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04cd8771-5b05-4830-ba52-f17fbcddbf40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2943ee01-0cbc-4bdd-a372-6439733c2651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca255a69-a053-4e8f-8ab7-f774671b2bee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "015f515e-3295-43f4-850f-e608f65bd627",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f5b5e23-65eb-4372-9fde-d2bd0f7492d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb60d7c2-d10d-461c-8683-15b786db82ac",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "171024de-8589-4487-a8fd-153902f99da8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0db229ac-346b-43be-9492-dd994047f21b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "318f63b4-615c-4daa-b3e5-061b64583b85"
            }
          }
        ]
      },
      {
        "id": "b5348521-9b71-43b7-87e5-c9d8806bd11f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "83d64c61-85f1-4055-84da-107416943e62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e1c54ab-fb44-4a38-97b3-f879ae956240",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7425eaf-c331-443f-bbd1-7b1b13607736",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26e788f-15af-4793-9c97-60e8e55ece66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b6e371-b190-4201-afa1-f1d400b4f51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae44de5-53b8-4dc2-9383-88c41095cfb5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ec5113-67e5-48cf-96d7-d94b3d45f87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9ddd7b-42b3-4540-92f6-51ecab9d9b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79a0e3d-ebf6-467e-ac7d-2a7408e90159",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a001936-7bc9-4f1b-a6b8-fda89b456edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa45dde-793e-4c0b-9b81-15c97d7124b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11074cd2-6ef6-4470-84ee-9358883b99d4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2470196b-ca8c-4853-b21d-7bfbde6738f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798d0791-91a7-49ba-b027-5e46db63e94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d7f4c5-226a-43fe-bb2b-487c916cc8b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d2a3ac-fea9-43a2-a46c-b0ec3720a0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c300c80-aca1-4c8a-a832-b7e41fa9d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4834fe-8815-44b8-9260-cdf4f71893fd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963b3818-0b33-4995-a50a-4163a7467b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350f3efb-7f75-4753-9dd5-c20daec5d029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a15e728-9a55-4827-b188-ebed23626f8a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1826ffb6-2784-4e49-96a2-9e2132eccf1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e66971-346e-4cdd-8b23-9c5aa9ea6a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f3f5cc-c0bf-4ad0-bbe5-7e8e634cf8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e313189f-a283-4c6e-bb2a-0bda8203ec34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f41086-2f67-4084-8b59-f654e6c79d43",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54795445-a8ad-45ba-b1f8-3705ee8d78bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cf60a6-8566-4228-9d0b-a3e55f4fa026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d218bb-2379-4b3b-a981-4581ac48dbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e297f61c-715f-4d17-b52b-5e0888b3efed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa65f6d8-ea4c-4a6f-867e-09fa51156b51",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513317d1-e16d-42db-9637-a8107da04335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78750376-c4e1-4db9-93e8-e5bfdc353d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afb0494-470e-4d1b-a09d-6ac09deeecba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589740a3-4926-4856-9f2c-48073d2c7723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b6e83e-7f03-4766-a7a6-d55e9eba9453",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50e5f41-38ae-4b86-9faa-c94a78fbf997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19bf4fd5-3ea1-4d18-b3e3-738d44bd03b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664d31f6-c993-46c9-90e1-e024e1f908ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60724f5-187e-4e47-92b3-7b841d33ad47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af276fed-fb51-4dfe-bb8a-eaae64637d34",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbb2935-9410-496b-9fc6-5947bff9f0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1331beaf-d687-404f-bc52-3d5454d3e56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c306d42-5adb-4f83-ab38-881bd91d491d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95ed2d7-2c23-4cc1-af9a-d74b90bf7b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc81050a-b364-4825-8aca-06e4728699a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656f4832-ba3c-4660-8a89-054c527bebd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbca5b87-cf2b-481c-b484-b39c81909d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0790de-08f2-48e4-a44f-4cdff15c6d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfe054f-4238-44f4-8cb6-38350efc6717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04c1e1e-ecd9-4466-a8cd-4f2de1de0939",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427899db-ae10-4d2e-93a6-beaf99331a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7c6c2d-11b6-4f94-a1a1-44a45e66acaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bbafc7-46d7-4098-af8a-d121a541815e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38708a97-c3b6-409a-8732-07068f530db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c931b89-67df-45ea-a1fd-cf3d90fcf7e6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3023bb-7908-4cc4-b3e7-190cdd90237a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca593a0-92e5-45d9-8b02-4ca110bdcb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be60a659-c3d9-4f2a-9bc2-f143e38740d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a40c78d-000c-4810-a2dc-b542f1725524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c731f51b-a660-4123-b389-5f16653d21ae",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a79a50-ea50-487f-9256-1f1e493680b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc6a515-f3b9-466c-adb4-352d914f2748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64407c60-152c-49c0-8df2-4aa64a2bce62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cbb0be-370d-4311-b090-1bcf286bd9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94af5a0-4d6f-47d6-b45b-bc5264cce23d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93acc1b9-b2d2-4986-bba4-54c02671cb47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37817e0-bf09-4ab6-9c82-a8a2cd06ca32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa69d89-3058-4d1f-98d1-5837bd26b0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcebffcd-9bac-49f9-87da-cc0dfee71937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1b909b-8bfb-4e3c-a92d-98d62047e9b7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eda7d25-fd11-4d25-aa3a-e650b0bc4f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a538fe2c-f87c-46ee-84ed-9a7e584d9e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce34de23-dd8f-4c26-bb0c-af21e4d54d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409711bb-f76e-473d-b610-ffb041dddd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2631b67b-cd4e-48fc-a4f0-205f1fed98fb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b867c523-216d-4eeb-a7ec-36a6b61a495b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ffb878-e81c-499e-82c7-5ce64bbe699f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420871d4-7219-4427-bb8d-36cc69d4ba61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82312a10-e640-451e-a37b-2bb1543879b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc14b650-6a19-46c5-a9ca-7a34aab46ba5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959975e7-be61-4c3d-96b7-9da30dc6c2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a20cb69-7018-4e52-96ae-8bbf95496492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d81a8c-e2c3-41e6-813c-a788ecee5356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31056aaa-80b2-4d34-ab05-976d0a58c4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22b175e-eb7f-411b-895d-2d011dc9a8c9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0250902c-f564-4b2f-a282-eefa9d878297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4c2a16-183c-455b-a46c-a40c99facc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171aad35-7100-46be-9b18-c4349af3c1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52386342-59e4-48b5-b559-3f35525130b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bd43d8-1034-4c72-9d85-5eb46859501d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eaec2d-b0bf-4d3c-98b0-45937884c4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92862092-e8e1-4c22-a526-fd930d0fee77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1de0a5e-8804-4f9b-85b8-882fb04c5d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f51e24-cf38-4d94-a00b-775f0d91b7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8144b47-f74d-43a1-a1a8-21f5b036a2ca",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055a2db4-c16c-4045-839c-e9d5144af3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a50c5b5-3efe-4fdb-ab53-b0ff2c345086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea65b8e-4d4b-4ea1-814e-81ed8fb4189c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40cd1c1-9ea9-450c-b9f0-3677c7bc3d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6c042e-930a-46c0-8245-4a9fc6167a91",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95211cc1-c7ba-46dd-b1da-55f4474ba90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531fc377-c848-4eb7-8cb3-1b9981e9df1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5553c13f-c01c-4329-b324-75e7833ae36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505da10e-858b-41cb-8453-e720cefb4f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbc3566-d909-4b9d-a490-e71deafd2968",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf358fdf-7809-46e9-a170-1e23877c8f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed40778-32a1-484a-adb0-cc4e31599490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d28521c-0057-4960-b72a-11fa610577b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dab8dcd-e8d4-4c19-820e-62874979c3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea18e322-de57-4f6d-a6b9-b173138d0d4c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e57046c-97ac-43e6-a992-7756224fb813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f18d4e2f-9594-412d-add0-49ea9f702334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd8247e-9942-4b33-93ec-a9bd2256745c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c7d99a-1edf-409e-b14b-60ee86121d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fa0a2f-7ee0-4aec-9dab-2f0ace3dbf7e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff83ae8a-5f16-4a99-bc0d-ab85c06b84ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f67abf-ceaa-4447-b4ef-54f464f8749c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab047653-e707-40a1-a871-9d0875786497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758a8b98-0bbb-4858-80e9-2906d025305b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bca2f9d-38e4-4937-ba8c-2e6befb4412b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3f5d7e-fc71-4deb-aead-d4a6153e29ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffa8b5d-4106-4e60-be76-43ab4abdde67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973d74bd-7657-4d5d-ab71-1bef0203e8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0f4f69-9f9f-4d4e-8435-bea58b9b19c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be1da03-39cb-4400-8b95-a47bed8daf0f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cd4e4a-dd6e-47b8-a9c8-1059f0c2f3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18907873-be01-41d9-aba9-f9b22b37cd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213f053e-d96d-4cdd-b7ec-d9e1e209a83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a3a7d7-f170-42a2-8edc-86e977b05f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb1566f-319f-48a3-96fe-96e34d934fa8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed16108-a4bc-4c85-9a2b-701fb145cbe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273acae3-7dd9-478f-95f1-35ee31e9ba9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada89e48-be69-4c84-a261-50ccf8b82497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0052e985-0000-4589-ba9c-413087839617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81665179-231e-4d8a-86e9-8c917b78d2ee",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5c9b70-1788-46e6-9c5f-ef5d0d006b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039016c6-cd81-4984-912c-8351764d81b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa30106f-0034-4337-a6c6-0878439a9eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8d0731-5e85-4728-9ddf-4f2e0a98aeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d7a9e9-ed0f-44c2-a643-fe4066fb9ae1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583b49ae-edf8-4910-afb3-3221d8e8d28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab95ddd9-ba2b-4d78-96de-185f736da3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d70f74-6b23-401f-9a12-72192a205055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ea310b-9216-4885-8e33-55f7d1097e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97224f6f-0441-40b4-8864-f00c4c8f71bd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5731cb-3c3a-42dd-8881-b452b1b4fe8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e21d1a-7a02-4b89-828f-b86778b370fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c849ceb-c554-4f71-8074-9a0c6c7b6c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613e58f0-07ec-46d4-a995-5e973be0f28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c69d0-2fd0-45b3-9865-ac6085c333d0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4421d99f-304a-445a-9dd9-dbe2ef237a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5031d4c1-84d9-4a35-9822-18d769236cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814b9468-ea36-44d9-a1c6-002482f1f207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef4fe27-d735-47e5-a0af-183e519e35a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea232c6-53af-4789-bb31-04a22f403bd4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5a8523-9c3b-43ad-bf76-25c4acc86b63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7eecaef-371e-4f2c-a98b-d097b4d1418e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584e5307-8c05-4eb3-8311-dfc82f26b4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20d37d8-6a09-4cd4-a3b4-46482e170142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b1e117-3943-4c33-9ff3-2a56149df142",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47f817b-d48b-4d70-85db-dee24abd6c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72157ee1-e5e9-40b3-bd0c-777e07fd7dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666eba87-c1d3-4588-87d0-463c7211cf72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0534c095-4dc1-44c4-82d1-cc161a3b03dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e7dc47-82b3-40e2-95ae-2f2f44d6638b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189d4aa6-1974-476e-a108-888501cdf62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1425ba-bbed-4a69-9caf-d7b83a0b0dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e45ebf3-2bad-4532-b13b-6fb6cfaa9f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5842d19a-bed5-4c31-aca0-728668c6db1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2c8d4c-a769-4745-819d-23ef18de7b3e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b90daf6-484a-4c0b-8a51-82ba2f7d6f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8456105a-1c39-4e38-9e10-310fa3733d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fb8b4e-d167-4254-b50c-2e8f27395c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2e6cf1-6362-4ba3-9104-270e62c5d705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56c103d-f238-48dc-8e98-b4da72c971ad",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9c2244-958d-45fe-a735-854092850e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce820eb-1d86-4072-a561-1b7823f9c3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429d5266-5438-4295-80a3-ff7ee7a41385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28237d78-81fe-49b8-b6b2-25f8d391facb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b20ba5b-8509-47d1-aced-5d4f4354b045",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99040bf4-c70a-4823-9c3c-2eed8e1fad87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae81e7e6-0c7a-4efa-9d15-713c501070ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a0d26b-6845-4f9c-9871-ae9ff0ffc57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e5104a-41e7-47ee-b74f-61fd1fab6f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a541639-5e9b-4ba8-93c7-9f3c867f44cb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfd0b27-0ebe-4ad8-9dd8-b1f00eeb1794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec3d378-e5d6-40c0-8bab-20bfdb85b64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df19c75-a047-499f-b638-115ad6783610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00aa3970-47eb-49c1-ab32-5dced6039e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f94cc7-2183-4488-8fd9-f7824fa14bdd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6fbff0-15d3-4d6a-937a-a3381ee70be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373b5033-37ca-4969-9675-df7cbf9d4c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc07f5f-4aa6-45c9-88ff-f2f90f9a71d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c743d611-a696-41fd-8b11-22bf90d56e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763a0d83-e91f-488a-9ca4-c6a28004733f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7938e124-acfd-4693-98f6-1834d0f0cd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa221832-2da9-465c-8812-b9c34e38e13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea6cbdb-7855-4153-9102-ef7c9dcb8aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a4a33e-3032-4ed6-b26d-e1749958015e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f98f292-0874-4a86-bd79-3a445ba37797",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f95cf49-0053-49e8-a25c-9a80913d797e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57450bd3-65d4-4c7e-8dc5-9810cd7553d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f98d35f-5de0-4d5b-b899-d7bf69e955a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcf0bce-3fbd-4607-a308-3b0c76df5df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e29d877-6402-48b0-8e17-63d546f79be9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2dbf15-c539-47d3-aa1d-3e07c938608e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53268120-219c-4baf-a099-0deea8f9239d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc53498-5781-4f81-80dc-be6b49bc6824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b1a7fb-b00f-408a-a17b-73598467961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0291df4e-0a1c-46bc-b014-7521356d2e66",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89120bd7-811d-45f7-9ea2-18554476fa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5d30d0-c41c-4e8b-a064-c7f0f7e34b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a026d3-0d02-42a3-bc0d-e81cbf56df27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb1ad5c-54c6-48ff-879a-bedc0ba414ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbfcd34-a634-40ba-938d-2a8aabd912fe",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8c40e4-2541-4972-8630-0bccb1f3b415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fda6d58-bc6d-4b7d-b287-01765912c8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f52b420-dce5-4954-82d5-f8bb758b7df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b01188-a8eb-47e0-b34b-f11ced3d275c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab98d7c-4fd1-4bca-b498-a1fe4edc4643",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df6a20a-4445-48bf-a4d9-90358c540028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31da073-4dce-4da9-a6f3-410d751200e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e29cb-9b7a-494e-a6b6-f7cf985fc42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56472fd3-0665-4fb1-a3b5-676afe20ad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9659a57-57f4-4f94-b6d7-a852814af420",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da3f6d4-3669-49fa-991a-22b9a8516164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907bab3f-6325-45e1-913e-76ce45533adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a524ffa3-4219-4ee1-91c6-4d6618b3ea0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8082815-4ffe-4436-b186-25684b71c996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fed34d9-b106-4abb-b80d-b669b91dcd5d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa4e5e8-9dbf-4481-b218-f0336f09365d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5801fd62-ec99-46d2-aa82-5fa039bdf08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396127ba-8561-4a69-89f4-445835293679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5112d377-53ea-414f-a4cb-dedb53281708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a86c0e5-c19f-4cdf-9eba-15797eb3f8c4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75736003-fd3d-419c-b72b-0a2c55842441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c1e734-c105-4ad6-b933-a59c5a6c10ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d152fe1-2a71-4a13-aed9-6d1c1e6eca06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548160e2-6f98-441e-8bae-7ae855134512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a024019-c690-4606-ac02-b506bd4881f4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad7461c-efda-4838-b41f-8f62367030f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ce8baa-0ba7-476e-9208-ad5f8b151d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb969fe6-72ed-424d-832f-9ee11cc478c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192ec59e-13c2-413d-b02a-5abd6e99e99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76df19b6-03f6-4cf3-a508-f6973431ce46",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d4b0ac-bbf8-455e-8de8-506030d4a65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d917bb7f-89dc-4e09-bf01-5f7376f48895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fa658f-b5f4-45ad-b970-e8bfef4319e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d94a61-155e-48f8-8764-dd3e632d4f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948bf786-918d-44ed-aa3f-6ed502fcccc4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa074e90-ff27-4093-b7f9-6e741930edb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d067985-c37a-4217-8c27-b59e648fb0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2360e882-5fd5-454b-b711-091fad0bea70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a24195-f260-4ba5-ba96-d69785195e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13516263-95a6-471f-bb6e-3021944068c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af90ffb7-c067-4d30-afb2-49e19820efe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796d70ad-06a3-4b2b-befb-b8a93133cd46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33fbbb2-e085-4838-98bc-baceab627bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8231f5-9527-4e4c-86a2-cd2167a0bffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808c00e1-6618-4092-acfa-7a284df26523",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f7e0fa-febb-457c-8ebc-57f9ce83aed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ce6c21-aef6-49e9-bfe0-575ec985cbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed6de03-4600-4ab6-99e6-a908ae175bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77acc2a1-3480-49fa-a1f8-6af710f7685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e316a32-5c74-4bc0-81a2-3d8d2d538184",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57f5a33-46b6-4de1-890d-e6cb03e5605a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99d334b-0d4d-4f78-b235-bf8e4b374da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5595e0-0805-430c-8257-74bc87d05bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d350a8d5-2a70-4dad-8133-5e1487f240ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aeb0ba-0642-4348-9538-f475c9c1969b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d76627-2111-4877-9543-fb6d43da423c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f09514-8253-4396-8627-2e6c41b3147e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80f92b3-3a80-42ae-952d-0b4e6b2b03d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0cb6ee-49b0-4eef-8cc0-3c84f5e6e911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2626a109-e4df-42ae-a3c1-0903fa810554",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27e8a3-54f0-4a52-8155-74bf0367bcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6722b860-2246-4120-91e8-6c14883f4cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d056b14-457e-4b84-8c24-e920bc551124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f35001-821c-484e-9a46-a7ff1bb5a489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7119a50b-8b17-4cf3-98e0-8dfe55167eaf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9e089a-d7b7-463b-a5f3-aac6096a64df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dd69f8-58de-4aaa-bda6-6d90a4d35b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7d08ae-ec32-4fa4-9295-30eabc260b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37a7f43-792a-476d-b591-4af85bcb8671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6969f1-9953-4324-89fa-765acbfd6332",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed35079f-de2c-4a7d-a628-ddd156c5ea70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7654171b-4010-4863-baf5-324ba0f00606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a22c7f-a6f5-460d-96ef-14af6bcb1dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00c3553-0728-4604-ab9e-7cd640944d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea22b1bf-0d70-4de8-b6f9-5d2007c8444e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861e194c-d21e-4020-a917-d2669adc29fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b00a311-0296-4cbc-aceb-f251b8a8fab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1f5a30-9437-4911-b2f7-a596f4d1d14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c8f648-3659-4fdf-ae11-4db82ccd6ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd153dc6-5809-49da-8f2c-02f94f084b62",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a783de7-4651-4b2d-b192-e152a20cf3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b9ffb6-98bb-4ea4-be26-116de6c4d778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d30bc3a-4051-40ac-9fb6-7db56b69e0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca748ba-f718-4424-b472-9bd6315c57ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c5f408-6d6b-4b3d-8e9a-1da21ed3cc33",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37398ffc-a0c0-4707-8dd2-40bda7e58e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ed3f9f-7623-48b5-99c6-d0ccc41e98d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f138b5-c273-4d78-93fa-4c823675900b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704349c1-9b1f-4877-b12f-26882ac054df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d34960-2616-454b-a5b3-a46a63f136ef",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa2e6d4-7522-47c9-9b58-60cf9710cf07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0ccd93-819d-4987-b350-40e4d52c83e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95500403-3c65-4329-be01-9da01b30b1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca720155-2688-4b4a-a75a-2e7b77f63a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ce8a7c-bee9-4175-963b-f30708330405",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cae71e-35db-4cb5-a973-4aca64605d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4a8e53-bcb6-4b82-8b56-1305a59f7ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0ffde9-6bfd-42dd-9096-58df8337c3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefdc34a-f6c0-4609-b3de-2a703284a17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928a9fdf-a0a3-4168-80ed-199c5eb0888c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cf9729-8935-44f6-b474-10230b021e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2b3dd5-279b-4f18-a54d-7eca35a9b45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e83382-8113-48c7-a971-53f55dee8c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33aef3e4-4740-41cf-8fdf-852edc607c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e88231-6197-4a61-bdd5-1d5e26dbf642",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e4705d-0f3f-45ed-a3ef-14f44ee1620a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b049ee31-7a88-41ab-80eb-ec460e1f52e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd417e4e-a052-40b4-bb95-e4d43f6038c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c2d3e4-32af-471f-ae46-b367374b2083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ccf2f9-68db-43ea-a36b-4cc1e7b2979f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99818e7b-f9ca-4eef-b3c3-bf9556c84ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24b2992-275c-407d-afec-40aba43aed5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ad8b9-8d39-43d4-bbcb-09bf58664816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117d6542-5d90-48de-9a2a-01bfe3bd8b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a023e6a-bb99-4344-9756-086a4229a844",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c24e45-3c3f-4311-b4af-3c96c5f02f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07aca8a3-281b-4c29-bb82-8ec40a47bdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e083599-2988-497d-ad30-4f037014ca4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedd9668-b9ea-4b15-b5d7-a8116867eecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc457e8f-4a4e-4f8d-8ac7-2bb184dd3949",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe2d079-76c4-4cb9-9700-e4dc206122e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b330d58a-6b18-417b-8707-7a2cdfac63a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3186d4f-193f-40e3-9b90-7c403e9e85ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5495251-bf8f-4ca2-a660-7714dbd6a688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303343e1-ef96-4a86-bad6-3cdd1bafdc40",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1280c02f-ed0d-4cbe-a868-109bfcafc7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1e099f-d574-4af7-8536-3a13401b408a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be42c989-cb57-491f-ba89-f88520f8aa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777bde7f-3134-4426-9990-8b6f633942ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe3a3b2-e230-42a1-ac63-f9b4051b7115",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad601e39-877d-4c8a-84b9-47531b37466b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb46eecf-1b49-43ac-b7a6-9deaf983f6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2850cf-6503-4693-9a88-8f15f7b7f1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8768a1-d854-46f5-ae72-b9f9176193a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9150851b-6667-4971-9155-344ce5cdbf50",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec55df3-eab6-43bc-b518-93c02a4cced8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b9e980-814c-405c-80cc-ecfd5bf214ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cc79d6-9453-4e73-8463-ea060ad3fd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61d4469-c4d8-4d17-afee-195b6abf4468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c3d1b-3dc4-4699-add9-12b0fecf62a7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772ff925-3a05-4d5a-a143-dbba879b97f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3ac4f4-cb21-4f77-a7d3-9ff6f8931447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f2812e-8e6d-4fd1-9894-5fcf09c8f105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34336929-5074-41f7-b5ba-0b2cf02aad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd75a347-393e-47e7-a9a4-243e820ca0d4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793e89d9-428c-4881-b680-9492c4e44591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab078ddd-4f48-4667-add7-7e05eac3aefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0794066b-8618-47dd-bd10-e11b3aa81f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c9f19b-35bd-42a8-98ba-288ac7283f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ea66e0-e572-44d6-b417-675f3bc611f5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf6bff9-f25c-421e-87ac-6716970a2f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9dca88d-1efb-4ed0-b798-aecd245f524a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3361362-47f5-4d2f-aacf-440e884c2aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ea7c46-c78b-475f-a76a-cf842db53cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73d21f3-8cd3-4aed-bff4-653d696e7de9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6478a9-0fc8-4451-9aa2-980b5883bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a615b0d-0838-4663-8394-7b390d23fecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc97c7e-32e5-4752-9ed9-8326169774d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566ec083-183a-43dc-bc00-6ba42a49db83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe7fd14-f0ad-4ece-bc89-9e5a1a60f8cc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76733058-43b0-4b1c-8a41-6129b0ccb3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b20dca6-939c-4bc5-b9e3-bc1e718ec40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d8abb-dd8d-49b4-b372-874cc97e3663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca6f34e-b321-4fa5-804b-61c2932095ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2803442-d8ad-4e9a-b992-c0c065ee28ff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81cb959-677e-4a95-bdb4-534eed8988b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50700157-b15e-410a-9cf4-01b76590f1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff9daf6-dafb-4ff8-9415-205ff44ceefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38b5f0a-db67-4470-ae3f-6b11a611c391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6085d-8322-45e7-aac8-f2b0ed39edb1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d510a19-3e0a-4ad5-b2de-4776742c6d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb601a48-4af7-4b1e-915e-ed86c3f6db9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386e1464-617f-4551-9ff6-3222fbbde542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19560917-4cd9-452b-9a9d-763d99b61cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f26192-ad39-4214-97fa-df347e01891a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf376ec-6158-4110-a840-a49d715605b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd6c1d8a-99a4-451e-b0e2-974d046ff2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34faf236-7614-49bc-97d7-0da36c9c3b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc68ac59-66b4-4b16-90dc-a55535efd014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7461d4cb-2ab1-4838-a380-78a33414f217",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73262e15-6d07-4d7c-93d5-10b11c627d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53875736-a41b-4658-b03b-e37e0587f6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4026df-65e4-49f1-b7dd-f6a7ef299543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c07822a-3f44-47af-affa-b2692f54e6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeb88f4-7352-4a5e-a864-d7426c7fa9b0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d161faee-973c-4fa3-aee1-973c3a9a3c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa8dbf3-b58c-45cc-a474-1ed97330267a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2c3d4f-a62d-43de-8bd2-a59fff15b68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba81d05-bb3e-4a04-be17-5f56174aa06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3628b6f-2d3a-41b7-a387-0ce21e356285",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eea2607-07b6-422d-a9a8-819d2c0c4cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6241a283-0a30-412c-8642-9a68a31e980d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8625fcb-c3b5-4424-b1de-ef4bc3512e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fcf059-0cc0-487e-9038-63073e821f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da57cdb-0ba0-4e7d-a399-7196b86d53dd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cb9396-5d40-4e62-bcc8-f580e638ec14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f851e6-65e9-418b-8850-5273e4c1954f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb03981-bc1e-49f6-83a4-7febba4fe6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9876fe-5b3b-4c03-977c-c04d0f412b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a54e8d4-67e9-48d6-bc73-f80597d43ab1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375e1871-ec94-48e9-b0b6-9615d6105b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83954d2-7749-43c9-97aa-ed216d328a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4765a0ae-e3b5-4d7e-b0ae-89aeff3caaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa0ccc4-86d1-4cd2-a5a6-2363a42b59b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f9fed7-c415-442a-b2c2-5d498b2f4d06",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c693731-60de-49a6-8b97-8104e13030ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02760e1b-5999-4828-84e3-2cb33e7cf899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb92855-b20f-4276-8da2-67d50ba443b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf6b70d-6971-4626-9875-1c976b2ad66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28f4d79-5d0e-42da-b784-0675728b74f1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd90997a-63d5-436f-8547-0799877dfce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5145a427-d528-43a6-be78-89a3a8a7f039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6043b3c2-ab97-42c2-8833-83df06c92c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efef13c6-2bac-4ad5-a0c1-996467d7676c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2de4189-9379-474a-9c46-e5bc1d7103ce",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bc3797-ff46-43f2-9d81-373b70d71662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e5d478-0fbc-454e-9f7d-46a3ab5fde09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3ba2c9-57ed-4cc9-8635-fc28329e168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b161125-3b93-4703-888a-dfbc56c5114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5969a2a-255a-4766-8105-b3563edeec60",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71473d05-ebaf-4991-8ae6-c4c86ae647bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78f9c08-100d-48ea-a3d0-047a6af21732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b764a239-e492-400b-b421-476d5b55d51e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1545d5-7223-41d1-b782-b2c7da353276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d373c77-5ead-4f04-8098-5c84367c64b0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5e82ab-a3c9-4635-a3c8-eef4717f4b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ace2217-e4c9-431a-a46f-a28461a21c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5badb6e1-2103-485d-b5ab-8b72e08bca93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8375928-44db-4b8c-b05f-21e2424a4b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a666cb29-da10-4b2f-b1d5-82f39e607008",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e94abe2-93f1-4c87-b9f5-b60b791bce73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df977594-f73f-4c21-963a-f58543abac1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3735b3-5d55-4f72-afcd-8baec28f5a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8305bc8-0b84-44a1-a9ec-d70b1cc9e333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff76493-dc86-4e70-bf6d-c80e319743e8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f268e642-b1bc-4771-8f00-db4c3688123e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8011e93-2f8d-448e-b552-9e2db7c61b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c043de39-36aa-4790-80cb-f4bcd7da07ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08fb970-3eb4-43e4-b02d-4d4053989cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc406e2a-d9e9-407d-b1ed-0a3394f98d13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5ecfab-59a4-4bb5-8c67-6ad719db81b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b91cc96-fa8e-48fe-86bf-baddbf9ce666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0b100f-04bd-413c-8dcc-a02e55837f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086dc14b-4704-4eb3-980d-2caf6bb9877b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5f9c8f-5156-40b6-844e-87110e027910",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37d5dc1-1304-49dc-811b-bfb85a339591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc7b379-586a-4376-94ec-920e04d7ba1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535bccee-e863-44c0-b282-6625479e4147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f54cd4f-e199-426f-8c31-42e3c5dceb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243fe0da-70a1-4d05-b4fa-2dc4a0593a73",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f386d-0a95-4ef3-942b-0a92ce6a1e62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a794056a-f4d8-49b1-8cab-d65d9c91c14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a59a50d-a01b-4fef-9af8-d66dc15790f1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b984934-2f2b-4158-8722-d3001c9c21dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4618ad-0a9d-4cc0-a324-fbf7e91a91b7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517313aa-cda4-45bc-9585-41c41d8dd37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651dee8e-972d-4e97-a353-e0c1f58eabc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67252bb7-75a0-44b8-b9d3-7d95fcb82c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1a1ece-1379-43eb-90aa-2608b9c731b4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49c6f5f4-dc98-4e54-bbc6-245c1167760d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c567be88-5ea8-428e-b4db-886fdb9fa5f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5048734-5e66-4195-a562-c749365d63ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7411ec9d-87d3-4985-ac6b-e59a9dba52e0"
                    }
                  }
                ]
              },
              {
                "id": "656ae011-0baf-4d02-911c-6cfa32ecde12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61e8b439-5ec4-4f15-b8b1-c49fc7877c3e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba038c4-5f8e-41fd-878c-6cf7583d7483",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0efbca33-2714-4b95-bb3a-42925a9a66f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17da3053-7b72-4c62-b79c-18b78d14bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "030658b0-4d9a-46e1-8bce-73b9fd591d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7949e843-fd28-4c62-aa2e-c8a7d63c9a2f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f717299-a088-4b6a-89b4-01c0fd055dfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fe3b65af-c3e9-416f-863b-f5fe63ecba99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bef353c-9953-485f-9590-3d7b9fb40e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21fe2768-77a8-486b-bc9f-07d6258e85a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9e65620-5105-4b7d-857f-5c999386f447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b356d979-d845-4bfb-9ae9-08631eedac9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d1a6c0a-18ad-4876-95a0-32af6bccf46f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6910307b-34f8-4715-8825-6b0fde1ba416"
                    }
                  }
                ]
              },
              {
                "id": "6881541c-55fc-467b-894d-52fe8eb51f22",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eece573d-c72a-4870-bb83-ad32ce6d0487",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae12b530-1b1f-401a-a850-6f5787a262ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7d42e9f9-0b96-4d74-95ad-ff3cb167c617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365a2891-f821-46fe-8e99-de1b82ff1406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6bedf5-9083-4851-ba49-c040c70c3c97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7070270-7c89-46ed-9302-80320ce0e207",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1851423d-a61d-448e-871e-b0ea411d0013",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0a0e2c5-d9a8-4524-903e-44de18db4c1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b74c1cea-b613-4d66-8088-1df4fe063bc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef5c63ee-012e-442e-9dd0-407e28c60b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d0a5df2-658a-43ec-97c5-927e761d0f83"
                    }
                  }
                ]
              },
              {
                "id": "bd2e4db2-5093-406f-80ff-e44e9cfd8198",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75461413-fd9f-4384-98b1-66c15ce87178",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "19a50715-4c2b-4d4c-9dc5-b9d01a257225"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf2de610-8f19-48fc-884f-a7442bc0fe3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71388a95-56cf-4584-a409-efc9267c520d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b92721d0-8679-41d4-ae0b-60c7941780eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b661cfc9-ea09-4824-b134-9e6f189b6446"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddfc6a50-6ebd-4c90-85b5-b345ada3a765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fd1617d-5be0-4e61-936e-8458d2c43fd7"
            }
          }
        ]
      },
      {
        "id": "90d3117a-48c4-4188-99d3-3cbc47f91e6b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "93eb8333-37bf-43b3-80f6-1f1453e0aa22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bf58022-0233-4c00-9aa8-95ead4c42171",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d8c9d4a-fdb7-421e-9ade-a5c67fc7a6fe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c1c9a1-e7ff-41f3-b6da-29f081f7cb1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3510a1ce-5f8f-4a6f-bff2-91cd033191fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380ae225-b7a9-461c-a43b-a7a57bb1a060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83e9fbc6-a4e6-4d21-9fc0-e34b5a518436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981594fa-fe9d-4d88-973b-c952be47ad19",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d308d713-8685-4ae2-8c86-1dd0f58511dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba2f4551-dad6-474e-b160-1d9ec01a40c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f95ea92-5828-46f8-acc8-85f26547f299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "586458c2-e39b-43cb-865d-5c028e5623b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21b5d7bf-fe06-4509-bf12-8162646190f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab0a2a54-8c1c-42d6-ac2b-a164f037e3ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1f70667-3b36-4e7b-803a-6c3d30665c2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2ab49c5-69c1-4f49-a012-3439ab0cbda1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7367fb88-09c2-42bd-8dd9-0dc7091dedbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ceba4ba5-7d7b-4a7e-8c7a-f37ecc88ae39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5af23afc-0c29-478e-a2fc-fa26092d510d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93f4a6d3-801f-4f4e-bf04-4f6095776df1"
            }
          }
        ]
      },
      {
        "id": "ff3aafcc-1652-4ce6-a507-a86992f94b9d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6b345aff-7f11-4560-9c4f-c5505ae3e65c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d94a7eb7-d2d7-4136-b887-dcb6e1c340b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b0b83ac-4180-4fdd-8863-6e8c9c1bdc06",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af81815-d043-46c1-acef-4a047e034806",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d181924b-cef0-40e7-a67a-5829fd6906fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b234e680-af74-4035-b547-577c76aa4e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64dccef0-682f-4828-8bab-c2e6875c53cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d553c328-4bb7-4878-a42f-e45e79c476a3",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a911e1d-29e9-48b6-ac31-1617bada1505",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6881d36a-45b0-433f-946a-59e71234cb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e74e5df-8cfd-4b7e-9a68-8109a2b05934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64472b18-980a-4578-923e-25866e1da41e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f365fc-09a0-4659-b005-87d3e4a244e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da8fecde-7662-4bbe-8dca-de4ec501ced9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "902ef68e-0e3d-4051-a0cb-7b6a1cb0b86a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19759169-aeb8-4f3c-bd4e-58c98108a5fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3d69ccc-5ba9-4a03-b489-edb34b4dbc1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "781371e7-fc59-41ec-b955-f81e5e198793"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c46f6a49-b145-4992-8f41-3982cb0d96ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b68cf5a7-7b4d-4c23-bfa3-240ebf633721"
            }
          }
        ]
      },
      {
        "id": "9d2a3d64-7a7d-4408-b598-d66e28ec39d3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7aeea445-4487-4e99-b629-6ccb35ddc722",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4864fd77-4902-41db-a56e-a7eff892736b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90c4598b-3acc-4f20-8cf8-d12a2e519df1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6e59bc-f918-4fa4-ae4a-d13bbe9d19a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9239ce9-9ac7-41eb-bdb3-5ac00568cc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a1dc33-3c7d-4248-9996-25a861da3873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e079de92-3189-4dc0-bfdf-07397d9b4449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c67bf3-5e26-43c5-b437-a0ea7a79a738",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f784d51-a3f9-4bbb-a036-370808446762",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "134dc717-d480-4d66-9977-df83291f32b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff13da0-b66d-4c7c-a9b5-47adda68fee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59300fcb-ec69-4150-b937-d6a48c3211e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d37e78f1-60bb-415d-a718-14f5bf887071",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "805ac202-35c9-45c9-82d5-986d3d289370"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63834a03-0592-4174-9843-f4f707e1ee0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b90ae504-8e0b-4207-abd9-bac40420233f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8755ded0-d68b-453d-b7ba-0d412a18d0fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f620be4-ab65-4874-9149-31a0f93bfe3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3f1bb86-530c-4e99-b74b-289b625d0a39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78460b9f-8aac-4b0e-9bd1-b45b65bcd5cc"
            }
          }
        ]
      },
      {
        "id": "9c623c40-a06d-47da-aaaf-c3e0aa88c7d0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73518cd3-7c90-41a3-99cd-ae93161540d8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45d1c857-4d22-41c4-80d3-9f4ce40fb4b7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8ffbc3e1-9272-4fc6-a10e-df4f310a8797",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c398a18-f773-434b-b5b5-81f729f775ca",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5d354fa-b218-4a01-9668-77050bcba64f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.838461538461539,
      "responseMin": 3,
      "responseMax": 307,
      "responseSd": 41.287696779130755,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684197427249,
      "completed": 1684197441358
    },
    "executions": [
      {
        "id": "829f5973-8c1c-49fc-a506-2a86d14dcb38",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "693ee8e5-ae0d-4ae0-9328-641e386c4a56",
          "httpRequestId": "1e78d523-74d8-469a-8854-229241605f43"
        },
        "item": {
          "id": "829f5973-8c1c-49fc-a506-2a86d14dcb38",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fe323941-9da7-4b67-a863-e7bf69529983",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "b60340c7-8c21-4266-ac70-d0aba3327ac5",
        "cursor": {
          "ref": "353cc58d-95d8-4337-aa1d-14a17a825d24",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2be6da1c-3485-448c-b28c-c5a94e79153e"
        },
        "item": {
          "id": "b60340c7-8c21-4266-ac70-d0aba3327ac5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "449ace20-b183-409c-99ae-4e79a2329e01",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "ffa82536-07d9-4e59-bca8-d1f44fabd995",
        "cursor": {
          "ref": "aefc556e-b82e-4fad-a306-c487e2ca8eab",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "414aa8ff-6c0e-4186-93ee-4debdd2344f5"
        },
        "item": {
          "id": "ffa82536-07d9-4e59-bca8-d1f44fabd995",
          "name": "did_json"
        },
        "response": {
          "id": "28c9793a-5d0b-4153-beca-888e1aed3bd4",
          "status": "OK",
          "code": 200,
          "responseTime": 211,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eaf41e-fa7b-490e-897a-65bad060e608",
        "cursor": {
          "ref": "4b025be7-4157-46da-beed-36355d46c86f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3f19db0-5a17-4032-8c13-09202f02ca0b"
        },
        "item": {
          "id": "52eaf41e-fa7b-490e-897a-65bad060e608",
          "name": "did:invalid"
        },
        "response": {
          "id": "82791609-a1d0-434a-99f2-971eed3be186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eaf41e-fa7b-490e-897a-65bad060e608",
        "cursor": {
          "ref": "4b025be7-4157-46da-beed-36355d46c86f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3f19db0-5a17-4032-8c13-09202f02ca0b"
        },
        "item": {
          "id": "52eaf41e-fa7b-490e-897a-65bad060e608",
          "name": "did:invalid"
        },
        "response": {
          "id": "82791609-a1d0-434a-99f2-971eed3be186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5826978b-05fa-4cb4-9935-bba527d7623a",
        "cursor": {
          "ref": "a639b4e9-b3ae-4ea1-9403-284b4b780f5b",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "58d1cb62-1b50-4570-a9c8-495526aa4377"
        },
        "item": {
          "id": "5826978b-05fa-4cb4-9935-bba527d7623a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9556f573-843d-4397-baa4-ee4dceb53bb8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da49cafa-0764-4990-a1c7-e779281c40cf",
        "cursor": {
          "ref": "62ca6dd2-3682-44b5-a930-73cbbc4f537a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "64898588-9b3e-4a86-9106-e08b06267684"
        },
        "item": {
          "id": "da49cafa-0764-4990-a1c7-e779281c40cf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f1698bb0-aab2-484f-a57c-ec806c8d6114",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e27ca9-7d60-45f1-a85f-8927d0a01133",
        "cursor": {
          "ref": "c800e8aa-e528-4d31-87bb-cefb6289e3c4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "821d3a16-de07-4716-9658-3e1614f23b3e"
        },
        "item": {
          "id": "66e27ca9-7d60-45f1-a85f-8927d0a01133",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b55e084-ebc4-44b9-abfe-eec81c6703b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06493009-4a9f-48f2-9240-5acca01fcba1",
        "cursor": {
          "ref": "c6ec7a2f-5084-4196-9e11-0b4cefab6ab0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "118686b1-616c-486b-8bd9-a4d481d913a3"
        },
        "item": {
          "id": "06493009-4a9f-48f2-9240-5acca01fcba1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "72f81185-e1e7-460b-aef3-ec61cd1b4410",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06493009-4a9f-48f2-9240-5acca01fcba1",
        "cursor": {
          "ref": "c6ec7a2f-5084-4196-9e11-0b4cefab6ab0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "118686b1-616c-486b-8bd9-a4d481d913a3"
        },
        "item": {
          "id": "06493009-4a9f-48f2-9240-5acca01fcba1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "72f81185-e1e7-460b-aef3-ec61cd1b4410",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99c5cdd-e7d9-4100-b7e7-946e53f28582",
        "cursor": {
          "ref": "e82cfe36-fc10-41ff-8b15-c9ab95454334",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "07641300-dc61-4d93-9808-0f59019c3b0f"
        },
        "item": {
          "id": "c99c5cdd-e7d9-4100-b7e7-946e53f28582",
          "name": "identifiers"
        },
        "response": {
          "id": "87eea63c-211f-4b70-b701-4af8e30d5b5d",
          "status": "OK",
          "code": 200,
          "responseTime": 203,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5087123-b1ba-4093-a4d2-2032867f2fac",
        "cursor": {
          "ref": "597d8b8d-b41c-43a9-93bd-c07549eba1d8",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fef8ba2e-861c-46c2-9f77-ada65d0889e0"
        },
        "item": {
          "id": "b5087123-b1ba-4093-a4d2-2032867f2fac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c3f6607-84c2-4129-b0b6-57881c82a859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5087123-b1ba-4093-a4d2-2032867f2fac",
        "cursor": {
          "ref": "597d8b8d-b41c-43a9-93bd-c07549eba1d8",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fef8ba2e-861c-46c2-9f77-ada65d0889e0"
        },
        "item": {
          "id": "b5087123-b1ba-4093-a4d2-2032867f2fac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c3f6607-84c2-4129-b0b6-57881c82a859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5048f684-78f4-4b7c-82f3-b44f1aaa0e4b",
        "cursor": {
          "ref": "774df186-98a0-4601-b8a6-beae5634d730",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b3bad84d-c4be-4306-aaab-65cbba303ef2"
        },
        "item": {
          "id": "5048f684-78f4-4b7c-82f3-b44f1aaa0e4b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "22004e87-6474-494e-90e6-855214326913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25582a8d-e161-48dd-b076-96c180c7e9af",
        "cursor": {
          "ref": "62ea7d3d-05be-42ae-86bc-7e3f02315bfc",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "961f6495-5fbb-431e-82d3-a9f33c7419f9"
        },
        "item": {
          "id": "25582a8d-e161-48dd-b076-96c180c7e9af",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c42d3838-8be3-4521-9623-33b5b2863aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fc2314-cb37-487d-ae34-e711932152bd",
        "cursor": {
          "ref": "ff1ed7c2-9428-4c2b-b1e9-11b2a14976c4",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "32998c93-ec9b-4b46-b959-413199d5f716"
        },
        "item": {
          "id": "70fc2314-cb37-487d-ae34-e711932152bd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e35917f3-37d4-4cea-bccc-f217d1b614d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069eb2b9-7319-4c61-b72e-b726eddf5587",
        "cursor": {
          "ref": "eabb80bd-3d9d-4e87-9fa8-5586dce1a464",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c099246e-89ac-4480-8c0e-191e26b63929"
        },
        "item": {
          "id": "069eb2b9-7319-4c61-b72e-b726eddf5587",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "87eaf411-398e-4ef0-a4f0-36b1df8cb292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa262da-1091-4b87-958b-952e633ba112",
        "cursor": {
          "ref": "17b5d37b-915b-4fc5-85ed-131d90c1ea10",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88d698c5-cbeb-4b3a-8085-d460bdc41bf5"
        },
        "item": {
          "id": "6fa262da-1091-4b87-958b-952e633ba112",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c26045fc-4aef-4c0a-b946-c530e6c0e8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c7cacd-4686-482a-a67e-9cec9f73bc01",
        "cursor": {
          "ref": "efe96b4b-ade3-449e-aa2f-320b3f2101be",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "59ead132-7eba-4dbd-8093-b0adf66d3e75"
        },
        "item": {
          "id": "11c7cacd-4686-482a-a67e-9cec9f73bc01",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "360660eb-49dc-4332-9742-e1d0172da766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b6d9bc-ad5c-4901-b7c7-329f17f87e98",
        "cursor": {
          "ref": "435d39f2-46c4-484f-806e-d5a18b89fa72",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "640fe027-b59b-4c1c-b803-ca0cd0328ab1"
        },
        "item": {
          "id": "67b6d9bc-ad5c-4901-b7c7-329f17f87e98",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "019d0b3f-0802-4099-97d4-c8c10fea75a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe12a78-9520-473c-a957-b72db372c0ac",
        "cursor": {
          "ref": "1d4dad4c-2b99-43ff-8f9c-a1b85380efce",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "10baf7c8-0418-43e2-92a2-677225b01bc4"
        },
        "item": {
          "id": "5fe12a78-9520-473c-a957-b72db372c0ac",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ec18cee3-92f8-47a3-95b5-de2c32a84cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e10593-a9a3-44be-9a39-2ecd240726f2",
        "cursor": {
          "ref": "6f3cfa83-841e-40ee-9b86-6c96a8621855",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "341b17bd-73d2-4b9d-a179-175e7b5fd85d"
        },
        "item": {
          "id": "f8e10593-a9a3-44be-9a39-2ecd240726f2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8d451e08-2b5f-4a93-a6c6-f28d9ba67f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52311836-d248-471b-b7c7-6a2c3708899e",
        "cursor": {
          "ref": "6c863627-82df-4b74-9e4a-f28ff0602afb",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "482cd69d-1d5d-41af-98e7-cf3ef77df606"
        },
        "item": {
          "id": "52311836-d248-471b-b7c7-6a2c3708899e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e2ee9fb7-b335-4246-b030-80dbbc58da03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306a7bcc-9014-4a9c-bcbd-1d566355dd31",
        "cursor": {
          "ref": "f1085fb8-093c-42e2-a97f-2985606e5120",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "67df49f4-66ce-4afa-963e-c92324584e10"
        },
        "item": {
          "id": "306a7bcc-9014-4a9c-bcbd-1d566355dd31",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dd218a19-ab99-4180-86b4-0bd8da2bcc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127bd27b-d3f9-4d59-b4a4-6f5ffaa88901",
        "cursor": {
          "ref": "2d3442ad-4983-4783-8ad0-c75643c2c7e0",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "77886209-c46f-4cab-b087-985f8177f439"
        },
        "item": {
          "id": "127bd27b-d3f9-4d59-b4a4-6f5ffaa88901",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "13a21274-2f13-4606-9769-1151fa9f1e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5501eafc-ac16-4e1d-89a8-3fc184f46c10",
        "cursor": {
          "ref": "0c63c061-8fed-42a9-b0fc-14de8201b48a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "243fe0cd-4491-434c-9381-add60d36c2c8"
        },
        "item": {
          "id": "5501eafc-ac16-4e1d-89a8-3fc184f46c10",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b19bb227-5534-401a-b7dc-3cf937517d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841e47cc-7fba-4a26-b35e-bed3f8519c76",
        "cursor": {
          "ref": "7992e0d6-0b04-4bb1-b480-d36f1cbf72e0",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4a59eafd-e531-4301-b6ed-3693da6c8361"
        },
        "item": {
          "id": "841e47cc-7fba-4a26-b35e-bed3f8519c76",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3ec24936-072d-4fe0-a9d1-b3220a56dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa228b-ece0-408d-84ab-89f9272d40db",
        "cursor": {
          "ref": "e7ac2a93-a6f5-4cdf-ae2e-1188bb017993",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe3fa5b5-e8e6-4a4a-999a-d050e0c25661"
        },
        "item": {
          "id": "10fa228b-ece0-408d-84ab-89f9272d40db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d83a8c10-d3fa-4d27-8c7c-8a521d7b6157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e636f4-099e-4a6f-a805-5467c31b91e1",
        "cursor": {
          "ref": "024d1ce6-1766-43d5-8c4f-1b10c1b434a5",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4091332c-f6b9-40b3-9029-133f066ba0e0"
        },
        "item": {
          "id": "02e636f4-099e-4a6f-a805-5467c31b91e1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6f95ce11-4370-41e0-98aa-faf3b0b4f231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f9fc2e-fb9a-42f0-96a6-2c19ff675091",
        "cursor": {
          "ref": "30bddf6a-bcf9-465f-9c16-04c864603d3a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "67ab133c-db45-49fc-abe5-52bba8ab2969"
        },
        "item": {
          "id": "84f9fc2e-fb9a-42f0-96a6-2c19ff675091",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b9b286e8-b031-4302-8ae3-e677a92b61cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a6ee8-ccbb-4639-bc37-d9ef896ea10e",
        "cursor": {
          "ref": "1ed8777e-e2fc-4e4e-b64e-8681be6c7788",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cc2cfea3-63c1-4172-b385-a021f076377c"
        },
        "item": {
          "id": "f35a6ee8-ccbb-4639-bc37-d9ef896ea10e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a261d158-5b40-42af-a08f-fa08b777e5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd6f0c3-b19c-4758-b127-cde19a4d70f1",
        "cursor": {
          "ref": "03929b0e-6860-4c08-9dd0-3fb97053b74b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "933a45b1-0b24-467c-bfd2-dae2f27b7d7d"
        },
        "item": {
          "id": "7dd6f0c3-b19c-4758-b127-cde19a4d70f1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bfe1fb40-bdbc-4e9b-b870-0ee676849d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b6efe1-cc0c-412f-b1e8-464cf0213ac7",
        "cursor": {
          "ref": "c300b261-8c06-4e30-ba5a-4441018680cf",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ed7fa7ae-dd2c-4c95-bc52-b71c44a97f46"
        },
        "item": {
          "id": "22b6efe1-cc0c-412f-b1e8-464cf0213ac7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d1cfc89e-10ff-4b66-b145-2704f8fcc26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d173e4-1f62-4698-befa-fe0b4a65046c",
        "cursor": {
          "ref": "4bd493cb-4863-4e4a-b7b9-858f390b8897",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "afc0290e-74f3-48fb-8d58-444d83d90040"
        },
        "item": {
          "id": "38d173e4-1f62-4698-befa-fe0b4a65046c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "70720eb4-97e8-49c5-bc3c-9167796da261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bb45f0-ccc0-4e07-9825-21eaf96f2487",
        "cursor": {
          "ref": "26ffa150-49e7-483c-90ed-b57ed3b7897d",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "90a946b1-6775-44c7-a2c0-2c2e6095ceb8"
        },
        "item": {
          "id": "73bb45f0-ccc0-4e07-9825-21eaf96f2487",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6bb3c7d8-850e-4871-b37b-6a2f83725a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d57a185-ef2b-496f-b390-6095b20235e5",
        "cursor": {
          "ref": "9266e130-6fcf-4ce0-9e03-fa51d1d262a0",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "63353d67-0220-4664-bbf0-8cd79e9fc3f2"
        },
        "item": {
          "id": "2d57a185-ef2b-496f-b390-6095b20235e5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "064df111-94da-4ea7-bf66-240d25246788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f620e6-0a81-4233-a0b7-e5bdaae5df73",
        "cursor": {
          "ref": "387e77f6-939a-4940-8a2f-c4e40655e108",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "33ce8e13-ef82-4ea1-bd5b-6509a60b041a"
        },
        "item": {
          "id": "43f620e6-0a81-4233-a0b7-e5bdaae5df73",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e0820a62-a00e-464a-974b-2d75ffe0c121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eb40f3-5ad9-455d-aaa5-c4a5f35fc224",
        "cursor": {
          "ref": "5c2aaf31-85f7-4ff6-ac3c-a11cb547dc95",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1209c538-e0db-4708-b96d-434a0387fdf9"
        },
        "item": {
          "id": "79eb40f3-5ad9-455d-aaa5-c4a5f35fc224",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b42e5e3f-6c8e-4318-a9a0-3c8485a78a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3893b7-fbe6-4d51-8553-adb592e39948",
        "cursor": {
          "ref": "2232ccf7-fb35-4902-b18a-f0724f8c75ae",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4b218cd2-1374-46dc-b6c9-d7c0cbb9104e"
        },
        "item": {
          "id": "7f3893b7-fbe6-4d51-8553-adb592e39948",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8c9e1fc7-10b8-4455-b6c2-d94b357d7372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e917cdf-f8fd-4515-bdda-104bb8920afd",
        "cursor": {
          "ref": "6d13e2ea-5305-4d53-ae76-4aff5934f2ef",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11b3d6b6-f5db-4bf8-8721-6d257c840100"
        },
        "item": {
          "id": "5e917cdf-f8fd-4515-bdda-104bb8920afd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "203a0ae6-d5d5-4628-8f1a-9ff9119216ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c989e8-a742-4768-82dc-989a1177ec98",
        "cursor": {
          "ref": "f9802620-775d-4874-bbe7-f8c066650b01",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "412411a6-ed35-4c82-a7d8-88efd737efee"
        },
        "item": {
          "id": "75c989e8-a742-4768-82dc-989a1177ec98",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6b1dae7f-72ee-4e16-bb7c-62c4c58e912f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83e80cb-7498-4bee-a3d3-3341112a5a3e",
        "cursor": {
          "ref": "1a86d165-056c-4804-8778-a1e27cb93a6b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e1daefc8-6948-470a-bee7-afa2c20afb0f"
        },
        "item": {
          "id": "d83e80cb-7498-4bee-a3d3-3341112a5a3e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9b786494-b5ae-4126-bc23-7d61e4ab3e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd91c77d-e98b-4ea6-9c39-0260e1d2b225",
        "cursor": {
          "ref": "7b047548-f168-4d2c-a94e-1a7878e897c9",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8db35829-41e0-4218-a5ee-41aedeac9979"
        },
        "item": {
          "id": "cd91c77d-e98b-4ea6-9c39-0260e1d2b225",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d5fe20f-a615-4c58-b3fa-8df3fdabf6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c9034-0739-433e-95b5-fdc239eb3d19",
        "cursor": {
          "ref": "208936af-c44a-49c4-ad27-ef5287858310",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e7836ace-a4ac-461c-963c-aeb122a57d50"
        },
        "item": {
          "id": "0d7c9034-0739-433e-95b5-fdc239eb3d19",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bdd4c586-9105-42d9-ad95-669d038dba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a4b6f4-f3d6-4662-b6aa-8fc67cb78fad",
        "cursor": {
          "ref": "15ee6c2c-54b6-48a2-8d9a-4f87e3a8949d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "87085716-841b-482e-a324-3bc933fa1c9f"
        },
        "item": {
          "id": "c7a4b6f4-f3d6-4662-b6aa-8fc67cb78fad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ae006ec1-f9f3-43c5-8509-6834f909ce2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae26e41-12f2-4081-baa3-5deafa685336",
        "cursor": {
          "ref": "63eef2d4-c746-41c9-8c24-f453fec82c27",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8122d75d-d51b-4dd3-b796-a404049b16c6"
        },
        "item": {
          "id": "0ae26e41-12f2-4081-baa3-5deafa685336",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cbfd6201-5f8e-4e53-83db-b10494021b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f7e37e-7bef-4b1a-ba06-9e6b2b0db750",
        "cursor": {
          "ref": "1b41e7da-078c-4efe-9206-b264c92c152e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "daaa1144-8550-4e3c-b365-6aa0bcb1073c"
        },
        "item": {
          "id": "f2f7e37e-7bef-4b1a-ba06-9e6b2b0db750",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "29d3ff4e-9b35-4a26-9aa1-c5f1eac80861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10e6ad2-97bf-4c24-8d20-9e96b537303e",
        "cursor": {
          "ref": "40f2f2df-e4d0-4cfc-8988-0a5e77a14940",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e7ba0730-9034-459b-966d-fbba5e14e2a4"
        },
        "item": {
          "id": "b10e6ad2-97bf-4c24-8d20-9e96b537303e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "099f7a03-cf8a-451e-ba24-8e21826661a0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ff8bea-bad6-4598-9209-d58c1b0bf992",
        "cursor": {
          "ref": "be4b8168-6a4f-4870-ab6e-529c7bbf9a49",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "913c64a3-d0e0-4fc3-bc97-91d6d26df1ed"
        },
        "item": {
          "id": "82ff8bea-bad6-4598-9209-d58c1b0bf992",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8fa70f26-093d-4df9-b6b8-4f7a9eb656ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dad51bf-2b3f-4830-8c80-d7200f74b4d3",
        "cursor": {
          "ref": "3b817ab0-16cd-44f8-ad3e-ae2621a630c8",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "116ea733-58e3-43f9-9738-9671ab6311cc"
        },
        "item": {
          "id": "2dad51bf-2b3f-4830-8c80-d7200f74b4d3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7b76c012-d8f7-4c39-9b7f-edd744d422a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958f4e1a-fe8e-41aa-bcbf-a85e81e59f38",
        "cursor": {
          "ref": "bde3b4fa-5f6c-433a-bcc3-e40f3487261e",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6fe257ac-a133-4eb3-917d-0adc4fbd3d8d"
        },
        "item": {
          "id": "958f4e1a-fe8e-41aa-bcbf-a85e81e59f38",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "119af970-1202-4052-937d-45a21e961513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da96ed1-24ae-4c8e-acf1-056c7dd9ba18",
        "cursor": {
          "ref": "31d77799-a96e-48ae-911a-639d327ee7a7",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "29b1c5c5-9f0d-45dd-888f-fb4cfc517553"
        },
        "item": {
          "id": "3da96ed1-24ae-4c8e-acf1-056c7dd9ba18",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0e65ab0e-6f98-47f9-a3a6-b63d27628e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a253b14e-8ff0-4caf-ae21-ced26daa06e0",
        "cursor": {
          "ref": "20b00907-78a6-4bec-8a4a-823492155a8d",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dc4e808f-c8cb-49a2-93d9-c7b48eda873c"
        },
        "item": {
          "id": "a253b14e-8ff0-4caf-ae21-ced26daa06e0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "74514a1e-460d-49f5-aeeb-6b5e57a44716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89dbc4a-31d0-4a57-ac2a-31da7629e765",
        "cursor": {
          "ref": "44509e7d-2a3f-436d-a97c-bb27d30a9a52",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "99949a9c-fb6d-4e44-9644-855b57ed1800"
        },
        "item": {
          "id": "d89dbc4a-31d0-4a57-ac2a-31da7629e765",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "653cd3b0-b656-4eaf-9f4f-e40a1de44ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b638b9-6673-44ea-b753-1bce88343bda",
        "cursor": {
          "ref": "588cf2a8-a72f-466c-8748-c4266a1f6f54",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "19938fb0-5bd3-4434-ba0a-e7ce53c37874"
        },
        "item": {
          "id": "84b638b9-6673-44ea-b753-1bce88343bda",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "18d53a41-a54c-4bbb-a139-f3749866bd89",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ccd719-5243-4f28-9129-4d787f1b957c",
        "cursor": {
          "ref": "42e1a26b-273b-4014-aa7e-e5c6229ed6bb",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "87495513-cfd6-48c2-8741-33bd4aa5077a"
        },
        "item": {
          "id": "c3ccd719-5243-4f28-9129-4d787f1b957c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9858b5e5-d410-47b6-8cea-6b4d497dd819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1694ba-46f8-4303-9418-022c87d694ca",
        "cursor": {
          "ref": "4c7202e8-a5bc-48bc-82e2-76a9fa9eac40",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "319460a4-2561-4b2f-92b5-3f19dd3e6797"
        },
        "item": {
          "id": "4c1694ba-46f8-4303-9418-022c87d694ca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1bb331f0-d2ed-4c71-b69e-f7720a519657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d185ef-fb5a-43df-b429-ed0a13eb6997",
        "cursor": {
          "ref": "82724d43-0247-445e-9dc7-13f922a53145",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "28a56fe2-5e13-453b-ae1e-44efbdf0de01"
        },
        "item": {
          "id": "21d185ef-fb5a-43df-b429-ed0a13eb6997",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "82adc073-0712-4598-a3d7-b77c75e8fc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9561fd-cd39-4ea8-942f-01e6d9eeebea",
        "cursor": {
          "ref": "51810d98-3277-4791-aae2-7aacb556d57b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "89f3ded7-f64d-4aa2-8c40-c6dd25de5301"
        },
        "item": {
          "id": "fc9561fd-cd39-4ea8-942f-01e6d9eeebea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ff79236f-c34e-48f0-8686-9ddc0089c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aa54dc-ae15-45b5-83de-76db4f923dc5",
        "cursor": {
          "ref": "c8233095-bc53-4786-a460-1950aa662dac",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ce054b5f-9e96-41b0-8a13-b718236dd9c3"
        },
        "item": {
          "id": "d3aa54dc-ae15-45b5-83de-76db4f923dc5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8fcb2080-5b5d-420a-9e05-c78bfa27a495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45d88a5-b7d2-4f5c-a4c1-45f7f2599510",
        "cursor": {
          "ref": "b40d16a2-26af-483f-8c84-702eb2d3f65a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0e2cd3d2-625b-4946-ae90-a34b6c838b16"
        },
        "item": {
          "id": "b45d88a5-b7d2-4f5c-a4c1-45f7f2599510",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c1406a5e-86dd-4abd-bf5e-c44deff8da61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc9426c-acdd-47d1-baa9-a7ebd288a468",
        "cursor": {
          "ref": "afc9afb2-68cd-45cb-a7a2-ff891dc77776",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a712a350-8f26-4732-8661-78a5a281d9df"
        },
        "item": {
          "id": "cdc9426c-acdd-47d1-baa9-a7ebd288a468",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7ec200f3-eb16-4b36-aee3-d5e9dc9f9764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec6478-8bb2-4c02-9bf5-97157d439517",
        "cursor": {
          "ref": "be66aa32-bebf-4ac4-ad4d-6009a63b0c81",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d32039c0-2d8a-4c71-9eb5-62088cfb00f2"
        },
        "item": {
          "id": "62ec6478-8bb2-4c02-9bf5-97157d439517",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f6041b08-af4f-4344-af3c-639a69886141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28914e4e-b695-47a5-99e6-14fa3cbb729f",
        "cursor": {
          "ref": "7cab59bf-6b6b-45fe-acb2-7141e4b41702",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9d2f5039-ffb3-402c-81a7-81a4c74af09a"
        },
        "item": {
          "id": "28914e4e-b695-47a5-99e6-14fa3cbb729f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8a57d6ac-28ea-4988-946b-ae98dc1a8dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a918a107-4a0d-47b5-b639-d237f6b3234e",
        "cursor": {
          "ref": "ebb7c481-fb5b-45e4-bfb4-d1154b0cf8a4",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c15df425-6bab-4122-a528-84c42c81007e"
        },
        "item": {
          "id": "a918a107-4a0d-47b5-b639-d237f6b3234e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "eda7c0fa-75dc-4475-acdc-f1341837f142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d2683-c426-4864-a86d-bd94ea71f5d8",
        "cursor": {
          "ref": "1410d848-874b-425f-931c-13a2d6c04ffc",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "21567cdb-e569-45a1-97b1-05f0fd29569a"
        },
        "item": {
          "id": "fc2d2683-c426-4864-a86d-bd94ea71f5d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d5380a14-db50-4b68-8282-91d13b93ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23f94d7-25bc-4be9-8ebf-1e5299a2c87a",
        "cursor": {
          "ref": "db77905d-5009-44b5-ab84-10c9866cd47b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "78faa41e-5e55-4451-b444-c42509bfea4b"
        },
        "item": {
          "id": "c23f94d7-25bc-4be9-8ebf-1e5299a2c87a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6c9890c2-a491-4656-ba1d-5b2108dc3a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f126d1-1c95-499d-b16f-16007da1b29e",
        "cursor": {
          "ref": "a8c7d6df-efb7-4eac-9ae8-6d5a46240ccb",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "191e2c03-bc3a-4312-8520-24b18aabec2f"
        },
        "item": {
          "id": "f1f126d1-1c95-499d-b16f-16007da1b29e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f22489f-7401-4d5d-ad11-4a13dad469dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2911601-f6a5-436c-b94d-9ec4eff5d709",
        "cursor": {
          "ref": "5af7700c-b262-454a-9678-6c80e50084b1",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e33de4bd-bbf8-4762-8500-d5c6216570e9"
        },
        "item": {
          "id": "c2911601-f6a5-436c-b94d-9ec4eff5d709",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c3247bf5-e95b-4f89-b398-8ac8b8bdd75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700166be-bfe2-47e9-b511-81da405d5869",
        "cursor": {
          "ref": "118f516c-9035-4a56-af09-1a405068fd9d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e90c6a3-0ca3-40e6-b320-db76c2073ae9"
        },
        "item": {
          "id": "700166be-bfe2-47e9-b511-81da405d5869",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "10ae0bd9-60ae-49d1-a4bf-1ee532357cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978b544a-e325-4111-9337-c4335e550627",
        "cursor": {
          "ref": "fc481052-f518-4a67-a89c-abe35cb40e12",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1ae4ef12-6dc6-48eb-8ff3-a628d690ba78"
        },
        "item": {
          "id": "978b544a-e325-4111-9337-c4335e550627",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0c68a52c-d8a9-4df8-9d78-8d1766cb2005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb2f9a7-be33-400e-82a7-177cc70fffae",
        "cursor": {
          "ref": "ef340a81-9605-4741-88e9-962723515fc2",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9140f084-b30e-4c79-92e0-0d0609b01260"
        },
        "item": {
          "id": "adb2f9a7-be33-400e-82a7-177cc70fffae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c1a2c1c8-2ed7-40dd-a526-c1961d700b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c2ce0a-26dc-4a7e-ae3f-961778f1be2b",
        "cursor": {
          "ref": "fb98430f-f770-42d6-ab9a-e4cc69ddfab7",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2e0c63c7-8d7b-4d1c-9257-a0973b8cf977"
        },
        "item": {
          "id": "c3c2ce0a-26dc-4a7e-ae3f-961778f1be2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9114f532-a0ca-407d-8de4-f47bfa7ea141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6f4cfc-afd1-49c9-8598-e3ce1c38590a",
        "cursor": {
          "ref": "5c6433e3-7925-4784-923a-66c5465c261f",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "03ef083e-b1e1-43fa-a006-d9ddc939a878"
        },
        "item": {
          "id": "4f6f4cfc-afd1-49c9-8598-e3ce1c38590a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5f92662f-cbef-444d-95ae-8c0c67ac6026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8bbf01-74af-4135-a5b9-ccc940d7c101",
        "cursor": {
          "ref": "4d8ea525-cfc4-46ac-8df6-623add20acf8",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5ac02bc8-da04-4339-864b-7410cb8fb902"
        },
        "item": {
          "id": "cd8bbf01-74af-4135-a5b9-ccc940d7c101",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7836922d-f66a-4d54-9a9b-1fc143c41cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed28837-0b40-491b-83fd-4966454328a6",
        "cursor": {
          "ref": "b9062418-80ac-46fa-a6d1-e3bb2da1bbac",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3cb1bbb6-baab-41cd-89f1-7d33896f3418"
        },
        "item": {
          "id": "9ed28837-0b40-491b-83fd-4966454328a6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9f8737e8-81b6-4c5a-b2dd-c96844fbea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bfadd8-aa7d-4a82-a330-5a549b426612",
        "cursor": {
          "ref": "37652bdc-5eac-4fe4-9c39-2f915edaecae",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1d69b44c-a170-4dd7-a6a1-9de8c3f90bc8"
        },
        "item": {
          "id": "b7bfadd8-aa7d-4a82-a330-5a549b426612",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6ea5b41d-eb36-4635-8998-a22cf38770ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c9582-bb14-4377-a87e-c78610b1c191",
        "cursor": {
          "ref": "24c3d7be-798b-411a-8401-70fdf1b4c273",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8b0c2242-dcf2-4366-99e9-f640b2fa6c7e"
        },
        "item": {
          "id": "822c9582-bb14-4377-a87e-c78610b1c191",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "df24a278-7b77-4477-8961-5583d1bc7787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65ee748-e567-4dbe-b178-54849be98026",
        "cursor": {
          "ref": "efcb327c-8755-4861-9845-820524b1f788",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cf9b20fd-2cb7-4579-a3f9-906aae612d0d"
        },
        "item": {
          "id": "f65ee748-e567-4dbe-b178-54849be98026",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3b52bfa8-931d-4ec9-bc7f-265e0cccc0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae220235-6b4c-4774-a3ea-cf4b5a73e7eb",
        "cursor": {
          "ref": "13ea438a-07b7-4d3f-9e6f-0cdfea7aaeb3",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b29d41da-9bcf-48a7-ac0f-7c47fa59fb14"
        },
        "item": {
          "id": "ae220235-6b4c-4774-a3ea-cf4b5a73e7eb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cab8512e-db1c-43b3-9b17-fa88aafb6e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ef87d1-96c6-4b7a-b7c5-a6bc19db6a06",
        "cursor": {
          "ref": "f3220a19-0907-48e2-8015-f4151997568b",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1da6d41e-cd4f-495f-b0bf-d97e3cc91179"
        },
        "item": {
          "id": "b4ef87d1-96c6-4b7a-b7c5-a6bc19db6a06",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a461ca7f-6422-4ae1-89dd-b5f1ab3a895c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640908a7-14c0-44cc-b224-4939953c6e3f",
        "cursor": {
          "ref": "3e60496d-066b-4c1c-af74-81e6bc9144b6",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c07ac475-c402-497c-86a8-1e58db32cefe"
        },
        "item": {
          "id": "640908a7-14c0-44cc-b224-4939953c6e3f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5a91fdc6-de0a-402f-9030-4cc1980b281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01237fd1-0c51-450b-86ad-f9de38a3ce43",
        "cursor": {
          "ref": "7609ad99-28ff-43f4-b9fd-3874dfe53dc4",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ec322a38-1c9d-4490-bbc9-3de099468866"
        },
        "item": {
          "id": "01237fd1-0c51-450b-86ad-f9de38a3ce43",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4db94f5c-ac80-45a1-8dfe-6fc227e415ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2edc38-2f32-4798-ab9a-870913bacea7",
        "cursor": {
          "ref": "8e27acb9-86ee-4d74-bb3d-0eac3e010353",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8179db6b-6532-4c19-bc29-bf02fc0b5a4c"
        },
        "item": {
          "id": "5e2edc38-2f32-4798-ab9a-870913bacea7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e325a533-8b41-4a10-8cd2-226e60068a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3098be32-0d4c-4fdf-aff2-325bbe053034",
        "cursor": {
          "ref": "fe0ba9e1-863b-441b-a7f0-dd583731bc4d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ad3825f3-0be3-41cb-b98b-061ce254412a"
        },
        "item": {
          "id": "3098be32-0d4c-4fdf-aff2-325bbe053034",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "75262e93-ae91-4bc7-a487-325cbea158ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40a588c-830f-4292-ad37-43928a2d469b",
        "cursor": {
          "ref": "9a159470-9428-4249-ba73-b8b27476323c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "93a958e8-e49e-4324-9007-6aa9612e9989"
        },
        "item": {
          "id": "f40a588c-830f-4292-ad37-43928a2d469b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ce109c19-02ec-4f77-b882-75bf7492a11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f99d7-221a-4dfb-9bc3-ee2112d1860b",
        "cursor": {
          "ref": "98d76092-b049-44ba-8e19-42340f118ac7",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "687b590a-f34d-4350-baa6-4af9109452b5"
        },
        "item": {
          "id": "796f99d7-221a-4dfb-9bc3-ee2112d1860b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a1a5460e-80f0-4c2b-8769-85b4282e1ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a31da4a-77a4-4907-8ee9-b9025f6bfc1d",
        "cursor": {
          "ref": "c3021beb-775f-4d1e-857f-535f8a5ae694",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5933c227-3e4b-4346-9b03-bec309186fb1"
        },
        "item": {
          "id": "0a31da4a-77a4-4907-8ee9-b9025f6bfc1d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "59ef6184-63de-4942-bb68-541c8588b996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5453a4f4-1a7f-42c8-86f1-a7bd6c384191",
        "cursor": {
          "ref": "8b78b311-41e7-4cfe-a7bc-67e2b97c4217",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "530a2fe9-8a48-4235-8a1e-313db98eb25d"
        },
        "item": {
          "id": "5453a4f4-1a7f-42c8-86f1-a7bd6c384191",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "641a8e31-ebbf-46e5-8cf7-effb8793c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ae6177-887d-4c2b-b1d6-06934bd0ad19",
        "cursor": {
          "ref": "1677d608-1d9d-403e-8471-ac91d69094c5",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0a3f4787-cbd0-4d42-94df-70b0060730bd"
        },
        "item": {
          "id": "81ae6177-887d-4c2b-b1d6-06934bd0ad19",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d0d8b0f5-826f-4027-b262-03cad3f16e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fde8fb6-2983-4e62-a29e-9263983d45b0",
        "cursor": {
          "ref": "c56e0af3-ed6e-4979-ae98-3a5b1dcb6f71",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6a2ead1d-f269-456c-a83b-870fb503f407"
        },
        "item": {
          "id": "2fde8fb6-2983-4e62-a29e-9263983d45b0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "09cadfc4-01e0-4ec9-8503-2791a9991c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5003550c-a4ae-4035-afbf-ac2d328eb1f2",
        "cursor": {
          "ref": "cfd1d71c-d52d-4e0c-8bb4-549a9bb19fc4",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bcacde10-e4bb-4178-bb61-f8da1ca74244"
        },
        "item": {
          "id": "5003550c-a4ae-4035-afbf-ac2d328eb1f2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "026d8eef-1673-46fb-bfda-2351de69db86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52184d8-151e-4f2c-b054-fa5daad132d1",
        "cursor": {
          "ref": "b1384ada-c227-4216-b507-3871736d9808",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dce8c753-bd89-47e9-b27a-1725f8b568f9"
        },
        "item": {
          "id": "e52184d8-151e-4f2c-b054-fa5daad132d1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc2c022c-0ef2-4a8d-acfd-78754c17e5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9e7e37-f519-4ddb-808e-b624d2560ad8",
        "cursor": {
          "ref": "f6bc0727-370c-4bc9-9adb-9faff5967488",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "14a084ab-9496-4c6f-977c-4f90b438e33b"
        },
        "item": {
          "id": "ca9e7e37-f519-4ddb-808e-b624d2560ad8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "18f9582c-a224-45ba-bb71-2722efe1980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f672197-b237-4d3d-9d0c-61cc48a3c4a7",
        "cursor": {
          "ref": "8f50f8b8-df18-4e12-bce6-32ee17589aeb",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "222ab2ec-b2ea-4aac-a0a5-b30ad25c4bd4"
        },
        "item": {
          "id": "7f672197-b237-4d3d-9d0c-61cc48a3c4a7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5e063a73-18ef-4ebc-9e22-377d09583aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e245df-d198-45b1-bed0-db453865b224",
        "cursor": {
          "ref": "27b9e05b-f553-487a-ad42-2cf3e1229e86",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7d2ead4d-440a-4c77-9073-924cc687f054"
        },
        "item": {
          "id": "58e245df-d198-45b1-bed0-db453865b224",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9278c155-72b6-406b-bc99-f901a6332627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630792c6-759d-4ef8-9d79-8cd887114817",
        "cursor": {
          "ref": "90d27348-0253-4a39-87c8-fcb4d5b71983",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "31bf6497-f730-4abb-a327-d34bf8fff7de"
        },
        "item": {
          "id": "630792c6-759d-4ef8-9d79-8cd887114817",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2107ac0f-0e41-43a3-b98b-5be109ed7a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c31698d-84c5-430b-86ab-ce3b9da2f68c",
        "cursor": {
          "ref": "bb190169-3ead-4879-8573-0469044d68dd",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7fbcff33-d6ce-4707-a761-617b30e84bcb"
        },
        "item": {
          "id": "8c31698d-84c5-430b-86ab-ce3b9da2f68c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "213818a4-b835-43c6-9823-05dbbc88862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106f478b-0bb4-46f9-b29f-9ef111979e31",
        "cursor": {
          "ref": "8516936d-e03e-4d2c-bd9d-30d940baa665",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cd484b8c-8ae7-40bb-b0b4-3b7d3c5882b2"
        },
        "item": {
          "id": "106f478b-0bb4-46f9-b29f-9ef111979e31",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "96befb75-6faf-4978-a43e-ccec40fcf1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b096bfe7-2e70-43ac-9fbc-064fd488ec5c",
        "cursor": {
          "ref": "63742938-e64d-46bb-a3f5-9366a4801446",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9e3be9e3-b93e-43c6-b2a8-60fb4ece908f"
        },
        "item": {
          "id": "b096bfe7-2e70-43ac-9fbc-064fd488ec5c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "483c5aa7-5fbb-4654-9886-dcf586b4b00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7d2056-710c-463a-8f57-06acb91ac76b",
        "cursor": {
          "ref": "1fbc9740-301e-4214-8337-7fd2422add71",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6dfc739d-a261-4fa7-a8e9-12c61d1de158"
        },
        "item": {
          "id": "0f7d2056-710c-463a-8f57-06acb91ac76b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cdcf7f8e-6c6b-4fe8-a31e-a50d40e863fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2bed85-e713-4d5c-aae5-23b794108798",
        "cursor": {
          "ref": "bfb03b25-7d94-4838-8605-45438e807479",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8c1a74be-8adc-44e4-a2f3-19d8e2ec6555"
        },
        "item": {
          "id": "3f2bed85-e713-4d5c-aae5-23b794108798",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "da1789e4-4744-4766-baa7-5b2e3296c651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a75ad9-d7bc-4e82-8eaf-de0dfba8dfa7",
        "cursor": {
          "ref": "d8d2dbf2-9881-419d-bd96-4e8048730b09",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "07b44dae-fcec-419d-adea-c067a061e9b3"
        },
        "item": {
          "id": "28a75ad9-d7bc-4e82-8eaf-de0dfba8dfa7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5ba97b41-18f4-464e-aac9-a59888779748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b0ab9a-f18e-4609-9ad0-719ab153dc93",
        "cursor": {
          "ref": "9aefc66b-05ef-4951-afe1-83eaf431ed1d",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "80524c5f-21cd-4812-ae89-933e5a89b7e4"
        },
        "item": {
          "id": "e0b0ab9a-f18e-4609-9ad0-719ab153dc93",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b319a131-4c80-4d77-b979-be3be40d45de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7315780a-99f0-4b20-b847-adae5d94fb9a",
        "cursor": {
          "ref": "38ac39dd-85d1-48fd-b184-9cfa31edf352",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12dc4e95-dfca-4c1d-bd1e-ef418070225a"
        },
        "item": {
          "id": "7315780a-99f0-4b20-b847-adae5d94fb9a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c3a5b567-bf44-4938-8544-309cdd6c83e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f0891f-f35d-41ba-b137-5487c983332d",
        "cursor": {
          "ref": "e557c9d7-2245-4a2d-addb-013e335a59f2",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a2fb620d-0a40-4c0a-b68b-ccf01016adce"
        },
        "item": {
          "id": "d3f0891f-f35d-41ba-b137-5487c983332d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "db17469c-af21-44fe-9388-143872c40843",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139548da-72e7-4b50-a48a-2b285c1b74cf",
        "cursor": {
          "ref": "c79685e3-41b6-49cf-9875-7a25b6661e95",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9fd9a9fa-323b-40cd-9d69-098be9c1bd89"
        },
        "item": {
          "id": "139548da-72e7-4b50-a48a-2b285c1b74cf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6875e71e-c658-43ad-ba9d-11ce2d1143f0",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba937f01-3d8c-43e7-a0a8-78f5b923a355",
        "cursor": {
          "ref": "3f87c162-e227-4f37-a7a8-47c9543e648f",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1d9f45c6-c0c3-43bb-ad15-02e260c28d9d"
        },
        "item": {
          "id": "ba937f01-3d8c-43e7-a0a8-78f5b923a355",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3ca84efd-f70c-44fd-bbd1-d593f2cca55c",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dc2922-eace-4592-b2dd-d748877adec7",
        "cursor": {
          "ref": "9bbe29d4-92d2-4947-b4fc-c47af044bf07",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1a92c0fd-f4b9-471b-96e4-25a09a0f9cd2"
        },
        "item": {
          "id": "95dc2922-eace-4592-b2dd-d748877adec7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e729612-f6e5-4ef5-8121-372106656a93",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1a104-0d09-4722-ab7d-441422ffb39e",
        "cursor": {
          "ref": "61a3a824-842f-453d-b4be-c99dc7afa083",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f7a933cb-dda8-4762-ab2d-7493e68f0dac"
        },
        "item": {
          "id": "d3f1a104-0d09-4722-ab7d-441422ffb39e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e16a8a27-581e-45a3-bcc3-e7d8c4fd29a6",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e10a339-0b4a-4630-b93c-d02d3fbc3d83",
        "cursor": {
          "ref": "00238115-8fa7-4553-9e0a-995fa075fea5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e50758c8-cb3b-4bfe-9b6c-1aca39ca1b52"
        },
        "item": {
          "id": "0e10a339-0b4a-4630-b93c-d02d3fbc3d83",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9efac50e-dd46-4f48-84dd-63805b860641",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4249dc05-5ca2-4048-850d-2fe2a65b1223",
        "cursor": {
          "ref": "e6b7565a-e7fb-4eda-90f7-7e35274bbc50",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a6445dd4-2ed6-4bec-8e3a-b271bbf4047c"
        },
        "item": {
          "id": "4249dc05-5ca2-4048-850d-2fe2a65b1223",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3e3890a6-735b-442e-a93f-5a255bd27e26",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8831a370-864c-4651-b2ae-61cdbce97b32",
        "cursor": {
          "ref": "b1e90c2c-0299-43a9-9978-758b1fdeabba",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c22015c-841b-42dc-b81c-ff53f7b9a8d7"
        },
        "item": {
          "id": "8831a370-864c-4651-b2ae-61cdbce97b32",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ee94412-42f3-48b4-a60c-11d77bbf4147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8831a370-864c-4651-b2ae-61cdbce97b32",
        "cursor": {
          "ref": "b1e90c2c-0299-43a9-9978-758b1fdeabba",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c22015c-841b-42dc-b81c-ff53f7b9a8d7"
        },
        "item": {
          "id": "8831a370-864c-4651-b2ae-61cdbce97b32",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ee94412-42f3-48b4-a60c-11d77bbf4147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8d540-ab6a-4d7d-b951-e2f344ed0d54",
        "cursor": {
          "ref": "dc55f4a1-09c7-43d9-815b-ef97c4f36425",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c428e34c-09f4-4f48-bf0d-e02f6d992fc0"
        },
        "item": {
          "id": "13f8d540-ab6a-4d7d-b951-e2f344ed0d54",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "945c205c-5dd7-4930-a57c-57108df72b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8307983b-a149-42eb-be67-394d80296128",
        "cursor": {
          "ref": "73595f2d-8a47-46d9-86d0-53ba0c624160",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b02e75f4-9223-4f6d-acb4-0983884c46a4"
        },
        "item": {
          "id": "8307983b-a149-42eb-be67-394d80296128",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4473d41b-75cc-4015-b30d-60d12f6eb238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b1c00-ca4d-4f2d-92cd-4c2ebd3bd586",
        "cursor": {
          "ref": "b5887ac1-3a4f-4c6d-a8fd-9f9662e67dce",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "90ec73fa-9092-4317-8861-d683c4df74e3"
        },
        "item": {
          "id": "b72b1c00-ca4d-4f2d-92cd-4c2ebd3bd586",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2836b74e-7ae8-4b65-a019-eacd40d2a616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7c33a2-3a7a-4fa7-8cc5-ba31c0326a6d",
        "cursor": {
          "ref": "e7ec815b-1bdd-4a31-aeb4-f56f8bdcb16e",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "004dd9b3-e10e-4ac0-8f23-68275aac6320"
        },
        "item": {
          "id": "4e7c33a2-3a7a-4fa7-8cc5-ba31c0326a6d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fd02f4f0-7f51-4260-bb14-89ddbc059f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f518e9c-378b-4686-a31d-ba0e728107ed",
        "cursor": {
          "ref": "649d7d31-ceda-43f6-9ea6-a9b12f32dcaf",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0a4b1cfe-cc9d-4e88-a82c-1e12b81d6afe"
        },
        "item": {
          "id": "7f518e9c-378b-4686-a31d-ba0e728107ed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aebd7c33-2e1e-4e65-887a-66e60cebc28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cbf10c-79ea-4b6c-a978-e2c8d0952532",
        "cursor": {
          "ref": "a60fe0f7-2913-4748-80d6-49b15a1ffa1e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6d2dc573-27b1-480f-9dba-51cf8bd76b72"
        },
        "item": {
          "id": "b0cbf10c-79ea-4b6c-a978-e2c8d0952532",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7f31bda9-5e89-4b77-8f27-c3bd1c971447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6afe90-d74e-4439-927e-e3740028bbf8",
        "cursor": {
          "ref": "6ba2beaa-00f9-490c-9d3a-d911a20a06b9",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4223c683-0dce-43f5-afeb-e00f6777871e"
        },
        "item": {
          "id": "fb6afe90-d74e-4439-927e-e3740028bbf8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3aa17d0b-5d0c-46a5-84f6-e357f834baff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fadf62b-526d-4bce-a71d-02170f0f04e6",
        "cursor": {
          "ref": "987df7e4-2122-41cb-b902-4cc880b86e45",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1b071cda-9eef-4a34-b1a0-f8979e56bbb4"
        },
        "item": {
          "id": "7fadf62b-526d-4bce-a71d-02170f0f04e6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b9c96397-311f-467f-befc-59520cbd30f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8957b5-d94f-4745-b84a-711dafdc2ddd",
        "cursor": {
          "ref": "dccfe4d3-0a93-43f2-a061-6ba24809fe5a",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "be477fd9-8342-4a51-8d41-c95cb983bd9d"
        },
        "item": {
          "id": "0e8957b5-d94f-4745-b84a-711dafdc2ddd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "94c12625-8c6b-4396-87e0-228d2e7b899b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a087fa9-75eb-4a4f-961d-d86421e07051",
        "cursor": {
          "ref": "39e1cbba-d2cb-4034-8603-268af3a371a1",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fea369f2-4af4-4617-9369-da577c1f0f54"
        },
        "item": {
          "id": "8a087fa9-75eb-4a4f-961d-d86421e07051",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "acdbdd4b-6233-4c18-95f5-0b7a0809449c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328c55bf-a734-4840-a91c-a0a13ebdb4a1",
        "cursor": {
          "ref": "e5465ed6-faa9-4606-b803-d24a8275e23a",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5f75719f-1e68-4e9e-a355-74d2c4e515cb"
        },
        "item": {
          "id": "328c55bf-a734-4840-a91c-a0a13ebdb4a1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "02a26b78-d3cd-41ae-a51a-121543600a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941f4787-39da-4608-b622-89492fee41b6",
        "cursor": {
          "ref": "3c10a999-3c7c-4e0d-92d2-0d88e1a22f04",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "52e79a1b-16c9-4177-8f0d-3e770c4c0011"
        },
        "item": {
          "id": "941f4787-39da-4608-b622-89492fee41b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55b4c202-6eff-4d6a-b3de-fddde7b3bd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7653ef0b-d2ce-46d6-ba89-1cc7423064bc",
        "cursor": {
          "ref": "ab3af8ed-d5a4-4083-aaef-0b8f55f87ded",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "92907721-c12c-42a0-8563-c3c6ccf9e94b"
        },
        "item": {
          "id": "7653ef0b-d2ce-46d6-ba89-1cc7423064bc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0d5d95fc-0829-494f-8b15-a3fc6c22ef7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148bb2bc-7318-4d4e-ac92-3e2f6dd5d2cf",
        "cursor": {
          "ref": "6fa86fa5-8058-4703-b9dd-2dc99958d261",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2ada99d9-189f-4557-afb7-f74e65f79447"
        },
        "item": {
          "id": "148bb2bc-7318-4d4e-ac92-3e2f6dd5d2cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2120aa59-a826-4f7b-aa00-dd844a366036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f403f778-8ed5-4aea-9b43-b91396c6ec1e",
        "cursor": {
          "ref": "4c347e08-337e-4796-9d84-32e182bae65e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6f50f3b4-1e2e-4159-a8f0-10c585f3aaf2"
        },
        "item": {
          "id": "f403f778-8ed5-4aea-9b43-b91396c6ec1e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3b4733f1-4ff1-4365-816a-0ed2d8fe15c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd4cff3-da2f-4b2e-b237-19ced2ee8b33",
        "cursor": {
          "ref": "58e24c42-94c5-4b45-bd1d-b83959885728",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c2b05911-1db6-44fc-a6a0-8ea49198ccd1"
        },
        "item": {
          "id": "9bd4cff3-da2f-4b2e-b237-19ced2ee8b33",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5b544688-8dbb-4b8b-b90c-ade682e2a32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3268c5-5c87-4a6f-b958-dfad6af08855",
        "cursor": {
          "ref": "6d8d5b6d-f8ba-4631-a758-47c693d2aba8",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "62f6ab47-72fd-44f6-8a30-331241095f42"
        },
        "item": {
          "id": "8a3268c5-5c87-4a6f-b958-dfad6af08855",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c3fc2e43-a33d-417a-bbef-c0912d0e3e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d1256-4eb9-4cf4-9d99-10ae8ce6f0b5",
        "cursor": {
          "ref": "426c59ea-176d-4854-b668-02870a8ba717",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cb266322-d020-4543-ac39-ac8e7c422227"
        },
        "item": {
          "id": "d88d1256-4eb9-4cf4-9d99-10ae8ce6f0b5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83b920ee-c452-4c6a-a41d-2451ac7cbb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4191891d-f670-4b65-a2e2-d14f828c61d5",
        "cursor": {
          "ref": "77b39552-80e8-4611-8095-327f22a5e5dd",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ae6d905-59cd-4f17-a49c-c304ccd1236f"
        },
        "item": {
          "id": "4191891d-f670-4b65-a2e2-d14f828c61d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bec2be22-d62e-42ac-aabe-bf456dab9f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d4a7f9-7b1b-4bb5-be85-2c8803935569",
        "cursor": {
          "ref": "2576334b-3c8b-4bd7-bd0a-6138b70e1bc8",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b491d003-7bea-491d-8e8a-0141c28ca4a1"
        },
        "item": {
          "id": "49d4a7f9-7b1b-4bb5-be85-2c8803935569",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d207587f-72ab-4d77-a8b6-85641691cf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41123fe4-ddc0-4a50-9ce9-f25b580084af",
        "cursor": {
          "ref": "70a81634-d7d2-47b1-bb31-031a2c726563",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "53dcc5a9-b505-41aa-833c-598a04c3bb49"
        },
        "item": {
          "id": "41123fe4-ddc0-4a50-9ce9-f25b580084af",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f6cee8f6-ab4a-4c02-ac42-3d12a5f45102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb59a82-f1b8-47ea-9280-556c8a0f6dda",
        "cursor": {
          "ref": "7a7df25f-2c55-439a-a862-4911a4a80c83",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "82837e1a-19ff-46b2-96f2-8f05967843df"
        },
        "item": {
          "id": "ceb59a82-f1b8-47ea-9280-556c8a0f6dda",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10c591af-ed41-4537-85c5-cffb48a571d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2dbbb8-7175-412a-a910-1b209ddcd536",
        "cursor": {
          "ref": "761d2068-9b90-43b8-a159-fab0ee748544",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a0e64a59-71b3-40b3-841c-531c0408da25"
        },
        "item": {
          "id": "9c2dbbb8-7175-412a-a910-1b209ddcd536",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "53563f82-44c0-4da0-99b6-bf4e94a94e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7586de8b-0cad-40fe-a81e-33306eafc6f9",
        "cursor": {
          "ref": "5f80b120-121d-4cce-b611-2b82bc266fc5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1c26ccb2-10e3-44ab-a99b-ac01e967e14d"
        },
        "item": {
          "id": "7586de8b-0cad-40fe-a81e-33306eafc6f9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7ff5e36b-cfeb-469e-ae13-b9215a09ee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366299f7-1a74-4fd7-b396-cd3056268491",
        "cursor": {
          "ref": "fa42adf0-670f-47ab-9b1f-2dd8d981c7d8",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "475d28d7-db19-4f0e-8f46-7eae67cdde5f"
        },
        "item": {
          "id": "366299f7-1a74-4fd7-b396-cd3056268491",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a5cd075a-c0b6-4ece-afc1-3b4c34956c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02add45c-f68a-46a3-871a-9db9a9a2c955",
        "cursor": {
          "ref": "29a0f3da-4b4f-40dc-b14b-05fc500c1f92",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3a1bc0bb-d45c-485a-b05b-be52ee352919"
        },
        "item": {
          "id": "02add45c-f68a-46a3-871a-9db9a9a2c955",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "50088b90-f3eb-4d62-8bab-cc5591bb6333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebea2272-7cb0-47d9-82d6-96bebea93b67",
        "cursor": {
          "ref": "00b4dc1d-4629-48d1-9592-889e84e0083c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b3457263-6fa0-4e66-aa76-778525e62f8f"
        },
        "item": {
          "id": "ebea2272-7cb0-47d9-82d6-96bebea93b67",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3d4b3af2-9bef-4172-912e-f0a761f24bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9cc29d-c2c7-415a-a6a1-c81af054ab16",
        "cursor": {
          "ref": "6ac171f3-dca1-42f8-a052-1f27b07a673f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6af355fc-2e38-4fba-960c-814378caf241"
        },
        "item": {
          "id": "2a9cc29d-c2c7-415a-a6a1-c81af054ab16",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6a57fab3-43f7-4d67-ad54-3dc42961c809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf850d1-3ba2-4b2d-9ea8-0272e9fe727b",
        "cursor": {
          "ref": "ad7cfdef-78ef-44fe-bfe8-2ec434c0401b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "51f05e85-e9fb-4188-9166-5fc7399c76d6"
        },
        "item": {
          "id": "1cf850d1-3ba2-4b2d-9ea8-0272e9fe727b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d9b5ecc5-84c5-49d2-a7c2-b7ac064c6c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48e2ed-0f7c-4685-9b3d-a64fb75a2d27",
        "cursor": {
          "ref": "4ecd1c13-827d-43e8-9783-d9b494484b1f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f848154f-ad56-4498-85da-f5f9cf924aaf"
        },
        "item": {
          "id": "3d48e2ed-0f7c-4685-9b3d-a64fb75a2d27",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b01783b6-fa7a-4ed6-b014-34b083fb3036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612c80d4-f7c9-4d51-8c63-89125b3fe2fd",
        "cursor": {
          "ref": "d6684848-f87b-4132-a061-4392570a35fa",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c9d08906-8ee2-48b4-a5a2-0d46fb676961"
        },
        "item": {
          "id": "612c80d4-f7c9-4d51-8c63-89125b3fe2fd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5ad7e198-7275-465c-b47c-9ff4f5b9c5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365b6ce4-1750-480f-9e99-a3f0e277e4c9",
        "cursor": {
          "ref": "1c24c51c-44a3-4771-9958-2afd4228ab84",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3e25c672-c385-4877-9953-edac6744f316"
        },
        "item": {
          "id": "365b6ce4-1750-480f-9e99-a3f0e277e4c9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "352ab43f-9563-4e1b-8dfb-f770c6c479cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1069a6d5-6102-41e7-a55f-44136c021436",
        "cursor": {
          "ref": "630eb1b9-6851-454d-be5a-4f67a7ede911",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1d2e3e30-3f81-4d11-ac74-fb474143abc3"
        },
        "item": {
          "id": "1069a6d5-6102-41e7-a55f-44136c021436",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "64f8531d-8736-41a6-8caf-e92b9f1d596c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7425eaf-c331-443f-bbd1-7b1b13607736",
        "cursor": {
          "ref": "5280afd6-bb53-4f08-afef-403d9585ab5f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3a5e7461-e64e-42cb-ba45-ddaafef152e9"
        },
        "item": {
          "id": "b7425eaf-c331-443f-bbd1-7b1b13607736",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "417483a4-3f06-47fd-93b5-17653ac893ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7425eaf-c331-443f-bbd1-7b1b13607736",
        "cursor": {
          "ref": "5280afd6-bb53-4f08-afef-403d9585ab5f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3a5e7461-e64e-42cb-ba45-ddaafef152e9"
        },
        "item": {
          "id": "b7425eaf-c331-443f-bbd1-7b1b13607736",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "417483a4-3f06-47fd-93b5-17653ac893ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae44de5-53b8-4dc2-9383-88c41095cfb5",
        "cursor": {
          "ref": "cb54d3d0-37f7-4912-802b-774cb7b8ee90",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "56a9efbb-fc55-4280-96b2-d1145b827dbe"
        },
        "item": {
          "id": "7ae44de5-53b8-4dc2-9383-88c41095cfb5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d0913e4-4e72-43ac-80b6-3ba21790946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79a0e3d-ebf6-467e-ac7d-2a7408e90159",
        "cursor": {
          "ref": "14629db7-0b00-49aa-975c-02ccd9e0118e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2c4d098e-28f8-4d62-b0c2-65093b97a321"
        },
        "item": {
          "id": "a79a0e3d-ebf6-467e-ac7d-2a7408e90159",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b14ced46-a693-4e74-b28a-ed6601322913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11074cd2-6ef6-4470-84ee-9358883b99d4",
        "cursor": {
          "ref": "8c9d9cbd-d531-47a8-8a35-b8df02702622",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7909de4d-2081-4947-8421-ac2cf6b4e3ef"
        },
        "item": {
          "id": "11074cd2-6ef6-4470-84ee-9358883b99d4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ad7f516b-b938-48ed-ba6c-73d770d708af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d7f4c5-226a-43fe-bb2b-487c916cc8b3",
        "cursor": {
          "ref": "60828558-bf08-4c48-a7d4-4fbcd26364f8",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ed462af9-8887-4786-90e3-f06e3214b019"
        },
        "item": {
          "id": "37d7f4c5-226a-43fe-bb2b-487c916cc8b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3afff807-02d5-4585-8765-a9e1040a7f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4834fe-8815-44b8-9260-cdf4f71893fd",
        "cursor": {
          "ref": "09cf3c80-25b7-4c42-9562-4d482943825c",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3a65bc1e-1104-4438-92a4-c2faab7a39b5"
        },
        "item": {
          "id": "0b4834fe-8815-44b8-9260-cdf4f71893fd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8070a048-a2ba-453e-8108-cc12123a2afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15e728-9a55-4827-b188-ebed23626f8a",
        "cursor": {
          "ref": "aa54b2c0-b8c6-45fd-8f31-1d90ad8fa027",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "73983860-15e4-4eff-afbf-7bbaf74e5a48"
        },
        "item": {
          "id": "7a15e728-9a55-4827-b188-ebed23626f8a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "553c746a-4a67-49fa-b53d-00116d52da87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f41086-2f67-4084-8b59-f654e6c79d43",
        "cursor": {
          "ref": "59751f54-759c-411a-a630-447ce75471ab",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "75c5bbba-264d-4abf-9cae-f6d1602855dd"
        },
        "item": {
          "id": "80f41086-2f67-4084-8b59-f654e6c79d43",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7d818287-5763-4281-8c70-3f3a34651a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa65f6d8-ea4c-4a6f-867e-09fa51156b51",
        "cursor": {
          "ref": "1eb46162-da4e-4c6a-8139-616b33b6084f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cadf0bd5-f741-4ade-a5b6-738a0ba849cb"
        },
        "item": {
          "id": "aa65f6d8-ea4c-4a6f-867e-09fa51156b51",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "39f31fbb-0dbf-45af-8db1-3379f68c96b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b6e83e-7f03-4766-a7a6-d55e9eba9453",
        "cursor": {
          "ref": "cb299e60-84ef-48a8-ad4e-99bb5d000aac",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ccd76db9-8f2a-4d18-8a20-f8bd618a6e8c"
        },
        "item": {
          "id": "26b6e83e-7f03-4766-a7a6-d55e9eba9453",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a3d1e548-1f33-482c-9c5a-fd8c717a4943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af276fed-fb51-4dfe-bb8a-eaae64637d34",
        "cursor": {
          "ref": "49befe93-1481-41f3-8319-7b8849452f97",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ee2248a1-c490-4594-a46d-bba2a695ecc8"
        },
        "item": {
          "id": "af276fed-fb51-4dfe-bb8a-eaae64637d34",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e59e9959-71c7-46f1-aa6a-ecfc7329ae91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc81050a-b364-4825-8aca-06e4728699a8",
        "cursor": {
          "ref": "42e7714d-87f8-4427-b175-d079dec327a0",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3c6e8ce6-0c9b-4ca9-9410-6e0eea4f232c"
        },
        "item": {
          "id": "dc81050a-b364-4825-8aca-06e4728699a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "754ac6de-ee8d-44f7-a9ce-df41701da196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04c1e1e-ecd9-4466-a8cd-4f2de1de0939",
        "cursor": {
          "ref": "99e81c58-bf30-4764-ae70-69da609739b8",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d7a31267-e1d7-41bf-8899-db32f623667b"
        },
        "item": {
          "id": "a04c1e1e-ecd9-4466-a8cd-4f2de1de0939",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "925d50bd-10f7-4552-ac55-aa585da84258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c931b89-67df-45ea-a1fd-cf3d90fcf7e6",
        "cursor": {
          "ref": "827b2528-a12a-4638-b90b-34a48e561a78",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b10e7e74-30e0-43c2-a0cf-0a54616a274b"
        },
        "item": {
          "id": "1c931b89-67df-45ea-a1fd-cf3d90fcf7e6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8f52da0f-04e5-42d2-a743-7bce6cc5910e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c731f51b-a660-4123-b389-5f16653d21ae",
        "cursor": {
          "ref": "4f70fb62-69d3-4933-91a3-8e10a5f25c36",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d185c720-3689-48e1-a9d0-92fbdbf44887"
        },
        "item": {
          "id": "c731f51b-a660-4123-b389-5f16653d21ae",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b6740c1c-f3a3-4102-95b4-436dc8fddfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94af5a0-4d6f-47d6-b45b-bc5264cce23d",
        "cursor": {
          "ref": "cc02f29e-8081-42c1-b07f-79dc561ab353",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "059e293f-b1f6-4462-a9a9-2ea390abde49"
        },
        "item": {
          "id": "c94af5a0-4d6f-47d6-b45b-bc5264cce23d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "39fd5505-360b-4068-85ab-c00afb822579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1b909b-8bfb-4e3c-a92d-98d62047e9b7",
        "cursor": {
          "ref": "fb54cc4e-5465-40af-a8f1-cdefb711aa94",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5357c8b6-752d-41c0-92df-0454139fff2b"
        },
        "item": {
          "id": "1c1b909b-8bfb-4e3c-a92d-98d62047e9b7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "751ab009-c9cc-4264-9996-78311f3ac716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2631b67b-cd4e-48fc-a4f0-205f1fed98fb",
        "cursor": {
          "ref": "4272f7ff-1fbf-4652-a717-3bb435075691",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "777643ce-0b0e-439d-9e42-f6e93f69c349"
        },
        "item": {
          "id": "2631b67b-cd4e-48fc-a4f0-205f1fed98fb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97258dad-32a2-4aaf-bb78-a5fc81540b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc14b650-6a19-46c5-a9ca-7a34aab46ba5",
        "cursor": {
          "ref": "6d458cb0-80e1-49ca-b2ea-2c9e2741863c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e9983b86-df15-4720-a074-6757e4ff723b"
        },
        "item": {
          "id": "fc14b650-6a19-46c5-a9ca-7a34aab46ba5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2cab1ef1-9c8c-4ba4-87fe-dc57e2585850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22b175e-eb7f-411b-895d-2d011dc9a8c9",
        "cursor": {
          "ref": "c1dc8742-c87d-4b1b-b857-9774284fbfd7",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9748d3bb-fffb-4ed6-a884-ccdfa453ec64"
        },
        "item": {
          "id": "d22b175e-eb7f-411b-895d-2d011dc9a8c9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f8c04ba4-562f-4b1c-a0bf-3c58b2241f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bd43d8-1034-4c72-9d85-5eb46859501d",
        "cursor": {
          "ref": "42ddd345-aca7-4608-8e2f-ef569819519b",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6efc7b98-802c-42c1-a495-690a480546f6"
        },
        "item": {
          "id": "84bd43d8-1034-4c72-9d85-5eb46859501d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cb001ce6-9e8c-485f-84e4-f5b3ef9b5446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8144b47-f74d-43a1-a1a8-21f5b036a2ca",
        "cursor": {
          "ref": "b18ce3a2-e749-4773-910d-30c84bdc2f3b",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4137f959-5042-4cc2-bf1c-8f55a99882d8"
        },
        "item": {
          "id": "c8144b47-f74d-43a1-a1a8-21f5b036a2ca",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "edf6c5ff-a0a7-45a4-95e7-66d3f0d3bbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6c042e-930a-46c0-8245-4a9fc6167a91",
        "cursor": {
          "ref": "cc334b88-0ff3-4978-8bf4-2c55d2b220ac",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ad4262b-1eae-48a2-a498-f0631fe8da3d"
        },
        "item": {
          "id": "5b6c042e-930a-46c0-8245-4a9fc6167a91",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0488210b-8444-4c9d-9230-6e9d9f616482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbc3566-d909-4b9d-a490-e71deafd2968",
        "cursor": {
          "ref": "e21b4199-8ac4-4863-9bd9-f563064b4494",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3246b2ec-7fa8-46f4-b2c5-38cd3f6848cc"
        },
        "item": {
          "id": "7fbc3566-d909-4b9d-a490-e71deafd2968",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15f06769-9821-40b8-90f4-c30f9822ec89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea18e322-de57-4f6d-a6b9-b173138d0d4c",
        "cursor": {
          "ref": "a8a1ec63-defc-46b1-ab09-8dd015364118",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "01934dc0-f80b-4c77-bd86-dad5d40a81ae"
        },
        "item": {
          "id": "ea18e322-de57-4f6d-a6b9-b173138d0d4c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "60914088-c7ef-4342-8053-fa9f7b16aa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fa0a2f-7ee0-4aec-9dab-2f0ace3dbf7e",
        "cursor": {
          "ref": "ea942b2b-fb72-4974-8d2c-93dbe334c11c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5da42cc0-e86a-4289-9988-66f916757caa"
        },
        "item": {
          "id": "e4fa0a2f-7ee0-4aec-9dab-2f0ace3dbf7e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5fb183f3-50e7-4dbf-835b-7542cfbe749a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bca2f9d-38e4-4937-ba8c-2e6befb4412b",
        "cursor": {
          "ref": "e4dcfac6-f60e-4509-b88a-edb3df553639",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c9345c82-fdff-40c2-9076-51ebcbdcd583"
        },
        "item": {
          "id": "6bca2f9d-38e4-4937-ba8c-2e6befb4412b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fc477cb9-9da0-4e11-8da1-d4e6c563fd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be1da03-39cb-4400-8b95-a47bed8daf0f",
        "cursor": {
          "ref": "d6974652-f78a-4b9a-94d7-76de6434d113",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ad9e4fb0-1b28-4bfb-a982-75423d9c7390"
        },
        "item": {
          "id": "8be1da03-39cb-4400-8b95-a47bed8daf0f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4c8bd46e-13fa-4688-9612-0d895086b240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb1566f-319f-48a3-96fe-96e34d934fa8",
        "cursor": {
          "ref": "70f7f6ef-a3fd-4bde-96e5-acff23e1afac",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d335ccc5-f1bd-4f5b-b6c5-23135904b1f3"
        },
        "item": {
          "id": "4fb1566f-319f-48a3-96fe-96e34d934fa8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a49175c4-bc30-4111-9c5b-2f734b796060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81665179-231e-4d8a-86e9-8c917b78d2ee",
        "cursor": {
          "ref": "36a3af0c-f138-4a35-afe2-9d8859ce10bc",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7b3d4294-41bc-47dc-8ae4-ebd149ff77ae"
        },
        "item": {
          "id": "81665179-231e-4d8a-86e9-8c917b78d2ee",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "75c95917-9928-4922-ac4e-d46c7f733e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d7a9e9-ed0f-44c2-a643-fe4066fb9ae1",
        "cursor": {
          "ref": "a689c2b9-0bd4-482a-a8f0-143f21d6867c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "72c76fd1-c1e7-4b4a-b725-04318daeb655"
        },
        "item": {
          "id": "73d7a9e9-ed0f-44c2-a643-fe4066fb9ae1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "06c2fbf2-0f2f-4ec2-812c-af6c9f9c5fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97224f6f-0441-40b4-8864-f00c4c8f71bd",
        "cursor": {
          "ref": "f30302b9-38cb-4df7-aa22-d37c12f1778c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7b71cd57-dd07-4131-be75-f3ff3430ab19"
        },
        "item": {
          "id": "97224f6f-0441-40b4-8864-f00c4c8f71bd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "63970b92-6f37-41cf-a88c-c0001604ff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c69d0-2fd0-45b3-9865-ac6085c333d0",
        "cursor": {
          "ref": "3f88b008-de78-429e-b9d7-40dd290f3d32",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ac0c862a-df9b-4cc5-9796-69efe72ac55d"
        },
        "item": {
          "id": "177c69d0-2fd0-45b3-9865-ac6085c333d0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b872be2f-00b0-4da0-bd73-2069882a7be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea232c6-53af-4789-bb31-04a22f403bd4",
        "cursor": {
          "ref": "f3c7feb2-2b0a-4d37-857d-f2edbcefd945",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bfe4caec-2de0-4a2f-8088-4c7826da90f1"
        },
        "item": {
          "id": "0ea232c6-53af-4789-bb31-04a22f403bd4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "49f87185-956a-406e-b4a1-71134e62cfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b1e117-3943-4c33-9ff3-2a56149df142",
        "cursor": {
          "ref": "7714a34b-2a36-4b2c-a859-c65914190631",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a8a833ef-d31e-46a6-83c1-30873225145f"
        },
        "item": {
          "id": "d0b1e117-3943-4c33-9ff3-2a56149df142",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "72a2d76a-fd19-4951-86d2-06a72cdcce30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e7dc47-82b3-40e2-95ae-2f2f44d6638b",
        "cursor": {
          "ref": "107f9750-f51b-44c3-b3a9-0d2111743096",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "55247061-a666-43f4-b855-df00085a9425"
        },
        "item": {
          "id": "01e7dc47-82b3-40e2-95ae-2f2f44d6638b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "72e0dfeb-9fea-4d23-9e36-426d54d97d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2c8d4c-a769-4745-819d-23ef18de7b3e",
        "cursor": {
          "ref": "9606d9f8-e8f0-4155-a23e-b4e59c4891d4",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a014a68d-7401-4f92-a6b2-fc345eb4a8f4"
        },
        "item": {
          "id": "7c2c8d4c-a769-4745-819d-23ef18de7b3e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b085f785-2116-4614-aed0-0998fc319b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56c103d-f238-48dc-8e98-b4da72c971ad",
        "cursor": {
          "ref": "2ef3d6e7-eee5-4a3a-81b7-4ca98445ebf2",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e63988ae-19e4-4275-adf7-b0b29b2f0e8b"
        },
        "item": {
          "id": "b56c103d-f238-48dc-8e98-b4da72c971ad",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8120e4fd-6829-42b2-85f9-7924531b4688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b20ba5b-8509-47d1-aced-5d4f4354b045",
        "cursor": {
          "ref": "11135851-5847-41df-9da1-746b805a9468",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c8f671ac-a872-4c52-9d98-3048ecccd420"
        },
        "item": {
          "id": "3b20ba5b-8509-47d1-aced-5d4f4354b045",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "91efd737-a3a8-4dee-abc4-574e4355ec56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a541639-5e9b-4ba8-93c7-9f3c867f44cb",
        "cursor": {
          "ref": "33b59b7a-0f3a-4176-9d8b-91222d2aea9e",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0e6d82be-936b-4ab6-9732-b098ea363dad"
        },
        "item": {
          "id": "5a541639-5e9b-4ba8-93c7-9f3c867f44cb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "568256da-09c3-470f-a07a-fdb3735bc7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f94cc7-2183-4488-8fd9-f7824fa14bdd",
        "cursor": {
          "ref": "bf6ca636-ff50-49b8-bb06-78ea87a7e980",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4577b53e-6249-48ba-8f44-02da404ce535"
        },
        "item": {
          "id": "56f94cc7-2183-4488-8fd9-f7824fa14bdd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "001a8abb-4379-4993-8377-96e14d66d90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763a0d83-e91f-488a-9ca4-c6a28004733f",
        "cursor": {
          "ref": "36914d15-3200-406b-8180-0b33bc58e93d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3413e940-8494-4c99-9982-aa7e5b8bcca5"
        },
        "item": {
          "id": "763a0d83-e91f-488a-9ca4-c6a28004733f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "541c1359-a1b6-4633-a0c7-7b113b832c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f98f292-0874-4a86-bd79-3a445ba37797",
        "cursor": {
          "ref": "ed08ab85-3dfb-4655-b501-a5a35c195ca2",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5fe6d55b-f5d5-4d88-a78a-adeb24bc89f7"
        },
        "item": {
          "id": "4f98f292-0874-4a86-bd79-3a445ba37797",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3f1f0587-1436-404b-9cae-fc9923231271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e29d877-6402-48b0-8e17-63d546f79be9",
        "cursor": {
          "ref": "10a8af2f-d216-4d62-a7cb-67a34184ce48",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f1448191-f354-49da-8cbd-d6b620bf0e3f"
        },
        "item": {
          "id": "7e29d877-6402-48b0-8e17-63d546f79be9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6f1cd079-c89c-4adb-a329-980cefae2599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0291df4e-0a1c-46bc-b014-7521356d2e66",
        "cursor": {
          "ref": "fa52fd95-731a-46cc-834c-f1c593755018",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "53beb428-5b35-40bd-93ec-682d459a4615"
        },
        "item": {
          "id": "0291df4e-0a1c-46bc-b014-7521356d2e66",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "db2af7e8-d299-44e8-9bb7-108bb83a7b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbfcd34-a634-40ba-938d-2a8aabd912fe",
        "cursor": {
          "ref": "6649603e-c127-467b-b998-79675b34d9fc",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ae508b58-ee97-4069-9c3d-485794fa278e"
        },
        "item": {
          "id": "2bbfcd34-a634-40ba-938d-2a8aabd912fe",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "41001e2d-3323-418f-aeb2-fc3bc834e119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab98d7c-4fd1-4bca-b498-a1fe4edc4643",
        "cursor": {
          "ref": "b98608aa-4c80-40e2-9450-96ba7284797e",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ba42b173-6a38-489b-ab3a-e98581cb9baf"
        },
        "item": {
          "id": "aab98d7c-4fd1-4bca-b498-a1fe4edc4643",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1b5d3026-ce5e-42ab-aa32-2e1d391b834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9659a57-57f4-4f94-b6d7-a852814af420",
        "cursor": {
          "ref": "e4ccd1b7-694b-4dbd-ad4f-9e613fbb0bb5",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cedfe757-4b44-4e87-92e2-177ac18a401e"
        },
        "item": {
          "id": "a9659a57-57f4-4f94-b6d7-a852814af420",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9e361aca-9090-4b06-864b-b7fec60345fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fed34d9-b106-4abb-b80d-b669b91dcd5d",
        "cursor": {
          "ref": "6b002cb6-d1d1-475f-80f4-9649154bedf6",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e1739d17-ac28-492d-ad28-c9b999367b1c"
        },
        "item": {
          "id": "5fed34d9-b106-4abb-b80d-b669b91dcd5d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f3fa3c2c-7163-42df-9d15-1d068d20a238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a86c0e5-c19f-4cdf-9eba-15797eb3f8c4",
        "cursor": {
          "ref": "db217d10-c73d-41f0-b810-d472053a3f88",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cd339ec3-572c-4ab3-82a9-c2292ff5e519"
        },
        "item": {
          "id": "1a86c0e5-c19f-4cdf-9eba-15797eb3f8c4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "15d0ced1-113d-4790-be79-216001c08922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a024019-c690-4606-ac02-b506bd4881f4",
        "cursor": {
          "ref": "7c875e7a-619e-4e80-88e8-c72f035cca0f",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f5f74f0a-3af5-4b1d-9b24-80a702019896"
        },
        "item": {
          "id": "9a024019-c690-4606-ac02-b506bd4881f4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8164b157-f504-4ffe-bf76-fa276040a548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76df19b6-03f6-4cf3-a508-f6973431ce46",
        "cursor": {
          "ref": "e90225f1-da5b-4321-bdbd-218910d0ff72",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "67e2b230-6312-4073-9b85-dc26fae2d1be"
        },
        "item": {
          "id": "76df19b6-03f6-4cf3-a508-f6973431ce46",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "98c0f51c-153d-45b0-8451-1e5ee0034461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948bf786-918d-44ed-aa3f-6ed502fcccc4",
        "cursor": {
          "ref": "8876a41f-0054-4cd6-b7f3-d7d750506c5f",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d9dad750-ddfd-45a3-b2ca-9b86e0aa4a26"
        },
        "item": {
          "id": "948bf786-918d-44ed-aa3f-6ed502fcccc4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "381991ac-bfb5-455e-b7e6-d134c04eb074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13516263-95a6-471f-bb6e-3021944068c9",
        "cursor": {
          "ref": "d217e312-9e07-4e64-9278-95c9c05b199e",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "927e59c4-c806-43fc-8447-c2e902ad88e3"
        },
        "item": {
          "id": "13516263-95a6-471f-bb6e-3021944068c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b18333b6-19d6-4d97-a17a-945ecfddc5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808c00e1-6618-4092-acfa-7a284df26523",
        "cursor": {
          "ref": "71ff97e7-a41d-49a9-8b4f-a5cf3e18d49f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cbd6691e-8aa3-45dd-a397-7da8379f694d"
        },
        "item": {
          "id": "808c00e1-6618-4092-acfa-7a284df26523",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b53c058b-26ae-4fe9-8ee1-f5fc74a032d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e316a32-5c74-4bc0-81a2-3d8d2d538184",
        "cursor": {
          "ref": "051506bb-b359-4efb-b7df-d14286e4ec9d",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d59b82ca-abed-42c5-a18a-8a515c74fb47"
        },
        "item": {
          "id": "9e316a32-5c74-4bc0-81a2-3d8d2d538184",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7c15796f-780b-4915-99d8-d4f413282cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aeb0ba-0642-4348-9538-f475c9c1969b",
        "cursor": {
          "ref": "0aa3cbdf-990e-4cd5-a139-6380db23e514",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4b2dd811-8af2-4e47-b763-6f3826b0bafb"
        },
        "item": {
          "id": "a1aeb0ba-0642-4348-9538-f475c9c1969b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6048b661-6dfc-48a3-95bf-f1c3bfb6e1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2626a109-e4df-42ae-a3c1-0903fa810554",
        "cursor": {
          "ref": "a7d95aeb-52d1-48a0-978c-e9ef65c00de4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c5691052-1012-466d-b123-95ed2c01394b"
        },
        "item": {
          "id": "2626a109-e4df-42ae-a3c1-0903fa810554",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "757dc489-9765-45ba-94b3-d3b63ab61cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7119a50b-8b17-4cf3-98e0-8dfe55167eaf",
        "cursor": {
          "ref": "f66cac58-40a3-4576-87c7-dc630f68ca43",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8e108d35-a844-4dc2-bd12-3b3844910c00"
        },
        "item": {
          "id": "7119a50b-8b17-4cf3-98e0-8dfe55167eaf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a8162afa-a6fc-49c1-9428-4ea74dbc4547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6969f1-9953-4324-89fa-765acbfd6332",
        "cursor": {
          "ref": "c996e43b-8713-4f33-bb65-3d6f7e24cc44",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9707aa60-0ede-47ca-a959-0103f8e7a941"
        },
        "item": {
          "id": "6c6969f1-9953-4324-89fa-765acbfd6332",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "371205a9-18e1-42a0-b040-75a35d5dbafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea22b1bf-0d70-4de8-b6f9-5d2007c8444e",
        "cursor": {
          "ref": "330d6ef1-1325-4633-9016-dd852befc83c",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b40a6c96-5079-40af-9567-17ed456c1779"
        },
        "item": {
          "id": "ea22b1bf-0d70-4de8-b6f9-5d2007c8444e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ee4fc85c-87fa-4735-9f46-178722013c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd153dc6-5809-49da-8f2c-02f94f084b62",
        "cursor": {
          "ref": "9dac1779-e6ba-408c-ab2e-4c6c73f54f33",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0c0a2d84-c885-4eec-a1b2-b3bd4fe5e10e"
        },
        "item": {
          "id": "dd153dc6-5809-49da-8f2c-02f94f084b62",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d6974ffb-291e-4d00-b447-df0048342d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c5f408-6d6b-4b3d-8e9a-1da21ed3cc33",
        "cursor": {
          "ref": "2444fd02-b876-4ba7-918d-9612add37b80",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46d1aec4-24d6-48db-826c-940694129f57"
        },
        "item": {
          "id": "22c5f408-6d6b-4b3d-8e9a-1da21ed3cc33",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6206667-edff-44e2-8c95-cf3f47ee3af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d34960-2616-454b-a5b3-a46a63f136ef",
        "cursor": {
          "ref": "4914b72e-145a-42ba-882d-f3ae8450c8f0",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7a91ee62-4322-4865-b4aa-7b2d0370b4e6"
        },
        "item": {
          "id": "50d34960-2616-454b-a5b3-a46a63f136ef",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7453d639-3f8c-4ebd-a889-1660938542cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ce8a7c-bee9-4175-963b-f30708330405",
        "cursor": {
          "ref": "ab94c361-efd6-489e-bf1a-a8ff163dc5ff",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf03205d-de56-4425-b1c5-a59ddb628e7a"
        },
        "item": {
          "id": "d7ce8a7c-bee9-4175-963b-f30708330405",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ff343275-91ed-488c-964b-2061fea98b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928a9fdf-a0a3-4168-80ed-199c5eb0888c",
        "cursor": {
          "ref": "6eb7ef0d-b009-4a27-99cf-b79984990bd4",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ec6ce97b-85fb-44d8-a5b7-02e997ba1d8b"
        },
        "item": {
          "id": "928a9fdf-a0a3-4168-80ed-199c5eb0888c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7348b55e-f223-4bb1-a7b8-4e99bc11ff96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e88231-6197-4a61-bdd5-1d5e26dbf642",
        "cursor": {
          "ref": "cb755bde-788b-4bc7-888c-4a3d143dc4c6",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e44c78e7-6b44-4aaa-a067-8f97e44679ce"
        },
        "item": {
          "id": "f9e88231-6197-4a61-bdd5-1d5e26dbf642",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "21951285-7eb1-48c9-8c69-e013f9b459d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ccf2f9-68db-43ea-a36b-4cc1e7b2979f",
        "cursor": {
          "ref": "7301228f-f54a-4586-b41a-603aef54a24c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b7f8df39-0c78-431f-a2c9-4b3eff8d08a6"
        },
        "item": {
          "id": "04ccf2f9-68db-43ea-a36b-4cc1e7b2979f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "70f3ab6b-a97f-437f-98bb-3fb095083e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a023e6a-bb99-4344-9756-086a4229a844",
        "cursor": {
          "ref": "ba7b24fb-130d-4860-92c5-45e4df7b4227",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f3710159-6cd7-4d35-9199-34187964d9b1"
        },
        "item": {
          "id": "7a023e6a-bb99-4344-9756-086a4229a844",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5fac0bd5-d093-4f1e-838f-34fb4b6ad98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc457e8f-4a4e-4f8d-8ac7-2bb184dd3949",
        "cursor": {
          "ref": "048f2aa8-ca28-4794-9533-718aa0b35060",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4b79d8ce-9bec-4b15-8e27-68e5959cba4b"
        },
        "item": {
          "id": "fc457e8f-4a4e-4f8d-8ac7-2bb184dd3949",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "40328278-c574-4a52-a415-0514d0071956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303343e1-ef96-4a86-bad6-3cdd1bafdc40",
        "cursor": {
          "ref": "3a221169-db5f-4234-82bf-5e92c96404ca",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8d1fa290-6292-4463-a665-aa32b7626c18"
        },
        "item": {
          "id": "303343e1-ef96-4a86-bad6-3cdd1bafdc40",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "be272242-41f4-41a8-9b56-63ff29f4b979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe3a3b2-e230-42a1-ac63-f9b4051b7115",
        "cursor": {
          "ref": "555ee572-bcb4-4891-97ec-0e9fa4190b9d",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "79aa2113-d2b9-43cf-b185-db584fe081c2"
        },
        "item": {
          "id": "dfe3a3b2-e230-42a1-ac63-f9b4051b7115",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5cd92e9f-1b43-40ec-8734-1ee7ef69413e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9150851b-6667-4971-9155-344ce5cdbf50",
        "cursor": {
          "ref": "16dd2d38-1179-4508-9a1a-be46ec1c607b",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1736d8c8-bf26-430c-a814-59137c4c20ff"
        },
        "item": {
          "id": "9150851b-6667-4971-9155-344ce5cdbf50",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "aab75234-aa90-42e5-91f7-b0a11e43d8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c3d1b-3dc4-4699-add9-12b0fecf62a7",
        "cursor": {
          "ref": "af035eb0-f57c-4bc2-bc88-fddd996cfece",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1411d56-c410-43b8-8b9c-274f170419bb"
        },
        "item": {
          "id": "867c3d1b-3dc4-4699-add9-12b0fecf62a7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d0d64647-2dc4-4dfb-bff5-5aa3be79a5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd75a347-393e-47e7-a9a4-243e820ca0d4",
        "cursor": {
          "ref": "48171fb3-76e8-4363-8df4-6e0a06c67ebd",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a5c82b82-638e-4982-ad99-84572e0aa515"
        },
        "item": {
          "id": "cd75a347-393e-47e7-a9a4-243e820ca0d4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f0349886-a2d1-4945-b7fa-322d3232b36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ea66e0-e572-44d6-b417-675f3bc611f5",
        "cursor": {
          "ref": "78353dd2-6914-4942-af01-be62b95d3cf8",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3f102fe2-4938-4167-b8c7-9d725b315f12"
        },
        "item": {
          "id": "48ea66e0-e572-44d6-b417-675f3bc611f5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a1e070d5-2cff-4e16-b132-9ca2439f39f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73d21f3-8cd3-4aed-bff4-653d696e7de9",
        "cursor": {
          "ref": "ad83f509-94d4-4d22-8dde-68c0779705dc",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "65a7bfb2-db53-4969-b594-b1c888e4be0e"
        },
        "item": {
          "id": "a73d21f3-8cd3-4aed-bff4-653d696e7de9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0cfb3fcc-e1be-4339-aad8-140f1bd3104b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe7fd14-f0ad-4ece-bc89-9e5a1a60f8cc",
        "cursor": {
          "ref": "67fecad6-b6bf-4167-bc47-d22196bb380e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "53ddd38f-2f6c-46d8-970f-522062dd66f9"
        },
        "item": {
          "id": "7fe7fd14-f0ad-4ece-bc89-9e5a1a60f8cc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "01b28be5-5133-46c8-a44b-eecab715b4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2803442-d8ad-4e9a-b992-c0c065ee28ff",
        "cursor": {
          "ref": "a137131d-a082-4e9c-9e36-febbae1ba84a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d060ab28-7ca1-4d4b-b928-3ecae38d7cc8"
        },
        "item": {
          "id": "a2803442-d8ad-4e9a-b992-c0c065ee28ff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c873e7ea-48e9-4791-a517-b0c8e78bf559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6085d-8322-45e7-aac8-f2b0ed39edb1",
        "cursor": {
          "ref": "a34ba821-af98-4f79-b830-74e19947974d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "12443955-b8c4-4c91-a84b-63aa36db74f6"
        },
        "item": {
          "id": "41f6085d-8322-45e7-aac8-f2b0ed39edb1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "957001ff-441e-4423-8ec4-3c7398cd2a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f26192-ad39-4214-97fa-df347e01891a",
        "cursor": {
          "ref": "39459b98-d6d0-48ba-8224-00a936e14b63",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88e3f1fe-e274-4a93-8889-2fbbee8efb7e"
        },
        "item": {
          "id": "d7f26192-ad39-4214-97fa-df347e01891a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "31042f1f-f269-482f-9c3f-6574c6615185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7461d4cb-2ab1-4838-a380-78a33414f217",
        "cursor": {
          "ref": "7420fe2d-7c67-41c7-b832-1d92af931d29",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "370b6da4-2093-4b38-9b70-f21177b90564"
        },
        "item": {
          "id": "7461d4cb-2ab1-4838-a380-78a33414f217",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d7d74f68-595d-4f31-bc65-fe44e3dda417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeb88f4-7352-4a5e-a864-d7426c7fa9b0",
        "cursor": {
          "ref": "33fc3d11-550c-49b8-9dd6-4e881b5f9988",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9428f42d-d941-4491-8bf6-b722c144d433"
        },
        "item": {
          "id": "8aeb88f4-7352-4a5e-a864-d7426c7fa9b0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c1f761e9-cbe4-4f67-8ae3-39fdb123b1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3628b6f-2d3a-41b7-a387-0ce21e356285",
        "cursor": {
          "ref": "b43b9e1a-b256-45d6-97fd-7a3fffc5305f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9ca132b1-4198-49f6-90cf-c6f65e93f05f"
        },
        "item": {
          "id": "b3628b6f-2d3a-41b7-a387-0ce21e356285",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1ebf0145-c7b6-4e46-8f8c-5aec66fd626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da57cdb-0ba0-4e7d-a399-7196b86d53dd",
        "cursor": {
          "ref": "12a8d1fe-4899-4645-a377-89a5a931fa96",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "38c16e89-b2eb-4abf-a4fe-e8a04f255649"
        },
        "item": {
          "id": "0da57cdb-0ba0-4e7d-a399-7196b86d53dd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2f83d2b6-a5c4-4c4d-86fa-4bccf1355e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a54e8d4-67e9-48d6-bc73-f80597d43ab1",
        "cursor": {
          "ref": "f53613ff-4fd6-44af-bf51-a52b16e9e72c",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "757d98ff-6ffc-40e7-84b1-a5bbb1bfe1fc"
        },
        "item": {
          "id": "0a54e8d4-67e9-48d6-bc73-f80597d43ab1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ef6a2194-4ad8-46e9-9d0a-1b33d05448c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f9fed7-c415-442a-b2c2-5d498b2f4d06",
        "cursor": {
          "ref": "07e82cb3-197a-4f20-b042-fdc16158583a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "39ee01ca-9d8d-41da-8d93-b501da8cc6d3"
        },
        "item": {
          "id": "c4f9fed7-c415-442a-b2c2-5d498b2f4d06",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "04362f8e-59e0-44ec-bd20-4d58793fbc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28f4d79-5d0e-42da-b784-0675728b74f1",
        "cursor": {
          "ref": "336093f2-fec2-4fdb-a108-e3f426cd63c7",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4859c6de-b800-462f-a61d-8767208ece95"
        },
        "item": {
          "id": "c28f4d79-5d0e-42da-b784-0675728b74f1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "411bc171-6519-4bbd-bb2a-b2e1b193d25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2de4189-9379-474a-9c46-e5bc1d7103ce",
        "cursor": {
          "ref": "10fcddad-144c-4d35-b666-a24d54e92706",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c263ce24-15b2-4c70-a461-4bdf2f4a57ab"
        },
        "item": {
          "id": "a2de4189-9379-474a-9c46-e5bc1d7103ce",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "adf37610-9a0e-464a-96f1-b147e8352ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5969a2a-255a-4766-8105-b3563edeec60",
        "cursor": {
          "ref": "775aec26-1988-406b-aa17-eaf04861d3dd",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "066cb7e4-afa5-4bc5-ac0a-9bb8fd03464c"
        },
        "item": {
          "id": "e5969a2a-255a-4766-8105-b3563edeec60",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36e293be-0822-4aa2-9b0a-849f16b9355e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d373c77-5ead-4f04-8098-5c84367c64b0",
        "cursor": {
          "ref": "15e736d6-e864-4ca1-aaed-b07683c5f787",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e9590ed2-a45b-4881-af17-b25a03fe436c"
        },
        "item": {
          "id": "3d373c77-5ead-4f04-8098-5c84367c64b0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "12de9b41-04a4-491a-83df-53a5762642f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a666cb29-da10-4b2f-b1d5-82f39e607008",
        "cursor": {
          "ref": "9c922842-47d9-455a-a71b-982370b3200b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2cdcfbdf-ab91-4aec-893d-0255493afda9"
        },
        "item": {
          "id": "a666cb29-da10-4b2f-b1d5-82f39e607008",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8d382952-fee8-4271-8f7c-da594d2c26cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff76493-dc86-4e70-bf6d-c80e319743e8",
        "cursor": {
          "ref": "776190c9-5067-46b5-beb2-2dc60909f45f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "86f703dd-809e-47e4-9bb5-fbc3de8f356d"
        },
        "item": {
          "id": "bff76493-dc86-4e70-bf6d-c80e319743e8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0b900916-03b6-49e2-a777-492468017582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc406e2a-d9e9-407d-b1ed-0a3394f98d13",
        "cursor": {
          "ref": "8631dc6f-9d34-4d99-ae71-bd9427b0f51f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "79ac6507-761b-449d-b838-31683c97433b"
        },
        "item": {
          "id": "fc406e2a-d9e9-407d-b1ed-0a3394f98d13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cb7e52d9-9442-4659-920d-d551db9fb2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5f9c8f-5156-40b6-844e-87110e027910",
        "cursor": {
          "ref": "91045a20-fc1f-44b4-8865-d93a8df5ab8b",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "746c0ef6-3391-43ff-856e-8923ec9319dd"
        },
        "item": {
          "id": "4a5f9c8f-5156-40b6-844e-87110e027910",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3452c294-f9c1-42fe-8893-9a9894a099b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243fe0da-70a1-4d05-b4fa-2dc4a0593a73",
        "cursor": {
          "ref": "0e0c4898-10ce-4ffb-86da-95df388aa055",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f68e1e81-5035-4bf3-a288-8e247816be21"
        },
        "item": {
          "id": "243fe0da-70a1-4d05-b4fa-2dc4a0593a73",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dc210b3d-dbaa-4d53-92e7-bfe03bea7f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4618ad-0a9d-4cc0-a324-fbf7e91a91b7",
        "cursor": {
          "ref": "1a1f7287-4f75-416f-a276-6f0c4b7e0259",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ee8e884b-226a-4b28-b37a-497b0bcc3da5"
        },
        "item": {
          "id": "bf4618ad-0a9d-4cc0-a324-fbf7e91a91b7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9a8faf1d-8363-4f36-9dda-a25621770cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e8b439-5ec4-4f15-b8b1-c49fc7877c3e",
        "cursor": {
          "ref": "fd33c0f9-eaad-4892-8a3e-415424490b50",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d9605a56-e570-4d2e-9335-1905ea10beb6"
        },
        "item": {
          "id": "61e8b439-5ec4-4f15-b8b1-c49fc7877c3e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cb993104-ae55-4946-b401-3ff1c967fd4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7949e843-fd28-4c62-aa2e-c8a7d63c9a2f",
        "cursor": {
          "ref": "6e02368e-5a2c-4880-bd89-197667363403",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c77bc6ed-b1cf-4ca3-9dba-2da13d598413"
        },
        "item": {
          "id": "7949e843-fd28-4c62-aa2e-c8a7d63c9a2f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "80b1d6ac-6e8b-474f-a167-51ccb8837962",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece573d-c72a-4870-bb83-ad32ce6d0487",
        "cursor": {
          "ref": "424a07af-8aba-4489-825f-264f49a24ef5",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cca90980-ec4a-45f0-b611-c73a66d766d2"
        },
        "item": {
          "id": "eece573d-c72a-4870-bb83-ad32ce6d0487",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1f482f13-5c14-47be-b9f5-b3f986243d8a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1851423d-a61d-448e-871e-b0ea411d0013",
        "cursor": {
          "ref": "0babb7c5-5005-40a7-a8b5-20ba3e7fbcae",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a8748cf0-e51d-4e2e-94c6-c6692dcc18e1"
        },
        "item": {
          "id": "1851423d-a61d-448e-871e-b0ea411d0013",
          "name": "credentials_verify"
        },
        "response": {
          "id": "556bec91-8799-4a2c-85a3-b1ebdfeabd88",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2e4db2-5093-406f-80ff-e44e9cfd8198",
        "cursor": {
          "ref": "4e58d1d7-5d86-4de1-8a60-961efbf11089",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eff7d359-ff42-4929-8336-a83e7cd22389"
        },
        "item": {
          "id": "bd2e4db2-5093-406f-80ff-e44e9cfd8198",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7467c238-26fb-48f0-ad58-1a3984768e6f",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8c9d4a-fdb7-421e-9ade-a5c67fc7a6fe",
        "cursor": {
          "ref": "ee3caf11-c5e3-4dc6-8523-70e1d3304fc0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f9cb1c06-dc29-4e84-9cc7-ebde381d1ced"
        },
        "item": {
          "id": "8d8c9d4a-fdb7-421e-9ade-a5c67fc7a6fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b804d41f-28c9-4933-98f6-a148ad7e04c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8c9d4a-fdb7-421e-9ade-a5c67fc7a6fe",
        "cursor": {
          "ref": "ee3caf11-c5e3-4dc6-8523-70e1d3304fc0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f9cb1c06-dc29-4e84-9cc7-ebde381d1ced"
        },
        "item": {
          "id": "8d8c9d4a-fdb7-421e-9ade-a5c67fc7a6fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b804d41f-28c9-4933-98f6-a148ad7e04c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8c9d4a-fdb7-421e-9ade-a5c67fc7a6fe",
        "cursor": {
          "ref": "ee3caf11-c5e3-4dc6-8523-70e1d3304fc0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f9cb1c06-dc29-4e84-9cc7-ebde381d1ced"
        },
        "item": {
          "id": "8d8c9d4a-fdb7-421e-9ade-a5c67fc7a6fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b804d41f-28c9-4933-98f6-a148ad7e04c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981594fa-fe9d-4d88-973b-c952be47ad19",
        "cursor": {
          "ref": "bf04f585-77c8-4bb4-9cee-d0132cf0a5fc",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7c915c21-37c4-4f45-9ea7-46fb931d84a1"
        },
        "item": {
          "id": "981594fa-fe9d-4d88-973b-c952be47ad19",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d4a64bcb-13f3-43ba-84db-e45f9adb721b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b83ac-4180-4fdd-8863-6e8c9c1bdc06",
        "cursor": {
          "ref": "14ae725b-c4ce-4efd-969e-1cb2bec54687",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e171aa2c-5c77-47ba-920c-ba501f4c4566"
        },
        "item": {
          "id": "3b0b83ac-4180-4fdd-8863-6e8c9c1bdc06",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7dbb1a8e-213a-49c4-a65d-34bc1580c854",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b83ac-4180-4fdd-8863-6e8c9c1bdc06",
        "cursor": {
          "ref": "14ae725b-c4ce-4efd-969e-1cb2bec54687",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e171aa2c-5c77-47ba-920c-ba501f4c4566"
        },
        "item": {
          "id": "3b0b83ac-4180-4fdd-8863-6e8c9c1bdc06",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7dbb1a8e-213a-49c4-a65d-34bc1580c854",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d553c328-4bb7-4878-a42f-e45e79c476a3",
        "cursor": {
          "ref": "5ede0554-f3a1-4034-bc65-a3e9d214ebed",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3111706f-45c0-4318-a41c-2082bca051e2"
        },
        "item": {
          "id": "d553c328-4bb7-4878-a42f-e45e79c476a3",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0f90a903-362f-4cc3-a11d-adea8b81a473",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c4598b-3acc-4f20-8cf8-d12a2e519df1",
        "cursor": {
          "ref": "e499e6a0-7389-48dd-960f-fce82406a8f2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "14bb78af-7b91-4aef-8c4b-a32c36d23dae"
        },
        "item": {
          "id": "90c4598b-3acc-4f20-8cf8-d12a2e519df1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "05fbf405-2f0b-4a90-962f-593922fe6eda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c4598b-3acc-4f20-8cf8-d12a2e519df1",
        "cursor": {
          "ref": "e499e6a0-7389-48dd-960f-fce82406a8f2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "14bb78af-7b91-4aef-8c4b-a32c36d23dae"
        },
        "item": {
          "id": "90c4598b-3acc-4f20-8cf8-d12a2e519df1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "05fbf405-2f0b-4a90-962f-593922fe6eda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c67bf3-5e26-43c5-b437-a0ea7a79a738",
        "cursor": {
          "ref": "bb8c48bd-c7a6-4e59-a38e-7940c341f82f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b373ba98-8151-4715-a8ba-6b9a67c296de"
        },
        "item": {
          "id": "f3c67bf3-5e26-43c5-b437-a0ea7a79a738",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c49c1791-959f-489f-bcab-2bec7f82b052",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}