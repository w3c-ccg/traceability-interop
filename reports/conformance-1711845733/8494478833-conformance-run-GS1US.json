{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5cf6d5ff-c11f-461a-95fd-cf6184d64514",
        "name": "Clear Cache",
        "item": [
          {
            "id": "63b52467-8ea8-42a8-b1c2-e924738cbdd2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e969c8c2-49e9-401c-85e6-83c5c57b5a3c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95efc2e8-8593-49f9-95cf-f58110ce485a"
                }
              }
            ]
          },
          {
            "id": "c876bcc3-a051-48cf-a2f8-09da831086a8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cce265e8-dab3-4bcc-afc1-97e2a4931694",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40e356fe-673b-4afc-bd1c-2730c18d9404"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3e649001-bc8b-4e7a-8f09-f818e6374e0e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "39be7a8c-fa9c-4af2-bd37-1a2ee6211046",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d895c9c1-de85-4c80-bdd6-31d617f0f106",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db36eaa8-96fb-4285-9010-fb89cdb7e640",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52f55cb3-323f-4c60-8335-be6cc26df3fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4feaee0-123b-4c6a-8b7a-d9dd05608045",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "168bd1ca-1578-46d4-bb3d-eaf407c84022"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "748ec90a-214e-4bd1-890a-a5c70d4fede3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1415e60c-e2f4-4c71-9508-eef5d26ade4e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c580cd1f-60ac-4761-95b4-953f01235083",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c4b6a645-750b-43de-9da7-d9d3a2ae04c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42567dc3-da9d-45b1-ad95-6009478fc6cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5630557b-1147-4c43-94dc-028635289b4e"
            }
          }
        ]
      },
      {
        "id": "bc6c345b-4258-4fe1-8265-822a83bd3bae",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "459324fa-0653-4edf-ab12-de653d77b87c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a27dc3ee-168c-4339-a02a-fffee8f0d05c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f167cb25-0b9e-4938-86c9-193938230ea7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1c06f3-119a-43ec-a676-c724b5d010ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f151d624-4b6f-4cba-b4a3-8c580ac2986e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5d84cb-7490-4814-86b8-e30d79fb692d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1795e8-3008-4ec8-b6f8-20fb47d349a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9837d984-ddfe-4434-8ebd-ccb2ac05b33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66846bf6-114b-4ca2-801f-6c3ec0c3147f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00c39aa-a8cd-416d-a221-b8ea320b5f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7c1e4ba-11c4-4db3-9999-a586c217c1ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f0088ab-f17a-4b36-840b-2f2630a38c0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78703874-3014-41d6-bea1-b520bc349cfa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df9bd49-0519-4dea-8077-d4594f64c4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b404205-856a-429a-a977-ec29e293e611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9335f9-766f-477d-9e07-8935ad3ef231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793bbc44-c596-4b20-9470-45af3dbce42e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "941aa375-ba99-4b83-87ea-9493e0d83eaa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ffb82a0-f746-4b8b-a40a-2fd07465d97f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "837d0cae-59ad-4c83-9f76-6c850a10dff2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d6aab458-1c58-45b4-b105-9e15aabbf1de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05106011-b09c-4c5a-ace9-e76ece7c8897",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7b1c2997-23e4-4143-b952-118b51fb5dce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "343b67f4-e8e4-4c88-85ab-0a34c7f82d57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f859292-58d7-42c7-8f62-6e13f48a60f1"
            }
          }
        ]
      },
      {
        "id": "ee10d072-b2be-43cd-9d10-d92851d6d828",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9c3d9434-6ef2-446e-b674-a2968cae640b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5969f2b0-d318-45f4-ae11-b1a8d16bde4d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c483fbf6-b796-4a2b-9f04-e27a4e5e1f08",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fc9f97-6a42-4af9-95d1-3dc617ea13e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f94768a-d67a-4029-83d0-b9fc694b5f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2afd77-3ccf-40a2-a272-92fcecf98e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2c1adc8-07ef-49ba-a8f9-582730b187b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37bb794-e598-46e7-a725-67f6a069e891",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292f6db0-0174-443d-bae3-ecfbabf6bb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb1e581-5c44-4b1b-a2a8-d3ba08de330c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3995e25e-bb4a-410c-bebc-3b8fd01fb711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53e7963d-046f-4b11-b0ab-ed7f32ec278d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36369582-fdbe-4d73-8cfd-c622014f765b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb64a319-c4f3-41c9-9c25-61667f8a2695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779adba8-c3fc-4a73-9e96-29eefecb5876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a7542a-9460-424b-a2c3-0810b1266a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "372009ce-0027-4019-9ace-5dfcb6f4fe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e554710-ab09-4069-8cb7-8d4fdea74d84",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be688263-a016-4229-bf2c-8b57aafe2fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5644fdb-3d44-4fed-b9ff-199b281b20bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385aaf95-ab27-4e88-86fb-4e48bd50e608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b4c81eb-78c5-4386-999f-c6e8f55ee0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc19a97-db58-42d5-aa15-014849d5c4a9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b71f1e-ff0a-4472-bf1e-06e32a646839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4427d5-6517-431e-9ace-d28ecde1d0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b894b4-575f-4ecc-aa98-354b59dd735d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf5c4aa3-04d2-4ecb-bbe4-679346c84b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6490689b-f68a-4126-bc1c-0eeec8c51c60",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04d762a-c6f0-4817-80f7-0943fa0574b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f10af0-8827-4905-be06-d439a6fd311e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf3ce85-4221-4aa4-9122-89a145f35da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a745f5f-3f93-498c-a1e2-1bef9deca086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7777d6-b068-4649-8e48-ca8e3e1957b5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39c44e6-7628-4ebe-a30e-436e24f61585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac38658-b51c-4314-a05b-d569add128f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c993d49-95e4-4b4f-9570-c8cba0484970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b95ba14-6fd8-4e25-a2a0-3ae7264938a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c614484c-c656-4da4-bbae-ad3e26ef6040",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d8d124-218b-4251-882c-076aa6c7213f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5120516a-2bdc-4193-af45-bd909159a074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e858f06-9514-4921-a977-6d2fc953cbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e0d4de0-e2d4-4908-ab39-db1578819ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3075c7-27ae-459d-8b6c-77bbf2041b35",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda2344-a3d0-414e-9076-d1069f90c7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be527de-6024-4dcb-977e-20353eb25814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529012c4-0b9e-4987-8f50-163e0185ca48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f02f39a2-df05-4534-bcf3-5f7463da9dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e37089b-efbb-4fb0-9cdb-3aa7b7657366",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562f0375-7896-49a0-8062-bc534ce4d2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4236f454-dc2f-4acf-941a-0069271e4dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa788892-1ad0-4d1b-8afa-881455bcc0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbc28713-1325-4430-9cd2-fec746197875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359de69e-f04b-4abf-a980-ab11583fff1b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d700dce9-cb1b-44ce-b108-e28c7200335f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6189869f-9f56-48ac-87aa-3f347bbbdf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f193744a-3309-4dfa-9ca4-3483af152545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "132becd3-fc12-4098-97ef-b0d1bf54d9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa091347-3c6e-4c9f-be02-bc2685d84b90",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f120291-454b-4b82-8208-ac11576f0e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62248bb-2a3b-4f66-9861-52aace89bfa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60993e42-766f-4e06-b74e-0820fa5d803d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9358b6f7-625a-48cc-9d5b-71b10ca07d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36af26ce-1ead-4b1b-b697-1149a2d38f85",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb65a8e-f458-43d0-acde-d51b69e9baa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaab936-18ad-4b24-ac15-72b401b97126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02768167-dfb4-44b1-a279-aaebf01577cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8afb43a9-b3af-4805-a4dd-ff3756ab79bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bcf2c7-0c4f-4154-92dc-bde4c650ea35",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23755417-a157-420e-81ba-b2aa1f35bf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e65bb88-fe12-4d9c-91d6-4ba3911106d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398508be-6c50-4c25-a4e6-0ebf373590e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7a2f0c1-efa2-4f8d-89dc-b6db015a9e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965c54fe-6612-435d-b912-4fee7f11b049",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78034e9c-592b-4230-b095-a83e55681e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8b3e3d-18f7-4ff4-8695-ff1b6e0ce41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad6645a-a4b1-45cb-a313-84e7f69fc908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81f91c07-f164-4b56-a1a3-45d37a567b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4834ec-de59-44a3-a9dd-54e015639f92",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3882f233-e8db-4d5b-88bb-2877f168b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984059b4-dec5-4be6-99d1-66689727191d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323474e4-5732-4ad6-95b4-507bfe2010d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6bdf019-98ae-4a13-90f7-ca5af8d32eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86ff75f-e1b3-4dc3-ba62-e20765b4e64c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba7b007-3922-4b06-ab7d-a5238d43c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eae4467-4bdb-4740-8ee9-ff65b4e4270b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27dd7b1-d537-4ff5-a15d-99a225833f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bedf2274-6819-4e08-9122-67d68262e6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4e6d4c-84da-4ed8-b886-d2e592a82637",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8625a566-1a81-466c-818f-d08054de95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e92379c-3625-4b01-a167-702260b1453a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d550b8c-9da9-4e11-bba1-8b94c5319955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "195d5928-b2fd-4f82-a3c2-9c7c43b6e8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c90a40-504a-4f20-aaa3-46d997ba9e9a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba06b46-338a-41e0-8653-79239e249337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7e96df-2382-4e42-be8e-bdff576a8956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a82f5d-49ac-4d84-999d-684299760b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad02304-cb00-4a05-8d7f-aff3c403ffcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038ab614-219e-4811-8b0f-6a9c55f20feb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9d302f-f6f6-456a-b0d1-28bdc411cf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc07f083-d107-4d99-80dd-2f698f2e57ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf13a8-9f2e-4923-9438-33c2472b0936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c88e97-9879-473c-9c97-3136aa4b1c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143478bb-1696-481b-9636-98dccca3da53",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e1b91f-3c64-4c9b-87ba-ca92d884cb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9249353-bfd3-43cf-a8bf-4d0190778b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80dd5bb-3847-42da-83de-102b710e2dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2aed2dd-5953-42a7-8093-e92e930dbfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a154948d-c681-4a1a-8776-d6362d032067",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8bef76-a3bf-4dd8-9806-1f4ee96096bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5a9361-2bde-42a9-b0e1-462ad6fc97f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e21e2b-7d9f-4969-9e43-567d1ea1f778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd303de-7eeb-4eb1-872d-ac20e65238e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf9669e-9734-4551-80ff-c3b70aba4138",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f565ef16-5856-4c6d-a011-928b83eef18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ba5f26-aa1d-46d0-8258-9b0d17db71fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ee31a-4501-4eb7-8855-beb8feb7f104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddd3ae1-7d31-49b7-9996-3f8834cbaec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2404ec-a9d1-4758-b1e4-21cf96eee4b9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcedddb-eff1-495e-857d-822356e3136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ee7991-0790-4ccd-8bfe-626330c10e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8650dbab-4c1c-49c1-ad1e-97303246b89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc286e5-fd02-46f4-81cc-ebbac164ca71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514eeb5e-a0f1-4e1f-b30d-1c51b19be809",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0480eda9-d491-46b0-b980-3f92314e2425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff67495-bb33-4991-a64b-05683675afa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c17cbe9-a42d-477e-845e-f1a27cf4cfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1092e62e-3c3c-428c-a243-388fa924c404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1151d8c4-ff0f-4a75-b2ac-0fa38684d11c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57753cf-3331-4fbd-bca3-40ffee5c08a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebf4c0d-f589-463f-bfcc-49973ca522bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f900241-d255-4659-9fb2-e4bfd63f7783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e497e4e-1790-4014-aaaf-72c2127eac3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bec37c-1750-42af-b69e-789f52d7bb16",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb092e9-c7ac-45c4-b11b-52e96b9e39cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ab200d-99b9-41f6-a0d8-c5fba16f9259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1989f7a0-a600-4e92-b72f-78fc02d13ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75eb1bf6-5d63-48ae-97aa-446e8185c083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a110caeb-8978-4dff-8d76-597fece4bc5b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4706eec9-5853-4c00-ab0d-8ee89fd17147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3983c35f-8854-45ed-ba82-c312ce76a3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718f26d9-0770-45f6-a4bf-4e1abd9203c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f09bd27-45dc-41e8-baa8-f89cd4168488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75289d41-73f6-40a9-bc4a-f49e695a7475",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe71008f-7be0-41ca-b289-37133bfe65d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd5f3c8-d5b2-476d-9748-204587dcb547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be28a7a3-3a02-44c5-a6f1-ef730d1a79d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33209461-fd62-46b8-b78f-87fe657632d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1785547-9891-4e76-be9d-047f7049240d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f12e7df-0867-431b-b781-28675b0cf6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e136120a-aea1-4da3-8bd9-8b1141c972c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d325f93a-6e28-4033-bd23-1c7f68cd22eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1075ce62-75a9-44c5-8327-ccba067240e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08131697-ae0f-4fb2-a24f-b093607381c1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de4add8-6798-47f9-80a6-70ef26c5f3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aa9729-4446-496a-8a6e-94e24eb44fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead25bc3-cef7-42a8-91db-b859f8301906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52ea59c7-3aeb-49b1-b2c6-2e89f26eff7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20e5230-554c-4a6f-b6f5-7c2c3e5dc4ce",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6a7b99-f8b9-47a3-8341-c39ed0f5bfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de10af5-a490-4baf-9fc4-2026bdf4f7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b63a5e-42d7-40c0-bd96-ded61cfdce9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4636f460-3fdd-4ba3-903b-55902156b789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d727e93a-ea3f-4455-b93b-7a00002b70c3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9624ca-191c-4b94-978e-d98f2e9c7686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30d602b-aa96-46e3-8e88-8812cc6baf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e68a05a-f3f5-4b94-b0b1-a2508109ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a365be97-ee05-409f-acdb-d5436756cfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2ecfc8-021a-49a3-bb7f-12a41e1bd1a6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021995d5-a6a5-499e-a4f6-6fc0a04ca64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bde4b3-4e5e-4689-aab6-954dee8faf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dd27e4-73da-4133-a02a-d6dc705dd333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de5aaac7-fec2-45b0-a1af-1e1ed5769e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a774cc8c-0a66-4e6d-991f-7b97807bce33",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9877bce0-43a2-4cc4-854e-a2901a494ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ef0e68-b26d-44c8-8765-1049af35a4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d2ce4b-1df1-49a8-a841-3c7bab187f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "be8e9cc2-3c74-4523-97b5-4090e3497a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cb1089-0078-413f-bd81-289a78684135",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1207aff-e0a5-4ec5-afd6-bc65bdcc5be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a15e2e43-1087-4a95-ba0a-95656e031619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab450a-111b-42db-814b-de186ac67fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da0caf12-1091-450f-895b-c1da539c74e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0a5d39-5bab-4002-8614-ca253804cb36",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccb7ac1-a8e3-4d9d-a675-5e0d1e618096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d929ed-b740-4036-8806-c6d62286bc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b101ed68-dfd3-4225-a675-1b510d63105e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b98fb5d-9d75-4203-87e1-edda7e1e4afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaf61b3-12b5-46e0-becd-a8447c1d7e07",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa47c7d3-b553-4e4c-888f-62199872fd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c04e1dc-3ebe-4027-afe7-32a79929c74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d366962f-c7f6-447e-aa04-eaf775056514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b031381-fdd6-4579-87c0-6443eef8cadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a199916-b439-49f9-8420-4789d4b1fceb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734015ac-5509-4058-93af-5b15667f48fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8037e825-d1b5-4be9-b35f-17ca2e343cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62534fe7-b390-4129-a993-bdaae7e6b547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4397cef6-f759-4991-9196-534ee47f1e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ce5d3-30af-46b7-997d-9f230208e29f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebae09f-de80-4717-b314-c0dc5967b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1303597f-1f3f-4d81-abc2-6206394958d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9bafbc-df10-44a0-a95e-fb0a7d1ba81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1f6fca-adf7-4cbb-aa80-d3870d3c24b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3992cb02-cdb4-48ed-b94d-58d835e3c35b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469dac60-0aad-4e50-a2a1-3f31c628f93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972701e9-c117-4434-acc4-b262392ac7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cac23e-febb-4fcb-a848-643e89d737a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6983d6d-7fcd-424d-abe8-b77f5f5974ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16284bb4-a418-4714-944a-2fb231ba8e88",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33de2eaf-1f31-4e07-bf07-7041735135e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa03ea63-8de8-4630-8add-1de225d98514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d059a58-4941-4e9c-96b5-24b4df1f1c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e35d1ee9-6819-4c46-93bc-713d71b94d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaec231-66b1-4955-918c-b7142a098346",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b29741-d4d7-430e-b512-434a157d3707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f81956b-a17e-4484-87e3-96e059458035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a686cf4-9580-4a49-a755-f9831ce94005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b81973-957f-432a-a40f-891ffe7d9f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd92958-023b-44e2-ae32-781b712d87ac",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d33f0-704b-49e4-a56f-af2064970113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256073ba-3670-4448-b58b-2796145aecf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f478f652-8202-4d3e-96b7-7e55c881c760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "76227400-a419-4255-a930-389635fc4318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7292ab63-c5cd-4416-8e35-f9a76e62a9bd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bc509f-cb0a-47b5-a279-2d14777590a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aad7a91-5d0f-46fd-bb70-5a8f6e39594a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7775813-8476-48cc-8a05-d7b522e896c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98024790-14de-49d1-b60e-0c5a736c3042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c327411-b34c-4c2d-831b-0223fc98e411",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a622d0b-5318-4ad9-8f59-f09904f5965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34ad06d-f00e-4297-89a9-3178636e3758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc89deeb-fb13-4cd7-9a8c-7fda62e3b99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c544540e-c9f8-481d-8996-cc5b7ea3985b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979ead56-c59b-4234-9a13-d9cf783c70bb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08847bb2-a182-4cc0-930d-1ab7667f303f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97af6bc-3ca8-45ff-8b22-320e640c0bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718e01a8-6f13-4226-9915-e9b27f515486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5367e575-3831-4bc6-bcaa-87a8de242a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edb90b3-bb73-4600-b87b-96223d1579e3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2c645b-0714-44e1-b310-d6a8504bcd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918402c2-fdc0-49ab-9dda-de0bae8a023b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a83e4b4-7e89-4728-a5d0-841466475c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31bc97fa-f0b1-4160-ac0e-a902417e2dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5851f67-a426-4a90-89c8-85e271b9298a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e6cd30-4747-4374-8f1e-1f58aadd355d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dad3bb9-305b-4aac-9001-026bf5dcb9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca65f36-653e-4fa5-a30a-0c869243ff82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2926bf92-993f-4fb0-8456-e02573870948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c39323-0a77-4903-b13a-fbde6813adcd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef25a73-d847-4991-8b41-bea323a0e990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356089c4-d723-4e06-a8c1-875afae56923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a1cbb6-9591-4f2e-83fe-ba06f91068ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5920801a-5f6d-47dc-a43b-fe1aae3b15a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c74a6d-b423-4df1-b742-5ed203677b7f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f962f2-dffb-4aeb-99ff-aa81db97c0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d28310a-5503-42e5-9bdc-dadcf60eae14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37ba7e7-6261-486a-a969-57210d103913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6926a1da-74fe-4929-b538-553de0a29406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0206fed-a978-4355-9331-87e411b52554",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c468a76-a1c1-469c-bdff-0f7df4a1abd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d5f262-3e8f-4936-9478-c5773f7fbb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228eb957-7314-4264-8d5e-29b140e0368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31b007c-a039-4bc8-a758-1c643955a9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab5f0e0-4c4d-4590-9f0f-317145c102b5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd635380-12b8-4d38-b31c-6bbe06e02a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d168452-816e-4a63-b5d7-2b734e5dda55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7fdcb0-3918-4145-8697-b42024ab11fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3631689-ea52-4090-9390-5850b7c39c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185ff14a-8c5d-4bb3-a717-57695279f371",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4985f252-f910-4608-9ee5-5b258f6ab5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab71a81-bd2f-4e7e-8aaa-12743d0ec9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07d294a-004f-4995-9f40-82ab916b3264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "548cb25a-8d4b-49d9-8081-c21b81994758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0e2545-b1a1-4260-bb37-2d7923ca22b9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d592f8-1439-4e7d-bc26-eebce7d110f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68626402-481c-4b6d-9274-3288ab2f9156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee03a57-f030-4e8b-b875-bb421b64e9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96469e92-67a2-4124-a7d3-97c60cadf60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c2923b-d036-4499-bf35-4c4fc86e2a39",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091d0190-cab3-4901-b0ee-90365be2df41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea8f0a3-a769-4289-9c7b-67d5ea6cd083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad665858-190f-4a4b-9926-28cfac36ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fb0d9f-1ef2-4f67-9065-bb5297427505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a22f42-87bd-4770-97ec-f7bea4d1e243",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dce8c0-2aec-41e7-b88f-88b9db2fa3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec12d72-4061-403e-9b24-c9d152105bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f16d85a-8884-4db7-a869-aee7cd3670ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62308718-7e3c-46c3-bada-b6f002e8bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19652cb-7e8b-4937-b205-ad958c395e90",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff456f-d303-429e-9d2d-47d2741e0c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56047ee-e7db-4899-bae9-9593e000482b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c881d2-c4f6-4c2b-a982-5164af4b8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2f3802-852a-4885-a9cf-e4e52cb7e156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942783b1-2373-418c-8462-15ecfeaf88ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a27589-c5e4-45a9-8552-dceedef8330c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44ec306-578e-4d67-bfd5-4c09625253d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3108d466-4c7b-4ea0-850e-fcb4d473e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8251fd2-a12e-4543-918f-aa94db4bcd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00796ff-980f-41e5-a323-b3dc05ed2e84",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7ba2b2-9ecf-494b-b486-e8ddbbc91761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f6d20a-dc45-4b99-9018-c42cd3e9c4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdca466c-1f36-426b-aae3-2278e0e9e5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e75b13ab-1300-4b5b-9323-355e595968eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7722fefb-775e-4649-b128-852125ba34f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7882cd04-ca13-461b-b829-b6e4403fa7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8880f6-af2b-43d7-bc73-9402a1749527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54073d00-cb38-496b-9455-7fedced531c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "19e245c5-f18b-44bf-835e-cde40a5c83a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c681fc-314f-40aa-9cb7-7524a794d3c4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afb671e-3042-43aa-a922-66095c0f79a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11048909-9550-4646-a465-168c45e36c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3616f34-7344-4f43-bfa8-0ce461bb8336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "311efb09-36fb-4da1-befa-fafacf309a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a88d8e-e07d-4797-a000-cb406196bb1f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09bd554-81de-46af-a0f9-e57af6bbe584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24991ee9-0516-44fc-b1dc-ac1ff8c7777f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b458b32-97f5-478a-9da9-3a1919c4f469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a79d361e-99bb-40c5-94e2-495ea1cdedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6b09fc-2976-4bac-9279-aaca13df0aa1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe07bce4-d9a2-4130-ac23-408a259814be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f621d9b1-7495-4d08-b326-98d1090d8e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c4b90-ae31-476c-aed4-d1285a8b0af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37dd1f5-1b94-4a1e-a492-9b768dc15759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5eb1ab-c233-4cb6-b14a-82465485aa07",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7576d2a-2351-476a-98a7-1552c0e558fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97013ef-73d9-4c56-a9ab-b3e88d954b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68281ad-8706-4f69-9a95-2546514910be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1667ca01-a403-4ced-94fc-4c7c8720b9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc90169-72be-4040-9ac7-3dd2a4d633ed",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b4339c-3016-4c99-9a9a-05fbe376cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ecc20a-9d13-46e3-a2b1-48d6c02c9610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4832d644-07e5-4c85-bc06-690b8d0587f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca5a59d-28f7-47cd-a5bc-90cf7015b323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620dcd11-5f70-41f0-9427-6ecae460c646",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcd4a19-ff46-4d75-ad8e-6a7d689bb49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af7b0b5-d284-48a7-a179-790df7710b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559ded74-e096-4d3b-9ef7-ceb92bd1d6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ada2e44a-4ed0-4793-846a-2d0e328ab847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efc3af7-7973-4507-86f2-f5601260f516",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc58c1c-376d-47b3-bf51-53ce02d0cb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387f0960-5db0-4851-b760-764eb298e6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186e5561-c33e-4984-9796-07f844ac7b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "40eac6b3-a220-4744-ab3c-81d184059f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355e53dc-2759-47ea-a47c-607de03f9084",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e7be7c-2b90-44a4-88e9-175352cfd673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d556fd10-bbf5-42b5-92b9-7aafeb3ed452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf9e81d-53e3-49fc-8284-d7c4b1ae4ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcbf7e9-c783-4c2b-9a0f-57e05a8a175b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7003d4a9-dacf-4904-8684-825e5bc60376",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f7b935-d45c-4b42-b575-e728686deef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227042a2-7f3e-4003-8c6e-b05ae3855ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c128e2-a2f2-47b9-933e-c4baf6f3d554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d098d8c-173a-4976-a5c5-b96f8a78ec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6edf200-ad2f-468e-a4eb-d5437e2b1411",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4226df-6d26-42bd-bb56-4702cdca2402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8051b63a-b24a-47df-bb33-96b62534ca8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ba02f8-bd09-4f90-a88f-b3c65aa6149d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "409b84c4-882a-4734-ac79-50e05e07d117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2e7216-5b68-4af6-b330-bc073ec3a462",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58514062-7a26-4d5e-92d9-38ba0610a4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce99ab1f-7d04-4d09-92b5-30d6b86bfd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc28534c-9e44-49e9-8e97-e7bcadd13232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef196e81-27d7-4706-a403-f61d8ae65983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55916c8f-6d7b-497b-b057-b399aa7e91f6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0810cd13-c05a-4ca1-88b9-6e5e9d39a2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035d5af2-b3c9-432a-98c8-54cee90f8236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac13196-6f98-4b34-b1a1-b14fe0d99af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf14cd5-fd38-4509-89aa-9f45e9af442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f112ee2d-6c21-40a1-8236-9aedaee10025",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593d5ed3-1e26-41f8-9076-3d9f4f44bcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c854ae4-6067-458e-8aeb-28dc95569cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c153a3e9-3778-46d0-9ccf-a331a618a3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc2effb-f577-4b03-bc09-d79fa0ffb7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ef9b0b-228c-432f-9077-fa2aa41431dd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79918b57-ee7c-4aac-9eb2-13d512c54563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbff99c-1a78-405d-b215-c0f3e7660129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d9d44f-357f-4957-9255-01611465aeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ff7d9a-fd4b-401c-9c2c-4a45697aa6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af989af2-6645-479d-a80b-f786e37d9e12",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65da0b4b-b28e-4c15-9948-db30e54c4285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e65e73-8322-46d4-91bb-663b365cd80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9d3354-2333-41d7-98cf-258ccee0875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e81b253f-748d-43d1-b9b5-7a80917d9c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5f40e3-9346-4f5c-bc71-73a2446f528a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc752a1d-5cdf-4cfc-91e1-90b94a11c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc281a7b-f72e-4385-935e-34f9785cf2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe459beb-2892-4bd0-a446-a2e5a6a0a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35104595-a5b3-4660-b72f-46d027c34b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70578d2-2346-4b72-9fab-c192bb1b5d12",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bffc47-f268-44d7-8959-35fb0a5eeebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa122871-831a-414d-aa2d-013508480d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d75e85-c962-4ced-8509-e2bd4dcf4c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "602be389-4dd2-4472-8d3f-702632794cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11c1aa7-eae0-4b04-b537-7e219ebcbf13",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243e2983-9da6-4492-863d-f19c9d73eb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93383a7e-18c5-44f5-a2f6-19fcadf16ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3200c7e-e071-4e7e-a852-eeca4a99d98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65acd163-e877-41f1-86e9-fba1a9a368b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4516574-15f3-4d6d-b3cf-b19513578743",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fdb176-88bd-461d-87f3-657c022c28f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255fa521-0cbb-4bec-b783-8d531d6d6e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37ad2f7-5fec-44f1-9e20-a60a80afc617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "628ffc1c-5014-4c83-b5a0-2dd88f977920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69ead8f-0511-46be-bf82-006a6d6f8daa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d120e72-2ea5-4297-a996-d43ff160ea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37b4963-380c-400e-abfa-63c8bb30d592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422d4a8a-fb93-4434-9ae8-d4d5dbff1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4fd626-ed24-487b-8bc4-9490b886fcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34f2bbd-1ffb-4906-bfa6-70537164e0af",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64abbed-2a0a-4346-825a-faaf34f2f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24802e0-fc84-4998-87e4-36b4cb6141c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eda45f-b4a4-4f59-adb4-d300c43d613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "745b98c0-8b04-48e0-988b-ff34f389f5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2a3b8f-b0ef-4316-a101-6bfd1c0de3c8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e8bf0d-29ad-4579-bed0-38d79587ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42d9b32-957a-4e4c-8282-2be3cc3dbff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a77197-ee82-43a2-a88b-d0cd16e72949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c21307d-468d-491c-a0fe-820fb2ef3d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fe7244-d75b-4309-bb30-e224b1dc5f81",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88439f6a-b288-469f-8c83-707cad839da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0c1dbc-e8b5-4a26-b390-1992d83cca76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f5ed17-bab1-4778-9b12-8bd20c0288f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "911dafad-268e-41ca-8e32-2844d8780a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cf9c87-2ab2-4768-aa2f-d8e02e9c55ca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad4cd52-f15a-4260-952e-ea9fe8104baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4415c58b-1174-438f-9902-8844b166455c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8097af-a610-40d0-a444-c7b26a7ef331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37fcb158-32ce-4542-b82b-dc0eedc5fc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26903d7-1957-4bde-bada-c3dc847bd28f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c8984c-605a-4ef8-a739-b6ed6a32b0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65c4944-49b3-4960-bc84-8eb218e48128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f67e7f-897c-4e02-aabd-3d484fbaa33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21dc9083-f816-4d24-9fa9-525b29010b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59f4ec4-e0ca-4d86-b5d8-1bb07a57765d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c99760-3ff2-4cec-bdfc-f9db8f49bcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c45c584-4197-45ec-8ca8-080bbd235865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a74cdf3-b773-4a83-89a2-1fae8b8e708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "974cbd3e-c815-401b-99d3-ae71b1e18f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c442bed-ab55-4f32-9557-3bea15a6c05f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee99d53-0b0e-4eb0-bdb7-a38cd3b44ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834829e2-eefa-4366-b387-9baf000dce04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc98a91-f308-4d22-b44e-41ef363b1939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a85a03e0-2cb0-41e7-ab4c-3e7f726e94e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9166e633-a4dd-4fb3-8075-4683297a4275",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c3ae97-efb2-4b1b-9579-a108cac7c1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45147dd4-bfea-4319-bfa0-2c5fdc42ecbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411e9558-70ba-4dba-84c3-f91901532375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a5ad7b-13f0-4350-8f81-a5922c50d041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e500e9e-e16e-4482-a716-b2cd5142cf2e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ce0b9f-db08-4bb7-991d-3d21c084a128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ac01c5-8f98-418e-b781-323ad65548ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c699e068-eba4-4264-8049-402558ed144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc34cce-db49-402d-994f-9789b63fbf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a59c904-1393-48c5-9520-67cab1404eb4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b067d0-8b75-454d-9028-a549de870c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad106c35-89c8-4bef-b344-db94f0bae693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72290991-fee5-4508-b1e7-b49ba73dcc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4839fc0a-547a-42c0-a395-95cdd667d40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e908a5a-a147-43fe-b335-c9be4e77f538",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff025019-5cfc-4c26-acbb-84ffde437aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "800fd6d1-10fd-4ce3-8123-cf1d4cd2fbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cd4774-5844-46f4-a181-d9e8bc3b281d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b4ccd8-b1a4-4eba-8b28-9bc08b146bc0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff1dacb7-07de-4bc5-ac08-dd3e69f28c1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "412b1e1b-72f3-4619-a596-0662a5d24e37",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fba98d-e911-4524-8065-9d3dfeaa16ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c35be851-4bec-42d2-89ee-d8b5d9d9e522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83b5ed6-9cc7-4a6e-aef1-70c0cdaedf2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7869d38-a2a4-4c12-ac3f-c65cc3e50ad4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e331d6ac-3d5e-413a-975e-80c30af721a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "818ab8c1-6889-4452-960d-a4bc3b057c9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9183aed-533f-4945-aa1d-bde5443308a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c69eaadd-9a02-4afd-843e-aa6efd98f5a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ff8eac1-8fa6-4370-b125-8659d2a431c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccd0c22d-54cb-4d74-8984-800a450a6d53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f6553370-5409-45d3-9c7e-fe62a2ec43fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "208a50b1-5452-4f92-8127-68751ef42095"
                }
              }
            ]
          },
          {
            "id": "0c22aa18-7153-478d-ab70-3f41f628aacf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a71db79-8926-4130-8986-06a6378c08df",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f0f9cc6d-f71c-481b-ad18-5200fd4accfd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d0fc89-e95c-4dc2-9a14-8f2664d54211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6389827b-471c-44e9-90fa-fc9b25dc502c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a36825-360b-4793-bcbb-be2621d96606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df765d7c-9e3c-47f1-88c4-3f5cbd236674"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "098fb1df-17c7-4e4a-b137-30f727b1a8dc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a849146a-cff1-4ae4-a1c1-1ebe5141716f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57771963-8548-4b91-b9a9-fc9b60a3e5aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bda2bb82-3fda-48d8-82f2-fbed3ff59a06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "497b4423-12ab-4c14-afdc-d600e7f5d36e"
                    }
                  }
                ]
              },
              {
                "id": "b1c29f8c-f6ec-4ad5-bcc8-10bfe913a100",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbab95be-24c3-4654-b806-0f0867b0d5d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1286a5f2-da74-4fe7-91a8-001acbcd96d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd2150f9-59d9-4b11-a8f2-e8df4957cebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca267416-89b9-4d22-a61b-bfd894f9e2db"
                    }
                  }
                ]
              },
              {
                "id": "8d453ae2-2f49-467e-a23b-deb33e125d39",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e154a87-30a2-4096-a8c0-4c692cf28806",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e825b61-ce8f-4354-89dc-450e5d97dfd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81206bb1-98ce-4627-9897-e82f3816d32e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "659d97f9-7dbe-4ff8-9043-34b0e1a21a0f"
                    }
                  }
                ]
              },
              {
                "id": "8e38e984-e1e6-4c7d-90ed-65b3c3385cb6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7d30994-5210-49a3-b1f7-069a85d153af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57d05f80-7cc3-434d-b552-df14ca1ca162"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a28d98d-8bd5-4579-8366-8e9dfde09628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "85950fc6-5cf7-4cf8-973e-81b6c8f15916"
                    }
                  }
                ]
              },
              {
                "id": "9c775a38-1ea8-4ef1-9400-366c26b7e3dd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc9dbc9d-3298-416c-98a2-5b1f406c7989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba03c1f0-e14a-4ee2-96ca-95b1fdd50adf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36c57831-bb4a-45c7-bba1-13a796cfa8ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d624dbc-59b5-452c-bedd-d3be581d8697"
                    }
                  }
                ]
              },
              {
                "id": "2179d113-bf41-420e-b77b-2a4cad48e248",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8ef6ae9-16fd-45a1-8417-5d4e48957fbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35755b87-52fa-4cc0-8ec3-fe9e71878c62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac918be-4ba4-4e07-9c15-9330e92d2a8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50560548-445d-4080-9007-c5d06f51715a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6af8afae-53d6-46f3-9ef6-be51b9f265d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdd5fec1-9537-479a-ae0f-b98f17ae4255"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7aae4887-e1df-4cdd-a1db-81f0b007a821",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df5d0abb-30d0-4832-ab17-51b325189b64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e6ccf46-b572-4165-91b5-2fe0b16f4f50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "da16fd6c-ee89-42cc-839a-d8daa6c2520e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9424a810-eb62-437a-afbe-2edc61053cf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7469d9cf-5f30-4d69-92b8-d2f43cdca2f8"
            }
          }
        ]
      },
      {
        "id": "f13d88b1-0a12-410a-801a-3efd630677c7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "10d67467-9511-413d-825b-b62e2032804e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31b2c01f-e0ac-4640-be49-92d7e244a3ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b81d103f-9494-4f4a-8539-2744ca53d2ff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ce5cfe-4db6-431f-8dff-205abe5f7932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3434d10f-3ef6-45b8-b108-e30de8d253cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c067d6c-68b5-4049-bff0-00955703b279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3ccc97-624c-4075-b08e-54c97bfb4a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca66187a-89dc-4063-ad9e-b7128bd719d8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55204658-f022-4771-bcbf-6148bf577a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2921f13a-8b9a-4004-b1bf-af16d1f18d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8d86cf-67af-4746-8bcd-3c3dd47a2ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "347477a8-a288-45b8-a5ce-d857c1064808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc56a44b-97ae-431b-b40b-29e570697955",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be80e3d-862a-4538-9af3-2b58e6a4440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf685b9-1da6-45a9-9f03-e59bd8247cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab332e-9e3d-48d3-8a37-34c64fbd8c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cacecfc-63e1-4a6b-ab16-8a8060809c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44161187-c0dd-4b60-8a01-3c34b0d0929e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899ee344-a404-432c-ab3a-2e9c63942320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cc30c1-556b-415a-b7dc-ffaab52122a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911c6b9f-8abb-4e38-b6b0-08fbc9469c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b26e44-82f0-43eb-a26e-f84551c563b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d614927-338a-42eb-a1e0-55e7f1385e29",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563efbe3-b9c6-4de1-8d7a-17b3864b099f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e774fab2-efc3-41d6-a405-0129a37328a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832129a3-e468-49e2-a8f0-dd6cb0b9af8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c51223ac-c026-453b-8df8-e2e08e5c0efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98976e2-2386-4728-8c91-6b769641e2c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6c6792-d41b-4117-b48c-469169141a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b891b6-7984-407a-b389-11a8937d8ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d377ba-ce42-4c69-a8ac-cacc3b0082ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b35e78-eb3b-4544-9e60-6d8fc51e463c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aee4a0-f075-4b3a-a5b6-a3bd05c8bf1b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f340a66e-46b8-4e49-bc02-8e4ee1ced457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9621171-fca3-4fda-9cee-34e396a8ad04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de15a33-5012-45e0-8489-c37fcf4cd5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbfb9e4-20d8-4645-a09b-6fa089add32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c173117-56f8-4df9-9d9b-6a0a2743a8e2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e08e23-a876-4c33-979f-f9277b9365eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb72349-6489-4357-a25e-b44445d36d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a65bc7-da60-40a3-aade-5332e97e7d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9169311-0407-4f63-82e8-a9b7214d89f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43f7bdf-76b6-479a-a3cf-5093a42ec25e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64463918-81ef-4f33-8176-99a97496aff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50da5e9b-054d-4462-b7ea-b392885843c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe265819-04c8-4cfb-a356-5214be746bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a5a790-2056-4017-b784-bce2b2960fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bb5337-535b-40ab-a306-37e152fb55cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641bdeba-aa91-4577-9220-1f650a80cc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2215847-07cc-4037-a080-0710c91b1643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1817183e-f40b-499b-a483-cf421626ce2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e0102b-38cd-4c2b-8a3e-57692df0db24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fcd3ab-fe66-4ad2-b189-04c9eb43135e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c02673-a1f8-4721-a36f-3d291bb3c51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb604deb-be10-4f80-ac91-e9baf92d08f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11530966-fb3b-4114-b288-509e287dbe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "09951216-1e11-459a-954a-5df9a0ea8559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593dd400-9667-411a-8189-487b20c237ae",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd3b03d-d7d3-4c5d-88d8-55e2681d386c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7005f3-13c5-4c52-93cd-4cfae8ede8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddef655-d829-4ea9-85d4-c56bc55f47eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a30d58-a103-4cbd-940e-4a3a71bd3e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4444e2af-44ca-4df2-831d-3ed160b0048b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f42906-7bb3-41d3-ad8b-fb68eabcdbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2de379-ee85-4aa2-9391-12b81622ce0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f811ecd3-d473-4a62-bf22-cbfe3e9b1150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e02ca50-17e2-4846-ad37-d9e91e8b9b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49478d6-7ccc-4a24-9c8c-be833a994597",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5d5c9c-cb7e-4e7f-b52a-b5170339ab7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399b6db6-a35b-4ad5-ba66-2ae1bb3b7d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a24bf83-9eb7-4267-bb6e-09e1e45c1293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "23736310-9743-43c8-b380-3928a12cf443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314cd896-8460-45f3-b2ed-a08b3d11c34d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd790f76-d93b-4e32-97b7-8ba849c3a216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942393a9-206f-4ebb-8141-72cef28409a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbe9f79-ecec-4c15-803f-ef764d6d97db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "595994af-b366-4601-bff9-e32b88795847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7411fbc-f579-4fc3-a202-5137833ffc60",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f554e09c-109e-4144-a015-18ffde8a1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5176ed01-de0f-47c1-9ef8-52618eacb78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b4fece-0e3e-4be7-9c05-76e2e4e33017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d38c8c6a-d77e-4281-a5ee-33cc5833bda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73a99cd-d275-4149-a110-eca546d4fd56",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d23deee-08b9-4428-8ade-1f203457eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d1a3bf-6664-4cfa-bacd-e69812d542d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d37759b-c3b8-4d95-98f9-d2df5d1fc651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcec0cd5-7ec7-4fe0-9e8c-e1a608415e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b227f156-4d85-4fcf-b623-1ee624917361",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67eb57b-0f4d-4492-bd2d-9b92bd6ed935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378228b1-456d-4fe5-9af4-8f483a5403fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95044846-6101-40b0-878a-a46ff2f91353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8b47b6-8a86-40b3-a6f1-c6378ae4aefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c2cafb-8b9b-49f1-8cb9-7060cafa183d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc812f3-bfdd-447a-8a04-c19a1e12c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8044f7-7340-4a23-831a-d518183e8313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a093767-9de9-43c3-8157-c00202855434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d881331-e1ac-4d05-b36f-75dbfad5fe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736e9446-2261-4167-ac42-cf12fcfe450a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca7af7e-7e7b-46b3-9cca-ff5d72aff471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab345af-3f45-4770-8858-bcad5d459c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f6596-02b4-4e3f-b610-a733a73df0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b7fe10-adc5-4103-97a8-2a8cfc481fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12f70b7-fbcf-4382-ad16-f29da80f1f18",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cff2061-5e99-4caf-9b66-12f68501d586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866cdd1e-9622-46ef-a143-c3f511072042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e49a3d8-b2d5-41a7-b61f-8fef7c001161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "146d3d98-ab54-4e8b-887e-e7aaa06fc805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6130643c-6d14-41a6-a20e-a5c74d328d95",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd373e9-4f4f-43db-8835-7f4f356d32f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5be2f13-d1b4-4ad3-b88c-7d64d6da6d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fd518d-33af-4c23-b880-9a340190ff91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b74ca7ed-d4e0-4da6-88e3-38cbe1bee3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad56218c-5e5a-4958-9c49-3058ec528a87",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed92583a-284f-4912-9ccc-ec4e7d58567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5709689-b1b9-48e1-bdbc-cb0fe3663f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220cdebf-1975-4aa1-ba57-c0fd23b02fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b707a3d-78b0-42c7-b6f9-750c8af45a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadde78a-7afa-4bca-a156-865179946d59",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d0ce8f-88a3-4e1d-9c87-d172c6653745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db56fcaa-054f-42f9-8b3f-e0685e093570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181a590b-fa11-4eac-8298-25aab3d86bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16133692-cf88-44c1-b2a5-458c7d67351e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89fc17d-612b-4d11-aaff-6d7e3eabaa59",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b080617-4fcc-44bd-99b4-79e24640eab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0b166b-37df-4706-a8dc-f620bdedf8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7dbe8a-fa1a-457b-a4e6-56a22ea54c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bd32ce-412e-42e0-ae66-4294a3ba73b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b56bb6-9359-4bb1-920e-0f19f3a1db3f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ad4351-ceec-4ee0-bc42-846895cd93d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48417f5b-c2fc-4035-bdb4-4a7d818018f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532f9959-4017-4fa6-8778-68e4da3361a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e534c6-d3c0-4ac6-9167-9fcb3bfb7023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abf9304-43f9-4559-ae39-b4ea42de4a72",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2a41f2-cd92-41e0-8436-bd72eb55c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4106edc-a82e-4f51-960b-070105301d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e0b10f-39a8-47ab-b5bd-ed9e6b918041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d390efa-8707-4836-bb93-9fcea7acd4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3c1330-77a5-426c-9329-a4c41064e9bb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee8d5eb-b77f-4a3e-880b-71b94ea99b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fdb8fd-1c4d-4426-b5d6-ead88c5a770f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c719447-b248-4240-81bc-4f92c9f318ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1372d32-2a47-4349-bf5c-e9f4dd2c447f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900ad30a-797f-477d-a21d-c220dff0873d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dfd75c-227d-49c3-b483-b0cbfde0e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860780b0-cf03-4d97-86a1-e192d12f5ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ae6e5e-7f4a-4ea1-b1e1-29af775321f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b183466-f28e-4777-a633-ea0e0d38f6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa5f568-bab8-44b0-af7a-0245f6915e06",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d1c350-afda-4b3d-86dd-5b6acf732e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8343706-e851-4854-9faa-43a47b3970a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c36588-e3a7-4db8-9507-10fa6111fd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6550572b-9e29-476f-886f-7d8747fc009c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dec0149-7ecc-451d-a805-30b53e254bf6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ff2861-edb2-4491-9d6e-e4eb673dc5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e376d617-12e1-45ab-b0cb-5dc8ac357642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183f62c7-ef8e-45d3-9051-1fb76c821325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63467672-37b3-4f53-9305-8fe55015b470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e48a230-f9e8-447a-8a78-5dfe790cb77d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f4d2d6-93d2-4c25-8f2f-fb16448d542f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d685cd07-235b-4e13-8d29-ed19c0238bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51067dff-72c3-4976-b378-0d9ae0cae8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90840648-c72c-41e7-af15-3414e1886336"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e52faf66-3252-4f5d-a1c7-88d7c5977c4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77db46bc-cc78-4b1b-81df-eb23d1c92c93",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1b7239-3570-46e7-a7c0-54a402e89f6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "80cd991c-d032-4d66-aad9-930f72786d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4f4ca5-f642-44fc-809d-ff03ea7c6fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b8ed916-c037-48e6-9a0c-b40ce9ed0990"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64d50339-1de8-4994-b32a-31ca153a9c19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44d582b5-89e5-4fe4-be5f-c06614d804e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62e6db6d-3789-4410-b458-f9bd655a896c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90b27931-9f33-40dd-a79b-9f847675bec6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ef39134-d821-4d1f-b823-6d0627609e42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79796a23-d855-4944-b694-c47b7233ebeb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0af831a8-a93c-4845-9009-909025113da2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f362f23-76f6-457f-b7cf-67c7c1b8128c"
            }
          }
        ]
      },
      {
        "id": "226e41b6-0782-4a66-b2f7-28923d7c89e6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3d3310ec-8f17-4a50-83cb-9e40ac77cf9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a304fed0-49c2-4641-879a-0483d7bcd2b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f233f61-7fce-40de-9eb0-f31d44efd2fd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077be9f5-fc5e-4ebd-abde-507fd88f33cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fef631-85e5-4e35-9659-a2541c0deb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9706e7c5-61d4-4f83-9b9c-45ea0cca6425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0384c782-5cfc-410a-8d6f-ba5531afee71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c880aa-45a3-42a9-b56f-bb71e98605c9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048f8a11-d1ca-42e7-a3fe-911bf2f5e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fae117-f9a0-4345-b5c2-993b361ed693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb70215-deb8-413f-b00a-14bc2082475f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f629532-8cce-46cb-830a-b781ec764e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21391649-e5be-48f7-8c32-8a598ad2ef3a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9fc052-4d14-4451-ac60-3f5af2e3c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894dbc65-312a-4877-b6e5-0fb5551afff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5716319-add4-4b63-8ccb-6d6edffec5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a78481e7-402f-4610-b5ce-a237769b8cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa330c8e-2933-4566-8b3f-b76b50db4cd5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f152c7-5560-4486-b5b5-d4f0c3cc7d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64f903b-9aae-420b-b6c8-b1db2440396f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b9d75f-58ac-4f0b-8c68-8646e1975d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09be9230-1cf2-4900-9e3b-78b3c8f5b5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae8e516-03f5-4aaa-bd5f-e155a78c2554",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e3a7f7-5cd8-4509-8b3a-18bf9d8bb353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540f561b-8cae-485a-af51-dad71799f205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037272b-ef3c-426a-9a9f-41dc5ff656c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d6f1f2-204f-4f13-a09c-eaf04c7e09ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afc4e51-9815-4ce2-85f6-10bae5b5991f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbd581c-1ea9-4b33-b39e-693ba05c7f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daab553e-a4f1-457e-96c8-54858f34cc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f1d671-4759-4a28-8e11-c86c5a5501a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31964f38-82b1-47bd-ad4f-9ccc4c1df1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852f6487-5e9d-49fa-8a6f-3315dab3d8bc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252a53d5-cd7a-4174-a7e5-ddaf8106d545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a8f303-695b-4678-904d-b50f3162ebcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f614d2-05f5-4c9c-8fd9-607fc8d7ea2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb213294-c768-4a8f-acf0-4b451273c36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb1069d-dc2f-452e-a85b-98d012bb867f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91ec347-6a5a-4b5b-b4c6-239f5e73dba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a0d26b-7508-4cd1-9548-a8b37641dec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6a2ba4-8b41-44cf-b6c6-92282c6689ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e213d8a5-9b98-4bf0-9993-a72f855ab52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf87e99-8a1e-4402-b5e7-40065e33288f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ab2fb5-e1d2-4fc5-a183-e1f8f9d94cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df07efd-f388-4c42-a081-c295ea45f634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37200048-a372-40e5-a506-8a1d719dcba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc0d6b7-7c8a-4ee0-9571-014d0407af18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a24f91c-89a0-434c-9fb1-6300a1fff467",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d4d752-006a-4aa1-8215-dd2315259a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a77c25a-66ff-4ac9-93b2-260151dc1fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa9f776-7660-4bec-8c51-57696b722ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40b0496-5dbb-40f2-9320-81bb7666e569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e62af9-9182-4ccc-90bd-687c911eab6a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366a7a2d-32bf-4d20-9922-6d062c9bd764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0a8725-d96a-4699-ac0c-5c5701ce651c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7c427b-eadb-4d9f-92ef-03fc4cb233c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8b76dac6-160a-4406-990b-39e0dc966196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92be46b-266c-4a72-89aa-8b886bf083b7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8720065-a10d-471c-8c23-3f82406747a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ee4dcd-ac3f-4bb3-aea2-5f8d102ca7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca00ede-0c1f-4aa5-9887-ab1d2522e480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8da7db78-421c-4c97-bd02-f3e377f70076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9293906c-b607-4609-8a55-4639a0c7b27a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123f1ae2-4def-447c-8214-efed98802ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0cad55-6a2c-43fa-adbd-cd670d77ef6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6835b240-3806-4b86-a68c-716c5f77ee1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af2f8b1-f78c-4241-a0c2-4626f4786ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523a25d3-08ea-4eb6-a27b-c2ad0f33f1e4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20581a5-1aaf-4d88-b7f4-d1e5397dd8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7490f1ee-4fd2-4114-873c-2d780258067c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137c5064-7506-4fd6-bed3-cb2faa0e3e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e8cb26-32ad-47a4-ae32-dd83e5f17562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b342004b-72dc-412e-8807-f8b1d6c18fe3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b3939e-43dd-406c-bd5c-3332fb3b4705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816a7d26-5008-44bb-94de-e16c5c4a2488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39bdb57-e914-4cbc-88b1-2ab59fa1e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff7b267-4830-4f3b-b65f-1787975c7460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f856c69c-87c7-4451-9254-b745fcbc7c6c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aaf98e-c6ca-4f99-b4a4-423e78ea16f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a788a84-9fb2-4e56-b2c2-e1aee9abc98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19220a34-2b96-4454-adfa-611e44b2bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "64edf137-f056-4df3-a665-c1b34568dcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238c08f3-f8f5-4cb6-97ac-ff9657fce019",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144cae1c-21a7-40b9-9854-ee5ff993f72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3470c514-2f98-4b46-ab0a-85d26e6201ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf78785-1e18-4bea-be1b-a86137d26ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8bef10-a529-4bdb-9ecb-fefa81b3a067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1a51b6-923b-4eb3-8224-b570643fbc8b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b8491c-2596-4e2c-92cd-d305876dc559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474ba9ff-87bb-4928-8d7e-a4f196a0129f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549f6ac5-c790-4dd4-ae67-05845300eaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "39c529c6-1a28-4fa2-a445-e668b687eb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0446a754-08ca-4918-9d5a-d2de986d5ff1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028a494f-9c5e-4527-b90a-b0a6f38b184d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e024b95b-4ffd-45c9-88a5-8e0c6dc937e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954c4b59-df5c-4b4a-8694-70acd1a106cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4702508b-9c50-4177-9cf8-9b9a63f13397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6befb484-b794-4167-9b90-3c07efc42776",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01d38e7-fb3d-49b8-9b8a-69044b94758c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977bef59-92c6-4cdc-9d32-34e07fe5c6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f9e3ec-9975-410b-8a76-7eba23cf8b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c588ee3-12ae-4b38-8282-b600798567eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b87f9f-fe81-411d-99c1-88dcb362ee49",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262089d7-352d-4b14-91b4-d068b445305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee885415-45c4-433b-967a-4d177cd97e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2a2b75-46b5-4822-a40a-44f1cdec0033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f164b92-c506-49a6-b5d3-93984ab562cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33579f4-caec-44e6-ad28-ff31001f9ba0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03030752-efee-4f68-a577-afc360c29547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675d2157-33d3-4c7e-8df6-07dca8c18205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd9f904-c32b-47dd-b278-d47a73a3cf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e150408-18f2-4436-9eb6-00aebe259571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989d19cd-1d84-4931-a5dd-c91f5681a17e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b906252d-d4d4-4715-9469-528abf1112b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ace4f43-0a6b-4f42-8201-780bbf019324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93325b7c-83a1-4856-86d2-4b86eae2e718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33e41cd-4792-4050-b8c9-ca24d4a3541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d293c92d-ef06-4dea-8f98-1907e6fa5f45",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98892c07-fa1c-4a3d-878c-f4df240f8b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593a587c-5b61-4797-a8b4-fbd7e2125d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0f004a-60b2-4c39-aa0f-71793ec4ddf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ae4528-ba7e-4ed5-a907-a3495abcaf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621aa0cd-947d-49c6-ad87-4d4ee2361980",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e611dcd-1d2d-48cd-9205-612461aa5220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0eb0b34-507b-41fc-aa46-eef0818d92c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34c6c4b-c897-4297-b813-2c80a494f6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "305396a1-a25a-4c5b-bf07-54f1dc2e7973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3e7175-0d8f-45ce-8641-529806ae57f7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475fa9e8-8d67-47e5-a0da-40718ac26b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1956d1fc-793d-4b6d-94bf-fad7cc8dd41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e772f1c8-021f-4360-9f00-183a6e99b9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9c8b26-ced0-4c8a-913b-f67ed2977fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5b35ee-fb5a-4bed-b7d1-ec462de808f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a332a1f5-5211-4844-bef3-d9165228ded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22db0db2-adce-4b65-8a7e-0ab24f82bdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e23f7-dec1-4c67-b637-80772f270c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "167af3b3-3126-4fd0-b681-1e455161157d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4803f0c-96f9-4d85-a9e9-27979004197c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c81613d-1e71-4a9d-b5eb-4efa20840ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b5a4dd-4754-4654-b4fb-62f052f999b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4433de2e-b0bc-4f03-bf19-7dc6db36b9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efde2ed-667a-4ec9-812b-8cf2b21b68bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc10670-9bee-45d0-846a-af5fd4d2a574",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a386aac7-5ced-4720-a01c-58ddf8cf6499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad76235b-a7be-4026-a8cb-dda01cf0e0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb53992-e932-48f1-adb3-0e16a939fb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf218682-05a7-433b-9de8-8e5c5059302e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440767cb-0842-4944-80da-fc1e65343938",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a49158a-4e71-421e-b3b0-dd18e11dfbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8bc613-af3a-44bc-aade-58d40cc9f0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82963f58-a2a9-4dca-9a85-b82affab36ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d67b56c-0ce6-49bf-83c7-0111f946c681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909ab83b-197d-407c-b5f4-91d58f9e3fe3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b277f9ea-326c-4230-ac7e-f7f3ea70e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804b5ca0-a65a-436c-8208-fe8e30accc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a33bc73-2ce0-4f13-980d-d62b04a25f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21aaf463-e49e-4d70-ab2b-2c7aec3ce8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f06457-695e-43fd-b1e2-f2ce2fa7cd29",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b0bea-4cc9-416b-8330-c7e462a48f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f89914d-bea1-4d06-b0b2-a6a6cb290b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08acc002-2b0f-4769-b699-67a66e6bc071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ea904a-da13-434b-bce7-d55de4533708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c24044-a626-4ca5-9e8a-5711fb3f3644",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6f4738-ddd9-4563-a1b3-87c3d737b6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e13a27-b61c-4f3a-a0b1-550da7179b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8093b585-00b0-42ff-aba0-48125e37e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c39b5c9-a1b5-499e-b87f-027074afc940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953178d7-2cb1-4fdc-8f75-0a25bcd28783",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f915a50-565d-4d72-b33a-371e39f75da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c979b4d0-93be-4095-97b8-388021d72b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46834f9-32de-4fac-9a2a-795f7d5a5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7f21a6-7edf-4187-a179-e97ea8a49413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5501642-3f24-4f32-b268-6a686fdb9e69",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163f3ceb-0bd8-4ba0-8e8a-0344223d7927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae50b18a-15ee-4351-9208-07039448fcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafff037-5da2-415f-8a0d-fa648296e6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de18a87-cbdc-4f51-8ae1-537016359170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7122562-dad0-4caa-9106-bac2be7fe563",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba697f4e-ea11-4c8c-baa1-d80a13a76378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e8d4a4-84c6-45d4-a251-ac0eb7d6ae48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1287f74-b97f-4f2e-9d93-ff1782ba044a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26344587-0d76-409f-9b18-5f26993a9fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba004b7-c432-4899-aaff-8f0cfa8d6686",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fc0126-7b3f-45d9-b197-9cb3cc9217cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a21ea04-e94d-4cfe-9c5b-197ac76c413c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cb0c15-3e38-44e3-a043-53287636fc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a2c3b0-6f7b-4399-b888-8717debd96a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9a3f7b7-1a45-45cc-811f-822cfe7c6e50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6592d65f-e1ef-4d71-952b-ba534b2cc878",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cf1a6f-ce22-4670-b278-e46b2861c231",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4f325763-c1e0-4e1d-97fb-74ec13fffcdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf3ebc6-ee99-4d0e-87b9-bb21b11293d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eafd2b7-056f-4b12-bbfc-c6968967658d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feb3f452-ee34-41f8-a585-b6b449f531b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55d5e5c4-dc2a-497f-941c-db3caf116f9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed0b58a6-0f52-42f4-a52f-32e108917d3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad82facf-477a-4827-9fa6-58e555e3a37d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "396591c4-3e79-42d7-8d69-f7a87ec3612a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f6eaecb-2fbf-48d9-b75c-1c33b87e4f9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98d1ca66-50da-4616-a0a6-348b2e3a29ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "779bce52-ee25-42b1-a258-5128c984033e"
            }
          }
        ]
      },
      {
        "id": "82fc96fd-b7dc-4614-87b8-29d2147d53e4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d68c4531-8823-4871-b51e-1e2d604ebb11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06f664c5-2e4b-4c7a-a894-2539d36c7440",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f92a647b-bd71-4d44-a0c8-30225b71067a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283893c4-6796-4d0f-b002-f29c000da0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872eca1f-c1d6-4df6-afc2-78b74998caa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd95592-e1fa-4c1d-a8e5-c7297cac5aa9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f4b710-56ec-4d81-acbe-c9d7b8962e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce5d292-f246-461c-bc65-e07ceb067691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c813ad51-77f5-4397-8f6a-df02e5a4eaa4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0363a891-68b3-46cc-af86-4023d8e3e9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bb4862-8aaf-4f7d-b0c1-1bc9b34452f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dea85fa-5548-4a6a-b3cd-4198b54eaded",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a8b1fd-230a-4d0a-ab78-b62751f7467b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2232317e-0fe9-41a1-974d-b1ea3552c180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f577e12-e7e3-4d36-9d4f-968513d0faca",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3967b20-f61b-4de5-8549-1c30d26ea1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2e30f1-6d9e-4661-9c17-cf11f20961c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b568eae5-d772-48d1-97c8-d8202ff0a215",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e605c88-d3ef-4a51-a8b7-da712afe87a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b55d3a-b7e5-455e-9b27-d05063a090ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8a6f4c-c99a-4c1e-8cf6-ebd048c07721",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a48c78c-9073-47cc-bf0b-e9934b7f3e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbbecb8-7bcb-4e76-a576-3909da0f902c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db326ce8-f5e6-49cf-96b0-cd1101752640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bbcf04-caa0-4f2d-b03b-2cd2dfd3f6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8f169b-8988-4fee-88b3-68fbb0edc9d9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5f4021-e029-4a31-8f14-0919e7c30963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23566d28-95d3-4cc9-b272-fea48a65de38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67bb887-300c-4f21-9dea-93cf6ef1431c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8200d8-2345-4971-b81f-9b9f53d87fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de96d2-18c5-470d-a536-e561f752dc24",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77c7300-3bbc-4d13-a907-66959d19099d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57dbf1b8-536f-4773-b7a5-c591c9778975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c565ad9-0090-4a10-935f-b843b9b14b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71763129-f2ae-4b66-9ed8-2c4e214a86fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16437b19-c0bd-4089-bdf4-3df820b779b7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff2394c-cccc-44e8-ac39-978a5876ade4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16dec315-1541-4424-9f71-e714a1612bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f07bc88-0e4e-4339-99ad-a7ace6973e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8155a213-6e03-4e1a-98dd-2a642104d1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de33936-73c3-4dd4-88c6-d11ae11288f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807a5af7-3d6b-42f9-83f3-624a2f62d001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2a78b6-e5bf-4163-97bb-22dc44fd0f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108eaacc-f1a7-48d7-9651-4194c4397caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad09ae9-d4c8-42fc-97ae-9a30aee6dea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0084b7-d8d0-4427-8c89-cd03d409f7dd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56bedf6-259e-4e19-a626-9ae250f6d9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03533069-9aad-4aaf-b89c-2414c344d5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fd90b5-1aa0-4479-937c-9cab22cfb8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304fc41b-da31-4f73-995f-af60f760c994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2872034-6824-4d61-9d45-41b5bf830c37",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbd6b9e-cc45-4d38-a36e-66d458b4e30d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3e81883-2f53-4b76-be16-d1bb0e45b3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a359b46d-d90a-4f9b-a6b9-2690a9893532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd30b99e-392b-497d-812e-75811adef51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c70d80-5ba7-4e0a-bcac-e4c05534ff48",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc1dc09-cf08-482b-aae4-8f5fc34cc6d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07084a08-c20d-4aa5-bd50-bee63a555d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc1dd33-d415-4564-9c7a-7546fc0424ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6ed83e-91d0-42ce-a01e-f46aff4da9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c97c40a-6a8e-44ee-9124-26f36102321b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb8fd74-8717-4876-9eab-094b1413624d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d83a328-c704-420a-b9b9-b16acdc305e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931366ab-e3da-406f-8bb5-83d0b3c15ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e034fab-b4e6-4da7-aab2-917ca53c6ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b109723-ccaf-434c-b668-c4ae09603fdd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc0676b-b5ca-490c-af1b-afcf3aca1991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870327f6-637b-46c9-a911-df20bb0d16f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6eb98a-8979-47ce-acf4-a49daa9ffb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5bbdc1-2114-4911-bfdc-deb03d324240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91e1b9b-b585-4bd6-abf1-b4a5d7013614",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8effc6-800a-4404-bce3-4bbde74b996c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d7bd58-47a4-4490-a342-556ed5a440b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8152257a-3096-4730-ab44-7569835c0391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace0b6e0-83d1-4db7-959a-c75a3435e837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f45d1b1-5685-4d80-bbde-7103b41c59d7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17feb57-d16f-4113-b2bc-27f0b94518a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb72a46-c0b7-40f7-86d8-deeb2e1a58f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148f2194-568e-4adf-9cf1-a15aed0588a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3479ff4-2a28-4f1b-839d-49b4241502b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b629fb-3775-4450-a78b-fc717fb511e2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299e1ebf-176d-4fbb-bfdf-cab092448861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fe22f5-21fb-4014-b860-3bcde0d49325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723df1f2-26b4-4154-b4a7-4ec6939d3d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9bf665-4615-4f88-8354-8880a367e159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249c7683-1fd5-4dcc-b630-8ebd614dffde",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd43bfe7-e1e6-41dc-95cf-a2b58208e883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84c3ce6-fb17-4789-878b-cdfb8e052971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8fa7f5-10a7-44a8-a48c-72dcfef30b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7120c973-87de-46ac-ae17-64e08811837e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b61bc-34b6-4d94-ae5c-1026ee64a65f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397a5ab4-9fd4-44e7-9d76-93f2e88245f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb95dea5-b153-4d40-9641-3ef6ba9920c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9bc163-f547-4cc7-beb8-1e863cad983c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f79185-dd77-4258-9880-6bd4f2f2073c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e511483d-10de-4125-8479-6108159f51a2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f002847-e987-4189-9f59-12de5ca168c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d9a661-78a9-495a-9ca4-2418ba3864ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d70d53a-dfd6-4912-b61a-c1ec6bcd91ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3dc7b7-b642-45c4-bd00-3dd1162456e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f404938-cb5c-45a0-9aff-ea2fe6e45ab4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50a2439-0542-4749-bd79-0e0fab156cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2560084-61c7-4ac4-a0c4-6ab220f46e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42a0b4d-a260-4d07-9641-285ae957ac3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071de505-f481-40b3-8509-2a9c0bc1f294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a84db4-cc9a-4585-b6fd-68eb4a311150",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3295a3-5f74-4be2-8cef-057d1f365194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9917b4d7-311b-40e7-a3b4-ef7b9083f23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a05225-a88b-49ba-9aff-1169d1895fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3640036d-734e-466c-a4d0-bb7cd38db0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e6f722-8cb7-4098-a233-3fc5ab8812be",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d364a89d-88ab-4bfc-9e0c-8fec890d776a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdbfdaf5-e0af-4598-8ecc-1a8237ba8ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487977e9-30f3-45f3-b88e-a7111f7cfcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0028d2cf-85e6-4b7a-b66b-86965dbe7cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfb668f-ff7c-4baf-8230-8cafa7c88b9b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df268a95-4afe-486a-b3f7-480bfbae3466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3333b65a-b274-406e-9d55-d710d15f52a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c6b329-f6a8-4c93-9419-85ebe489601b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa3b428-53ea-4865-98b9-ebd321f3fea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91427f0-76ee-4a1d-bc3b-4ddba79694c7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c266eaea-4e49-4c41-b289-4c2ccf81824f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05855613-8330-461d-ba43-535db7f7c424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4d65ba-f593-41ba-89be-cc2cea0ec248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446bca9d-4a6e-4ce6-b35e-58b70fb9ccee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc10624-a33f-4da9-8f0a-4fffed7888e1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeefa2ae-5526-46cd-a5b1-0f81b972b40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724ddf29-660a-4ead-9420-1b24ad3cea3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f65d2b-2f45-4f52-9bed-9c3e2bc5b961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142b804f-f3b0-40b7-a267-5c7080016523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b379c0e-530c-450c-bce4-bca5ae7c3a24",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a668ab-a7f4-4496-9b37-b1ac820ae4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0810db0c-42a7-4fae-a5e9-aaf903450614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd5aee3-49ec-4fd1-8dbd-26a7f706877d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c361cc0-a06d-49a2-b42a-20dd4f1e365d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239ee4f9-09d5-4b50-b14c-30c0374f68e8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8c34e-33b9-426e-b5c7-385438e877dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4530dac9-87fe-41b1-bcec-d836e1723009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8885b577-9b16-48b3-9c45-f4ac9ea20f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f144777f-b168-4398-8d80-ae695544bea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949faa03-5b11-4679-a837-4ade2badc8dd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9e2e02-dd8c-40ac-b413-33488a722de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b41f8fa-e746-431d-9e6f-643f167053fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d80854-675a-4da9-b3f9-384a2c7e6ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e757e6-2ad2-4ee5-8aa4-9e2ae7d55e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc582f06-6c6e-499b-880b-525038b81c5d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07a7f40-eef7-43ac-983f-6ab33329c3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92cb695e-68a2-426e-9fcf-b60117e0c3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb0e41-5a9f-46bc-a4ea-bb8bb6f4aabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0211d7e9-e540-4945-9233-b6846f6871c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90677015-db4d-4d89-9433-443b2243502f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fa9adb-5e5a-4139-b082-d35d465030fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f82942-0fb3-4f5c-9ee7-db39b25d0819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c3adc3-d84b-442a-a105-d3334da828c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e450be-9ff7-4559-95ed-8532c810edda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0c101e-3d03-46bc-8fae-5b1a7d78978e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a458ef4c-173e-4459-805c-5df1b47fb479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4c976f-c6f6-40fd-9e2e-998e59aec116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c50ce4f-29a0-492d-9dc4-b236527f9092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a2e6eb-c819-4e55-a5cb-8d86513797e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa776772-1c68-48c8-bc20-69daa6774b7a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222c6a8d-9cab-484d-8cbe-473075017223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0476ac6f-c53b-48ce-9f56-032fdca4dea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acf5027-fa5f-49f5-9430-78c32c4d6eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57dc239-14d8-45de-85ff-3e9be49cbc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c376e8c4-938f-4189-a861-dbdfa3668e82",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b41c90e-22dc-419e-81fe-1a0e4eea4d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aaa5a0-9c71-442b-b47e-abb39ee24d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83614ec3-6aac-403b-9ef7-b18ebef903db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea3169a-ed42-40cd-85f2-25c7ed0d3946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5417a79f-cbb0-4e7a-8f3a-fad5c8b75cdb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cb49d7-3bf7-4d53-acc8-d6dca3a2759f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8590caa1-b744-4f93-a09a-53a5693f35b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ae1ff2-ea54-4fb9-9e33-d29c75c446b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f9ef3d-01e9-4278-9877-0816f05e7164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca057fa-0ed0-49a1-b91d-9f6ff2d872f6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1cb850-5743-45f3-88f5-f42bb2c40b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e1c9f6-f26d-4fda-b270-8d8508963e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020c98fe-a422-45f9-bd4f-d244a49e63a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8164fd-aad9-4346-bd75-812cda92709a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bbac97-434f-4705-a0ee-3c0974ba861f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994d0ab3-3d9a-4f5a-bc35-c283ba918238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954c25f9-18d1-4c50-8a1c-647d58b85157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368c53c7-0cc9-4946-9e9c-1d63e02f0572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176c239a-5de9-4cde-b0fb-ec94aae1c2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9951d2-e8ba-493e-af41-0b5f3d5034b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06bc52b-0643-4d44-8b85-4348f5a5d31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb4a45f-dd17-4fed-9c2e-811c112c7b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e78ba08-9f8d-4f3b-a90e-7fbc4b384635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d967e509-9203-443d-b849-802f24491dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f80889f-3f94-4d63-ae52-2b54aed6411c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c21b32f-4c6f-4395-9757-be465c0238b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f64158-b4e2-4ad9-8fd1-6348ce452e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17baa4c-96b8-4fde-b4d4-bf07c99e88db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b4a11a-030f-419f-9a8e-be9972f9bea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135419ac-ee2d-48be-b155-514ed3193d6b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d33bad-9f4b-4810-88e5-ee5a03dff84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ec8143-e1d6-4baa-b8fd-5d7540cef985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604c231b-6552-45f4-a035-72e3032ec047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373cb4ac-6e65-4824-b540-0fab64dbc5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee096df0-4e75-469f-bf22-457568101036",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5747ac3a-e45e-4222-bc5b-89d9c36ee652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ee76cf-26f7-4d72-90bf-433c87d0a58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309344d6-be8b-4c60-a3ae-44d8d1f08044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b06707f-c92f-41e7-ad63-c992288ec80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cfc212-945e-4594-a7d2-c61cb091dfff",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934c5838-80d7-4997-a794-6c2b6a3529a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce28708d-5cd6-4520-99de-5dddeb036c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75789ff-4c62-4ca7-850e-3338fad2bfab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f26508-33a5-408e-b69e-3ce906801c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696516c3-eb63-41bd-8ca6-16c143e7220d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e4885b-af7b-4f14-a435-616e21a312b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ce30bd-83c8-4e87-8266-540a9af83dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044c81ce-a1d1-48a4-ae05-b1308f8074c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015f5982-08da-4ea4-982e-ba097186dcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a14a270-989b-432b-bedc-334543428c57",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a05179a-878f-4593-976f-fa009120f84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0eac4f-dd76-4435-9ea5-1934c8237ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8007ff4-c980-49b2-9681-be5bddb9a34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc593d53-10af-4e3e-a16c-c773bb5116a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26cb8da-d7c7-4522-a24d-7e5df759cdf7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c07e5c1-fb4f-4187-b8db-08c911749988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc58bc20-8462-422a-bf63-ef218eeb6e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a1c53d-3feb-41cf-930b-61d7e1863e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f561fff9-a1a8-40e4-9922-565012f1c845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbd6f1c-0a50-4817-ac6c-0625b279bd6c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05076773-e353-4bc9-9c2a-115583abaf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd8937b-85d7-4d85-9f63-3bcd8741db13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9ad339-6dc4-454d-bdf7-1e7a6e8bac6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00e008d-da1d-4911-b04d-b097c4099d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c31fa4-815f-4d1b-9589-a59cd70320b1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54bd72d-6ec6-4d80-91ed-0fa0f741d448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ded884-43d7-4448-bc20-c7b10eabbec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05fb099-9d1d-4af7-bc4c-3d992ef147b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972ad64e-c8b4-4727-8054-7f5072e7c18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de3615d-3b9c-4936-bcda-1d3799c7bf13",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ca2ca5-ef3b-4fda-b5b7-23c6756c0d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63f073b-48dd-4cc5-a1bc-c0b6b3eb00da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a383e30b-9329-4ca5-8128-3a22ae9342c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c10e5-97c8-41f5-b8fb-39bb7c5a8c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63186d53-6e5e-4dc0-9e4d-06376e9b9f97",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416be5d7-5884-4d9f-b61c-ceea33df12f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7029e2-f665-45e4-aa06-36f343b9269b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6a60af-6a65-48f3-a3ee-a80bff9b83d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0158ca9-0965-4e96-bbfa-e5a4fdab3f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a52262-504c-45c5-8541-b5ef36dbedff",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13abddcc-b5c1-4a13-bf0f-112c1e9254e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe5502d-1cb4-4f92-9311-7746d0cb67fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ac4b99-7b8f-4fb3-8ae7-42a2f8200e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2a10ad-9167-4ef1-bbb8-28ae87bc7651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8008b00d-58be-4a93-93fa-88db7e345d89",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a264f7-f448-49a4-bf9c-45854e5f2eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7e8baa-6172-43e8-ba86-337d8ce0573d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a055e674-358c-446f-bb20-8800f2455d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f2f462-8787-49ca-8eb1-b31dbac8e5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f062760-fb46-4862-8985-bbd128b0056c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6708b2c9-ea17-4518-8ca4-939fcbb8dde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd6a026-3f33-438f-9552-f82b38f5b34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78eee97-4460-49a3-b985-dfb354eb820e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8535324-44fe-4430-a214-a86e10006d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddc710a-5678-4155-a603-beeee1c9846f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dfdf63-393d-45d2-b6b1-2f3805d03f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f6a1f0-8983-44f5-b5b0-20c96ddfdae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79550a36-2e59-4816-b605-3ec91b2ce823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2146e5e3-4605-4016-8c98-397b3f9948fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d33321d-c2e3-465e-8b54-9a1cebc48387",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11a91ec-e865-45c5-9f59-a69110340fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b558300c-ec23-4dca-9f69-dde92c722275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0969a092-d51d-4444-82cd-e0d24ca5f9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84084c6-f597-4346-bb9c-d8665005d636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f34ea7-6a17-4319-bb03-cdd63a12b94b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c841b874-e9c5-4414-bac5-f80e371577af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41f183e-f5a3-4174-aa05-4b813d553ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e293c66c-9df3-44ea-a4df-47afdef200fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffd3580-da43-4ca0-a352-e08701729376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cde5de-b6e3-40c9-a584-431935c75993",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bcb43d-0a4c-4a0d-a5c7-31f853c08761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e91437-ada2-42db-8c94-4830c7a5e54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf384cd-bf23-4024-afee-6e47f076c873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85643dca-f023-46d2-b21a-25303faa5c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63b2e63-e9c3-4455-9fba-79ff7e31ad51",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a217825b-61f0-4911-a01a-7483b881f349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df002c61-474c-4bdc-80e8-a770b18b8cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52651c84-3959-4379-b2d8-c58dc56162b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7977724b-5bf9-4acd-ae40-c4248787dd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a1c7d5-907d-4b39-a2f0-194212bdb1df",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69066b3b-b335-44d3-9ca9-b6a9e6c35fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6b3290-5333-4b2b-82ff-cc8af8510ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5984d5b6-afaa-4144-b798-0c6be5cf6352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452cd410-1e77-4983-8547-47b736b1261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1150ed9d-a3ff-469f-a5b0-5d9b9da72c76",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfef37e-5548-4fce-8452-34c52562a6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d26619-b845-4cdb-bd46-66ea9b46c728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41298e2c-9c12-40ab-96ed-5f9ae868482b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e60ef54-599b-4ce9-b90c-23a95638a343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd79f47c-d67b-4fc9-ba92-e83279d42127",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53d816a-1b70-46bb-83e9-df92ce69eeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fb3cab-5543-44dc-948a-3edfcec860c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053f0e56-af39-495f-aad3-3175c62891f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309f83e2-3023-4617-bd7e-0522c52f418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aaa713-37a6-4273-8209-75ec0899a88c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9652aa-9f42-4441-ad51-80bbd525ce69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe11e29-594c-4a18-b719-d41b2a1b958a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d58df2-59ae-40c6-ab01-b5e71604ae7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0d64cd-49d0-4b43-98f2-db9ae572a30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe8618-77f8-4f06-b565-7bcb85cccf5f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78efb04-143b-49c0-8986-ee0b1b28327a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19425653-f334-4e42-a57c-114f4b3fd790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50606ac9-4ed3-4a57-845a-6e3e16c75bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3a0486-1efc-43bf-a5cc-a5fabcb22b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b337b230-7f3d-4e22-99e6-8f2da99d2c8c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7a77b5-3a0a-483f-8a2f-0e6865cda203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cf98cd-2f58-4369-b537-8500f0c5b5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f5b918-4784-48e4-a255-d70100643167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554d03e1-876d-45d6-adff-f50712f39425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0af187-5ff7-4685-accc-2ad63f600356",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db87751-1c3a-4c14-a18d-1bfe1b81ea65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf8156bc-9716-4c5c-8cd3-92f93e76cdd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b54f4a-b2e8-4625-8e1e-101115105cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fad4b1-b87e-4d8a-abc9-c4ec8f76df27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8a15a8-e5d2-4530-b8b3-34f1ef12e737",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e00f62-2635-48a3-b409-9a7fac96f2c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fae7af1-c433-486a-a915-580fbdf0f4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b3a62-2b78-4a9a-a147-5c3ef1fe3998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58876e21-eee7-4cc1-af63-27b87c913102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4088dd-a65e-42a8-a873-2055bb9d1f72",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2251cc61-a6e1-440b-8247-a36c0a74246a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400a1ca6-acc0-40e7-aa71-0a297c4bc6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec202b17-7fd7-49de-bec2-2359083d1384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05760892-628a-4de1-84cf-9c97b56793b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47944a93-0534-4c92-96ed-3575248d9b6b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37477345-6fdc-456d-a519-2a6d1ffe041f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8bbb117-64a1-497f-a73e-39e4efc6b53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2be64d0-413c-497d-910e-57d72c54cb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f6858b-923c-4b82-b1f5-3719eb0b05e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cae38a-c81c-4301-8704-b05413a44a06",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa88305f-4a25-4a7a-9b6d-e7b74d3fdbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a82304-1e96-4243-ae1a-99a4c70e1fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499e9fc0-b854-464d-aa58-75ae9750ad80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbc75e3-f8e7-4dda-94db-92a9aa464bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f28835b-e09c-4fff-9a31-12049eef4480",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7ac402-233e-496f-bf19-7139d8db0f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df1bf7c-ad23-4d48-bc65-471ad3d74cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a133be-396b-41fe-9c16-87a32e65d8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2318a63-58f2-4b98-b480-557a9dc323b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012b26b9-531b-44aa-bc7b-d64b4bfafef2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eadaae9-01ba-4420-8fb5-5c8eb4b7d850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4712c645-e36e-4898-bc23-d39e467d949d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b9431d-a25c-4333-b469-53d55293d7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9ddf92-49a3-442a-86ab-8cdc8bdb75b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5d33c9-e4eb-4fec-957b-a025ca5288fc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8262919f-c1ed-4b4c-9eed-7b7294ba7760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ec7edf-dd92-4bc2-b88c-a2d756a4a162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bc9ac8-753d-4507-bc31-8aefb06231ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2364127d-663f-4218-8910-e858ef42da33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf8def9-7939-415b-b5b3-89c0c6d63c00",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c6cb31-3b80-4c30-8ecf-69ed011dd770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33c8c26-35ba-444f-8f98-888cd2822042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4265dc34-8208-4f69-8cf1-f232d9bca433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c3c770-583e-477c-8596-51fcd27432c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d914c641-8ae8-4a1b-a9e8-e095cd9e6f3a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7b122f-d319-4f13-ab66-41f4b126f909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72c3f1f-f852-4a98-a5b1-85cad2c209cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e56a47e-af0f-466d-961e-1b25d39e559b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea7f41-535e-4f2d-a942-73326c58412f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bdd097-ba35-4e66-9e16-862439182202",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10959a4e-0179-43c3-9f74-daf1492f1cf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b656aa-29bc-46e0-a494-e0bd8da41011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f10d348-12df-4f07-a502-5a291dc8bdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c032abe-610b-41d7-b5e9-50d05687e52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cb8345-b51a-4d64-95ee-b269906b9fbc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11db20fe-29dc-4412-89c9-445bdefae9a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce878d25-1165-48a8-93bd-ac4af565bf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e753c5-045a-431d-9c0a-ec6e4200f247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a6793d-fbc6-495b-897d-be3ea204a59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7f912c-ac33-4e05-b45d-c2fd95b3593d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc902292-bbe0-4f72-b27c-92557c796549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222ffc5e-9207-4115-b3e0-75a1228c5fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d7879d-3fae-44b7-b6ae-b0528d82ea97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89f7462-b4bc-41b4-857c-c034a921444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67587f94-490e-4cad-93e5-ad2784550232",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5ad01b-15b8-4b32-a728-0e99b634c900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff0ee4b-5425-4a65-aece-b0f6a3153146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f4bc90-985c-49c9-b952-bd013dedb6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38920d8d-6018-470e-b231-9b4500275927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50170526-388a-4a31-a8b2-be43b68ab57e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bea907-eabe-497a-9c17-39947af38eb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23c4e07-474a-4b4a-9dd0-e13ea76f02a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd6cd2c-7d9a-485a-81cf-11f49d99f26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985adb3b-9a6e-4a84-b617-dda7a4c4b7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838ae167-d79c-4a71-afad-380c004d810d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a526740-2740-44a1-809e-acb4ee8ee5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a49bb6a-3575-4a23-adc4-7adee1a2fce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a092ee4-f04c-4df3-a146-4b7509379ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf09645f-2310-4689-8cfe-d9ab3ad987a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134df4c7-a054-4cf9-a0d6-9dab436044c9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842b062e-662b-4dc8-bb77-5cd9b506ebab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa69477-edbb-4115-b094-afd3984a9de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395daa97-4fe7-412d-b4cd-590bc2941ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52a4c05-db92-4a9e-b328-b18de581f17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f478b5d4-f43e-43b5-924f-63c42b371d90",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6530459-295b-42db-ad34-dc30cdf793f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2888f3-c563-4dfd-8024-1eb30d58862c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e7b4a-93fb-45bf-acf1-f7137b8c906f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18be4cb-d83f-40c3-b857-f1d20b5d4287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f39fdd-25ab-49a1-aec6-c2db531a32b9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe643b4-7d87-49c6-baee-795ced79ecb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4786feb0-40e5-4e32-82f1-6703101fe43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b31d6ea-0d8d-4a33-b475-15b12a30e94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ac0e42-f882-49aa-a11d-0dc319efc525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489882be-af75-428b-9bbb-4b0f1599142c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66601271-7592-4c77-b44d-21116c6f0379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f6896c-8de0-4bb7-9241-400044367232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ea08c6-254b-45f9-8fa7-8f8c6b471235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b14b60-1ee3-4b21-b324-6fc908717536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd5b4db-eda8-43fa-a4e0-00451288dba0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e568d225-a3eb-401a-8c80-3f922ba5c485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6eb3b0-10a5-4652-8d26-143437da0f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c46800-d6b7-4e83-a99a-a93aa763db37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddeb00a1-206f-4486-b5bb-b86833e8f105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f994d3-fa5a-4c17-8e84-5c2f98a1fd11",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59d9ed8-9191-4305-b378-6ebfbb703645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a748fd-0c37-414c-b55e-f2b2aaa030da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9ed546-b991-4ad8-9a21-d467da46e084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896f22a6-a230-4008-99d9-b02229d273fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44579c2b-8c91-4e36-bde1-a29d9c82e119",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebf27f0-ab83-4f53-ac8a-25be7669a49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae00cde-7788-4d30-af2a-1c6b7da9bc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aa3b97-9beb-45c3-9dec-bd11e9e1480b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfe90aa-4c2c-48c1-97fb-30fc2c7040f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18c49e-bebc-4942-a267-2bb7b7c453de",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b018141-99a1-4997-8298-9d452b94af55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0319a3b-f964-4d47-8b84-a23673b7ea0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016d16ae-534b-422f-ac46-9225cb00db65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388709f8-5e8c-4301-b770-b020724f4ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c1e958-b738-4c6c-bf58-769bae403f06",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6427546-a655-43f7-804f-df22e6e33833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c10417-e204-4baf-8686-276928e3977e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd64c13-f886-4868-b6fc-9e1b7fe1e17e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b13d328-1e93-49cf-bfe3-cc308478c098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578d32ae-6a16-4f82-b060-befc37e6ff68",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccd0b84-16b0-4d8b-9f02-0415850ea2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1232154e-011b-4334-8884-c12678feac30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb0acf2-dc9d-4e23-9a27-33e75916479f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a9d452-f33e-4ce6-b39b-72db517dddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6a155a-f137-4821-9c6d-12cb31f4ae48",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa447c-1ce4-41e3-a02f-5102be723890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56dbdc14-e464-49ba-b471-77f97952b6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234248e4-67e5-4ba6-b6d8-4a2bf4040290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70a77f8-696c-42a6-9e68-0bd2ef9cf97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147e864a-8dfd-4a46-a8c0-085a5d8c7fea",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab023faa-7012-4bdf-9ebd-69f5ce97a188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1dcbdb5-1493-4f48-b153-0fc45e73d089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850417bc-c359-4e1e-badf-0022b4b75ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe1d5b5-df89-49bc-b6d8-751b29e35e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd0e81d-fc22-46bf-9b5e-0be833163e7f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354400ef-b400-4204-aebb-72e0d2fd5974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661d3412-3fc2-4aed-97c1-8479017362ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41a8a8-87c3-49bf-bf9e-530e2896001d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9b956b-96cd-4c8d-ab40-c07594c0fe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89330d3e-83dd-4afb-a611-77848fdf6a97",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75d1140-448b-486f-8ba9-4099ee6996bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dcd3af1-0164-4a19-9f84-081f22cb2b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440c2bca-eb8b-417d-8f53-0f333096c00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8070e12-0020-4d39-806f-0643dba99cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab197a75-7d81-414d-a275-20e1d90bd39a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1a833d-576b-4290-96cd-a7790b8b4634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79298c70-2576-40de-818f-15cff1ef4872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9838949-e744-45c2-9933-a896793cf5ec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115ca30d-d93f-411c-aa66-4999d80d4411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24be34ad-ded2-4eb5-997f-e02f1af6081e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6be96e-8907-4d4f-9b99-8d7d9b941da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64ed615-5730-41b6-8645-b8354f3ab96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f69291-e77c-4d33-83ab-631ba7080c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61b5052-1588-4415-8a41-36e5ef3f0f68"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b349e3e6-f2f8-4923-9ed5-17371052e068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af9ecf21-99c4-4bdc-a5e3-d186c21643b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6b4b7ab-1d4e-4b2a-ab80-3bd552d50ee0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02994ab0-e5f7-4f68-9b63-8d0e69c7dc81"
                    }
                  }
                ]
              },
              {
                "id": "3ea2a6fc-1b77-4efe-a4b7-2f2fca750637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e02c31ec-c9df-49be-9b14-99671d5bce86",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a1e96f-fa0b-401f-ac9f-5c3b8559d068",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3b4854a1-16b2-4e35-b7a6-9f91211ff6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536f4bef-c08b-40df-ab44-cbd9e5ca065c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31d50127-0974-4208-921e-59453e9764f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "155ffe04-00fc-421c-8b0c-829e9d9c51d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc07e061-e3bb-457d-9a06-6dbaefec1d37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4151729-8c99-42c0-9973-d5ea11ff966b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e825c251-f8cb-4a6c-ab49-fb1aba70222b"
                    }
                  }
                ]
              },
              {
                "id": "35c5ba7a-4f19-464a-b935-7ded2f367773",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9b548d7c-7fa5-4173-b574-05a8e46b68bc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a7a9a2-46b5-4e46-b37d-638b52aaf0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "552635f1-df2c-4a48-9649-2d87eaa50179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9739ce65-b8a9-4556-a994-111ee5ba0a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9365359e-3999-42db-b25d-145cf85d305d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "453ed7ec-2df2-41a7-a139-fce7543e6b5d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed913226-32fe-4fe4-8277-2a6bb6a75f50",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdf44da9-b3ed-45b2-80b2-797054bf68ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31c18672-9ad7-4d39-9aac-c5a9ce88a854"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d03bc145-ecd6-4659-866a-a814e7e79c95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfa86007-8af7-43e6-81f9-b436caa52480"
                    }
                  }
                ]
              },
              {
                "id": "26305d10-182d-42aa-b2a2-7b5361884a33",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2673505-b8f5-4955-a6a3-5e07f4455bc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f367acf2-1256-4b53-8df1-c5c3c990eb0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b19bd364-6856-43d8-b918-6d533d1b11a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37606e57-91f7-4291-ab43-67b2f3adc515"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b41706df-693f-4c7f-80de-061f5b73823e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8775408c-1a4f-4226-a4be-5c8017aa7b91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21d41a53-7e84-4134-8dad-2024740c1ddf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6925b29c-26a9-4d15-8a2a-68e7d992cbcc"
            }
          }
        ]
      },
      {
        "id": "613af48d-0772-40f1-926b-28e4922ecb69",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "28f140db-affd-4705-af63-3ea7195843b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "927e06ca-7dc4-4d73-b338-f10022a678ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb9d5203-7f06-472c-9785-de3c68648141",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6145fffb-f75a-4a38-8220-4d65b1ed000f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "51a8c87a-632b-41eb-9972-f401d4673acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd4df15-5d5c-449a-ac25-7635acf81d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ed2caa1-53d4-40b7-97dc-402a488c58c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6bc7302-0a7d-45e0-b309-d0319e1ac713",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b861e93-98b4-4577-a2c0-b036c16ed100"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d89e0c23-420a-4735-bc0e-4c21c46c339e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "489127c8-99df-4e60-8e15-bd0c04d18b2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "713dce0a-3f98-489d-9407-7bf0a3477469",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1e097c4d-c07c-4146-9ef3-207f18e5ccfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1e04f17-2639-46f2-9953-d15c83dd0765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13907f2e-c76f-4d61-a254-9d3c19b1fef5"
            }
          }
        ]
      },
      {
        "id": "98a38c7f-e987-4bb8-b74a-710f3377d787",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "15e217b4-505f-409b-8f8a-87548b85b2f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eadf0bc0-55e1-4f3b-8183-518236371d6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e483c9a7-8f77-4495-a37a-71899362b9ce",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cee405f-091c-4c83-8578-1bd8bacb2207",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29e84b94-4654-41c7-94ac-7f06039ab203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030002e4-7294-41ea-b480-652feea66b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66cb5229-ce84-4c99-916b-40093b8026e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b62b8825-db6a-4856-befe-d0983a1416b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef394c11-0222-4971-911a-e02013be380c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20a12d71-f035-4a78-93d5-1f3ff878afe2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02c525d3-6bb9-47fa-ad7a-673189f4c6e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec67d58e-3c95-4cbf-ac56-c698e995e8a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8b8da577-dadb-4119-a24e-61d8437a2d76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b266cb3-854c-4d15-9271-a271ef1af7bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc5aee0b-3318-47a8-95ee-9f39034cde1c"
            }
          }
        ]
      },
      {
        "id": "5df754bb-2cb8-44f0-8186-6e4f004adde3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0cf0bf04-538f-4dda-852d-ea81455566c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05d267b1-def7-42d8-b540-350fb13bc58f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5513d85c-6079-45a4-8aa2-6aa309ce5c19",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da239070-040a-4f90-88a6-10d825e364e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91c481d3-258a-4344-b994-9c550df8ac08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab35778-d978-45de-b440-d941ffe71636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c372ad91-e8c7-4726-ad19-f2d9bb974756"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6755a8c2-b7b6-4ce4-a0d7-79dd82d8f890",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a49ef472-b036-481a-be79-20b3ccf240d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cba61ed0-cb5e-4be3-a0d5-77a0e91a42bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f2caa6a-1751-4b76-879a-0fcb5ff3b2f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b569106-7795-49ac-8517-8d377345a141",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d09703c-62b9-474f-b5ba-ab0cd8e5d973"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5035ab77-50ae-4208-a21c-55c787be2bfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d15066cf-6168-44c3-8af2-53de466ae0c8"
            }
          }
        ]
      },
      {
        "id": "8d54da34-4951-46d4-a581-33697f68456f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21573a2d-6023-4f84-a90f-1714e201c0a2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "738bff94-7d16-4add-93df-eaa3490dc9d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5a762cae-4281-4047-b104-f4ca9fcc145a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e74c424a-def4-4923-af52-676ab8f3937d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ab7b006-979f-4327-88f5-ac5cf7df0436",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 109.25614035087712,
      "responseMin": 9,
      "responseMax": 5512,
      "responseSd": 470.41433137612887,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711845507917,
      "completed": 1711845548074
    },
    "executions": [
      {
        "id": "63b52467-8ea8-42a8-b1c2-e924738cbdd2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a7ad2b0a-6f14-40e2-9a10-720703dbc49b",
          "httpRequestId": "702887be-5cd5-4b16-b32b-2da50fe1c866"
        },
        "item": {
          "id": "63b52467-8ea8-42a8-b1c2-e924738cbdd2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fbc9a3c3-fbf7-46ed-9be4-064cf620dcc7",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "c876bcc3-a051-48cf-a2f8-09da831086a8",
        "cursor": {
          "ref": "cc6d8989-4e2e-40f9-a2a9-6805cae3306d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d79f6c77-14a9-4045-90bc-231e10c60ecb"
        },
        "item": {
          "id": "c876bcc3-a051-48cf-a2f8-09da831086a8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cf43050a-7e5d-4037-be5e-bd0d27b46601",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "d895c9c1-de85-4c80-bdd6-31d617f0f106",
        "cursor": {
          "ref": "9f94062a-db6b-4fe7-a179-3178aa54084e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "59a5a03b-a398-4d0c-9c2c-56ae85cc9d12"
        },
        "item": {
          "id": "d895c9c1-de85-4c80-bdd6-31d617f0f106",
          "name": "did_json"
        },
        "response": {
          "id": "18f48510-784a-408e-8bfa-9b0626f8cb5a",
          "status": "OK",
          "code": 200,
          "responseTime": 255,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f167cb25-0b9e-4938-86c9-193938230ea7",
        "cursor": {
          "ref": "fab9315b-0ee0-490f-a446-00c3cf8a5c79",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "606b4365-7ec2-425b-a73e-45aa2117eb0b"
        },
        "item": {
          "id": "f167cb25-0b9e-4938-86c9-193938230ea7",
          "name": "did:invalid"
        },
        "response": {
          "id": "70b433e0-9df2-4eef-b21d-dd027c7e3bd6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 308,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f167cb25-0b9e-4938-86c9-193938230ea7",
        "cursor": {
          "ref": "fab9315b-0ee0-490f-a446-00c3cf8a5c79",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "606b4365-7ec2-425b-a73e-45aa2117eb0b"
        },
        "item": {
          "id": "f167cb25-0b9e-4938-86c9-193938230ea7",
          "name": "did:invalid"
        },
        "response": {
          "id": "70b433e0-9df2-4eef-b21d-dd027c7e3bd6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 308,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5d84cb-7490-4814-86b8-e30d79fb692d",
        "cursor": {
          "ref": "445a798a-37b5-4093-a511-f2abefbb1a30",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fbe0a205-0261-410f-a62a-770648cd6c70"
        },
        "item": {
          "id": "3b5d84cb-7490-4814-86b8-e30d79fb692d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a1969b2c-625e-40d3-becd-447e7daf2634",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66846bf6-114b-4ca2-801f-6c3ec0c3147f",
        "cursor": {
          "ref": "1382eb54-bae9-474a-b373-9c5ed45b56cb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a4aaa5e3-cc6d-45b2-ae58-c1e2d6150247"
        },
        "item": {
          "id": "66846bf6-114b-4ca2-801f-6c3ec0c3147f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "42abf937-3459-4dc6-8a8c-9dde8b3b3049",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78703874-3014-41d6-bea1-b520bc349cfa",
        "cursor": {
          "ref": "3d41fa4c-eef1-479e-b021-825dcc9117a3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "42ea5125-8a01-4d03-b76b-661d32047c70"
        },
        "item": {
          "id": "78703874-3014-41d6-bea1-b520bc349cfa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f8776dbd-5abc-42b3-89d2-3325601330c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffb82a0-f746-4b8b-a40a-2fd07465d97f",
        "cursor": {
          "ref": "6406354d-95fc-4ccc-bdde-009fd1092955",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dbea1b65-ed84-4f8c-806b-7fcf1f4c1a4e"
        },
        "item": {
          "id": "6ffb82a0-f746-4b8b-a40a-2fd07465d97f",
          "name": "identifiers"
        },
        "response": {
          "id": "70da91f5-40f8-41c7-bbd1-78b8f50cb0bc",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c483fbf6-b796-4a2b-9f04-e27a4e5e1f08",
        "cursor": {
          "ref": "ac78be3c-0b63-43fd-b6c4-42be97c96378",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bca45026-484f-457e-9fd5-88391b4fc747"
        },
        "item": {
          "id": "c483fbf6-b796-4a2b-9f04-e27a4e5e1f08",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "94858cc6-8715-4c50-99aa-8543b62a801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37bb794-e598-46e7-a725-67f6a069e891",
        "cursor": {
          "ref": "36a034c6-6567-4c07-afb6-985827f8c4b7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e3dabba-d7b8-49e4-a8e2-83cbb7d67757"
        },
        "item": {
          "id": "c37bb794-e598-46e7-a725-67f6a069e891",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "80b9a712-2602-43a2-aac4-ad9ac395770e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36369582-fdbe-4d73-8cfd-c622014f765b",
        "cursor": {
          "ref": "e48644e1-eec5-414f-bfdd-ca4e3efa3362",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ced01af-85aa-41ba-9424-28ddd387b998"
        },
        "item": {
          "id": "36369582-fdbe-4d73-8cfd-c622014f765b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fed166c5-3c2e-440a-bdea-7dc1890dac54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e554710-ab09-4069-8cb7-8d4fdea74d84",
        "cursor": {
          "ref": "4a03de20-b839-4303-b169-2c0dce1dac23",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ae669388-223b-4c26-aa0b-66da7f3eabfb"
        },
        "item": {
          "id": "7e554710-ab09-4069-8cb7-8d4fdea74d84",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b2d685dd-a327-4ddd-814a-217537cfcc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc19a97-db58-42d5-aa15-014849d5c4a9",
        "cursor": {
          "ref": "58b35ecb-2d90-4f47-a3e4-f98098303d12",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cc8b148c-11e7-407c-8641-4d34c7ba7f9f"
        },
        "item": {
          "id": "ebc19a97-db58-42d5-aa15-014849d5c4a9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1992ed46-1dda-4cdf-8c3e-d5b409231ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6490689b-f68a-4126-bc1c-0eeec8c51c60",
        "cursor": {
          "ref": "e8329592-79ad-4c94-9007-cf7f7b5a6d42",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eaaa0150-3fdc-413e-bca0-07b5747da310"
        },
        "item": {
          "id": "6490689b-f68a-4126-bc1c-0eeec8c51c60",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3b922e59-d0e0-4093-9832-b639ec3e104b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7777d6-b068-4649-8e48-ca8e3e1957b5",
        "cursor": {
          "ref": "dbb36a84-12f2-4ec8-bd2b-b7ac17c8b778",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aa761a1e-4ba0-43e1-9d86-645aa9e89db2"
        },
        "item": {
          "id": "8e7777d6-b068-4649-8e48-ca8e3e1957b5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a4b7f165-22fd-4bcc-8a4e-31dbcae79bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c614484c-c656-4da4-bbae-ad3e26ef6040",
        "cursor": {
          "ref": "fd9e8934-23e7-4ede-982a-23f88831eaa0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "72f0a2ed-6ae5-4694-a913-204eb6a38149"
        },
        "item": {
          "id": "c614484c-c656-4da4-bbae-ad3e26ef6040",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c18b20b4-5ea4-42da-a139-cd7ee53b839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3075c7-27ae-459d-8b6c-77bbf2041b35",
        "cursor": {
          "ref": "700fbbd0-9f98-45de-b725-f8012c1299ea",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5a81d030-8afb-42a1-93a0-2d75417ba66f"
        },
        "item": {
          "id": "7a3075c7-27ae-459d-8b6c-77bbf2041b35",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "527b41fc-046a-48df-ae70-8c8b5fb1ab60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e37089b-efbb-4fb0-9cdb-3aa7b7657366",
        "cursor": {
          "ref": "0d3b9810-d7a3-4227-ac9f-54ef84502d37",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "79cb8c58-75b1-44b6-bee3-bdd0f92e278c"
        },
        "item": {
          "id": "7e37089b-efbb-4fb0-9cdb-3aa7b7657366",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "886dfd31-79af-42c9-b1c5-7c87a7064d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359de69e-f04b-4abf-a980-ab11583fff1b",
        "cursor": {
          "ref": "918a8d9b-60f5-4204-b7ee-2514b54cb7f7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7af15054-095e-4f0c-85cb-a10664514c15"
        },
        "item": {
          "id": "359de69e-f04b-4abf-a980-ab11583fff1b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "02580443-5a22-4cdb-9067-52d31a42aa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa091347-3c6e-4c9f-be02-bc2685d84b90",
        "cursor": {
          "ref": "899534f8-1f33-4406-89f5-58cc990fdb84",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2fcb5496-fa1e-4249-9b2b-b256033e1023"
        },
        "item": {
          "id": "aa091347-3c6e-4c9f-be02-bc2685d84b90",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "26273aa0-5e45-412e-9da8-d3cde2b4b81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36af26ce-1ead-4b1b-b697-1149a2d38f85",
        "cursor": {
          "ref": "4949d388-af14-4034-9260-5d1b8ad0bbc3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e69caabf-b59b-4cc0-8e86-77b15350f3e0"
        },
        "item": {
          "id": "36af26ce-1ead-4b1b-b697-1149a2d38f85",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "745e4f72-67cb-42a5-bf3c-288214ab512c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bcf2c7-0c4f-4154-92dc-bde4c650ea35",
        "cursor": {
          "ref": "9e82d84d-80e9-4ee4-8773-8db627fb6b83",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "58286f87-cf05-40d8-a1f9-b39acd92deda"
        },
        "item": {
          "id": "87bcf2c7-0c4f-4154-92dc-bde4c650ea35",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0fc12f06-f53d-4038-952c-6a825f18876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965c54fe-6612-435d-b912-4fee7f11b049",
        "cursor": {
          "ref": "09c12706-7ec7-4c56-89af-88fb675a2dba",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d320afdc-ca65-46a0-95a4-faab85840bd8"
        },
        "item": {
          "id": "965c54fe-6612-435d-b912-4fee7f11b049",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb04e560-1bd2-40df-a2a3-47c0221ac063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4834ec-de59-44a3-a9dd-54e015639f92",
        "cursor": {
          "ref": "507de82c-19e6-49b1-a549-b923b0e1d4d7",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "399e6c17-240b-4f8c-acbc-5a14fd126b6e"
        },
        "item": {
          "id": "4c4834ec-de59-44a3-a9dd-54e015639f92",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6e39a2d5-b69d-460c-a387-277bcbc6aebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86ff75f-e1b3-4dc3-ba62-e20765b4e64c",
        "cursor": {
          "ref": "9849571a-c95e-4d02-92a4-f73a5d1ef437",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7197ca10-d663-46e2-b44d-41111807666a"
        },
        "item": {
          "id": "d86ff75f-e1b3-4dc3-ba62-e20765b4e64c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "012ab9d3-f1a5-4983-9a6d-be6bcdddd65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4e6d4c-84da-4ed8-b886-d2e592a82637",
        "cursor": {
          "ref": "7289ae55-9a9a-4387-9be4-42fa8d9e34c4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9ff269c6-d1b8-47c4-be34-09a3d966e999"
        },
        "item": {
          "id": "1b4e6d4c-84da-4ed8-b886-d2e592a82637",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e722aaa6-3710-4d08-ade8-53f91149190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c90a40-504a-4f20-aaa3-46d997ba9e9a",
        "cursor": {
          "ref": "7275c525-b5f2-414c-b6eb-1c2fa6b7b03b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b1440b84-022b-41a1-8ef6-9ad24118c67e"
        },
        "item": {
          "id": "67c90a40-504a-4f20-aaa3-46d997ba9e9a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1a1b9b84-1d26-43a4-b8be-87e676c6fcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038ab614-219e-4811-8b0f-6a9c55f20feb",
        "cursor": {
          "ref": "cfa25843-1ad4-4582-8df3-067c223e3199",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd8cbde9-f2a1-4c9c-834c-70390aae9e3c"
        },
        "item": {
          "id": "038ab614-219e-4811-8b0f-6a9c55f20feb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d3588097-3ece-4642-b8b0-1e94383b498c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143478bb-1696-481b-9636-98dccca3da53",
        "cursor": {
          "ref": "ffbb69fa-6ac4-4fc3-a021-2faaba9503f2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d5e7f08-e00d-4b61-a0b1-98c727d2664d"
        },
        "item": {
          "id": "143478bb-1696-481b-9636-98dccca3da53",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a9b47e2b-7ba3-4711-8059-7744d4ab8237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a154948d-c681-4a1a-8776-d6362d032067",
        "cursor": {
          "ref": "1bf8c863-510d-4196-b339-209f398ec00d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24277144-b245-4783-b7b1-4c2542ee5dfa"
        },
        "item": {
          "id": "a154948d-c681-4a1a-8776-d6362d032067",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fa3c1601-def9-46f3-abb7-c3ebf8191aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf9669e-9734-4551-80ff-c3b70aba4138",
        "cursor": {
          "ref": "eba99f68-5ec1-49e4-aec5-b9d8f8e3029c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d847bff9-4a62-4d3b-9b3e-450fdecad003"
        },
        "item": {
          "id": "fbf9669e-9734-4551-80ff-c3b70aba4138",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2808249c-8d6b-4dad-a0f6-7e96f04dfd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2404ec-a9d1-4758-b1e4-21cf96eee4b9",
        "cursor": {
          "ref": "70703768-a3dd-4f76-ba58-86eedb00ca00",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "db0d050f-a6e8-43a2-836c-f51a0a1bff6b"
        },
        "item": {
          "id": "4d2404ec-a9d1-4758-b1e4-21cf96eee4b9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6d888ec6-901e-4265-befd-e9239f43e64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514eeb5e-a0f1-4e1f-b30d-1c51b19be809",
        "cursor": {
          "ref": "613f5e77-2ff1-41db-bc9f-f187e0f95d0b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a0c874de-3fda-48db-be6d-51302acb0919"
        },
        "item": {
          "id": "514eeb5e-a0f1-4e1f-b30d-1c51b19be809",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c8f367bd-a5c8-46a1-a68c-f63e6320c9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1151d8c4-ff0f-4a75-b2ac-0fa38684d11c",
        "cursor": {
          "ref": "bd17feb7-f6f0-4f12-86b7-af5046543aa0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d208c75-a192-4378-b8ea-31e7dc25a1ec"
        },
        "item": {
          "id": "1151d8c4-ff0f-4a75-b2ac-0fa38684d11c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e2e5ba92-a885-42ac-8d21-d53f62aca250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bec37c-1750-42af-b69e-789f52d7bb16",
        "cursor": {
          "ref": "f508f8f6-3fc9-4c19-9ea9-ac8ad73afb90",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c860dfc3-20b7-4ec0-8ab1-7fd4e58fd3db"
        },
        "item": {
          "id": "53bec37c-1750-42af-b69e-789f52d7bb16",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "310aa517-4453-4d9c-a3da-8a85ae0a2c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a110caeb-8978-4dff-8d76-597fece4bc5b",
        "cursor": {
          "ref": "45cd93d0-aa0c-4143-9213-02918c4f3f54",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7aa6c676-9cd9-407c-99e5-3a0f66bb78f5"
        },
        "item": {
          "id": "a110caeb-8978-4dff-8d76-597fece4bc5b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0bf968a2-7c4c-472d-b570-8f45b1f5f5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75289d41-73f6-40a9-bc4a-f49e695a7475",
        "cursor": {
          "ref": "5084ba06-008f-4d37-abae-82ba3874d1d2",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e4c04147-c283-4a7b-bfee-314b40a9913f"
        },
        "item": {
          "id": "75289d41-73f6-40a9-bc4a-f49e695a7475",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ed39d119-70df-4cf3-8bd3-cb19f885055e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1785547-9891-4e76-be9d-047f7049240d",
        "cursor": {
          "ref": "41ccb6ac-ee72-4ea3-a59c-014418209dab",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9b3a96e8-ec61-4845-9cc7-88f8a516ff86"
        },
        "item": {
          "id": "e1785547-9891-4e76-be9d-047f7049240d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c442fdbe-6ae2-4afe-989e-38ec48e76b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08131697-ae0f-4fb2-a24f-b093607381c1",
        "cursor": {
          "ref": "cb417ae5-243c-40cc-84d4-221d1200fe5f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "81b77251-0dba-4df2-bfc2-91e0b52314a6"
        },
        "item": {
          "id": "08131697-ae0f-4fb2-a24f-b093607381c1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "06648a30-33c5-40fe-9e51-2a954b983a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20e5230-554c-4a6f-b6f5-7c2c3e5dc4ce",
        "cursor": {
          "ref": "5aeaf6da-52ea-4dfc-8e2c-ddcb56ebcd0e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4f17b41d-fe6a-4555-8946-164937112b1e"
        },
        "item": {
          "id": "b20e5230-554c-4a6f-b6f5-7c2c3e5dc4ce",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1eb440f0-a2e3-4ee6-b61e-e7bb9a895b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d727e93a-ea3f-4455-b93b-7a00002b70c3",
        "cursor": {
          "ref": "acd946ad-cc0c-4f0a-9312-73e69eb64a82",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f1456e0a-4e52-41c0-b35f-04f670b021f8"
        },
        "item": {
          "id": "d727e93a-ea3f-4455-b93b-7a00002b70c3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "88ffd4b2-806d-4766-9a23-30f3be30aa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2ecfc8-021a-49a3-bb7f-12a41e1bd1a6",
        "cursor": {
          "ref": "468e8c42-c37b-4ef2-a569-5c7bbf2d9817",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5d140bca-ea04-46cf-90bf-19834c7d3ebf"
        },
        "item": {
          "id": "3d2ecfc8-021a-49a3-bb7f-12a41e1bd1a6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "27eff46c-8af1-40c2-9765-c69a8abd46cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a774cc8c-0a66-4e6d-991f-7b97807bce33",
        "cursor": {
          "ref": "2cae3be0-f58a-403d-a265-91c67481c4f8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b08d39ed-8950-4b9d-9070-7c11505c7b3e"
        },
        "item": {
          "id": "a774cc8c-0a66-4e6d-991f-7b97807bce33",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fb296ff5-541d-40d5-bad0-d7a03c956ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cb1089-0078-413f-bd81-289a78684135",
        "cursor": {
          "ref": "522fe628-410c-413f-a36b-23511bb0189f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5582ec54-1897-4559-a11a-0761d75d09bc"
        },
        "item": {
          "id": "85cb1089-0078-413f-bd81-289a78684135",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5b2e130d-9b87-4546-9354-018caf4d91fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0a5d39-5bab-4002-8614-ca253804cb36",
        "cursor": {
          "ref": "ed15806e-d63e-4f0c-ae98-3a90a93bbe4a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "57852d1c-5125-4425-91eb-92a2a91c5ce0"
        },
        "item": {
          "id": "bc0a5d39-5bab-4002-8614-ca253804cb36",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8e669668-b22a-4e07-a936-7a671fc03f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaf61b3-12b5-46e0-becd-a8447c1d7e07",
        "cursor": {
          "ref": "51b37093-0a08-4c5f-bb4e-e5fb8573f7fd",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b7d4f27d-818d-48fb-907c-5ba0c7e84887"
        },
        "item": {
          "id": "4aaf61b3-12b5-46e0-becd-a8447c1d7e07",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "57944383-fb1f-48a1-a004-c4675479c012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a199916-b439-49f9-8420-4789d4b1fceb",
        "cursor": {
          "ref": "bfbdb535-2384-407f-bce1-f44d22280963",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "31010b94-402a-48e1-aff0-6d4efae27338"
        },
        "item": {
          "id": "6a199916-b439-49f9-8420-4789d4b1fceb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "83a80545-394d-465e-bbfa-68d0795dbf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ce5d3-30af-46b7-997d-9f230208e29f",
        "cursor": {
          "ref": "66c6d613-3ad5-4fe5-9d6c-568dfda99906",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "05dcb354-a4d9-4952-9099-e7016e5469e2"
        },
        "item": {
          "id": "286ce5d3-30af-46b7-997d-9f230208e29f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "53493741-d9eb-4091-9213-e8f2ea56045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3992cb02-cdb4-48ed-b94d-58d835e3c35b",
        "cursor": {
          "ref": "6f287929-f4f8-47c9-9609-e6038f3cea22",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e6d05701-4741-403f-a52e-2d61fd6cc28d"
        },
        "item": {
          "id": "3992cb02-cdb4-48ed-b94d-58d835e3c35b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3c969364-8064-40ae-b92c-715b928b7922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16284bb4-a418-4714-944a-2fb231ba8e88",
        "cursor": {
          "ref": "556e89e6-448b-4230-82a9-59afaf7a1e87",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a1812a51-2b77-4926-b7e7-a5b5f52ae7de"
        },
        "item": {
          "id": "16284bb4-a418-4714-944a-2fb231ba8e88",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "62345378-cc3f-48cd-99b6-15be126e069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaec231-66b1-4955-918c-b7142a098346",
        "cursor": {
          "ref": "ff3d8815-2918-4590-8401-f07ffa6aed24",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8d2be01f-b8b6-4e10-93ee-f42f5544da82"
        },
        "item": {
          "id": "fbaec231-66b1-4955-918c-b7142a098346",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e14ed78-3a99-46a5-ba17-6b579d8e6742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd92958-023b-44e2-ae32-781b712d87ac",
        "cursor": {
          "ref": "9a1e3987-d051-43ab-b754-c8526df1920d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b391e702-c91b-4769-b888-c41a6aa558c8"
        },
        "item": {
          "id": "8cd92958-023b-44e2-ae32-781b712d87ac",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0967061b-80e3-4689-b10e-98982e691c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292ab63-c5cd-4416-8e35-f9a76e62a9bd",
        "cursor": {
          "ref": "ae5935dd-06f9-401f-95ea-df548945018b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f1b57499-c1d1-405a-9550-f1958711e714"
        },
        "item": {
          "id": "7292ab63-c5cd-4416-8e35-f9a76e62a9bd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e119e450-084d-48ba-a8d9-77020289e857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c327411-b34c-4c2d-831b-0223fc98e411",
        "cursor": {
          "ref": "90a3b4ce-7280-4f90-9465-af9587be9664",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c95e7c40-8acc-4801-9658-2503ede7b76e"
        },
        "item": {
          "id": "7c327411-b34c-4c2d-831b-0223fc98e411",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1766cdc1-6385-4d71-b143-0d90efbbb657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979ead56-c59b-4234-9a13-d9cf783c70bb",
        "cursor": {
          "ref": "274cf841-5bdc-4f70-b294-5cc9a15e0bd6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5374c954-293c-4231-8854-2e1240933fb6"
        },
        "item": {
          "id": "979ead56-c59b-4234-9a13-d9cf783c70bb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "51f242ac-2b61-4c00-bbd1-0ba2918f2135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edb90b3-bb73-4600-b87b-96223d1579e3",
        "cursor": {
          "ref": "22a92ff8-8f9f-4125-8bcc-2e06c0c3985d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec700bb3-3fff-4059-a94f-5314db53e66d"
        },
        "item": {
          "id": "0edb90b3-bb73-4600-b87b-96223d1579e3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aa765649-ae2b-4029-a436-744920517a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5851f67-a426-4a90-89c8-85e271b9298a",
        "cursor": {
          "ref": "a5cab602-901c-42f3-91f2-99853948da37",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cea03008-f1ce-4f60-b3f3-4d3ee7b77bc5"
        },
        "item": {
          "id": "e5851f67-a426-4a90-89c8-85e271b9298a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d4e5bd12-a8e7-431a-b447-5db56c0c1b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c39323-0a77-4903-b13a-fbde6813adcd",
        "cursor": {
          "ref": "964d05e4-e823-4291-8da6-3fcc8220f790",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "04264027-0e9a-422f-91fc-85d830549e6c"
        },
        "item": {
          "id": "49c39323-0a77-4903-b13a-fbde6813adcd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e244d6bc-c0b5-4f36-bfde-11de63e24a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c74a6d-b423-4df1-b742-5ed203677b7f",
        "cursor": {
          "ref": "97aab0e6-3606-4907-8885-f056e0e13fed",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f42ad250-a915-4102-ab81-1be95af8529e"
        },
        "item": {
          "id": "53c74a6d-b423-4df1-b742-5ed203677b7f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "84b5711d-0a43-491c-a038-882448f86cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0206fed-a978-4355-9331-87e411b52554",
        "cursor": {
          "ref": "40506a51-7a44-4cf1-85e6-a761d065fd5e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "289ed37d-0362-43ba-99b1-8af268b7157b"
        },
        "item": {
          "id": "b0206fed-a978-4355-9331-87e411b52554",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "72b44ff8-0753-4510-905e-8f5909768b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab5f0e0-4c4d-4590-9f0f-317145c102b5",
        "cursor": {
          "ref": "553919f4-5b29-4abf-9ccd-d4083417bd05",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "539e0e43-ea7e-4477-8c60-efe07cc57f68"
        },
        "item": {
          "id": "1ab5f0e0-4c4d-4590-9f0f-317145c102b5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5a6c94a4-b972-41db-9050-44a9c67b5ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185ff14a-8c5d-4bb3-a717-57695279f371",
        "cursor": {
          "ref": "c1b6e42a-4f9e-4428-b325-ff5159c3cbb0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dd12a152-b9bb-4002-a4ae-1e44e4eba1db"
        },
        "item": {
          "id": "185ff14a-8c5d-4bb3-a717-57695279f371",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3aad3449-d5f4-41ad-a2de-11e326c074d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0e2545-b1a1-4260-bb37-2d7923ca22b9",
        "cursor": {
          "ref": "e72cb747-1fd0-4ee4-b1af-b3e50751373b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "06e20bb2-a14d-4c10-a686-aea09b20f971"
        },
        "item": {
          "id": "2c0e2545-b1a1-4260-bb37-2d7923ca22b9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "70fa6c30-0662-4360-9e6e-4de644625238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c2923b-d036-4499-bf35-4c4fc86e2a39",
        "cursor": {
          "ref": "458e8aba-7190-412d-8c08-714981375f97",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "57e5bdbf-adde-4e87-a35d-546111408b4a"
        },
        "item": {
          "id": "63c2923b-d036-4499-bf35-4c4fc86e2a39",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bbecb65c-ed7f-4f3f-9518-dab658c53294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a22f42-87bd-4770-97ec-f7bea4d1e243",
        "cursor": {
          "ref": "8a19e581-1fc3-4eed-95a2-9278c8d2d6bb",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "64621b8f-a7ed-400b-8c77-3785b44857d0"
        },
        "item": {
          "id": "61a22f42-87bd-4770-97ec-f7bea4d1e243",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "99fe8db6-924c-4f15-8d00-8b3b90a2084d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19652cb-7e8b-4937-b205-ad958c395e90",
        "cursor": {
          "ref": "aaa7553c-772a-4951-9a7f-103adc63fdb8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e1e4a14a-6460-4d65-995b-6716d04010bb"
        },
        "item": {
          "id": "b19652cb-7e8b-4937-b205-ad958c395e90",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "03099633-1a1d-4748-a0dd-5c9f678b043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942783b1-2373-418c-8462-15ecfeaf88ec",
        "cursor": {
          "ref": "3756710c-2c38-4569-8647-1902107042f9",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0b7542e0-9887-41b7-9b88-b47fb3737ef3"
        },
        "item": {
          "id": "942783b1-2373-418c-8462-15ecfeaf88ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4cc23b8f-687e-4395-9a13-9881ea0329f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00796ff-980f-41e5-a323-b3dc05ed2e84",
        "cursor": {
          "ref": "7bc9f11d-cb88-44f1-8d87-13c724aecb8b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "378d2d3b-be3b-418a-b242-1c20386aa3bd"
        },
        "item": {
          "id": "f00796ff-980f-41e5-a323-b3dc05ed2e84",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5565fb55-136c-405f-bdd1-8f46bd0e901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7722fefb-775e-4649-b128-852125ba34f5",
        "cursor": {
          "ref": "a8c0371d-235f-4af4-a9e4-ba602c617837",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f5898b4c-22d3-4d28-8885-a542f022281c"
        },
        "item": {
          "id": "7722fefb-775e-4649-b128-852125ba34f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "385b5398-3c8e-4b17-adbc-18ea60f7bdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c681fc-314f-40aa-9cb7-7524a794d3c4",
        "cursor": {
          "ref": "6e273b18-9ee1-4390-907b-226e7c8846d4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d8ee6edf-c46e-48f3-b9d3-85f6163a20f4"
        },
        "item": {
          "id": "13c681fc-314f-40aa-9cb7-7524a794d3c4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b1819a81-a4d6-4340-a39a-533e08f6fe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a88d8e-e07d-4797-a000-cb406196bb1f",
        "cursor": {
          "ref": "d4206888-65fc-4f8d-aeb2-c7a51c541185",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "35725258-ce47-4204-9d89-769fbe056dae"
        },
        "item": {
          "id": "d5a88d8e-e07d-4797-a000-cb406196bb1f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f2b8e552-c861-43bd-a32d-ba9ff39dd089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6b09fc-2976-4bac-9279-aaca13df0aa1",
        "cursor": {
          "ref": "bece571d-12f5-48d2-adaf-c4770aaf7be5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4dea0b27-2a67-46b0-a0a2-4dca0e9239a4"
        },
        "item": {
          "id": "de6b09fc-2976-4bac-9279-aaca13df0aa1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f031a2a5-ee4b-4f63-9b9a-083b4f46dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5eb1ab-c233-4cb6-b14a-82465485aa07",
        "cursor": {
          "ref": "cb5052f2-46f3-4c59-ad58-906f4ec8ded7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b3029ee0-b0e6-4cd4-bb08-86e9012ad8f2"
        },
        "item": {
          "id": "5b5eb1ab-c233-4cb6-b14a-82465485aa07",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8d39c58c-db1b-4968-be3b-295fcf64ff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc90169-72be-4040-9ac7-3dd2a4d633ed",
        "cursor": {
          "ref": "cbfc6605-e9a9-4bce-8eaf-a2bd16fc0345",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "63d75f3d-be94-4185-9a77-2a82c246de5b"
        },
        "item": {
          "id": "8cc90169-72be-4040-9ac7-3dd2a4d633ed",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1045cbb2-7277-493e-bed4-c05120946d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620dcd11-5f70-41f0-9427-6ecae460c646",
        "cursor": {
          "ref": "9a64260d-114d-4979-867d-070749758639",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7237784f-2b23-45fe-ab9d-c03e5e8813e7"
        },
        "item": {
          "id": "620dcd11-5f70-41f0-9427-6ecae460c646",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3fcd5388-2e6f-43eb-92b0-05c3331385ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efc3af7-7973-4507-86f2-f5601260f516",
        "cursor": {
          "ref": "b0bd6462-0c00-4fa4-a1d0-1459bf027ec5",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ada8857f-6ecf-41c3-834d-69165d1b0c16"
        },
        "item": {
          "id": "2efc3af7-7973-4507-86f2-f5601260f516",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32e59471-b6d3-4a6d-b019-40f84d19255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355e53dc-2759-47ea-a47c-607de03f9084",
        "cursor": {
          "ref": "32a832d8-04a8-438c-9563-3d6a238caed8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2b5084b8-f98d-49f7-9a07-ad09e8ce2bfe"
        },
        "item": {
          "id": "355e53dc-2759-47ea-a47c-607de03f9084",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fb20ab7f-2e89-4028-b8a5-7ab31057e02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7003d4a9-dacf-4904-8684-825e5bc60376",
        "cursor": {
          "ref": "44cf1436-9432-4b8b-b586-1a0431d91c40",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "22c3b02d-ecae-4eba-b14c-a1655afeb66b"
        },
        "item": {
          "id": "7003d4a9-dacf-4904-8684-825e5bc60376",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "89711dc8-96f9-4c9b-b853-f7dbe8c5dda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6edf200-ad2f-468e-a4eb-d5437e2b1411",
        "cursor": {
          "ref": "774a993c-b5c7-45b6-8684-80805361e832",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a915ccc3-6a6a-4937-b64b-b4286cffc5fc"
        },
        "item": {
          "id": "a6edf200-ad2f-468e-a4eb-d5437e2b1411",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c666f891-6942-479e-af84-0e8ea14c5fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2e7216-5b68-4af6-b330-bc073ec3a462",
        "cursor": {
          "ref": "97bfa971-5283-402d-aa9c-5def5f1d69f5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "29285102-5054-4887-8bbd-9190931b5a6f"
        },
        "item": {
          "id": "2e2e7216-5b68-4af6-b330-bc073ec3a462",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7491ac18-2a0e-47c1-8a67-7b47378f236d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55916c8f-6d7b-497b-b057-b399aa7e91f6",
        "cursor": {
          "ref": "40064c37-edd3-4df2-b50c-2f3c67d5011e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f1346938-0f49-445e-8a3d-ffd1b105f8fd"
        },
        "item": {
          "id": "55916c8f-6d7b-497b-b057-b399aa7e91f6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "401c3c53-b55a-4dbe-90c1-4a613f5b9370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f112ee2d-6c21-40a1-8236-9aedaee10025",
        "cursor": {
          "ref": "bbc87b10-4843-44a8-baa6-239cde45f458",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4f729c07-280b-4c21-af54-c3bc2caa9f40"
        },
        "item": {
          "id": "f112ee2d-6c21-40a1-8236-9aedaee10025",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7d86a9e4-5ae0-4cca-8ec3-d85ce52b5739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ef9b0b-228c-432f-9077-fa2aa41431dd",
        "cursor": {
          "ref": "fc64c5dd-a18f-4ae2-9cbc-17e7e400117d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2462dc13-d2cb-4f40-b50d-cc7a1f8b1e1c"
        },
        "item": {
          "id": "42ef9b0b-228c-432f-9077-fa2aa41431dd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "49d7c104-a68b-441b-9b63-7b793123dc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af989af2-6645-479d-a80b-f786e37d9e12",
        "cursor": {
          "ref": "e7c8040c-adf2-4c33-a308-ee21a33fbb31",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "35ba4e16-a18e-4322-bb5c-3af811b9c4ef"
        },
        "item": {
          "id": "af989af2-6645-479d-a80b-f786e37d9e12",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "384b7025-e5d7-4c37-a79e-93156601cdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5f40e3-9346-4f5c-bc71-73a2446f528a",
        "cursor": {
          "ref": "9cdd7b20-b6b9-4e30-9ec9-1d887070e6c9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "40a93945-ce82-4a51-b5c0-31ab781d08b4"
        },
        "item": {
          "id": "4e5f40e3-9346-4f5c-bc71-73a2446f528a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4cf4f7e1-db77-4e57-a0f9-2f3a5cdb9104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70578d2-2346-4b72-9fab-c192bb1b5d12",
        "cursor": {
          "ref": "845b5992-f7d4-427b-8a5f-eb99d8a6edc5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2d89774e-b245-4027-9b50-a5678ae284b7"
        },
        "item": {
          "id": "e70578d2-2346-4b72-9fab-c192bb1b5d12",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "349f0197-1fc5-45bc-8ca9-264bf3a5e3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11c1aa7-eae0-4b04-b537-7e219ebcbf13",
        "cursor": {
          "ref": "2ed2de8a-237f-4711-9f87-30d34e8f5742",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0397c18c-a984-4e12-8a01-d97d5e6fd2cd"
        },
        "item": {
          "id": "a11c1aa7-eae0-4b04-b537-7e219ebcbf13",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3b07fbbd-e5f1-49ed-ad96-18b6330cb661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4516574-15f3-4d6d-b3cf-b19513578743",
        "cursor": {
          "ref": "4e386b09-00c5-468e-ae53-ad20bd70e3be",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8b27c025-0dba-43f7-b9f9-208e73d3a32b"
        },
        "item": {
          "id": "c4516574-15f3-4d6d-b3cf-b19513578743",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "386ef3a2-2268-40e9-874b-1da55481f2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69ead8f-0511-46be-bf82-006a6d6f8daa",
        "cursor": {
          "ref": "e1c68e5a-d7e9-4310-8916-68d17b102ce9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8bffe521-746f-4006-9d53-c9406009baba"
        },
        "item": {
          "id": "a69ead8f-0511-46be-bf82-006a6d6f8daa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2a3b8611-5d79-4bcf-9c9c-89a1103878b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34f2bbd-1ffb-4906-bfa6-70537164e0af",
        "cursor": {
          "ref": "faf06aa8-a0c0-4baa-85b4-ca8fa7a374aa",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8b84fe68-34bf-432f-89d4-a3748c1178db"
        },
        "item": {
          "id": "a34f2bbd-1ffb-4906-bfa6-70537164e0af",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aa1a998b-030e-43ce-a4ac-192ac5138e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2a3b8f-b0ef-4316-a101-6bfd1c0de3c8",
        "cursor": {
          "ref": "9d2f8292-7673-4e63-a39f-f9c26078ec01",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d747c042-f842-4d9b-ba9d-0ad908e67e7f"
        },
        "item": {
          "id": "ef2a3b8f-b0ef-4316-a101-6bfd1c0de3c8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "02427ada-09b6-498c-ac8e-2561377930ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fe7244-d75b-4309-bb30-e224b1dc5f81",
        "cursor": {
          "ref": "4858a0ca-5e2c-4003-bfc0-9a1fe9887144",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8489210f-572d-4de2-8928-abd5bd65a8b2"
        },
        "item": {
          "id": "81fe7244-d75b-4309-bb30-e224b1dc5f81",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bb507313-e5e8-4432-ad21-552d5956c98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cf9c87-2ab2-4768-aa2f-d8e02e9c55ca",
        "cursor": {
          "ref": "56bc91a4-cb72-4b18-b674-502e56314207",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0121eec7-2453-4fb9-8c54-20b947740807"
        },
        "item": {
          "id": "54cf9c87-2ab2-4768-aa2f-d8e02e9c55ca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "41666de5-7bc4-46fe-a614-3cef60915658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26903d7-1957-4bde-bada-c3dc847bd28f",
        "cursor": {
          "ref": "c41e1e30-91ad-479d-8675-49c5547ecd51",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "30c6e0d5-c177-43e8-96b2-5fdb3f18f2c2"
        },
        "item": {
          "id": "c26903d7-1957-4bde-bada-c3dc847bd28f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e355216f-2f7d-4439-946b-df87f310803b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59f4ec4-e0ca-4d86-b5d8-1bb07a57765d",
        "cursor": {
          "ref": "0f743926-7ae1-4c34-9266-0fb39e1a7bec",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "204034a0-8e62-434c-8aa7-f16ac05e1aa9"
        },
        "item": {
          "id": "a59f4ec4-e0ca-4d86-b5d8-1bb07a57765d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7e9258e0-63b8-416c-a1cb-a9205a145c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c442bed-ab55-4f32-9557-3bea15a6c05f",
        "cursor": {
          "ref": "de44d076-636a-40cd-88c7-fcdd55704066",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e0811edf-d9ff-44a6-aa80-cc67f5640dea"
        },
        "item": {
          "id": "3c442bed-ab55-4f32-9557-3bea15a6c05f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5c941a12-f2ed-46e1-b90e-6d187b1212aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9166e633-a4dd-4fb3-8075-4683297a4275",
        "cursor": {
          "ref": "57839a96-e8cd-467b-bbe2-e5ecc15b0894",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5e2834a3-d2f0-4278-852a-e0800399e925"
        },
        "item": {
          "id": "9166e633-a4dd-4fb3-8075-4683297a4275",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c96f1574-094e-485f-b253-9bf488d6b49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e500e9e-e16e-4482-a716-b2cd5142cf2e",
        "cursor": {
          "ref": "64c5b516-1e2d-4e78-bbdb-bc9c84cb218f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d4de2544-5e53-4721-a008-a2cdf7de87b1"
        },
        "item": {
          "id": "0e500e9e-e16e-4482-a716-b2cd5142cf2e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d8f9f5f8-8345-42c7-bf8b-334d6f0b00a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a59c904-1393-48c5-9520-67cab1404eb4",
        "cursor": {
          "ref": "f2e2e82b-7f8d-48be-9bbd-466edf7869eb",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "acd9d76b-db7c-4d4c-b4a6-749558383ee6"
        },
        "item": {
          "id": "6a59c904-1393-48c5-9520-67cab1404eb4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0aa7b8e7-fb32-4762-8351-8ad01e860c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e908a5a-a147-43fe-b335-c9be4e77f538",
        "cursor": {
          "ref": "62592a20-0156-4031-bafb-7aeb32fe63a0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "de7d9181-7fac-46b5-a1b9-13e92c4b99f8"
        },
        "item": {
          "id": "6e908a5a-a147-43fe-b335-c9be4e77f538",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "662bf714-11cf-47a1-b437-759a8411e110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412b1e1b-72f3-4619-a596-0662a5d24e37",
        "cursor": {
          "ref": "226c851c-f571-43ed-9c6d-def7e861147f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "484d4538-2ba4-4def-a093-17ada76c131f"
        },
        "item": {
          "id": "412b1e1b-72f3-4619-a596-0662a5d24e37",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "114b468b-74cd-49fd-bc74-3b3d3140fd3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f9cc6d-f71c-481b-ad18-5200fd4accfd",
        "cursor": {
          "ref": "620debbb-69b8-4033-97e5-b9cc5055c280",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5f72f8b8-969a-4fbd-b9e0-3dfe2c73a2e4"
        },
        "item": {
          "id": "f0f9cc6d-f71c-481b-ad18-5200fd4accfd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2f0be37a-d954-4e03-880f-0ba4245efe04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "098fb1df-17c7-4e4a-b137-30f727b1a8dc",
        "cursor": {
          "ref": "f690ead3-b216-4396-9ee6-f2ad9ad493d7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "68ef8029-2ae2-4393-8497-28b8859fb265"
        },
        "item": {
          "id": "098fb1df-17c7-4e4a-b137-30f727b1a8dc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "122d3397-bf98-4ca4-b251-6c5cbeffc99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b1c29f8c-f6ec-4ad5-bcc8-10bfe913a100",
        "cursor": {
          "ref": "edc92b2a-f95f-4bad-b150-5abc86c7aa15",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6dfce959-a816-4f6e-816f-101fb73359f6"
        },
        "item": {
          "id": "b1c29f8c-f6ec-4ad5-bcc8-10bfe913a100",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cd977afd-0e02-4d7f-b214-d7f3dd868379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8d453ae2-2f49-467e-a23b-deb33e125d39",
        "cursor": {
          "ref": "acc9cd39-65ad-4774-bfb6-ebfc9831a596",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "68e8a2ef-fed2-42a1-bde8-11c4eb1d3f8a"
        },
        "item": {
          "id": "8d453ae2-2f49-467e-a23b-deb33e125d39",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b3eb39f5-bc86-4e9d-afc2-73a007eb992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8e38e984-e1e6-4c7d-90ed-65b3c3385cb6",
        "cursor": {
          "ref": "5bc8308b-e847-4d56-bf27-40744dd329c3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d904b55a-0f49-4cf0-8a70-21468f27f0b4"
        },
        "item": {
          "id": "8e38e984-e1e6-4c7d-90ed-65b3c3385cb6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a629844c-cb88-4959-b032-81b0e43edf95",
          "status": "Created",
          "code": 201,
          "responseTime": 5512,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c775a38-1ea8-4ef1-9400-366c26b7e3dd",
        "cursor": {
          "ref": "a59078ab-4054-4db2-b41c-0a6f7e33acf4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8b22be8f-92d4-4e23-83dc-9ff742682f6d"
        },
        "item": {
          "id": "9c775a38-1ea8-4ef1-9400-366c26b7e3dd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9a5e4d87-1d9d-4b26-8794-c23d661a6703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2179d113-bf41-420e-b77b-2a4cad48e248",
        "cursor": {
          "ref": "ba2c37c4-93f1-4e98-9ffb-bb662f725fe6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "48d65c0e-53f4-4bc6-b087-67578c0d8f57"
        },
        "item": {
          "id": "2179d113-bf41-420e-b77b-2a4cad48e248",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e0bfb340-5251-48fe-b5a5-feeacf713e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b81d103f-9494-4f4a-8539-2744ca53d2ff",
        "cursor": {
          "ref": "ad984c8f-9f71-49d1-ae29-4547362cdee1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "99d6b1c4-dd80-427b-852e-8a25666b0750"
        },
        "item": {
          "id": "b81d103f-9494-4f4a-8539-2744ca53d2ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "112319de-762e-423b-a74d-4724ca9ae7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca66187a-89dc-4063-ad9e-b7128bd719d8",
        "cursor": {
          "ref": "314b3d4a-a68f-4bc9-9e35-d6ee5b4a59e2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "240eaab0-8d85-409c-8f98-1cf140350602"
        },
        "item": {
          "id": "ca66187a-89dc-4063-ad9e-b7128bd719d8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3c15093c-0b59-4eb1-be85-0246ba226cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc56a44b-97ae-431b-b40b-29e570697955",
        "cursor": {
          "ref": "0b9164d7-73b8-469d-9452-9d4f5b0e7ee9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a0564a4-807d-49b4-99db-a6feecf5495a"
        },
        "item": {
          "id": "cc56a44b-97ae-431b-b40b-29e570697955",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "39b01a48-8a17-4c56-b1a8-8af2adb03895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44161187-c0dd-4b60-8a01-3c34b0d0929e",
        "cursor": {
          "ref": "88253531-c92c-4e2e-bd31-8e0e212d78e4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b4e66b44-1edb-4312-890e-8364cc4b670c"
        },
        "item": {
          "id": "44161187-c0dd-4b60-8a01-3c34b0d0929e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fe4888c2-1db3-458e-9c39-427b9a310cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d614927-338a-42eb-a1e0-55e7f1385e29",
        "cursor": {
          "ref": "70e0e8f0-af13-4a80-8acc-3b03b0c361df",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "732211a9-0534-4fd0-a343-72a158b2bfa3"
        },
        "item": {
          "id": "6d614927-338a-42eb-a1e0-55e7f1385e29",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "60df3df1-10d1-49c1-a466-e3d9a1d6117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98976e2-2386-4728-8c91-6b769641e2c0",
        "cursor": {
          "ref": "ca5fc322-c5b8-4ca2-afa1-455b57aa7ee8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "329b2017-366e-4e80-915d-c2f4930c360f"
        },
        "item": {
          "id": "a98976e2-2386-4728-8c91-6b769641e2c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b72b0a39-313c-4de3-8b0d-c3583caa5a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aee4a0-f075-4b3a-a5b6-a3bd05c8bf1b",
        "cursor": {
          "ref": "f2a05281-d14c-46e0-bbd0-1ddb57b34f19",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cc71b051-158c-42dc-8fae-572ecba087fa"
        },
        "item": {
          "id": "f5aee4a0-f075-4b3a-a5b6-a3bd05c8bf1b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6ee558d4-f320-4e94-83f0-00ba8bd25be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c173117-56f8-4df9-9d9b-6a0a2743a8e2",
        "cursor": {
          "ref": "11e0e257-5770-4815-a594-e5b59824e313",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "05ce806e-5bf5-4aee-b749-ab559946eec0"
        },
        "item": {
          "id": "7c173117-56f8-4df9-9d9b-6a0a2743a8e2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "20464e9d-de63-4390-963b-553edfe13e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43f7bdf-76b6-479a-a3cf-5093a42ec25e",
        "cursor": {
          "ref": "532b68d9-53d6-4be8-91e3-066f28aef97e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3351ceed-0b15-4210-a3d9-7b3af197f9d3"
        },
        "item": {
          "id": "d43f7bdf-76b6-479a-a3cf-5093a42ec25e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a2b73493-2c7d-471b-a865-f9b36e98eb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bb5337-535b-40ab-a306-37e152fb55cb",
        "cursor": {
          "ref": "c2031602-479d-484e-b730-f1e92775a376",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e4f92375-df51-48fa-8eaf-da15ec782714"
        },
        "item": {
          "id": "a7bb5337-535b-40ab-a306-37e152fb55cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99dd969e-51b1-4ebd-92af-bba30a4a1f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fcd3ab-fe66-4ad2-b189-04c9eb43135e",
        "cursor": {
          "ref": "0a07f05c-2cfe-4a10-a9b5-334b42bce59c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "66a64729-4501-485f-96ab-26804096e95c"
        },
        "item": {
          "id": "57fcd3ab-fe66-4ad2-b189-04c9eb43135e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4a60ff0e-57ee-4615-b597-1ed56ad773ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593dd400-9667-411a-8189-487b20c237ae",
        "cursor": {
          "ref": "825792a9-4a74-4d52-9099-b3e64992e164",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2ea8b125-4335-4b58-a37a-72cbb10dd58b"
        },
        "item": {
          "id": "593dd400-9667-411a-8189-487b20c237ae",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "50561a38-8dde-474a-9ec8-81640657af66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4444e2af-44ca-4df2-831d-3ed160b0048b",
        "cursor": {
          "ref": "2fc9a16b-55e4-4faa-b0f0-dee6b2d55971",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "98948aea-2f0a-433c-ba05-b01aef1beaf6"
        },
        "item": {
          "id": "4444e2af-44ca-4df2-831d-3ed160b0048b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "76b2a430-a56d-4c57-8ea3-39d648477e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49478d6-7ccc-4a24-9c8c-be833a994597",
        "cursor": {
          "ref": "c0426cf8-f55a-4dfb-9bf8-74f1e8c465e3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "93e83cf3-995e-4f8e-a39c-c5252be546bc"
        },
        "item": {
          "id": "a49478d6-7ccc-4a24-9c8c-be833a994597",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fe362552-e603-47e6-a42b-0344aab4fc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314cd896-8460-45f3-b2ed-a08b3d11c34d",
        "cursor": {
          "ref": "c3dfc63e-d859-47df-b2f0-92d8ecc84e67",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2c9fe828-2da4-4672-9437-0d384a1224d5"
        },
        "item": {
          "id": "314cd896-8460-45f3-b2ed-a08b3d11c34d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "95701572-137d-49b6-b2ab-17c593fd68e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7411fbc-f579-4fc3-a202-5137833ffc60",
        "cursor": {
          "ref": "1bf9a1f1-ab26-4e4b-9871-2e28e8a55fc0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "22ad700b-5cf7-4c41-94a3-58f9a5d86d1d"
        },
        "item": {
          "id": "e7411fbc-f579-4fc3-a202-5137833ffc60",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "176b3c8d-eaa4-4ce1-978b-fe3cdd0557ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73a99cd-d275-4149-a110-eca546d4fd56",
        "cursor": {
          "ref": "2bb06483-3a83-4f55-b11c-6b0544e9709f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "50479a05-ea46-41a8-9ac4-0beb1937b41b"
        },
        "item": {
          "id": "a73a99cd-d275-4149-a110-eca546d4fd56",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9a168a99-eec0-4597-9c95-b921fa599f88",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b227f156-4d85-4fcf-b623-1ee624917361",
        "cursor": {
          "ref": "1f25c3a5-f9fe-4118-9d74-1fd103608b97",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e991caf6-d792-4759-a579-af1cfe602f09"
        },
        "item": {
          "id": "b227f156-4d85-4fcf-b623-1ee624917361",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "82a8c54e-33ec-4843-a18a-537f10c79615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c2cafb-8b9b-49f1-8cb9-7060cafa183d",
        "cursor": {
          "ref": "81e21a51-0890-4fce-ae95-1f9551fb3059",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dac73284-fe6d-4139-962a-4f7bd5bd9eab"
        },
        "item": {
          "id": "e9c2cafb-8b9b-49f1-8cb9-7060cafa183d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3df31fa9-02a8-4f55-9ed0-56222c0ac286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736e9446-2261-4167-ac42-cf12fcfe450a",
        "cursor": {
          "ref": "0a0e2c89-0e16-4cc7-a80a-3ce28d2a2086",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8f23c33f-ea84-44a1-abd8-351259545845"
        },
        "item": {
          "id": "736e9446-2261-4167-ac42-cf12fcfe450a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa08fb86-fe2b-45e2-bb2f-7503a89912f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12f70b7-fbcf-4382-ad16-f29da80f1f18",
        "cursor": {
          "ref": "b3fb784f-1e64-47bb-868c-58b0cf49c421",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6fba416e-6214-4217-bbef-5e0b858e3770"
        },
        "item": {
          "id": "b12f70b7-fbcf-4382-ad16-f29da80f1f18",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6ce1129a-aad8-46fb-8f09-520d96fea47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6130643c-6d14-41a6-a20e-a5c74d328d95",
        "cursor": {
          "ref": "741d18be-b96e-4018-b335-5d3f78a771f5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a3a9c867-c968-430b-9310-30c09fbbb4dc"
        },
        "item": {
          "id": "6130643c-6d14-41a6-a20e-a5c74d328d95",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e5002428-de65-46aa-8b02-54d8dafee236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad56218c-5e5a-4958-9c49-3058ec528a87",
        "cursor": {
          "ref": "c1ec1eea-3370-43c3-a59c-6b487f8fb4e9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "460895cc-36a4-4ec3-a46c-1ea07b4a94b1"
        },
        "item": {
          "id": "ad56218c-5e5a-4958-9c49-3058ec528a87",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b1d3dacd-168c-4199-b891-c5350b85f43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadde78a-7afa-4bca-a156-865179946d59",
        "cursor": {
          "ref": "e2b5e547-df1f-4f64-979c-b2082aca0773",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c7ba9718-3b26-4795-88c2-f60e694bdd1f"
        },
        "item": {
          "id": "eadde78a-7afa-4bca-a156-865179946d59",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5a092c5e-4c9c-4e2d-afe1-8457fd8f6e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89fc17d-612b-4d11-aaff-6d7e3eabaa59",
        "cursor": {
          "ref": "a485233b-1be3-4653-89b3-ff6c673f790e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b5271121-d358-4dde-8cc8-aa42b7247820"
        },
        "item": {
          "id": "a89fc17d-612b-4d11-aaff-6d7e3eabaa59",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "80dda934-5a52-4561-b9a2-d29b5f1d3dbb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "11b56bb6-9359-4bb1-920e-0f19f3a1db3f",
        "cursor": {
          "ref": "2c74245d-4747-4ce1-a68c-114510098f87",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c9893d85-e7da-41ea-aef9-fb1fdca4816b"
        },
        "item": {
          "id": "11b56bb6-9359-4bb1-920e-0f19f3a1db3f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e44f4b77-81b7-450a-899d-65f93d819c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abf9304-43f9-4559-ae39-b4ea42de4a72",
        "cursor": {
          "ref": "4e64632b-3d66-493a-9065-2bdbaf602d85",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "69148ff9-a9bf-4a40-a303-b30edae1f428"
        },
        "item": {
          "id": "3abf9304-43f9-4559-ae39-b4ea42de4a72",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d1e27974-b82a-43f2-9d50-e65db9e144cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3c1330-77a5-426c-9329-a4c41064e9bb",
        "cursor": {
          "ref": "aecdfec9-b562-4368-886c-d3433698e8b1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fd1a0926-5cf2-46c1-a117-32afbb0e31aa"
        },
        "item": {
          "id": "5d3c1330-77a5-426c-9329-a4c41064e9bb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "34a82d2c-0c94-480e-ac3f-ae9211d45374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900ad30a-797f-477d-a21d-c220dff0873d",
        "cursor": {
          "ref": "14ea93e1-71e2-499a-a1e0-1faaaa4e40f0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c1ea2b1e-38c2-45b8-870a-cdee63e343a8"
        },
        "item": {
          "id": "900ad30a-797f-477d-a21d-c220dff0873d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1bc8fe23-277d-4b25-9c67-02d7d0ac7bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa5f568-bab8-44b0-af7a-0245f6915e06",
        "cursor": {
          "ref": "e7680d55-1741-493e-9c18-ab85b05418ea",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c4756267-36d6-463a-b234-c34c678e4d6e"
        },
        "item": {
          "id": "aaa5f568-bab8-44b0-af7a-0245f6915e06",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e1e27fcb-12a6-4e9a-845a-470ecfb10bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dec0149-7ecc-451d-a805-30b53e254bf6",
        "cursor": {
          "ref": "0b8b307f-d75d-4343-bf8c-db30c68f4643",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9210e38a-a7a1-4733-9bd5-6acb3245906c"
        },
        "item": {
          "id": "7dec0149-7ecc-451d-a805-30b53e254bf6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8657b2fd-758b-4507-8116-f522d51fe139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e48a230-f9e8-447a-8a78-5dfe790cb77d",
        "cursor": {
          "ref": "607a721e-a13c-46e4-aed6-709bfc96eb88",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "022e3619-8950-4a97-9670-de903592f7a8"
        },
        "item": {
          "id": "8e48a230-f9e8-447a-8a78-5dfe790cb77d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0d31e22e-f723-4c60-b4ba-3231b572d81c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 156,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "77db46bc-cc78-4b1b-81df-eb23d1c92c93",
        "cursor": {
          "ref": "9c9d1d59-25a4-46d6-9a94-0e96e443168c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1e2c4479-3a16-420e-b757-8861ea04a1df"
        },
        "item": {
          "id": "77db46bc-cc78-4b1b-81df-eb23d1c92c93",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c28c440f-1a36-4f5f-b9ad-8fbf6da318d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f233f61-7fce-40de-9eb0-f31d44efd2fd",
        "cursor": {
          "ref": "7e40336d-7584-45d5-9883-982c1d9b3c22",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f6a7697c-da13-4fd8-8a0b-8ec5276a39f7"
        },
        "item": {
          "id": "5f233f61-7fce-40de-9eb0-f31d44efd2fd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cb2fbe4f-e56e-4a91-8dda-b20a84ab968a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c880aa-45a3-42a9-b56f-bb71e98605c9",
        "cursor": {
          "ref": "f98504d4-8bd4-42df-aa6c-a33b3212c87a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d0b6aa9f-0069-49b3-9f28-968b150dcdde"
        },
        "item": {
          "id": "97c880aa-45a3-42a9-b56f-bb71e98605c9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5c8d12a7-2ed0-4dba-a8f1-6e904770730a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21391649-e5be-48f7-8c32-8a598ad2ef3a",
        "cursor": {
          "ref": "d7911883-c8f2-4bc9-92ef-0515caf394fa",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7582050a-6ca8-4326-b902-c8e19d1b32e4"
        },
        "item": {
          "id": "21391649-e5be-48f7-8c32-8a598ad2ef3a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5f370d8-f9ef-4c28-bfec-3a80978064cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa330c8e-2933-4566-8b3f-b76b50db4cd5",
        "cursor": {
          "ref": "dd39b627-9c5f-4949-9f48-e24af37a38d8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e1f8e479-8895-4927-a020-e2ea9c62b36d"
        },
        "item": {
          "id": "fa330c8e-2933-4566-8b3f-b76b50db4cd5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9a2eeeb7-e2c4-4a61-a3ab-f2146db872a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae8e516-03f5-4aaa-bd5f-e155a78c2554",
        "cursor": {
          "ref": "43e029e4-af70-4c45-88e5-14bcbf0698c2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aa31a3b1-98a2-483c-b733-258bf8e66a29"
        },
        "item": {
          "id": "aae8e516-03f5-4aaa-bd5f-e155a78c2554",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3654affd-5d3d-40ae-a604-37bf6585c213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afc4e51-9815-4ce2-85f6-10bae5b5991f",
        "cursor": {
          "ref": "463ddefc-228d-4f42-9e25-1b85491b4abf",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fe658e5d-b3fe-4a1e-a89e-b7d0dc06862f"
        },
        "item": {
          "id": "2afc4e51-9815-4ce2-85f6-10bae5b5991f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bd17ce4a-4e93-4100-b34e-dad8f14c5f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852f6487-5e9d-49fa-8a6f-3315dab3d8bc",
        "cursor": {
          "ref": "f51c7a30-503e-491b-8a2b-5d2bb2a3c14b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e6c297c5-e7ef-452e-818d-77298fd5849d"
        },
        "item": {
          "id": "852f6487-5e9d-49fa-8a6f-3315dab3d8bc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb45dbb6-2348-43d9-a9e0-b6c17746b00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb1069d-dc2f-452e-a85b-98d012bb867f",
        "cursor": {
          "ref": "b3204623-959e-4d40-9e68-c65232c42d43",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "238b23cd-4a4a-4041-9241-ac852757b48a"
        },
        "item": {
          "id": "0fb1069d-dc2f-452e-a85b-98d012bb867f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "34e0aab3-a391-467d-8774-a1665c8d7dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf87e99-8a1e-4402-b5e7-40065e33288f",
        "cursor": {
          "ref": "565b3393-fb23-4e41-8541-30114a46fe36",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c42dfeaf-4e54-41ac-a9d6-108a7a1113cb"
        },
        "item": {
          "id": "ccf87e99-8a1e-4402-b5e7-40065e33288f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b1dff1e6-185f-4520-9a05-b37c3910c3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a24f91c-89a0-434c-9fb1-6300a1fff467",
        "cursor": {
          "ref": "e2b12c16-350e-4e2d-bc26-cf86b41bf7ad",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "efcfb876-fbcc-4f64-b200-9f47aa1cecb3"
        },
        "item": {
          "id": "7a24f91c-89a0-434c-9fb1-6300a1fff467",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "23fbb1c0-e2ec-41e7-beb6-0c49e5d607b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e62af9-9182-4ccc-90bd-687c911eab6a",
        "cursor": {
          "ref": "2005c415-349a-4631-89f3-2d4c403ce8b7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9f435be7-3662-4084-b8bd-da0a811c1176"
        },
        "item": {
          "id": "91e62af9-9182-4ccc-90bd-687c911eab6a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b3c22bd6-6f5f-4239-945c-98754f2f37a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92be46b-266c-4a72-89aa-8b886bf083b7",
        "cursor": {
          "ref": "bdbd5e81-7fa9-4d12-b45e-a4a34257a4b0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "84337bb4-98c9-4c41-94f5-f9be0f3d891b"
        },
        "item": {
          "id": "f92be46b-266c-4a72-89aa-8b886bf083b7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "32ba106e-a234-4361-8b75-c07c5c32dc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9293906c-b607-4609-8a55-4639a0c7b27a",
        "cursor": {
          "ref": "2a66b050-3698-4160-8863-28ad21321403",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d972eab5-cd0a-4ea1-9198-1f3f2bd6f230"
        },
        "item": {
          "id": "9293906c-b607-4609-8a55-4639a0c7b27a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "844f8154-2b9f-4a25-9fd3-4e59ed00b507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523a25d3-08ea-4eb6-a27b-c2ad0f33f1e4",
        "cursor": {
          "ref": "c2a5cd63-f61a-4735-8982-2604844fa61a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5f78dbf4-f675-4f6a-934b-c56938fccbe6"
        },
        "item": {
          "id": "523a25d3-08ea-4eb6-a27b-c2ad0f33f1e4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "27eff8ab-7918-4a08-9038-6cf175f30254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b342004b-72dc-412e-8807-f8b1d6c18fe3",
        "cursor": {
          "ref": "2007197d-c51c-420a-b5ea-eb56401ef4f4",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aaa9edeb-b608-411b-985f-b57dae0c8892"
        },
        "item": {
          "id": "b342004b-72dc-412e-8807-f8b1d6c18fe3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ed322e55-5dfd-45af-b9e9-8b9f21e7d7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f856c69c-87c7-4451-9254-b745fcbc7c6c",
        "cursor": {
          "ref": "9aeee594-8f7e-4bf9-a878-1784069e4e9b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "40dcdbb9-e913-4d47-9a02-b8f4a8c55f06"
        },
        "item": {
          "id": "f856c69c-87c7-4451-9254-b745fcbc7c6c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a56e7fb9-a463-4652-bd15-fd58773cee5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238c08f3-f8f5-4cb6-97ac-ff9657fce019",
        "cursor": {
          "ref": "5341b58b-322a-43c3-9011-01b0067a1e77",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "66489ad5-7bc8-4a58-997b-8909ca8a4a23"
        },
        "item": {
          "id": "238c08f3-f8f5-4cb6-97ac-ff9657fce019",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04e97130-8514-485c-a659-38b8c6c55cfb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "0b1a51b6-923b-4eb3-8224-b570643fbc8b",
        "cursor": {
          "ref": "24d90194-14d9-4858-8153-7d8d34082886",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d66bbd68-9acc-4e9e-ae55-c2debbbe5f57"
        },
        "item": {
          "id": "0b1a51b6-923b-4eb3-8224-b570643fbc8b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5983648e-b909-4ed3-a5f4-9834e0798611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0446a754-08ca-4918-9d5a-d2de986d5ff1",
        "cursor": {
          "ref": "fdeed593-7882-440b-b1c2-838c49329774",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1e6e411e-4193-4bad-9f0b-7b8ec80c6d58"
        },
        "item": {
          "id": "0446a754-08ca-4918-9d5a-d2de986d5ff1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "56494859-d4dc-45ac-9098-1b2c6ce3b468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6befb484-b794-4167-9b90-3c07efc42776",
        "cursor": {
          "ref": "5c30051b-db77-4002-8e29-202ee4f7975f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "32c854a3-efd4-4ce6-b9b9-b950a13c9a97"
        },
        "item": {
          "id": "6befb484-b794-4167-9b90-3c07efc42776",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5a728a54-c586-4d9b-b246-13de7926c26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b87f9f-fe81-411d-99c1-88dcb362ee49",
        "cursor": {
          "ref": "b23baba9-68b7-43eb-a2ed-11466bc2eb5a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9d91dd9c-c9d4-494c-8e11-e2ae3b314d3a"
        },
        "item": {
          "id": "20b87f9f-fe81-411d-99c1-88dcb362ee49",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "68319016-d34f-4225-bbb1-fd42f4f23855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33579f4-caec-44e6-ad28-ff31001f9ba0",
        "cursor": {
          "ref": "2dcb8b0b-eb97-42ee-8d41-487e0dbdac5b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "009add1c-231b-49d2-a3da-5ef7ea86f4ab"
        },
        "item": {
          "id": "a33579f4-caec-44e6-ad28-ff31001f9ba0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b5b5ecda-89de-48d2-9906-0039687b2177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989d19cd-1d84-4931-a5dd-c91f5681a17e",
        "cursor": {
          "ref": "46f7b127-b35f-4001-a442-9adb01d40bf0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "816d2275-be63-4227-b0eb-cfaeee4acd97"
        },
        "item": {
          "id": "989d19cd-1d84-4931-a5dd-c91f5681a17e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc416e86-82bd-4a6f-9baf-1f1d174bdced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d293c92d-ef06-4dea-8f98-1907e6fa5f45",
        "cursor": {
          "ref": "5f376022-3c32-47a7-b444-7e7b7347bd0c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6bec86db-2c6d-4737-8598-bbf4873d8960"
        },
        "item": {
          "id": "d293c92d-ef06-4dea-8f98-1907e6fa5f45",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a8650aa1-835a-4dda-97b9-7e7db5bb87a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621aa0cd-947d-49c6-ad87-4d4ee2361980",
        "cursor": {
          "ref": "9989b522-3f41-4d1d-a593-60639f150721",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0c5059bf-f5a0-4366-a87f-19497b345241"
        },
        "item": {
          "id": "621aa0cd-947d-49c6-ad87-4d4ee2361980",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4d411b92-7edd-4ad4-860e-62c43e649c74",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "4f3e7175-0d8f-45ce-8641-529806ae57f7",
        "cursor": {
          "ref": "c5e37ec7-2df3-43f2-b263-de01b91fe9c0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "89ba676f-a2ad-4724-8dfb-42c9ff759059"
        },
        "item": {
          "id": "4f3e7175-0d8f-45ce-8641-529806ae57f7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "520fd716-fca7-4e36-8816-a76036c928ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5b35ee-fb5a-4bed-b7d1-ec462de808f3",
        "cursor": {
          "ref": "ab90d60f-f2eb-4a9f-b9f8-8294f7ad6c15",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dd05cd23-3c11-48ca-a08d-9cdafcc7f2ce"
        },
        "item": {
          "id": "6a5b35ee-fb5a-4bed-b7d1-ec462de808f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f3ee6ba-f955-437b-893e-272ea3bb8c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4803f0c-96f9-4d85-a9e9-27979004197c",
        "cursor": {
          "ref": "b5bf60c5-9955-4165-b6e0-936c561123c0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c2d18887-f426-4faa-bfe0-9d858089d7a3"
        },
        "item": {
          "id": "d4803f0c-96f9-4d85-a9e9-27979004197c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "040a59a0-2ba4-4fd5-8635-43dd786e436b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc10670-9bee-45d0-846a-af5fd4d2a574",
        "cursor": {
          "ref": "715c8070-092b-4986-9285-c23709d17cc1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7416fce3-f3eb-42df-aeed-ab5a5c27767d"
        },
        "item": {
          "id": "9bc10670-9bee-45d0-846a-af5fd4d2a574",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e54ffba-4b40-4f0d-aecd-95cb7fc9e6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440767cb-0842-4944-80da-fc1e65343938",
        "cursor": {
          "ref": "e3044e91-01c3-43f5-a980-9baaa7adb8ac",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "db60a443-617b-4d07-9221-af2a06eb6fd5"
        },
        "item": {
          "id": "440767cb-0842-4944-80da-fc1e65343938",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "15bfc247-1684-4006-9936-c406c3bf6537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909ab83b-197d-407c-b5f4-91d58f9e3fe3",
        "cursor": {
          "ref": "37687278-404d-483b-8819-d8146417f048",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aa9ec8dd-1b85-4bf2-ab42-dd62ea6ea41b"
        },
        "item": {
          "id": "909ab83b-197d-407c-b5f4-91d58f9e3fe3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4d5491c-5eee-4c5b-b03b-6839266e8414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f06457-695e-43fd-b1e2-f2ce2fa7cd29",
        "cursor": {
          "ref": "b1672a8e-9c9b-4314-8222-d08e892705b5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f5260652-ff9b-41a9-b61a-2e8bd7ecadef"
        },
        "item": {
          "id": "61f06457-695e-43fd-b1e2-f2ce2fa7cd29",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "66c9adde-6ca7-4f01-abdb-b83f7b6cbf73",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "25c24044-a626-4ca5-9e8a-5711fb3f3644",
        "cursor": {
          "ref": "70e144f8-1f15-414d-b0bb-0bb85e0fe712",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "672489a2-f2ca-458b-90e9-c1c7881de1d0"
        },
        "item": {
          "id": "25c24044-a626-4ca5-9e8a-5711fb3f3644",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "af8eaa09-e1df-49ae-96ff-37e894f853e3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "953178d7-2cb1-4fdc-8f75-0a25bcd28783",
        "cursor": {
          "ref": "efabfd1b-e0c3-40e7-8b7d-52b4e86a7aa9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d1850cef-8691-42ab-9998-95a08f2ce5bd"
        },
        "item": {
          "id": "953178d7-2cb1-4fdc-8f75-0a25bcd28783",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c8c29242-5b7f-4cde-b173-ce3ba1554720",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "d5501642-3f24-4f32-b268-6a686fdb9e69",
        "cursor": {
          "ref": "064f05d9-212c-417c-989c-36378b5b4f1d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d85e8441-726f-4cd6-b9c5-c1a1e4f0c73a"
        },
        "item": {
          "id": "d5501642-3f24-4f32-b268-6a686fdb9e69",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ccc0e3fd-bd03-47a2-ad2e-e6ff0f9ef3f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "a7122562-dad0-4caa-9106-bac2be7fe563",
        "cursor": {
          "ref": "c0f14833-9167-4062-8d4d-6ee17832532b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f389325f-fc79-4fe4-b029-5ef068e0d3fd"
        },
        "item": {
          "id": "a7122562-dad0-4caa-9106-bac2be7fe563",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "291239cf-8dc3-4571-83c2-92011f1afd67",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "6ba004b7-c432-4899-aaff-8f0cfa8d6686",
        "cursor": {
          "ref": "0fd5989f-70d3-4ab0-b392-459945963d5d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "58676d1e-f0fb-4f8f-a4e5-3bcb8d2cbf2d"
        },
        "item": {
          "id": "6ba004b7-c432-4899-aaff-8f0cfa8d6686",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ef951e69-3b40-4ad9-8227-43ead689debf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "6592d65f-e1ef-4d71-952b-ba534b2cc878",
        "cursor": {
          "ref": "7b3c5980-6fe9-4a89-aa64-cbf7f397cf34",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "512a41ed-f5ce-4c6e-a601-f6a6bdf93559"
        },
        "item": {
          "id": "6592d65f-e1ef-4d71-952b-ba534b2cc878",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "790ae2c5-7b13-4522-8024-11f0ac99697a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92a647b-bd71-4d44-a0c8-30225b71067a",
        "cursor": {
          "ref": "cadd2ff8-5882-4783-b6db-e273dca49146",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cb6fa77b-58ef-4098-bc88-ac016271cee5"
        },
        "item": {
          "id": "f92a647b-bd71-4d44-a0c8-30225b71067a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8a876bed-0e5f-407c-b2d6-f0ee258594c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd95592-e1fa-4c1d-a8e5-c7297cac5aa9",
        "cursor": {
          "ref": "54fb57a2-b2b5-4124-a491-d6fbcaeb9c38",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c0f9852b-bbdd-435d-8a05-0014d3a838a9"
        },
        "item": {
          "id": "ccd95592-e1fa-4c1d-a8e5-c7297cac5aa9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3facba92-64b8-46b2-bd90-5f560e48f0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c813ad51-77f5-4397-8f6a-df02e5a4eaa4",
        "cursor": {
          "ref": "9d3c7c4a-1fb9-4063-b221-0a9c0da4555b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d4130328-ed88-48c9-a73a-9def6c6057d9"
        },
        "item": {
          "id": "c813ad51-77f5-4397-8f6a-df02e5a4eaa4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "437d99f1-4a00-446d-87e7-16c3a1dd7a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dea85fa-5548-4a6a-b3cd-4198b54eaded",
        "cursor": {
          "ref": "449e77bc-1dc2-438c-a017-7c902196bd50",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5ee21d8c-94a1-4d7a-ac09-3b51eaadc223"
        },
        "item": {
          "id": "6dea85fa-5548-4a6a-b3cd-4198b54eaded",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "906879b1-9771-4b14-b932-9b04d2cc09fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f577e12-e7e3-4d36-9d4f-968513d0faca",
        "cursor": {
          "ref": "86e8d6a2-bd7d-4017-82e3-7a438456f853",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7e573761-08ff-4c3b-bc17-f39fa7b591a6"
        },
        "item": {
          "id": "8f577e12-e7e3-4d36-9d4f-968513d0faca",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0b30bceb-1fd0-4ed9-93a5-602795d48a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b568eae5-d772-48d1-97c8-d8202ff0a215",
        "cursor": {
          "ref": "1a9af3de-48b7-4cdb-9cca-ae8a0cdbcd38",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0815d812-f0fd-431a-b045-52b1ba2a333e"
        },
        "item": {
          "id": "b568eae5-d772-48d1-97c8-d8202ff0a215",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "41da5555-6abc-46ef-9a8e-d2d87c9804c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8a6f4c-c99a-4c1e-8cf6-ebd048c07721",
        "cursor": {
          "ref": "0aa43e8c-7417-47dd-9251-37c9d3d58060",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9e57ae20-546e-4753-86cd-cef4fdfac832"
        },
        "item": {
          "id": "2c8a6f4c-c99a-4c1e-8cf6-ebd048c07721",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "734c6b6d-3098-4d98-9a90-9656a2d466f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8f169b-8988-4fee-88b3-68fbb0edc9d9",
        "cursor": {
          "ref": "2f3097d7-8747-4b84-85e7-d5c6a25c21b2",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "db6498cf-f069-4ed0-9c3b-9ec6c18d9c75"
        },
        "item": {
          "id": "7c8f169b-8988-4fee-88b3-68fbb0edc9d9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "af95c7ac-677a-4598-8c40-1e7488fd8032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de96d2-18c5-470d-a536-e561f752dc24",
        "cursor": {
          "ref": "7a30fb53-1dd4-48c0-8fab-fe87bf3ba522",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "98ce4b73-fd1a-46da-ba14-2f8bef08bca9"
        },
        "item": {
          "id": "c9de96d2-18c5-470d-a536-e561f752dc24",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3d1f60e2-9c81-4f51-8887-c1b6bec42894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16437b19-c0bd-4089-bdf4-3df820b779b7",
        "cursor": {
          "ref": "3a6e20f4-2cc4-418b-b140-53605a9d562f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "99b5f92f-2a81-429e-bd79-361c4b4bd6d6"
        },
        "item": {
          "id": "16437b19-c0bd-4089-bdf4-3df820b779b7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4bfcdeb0-c9fe-4a42-931d-086ada4a01a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de33936-73c3-4dd4-88c6-d11ae11288f7",
        "cursor": {
          "ref": "18a5fa5a-3455-4486-b6f0-e8d88029c947",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d9f118f9-110c-4cd0-a954-d20120dd83d8"
        },
        "item": {
          "id": "3de33936-73c3-4dd4-88c6-d11ae11288f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "32aba0ab-2eec-4303-a2e2-ca6e537414ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0084b7-d8d0-4427-8c89-cd03d409f7dd",
        "cursor": {
          "ref": "86c4b891-4b9a-4540-9b49-273d799a2dd8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5a7a349d-ed7b-4eb6-95ac-d9236538886a"
        },
        "item": {
          "id": "ba0084b7-d8d0-4427-8c89-cd03d409f7dd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bafd37b6-6be5-414a-93f6-e700a0ec3cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2872034-6824-4d61-9d45-41b5bf830c37",
        "cursor": {
          "ref": "73b82c3d-0743-470e-9b97-61023ada4859",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3c3872eb-d4fa-4605-b7dc-eaed508e901f"
        },
        "item": {
          "id": "b2872034-6824-4d61-9d45-41b5bf830c37",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c4456106-741a-423e-90ee-a7bfb748bd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c70d80-5ba7-4e0a-bcac-e4c05534ff48",
        "cursor": {
          "ref": "34c79acc-d925-42ca-8218-0186354b91e1",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9662265d-7f3b-4bb4-9da3-f81d896ac2b4"
        },
        "item": {
          "id": "f2c70d80-5ba7-4e0a-bcac-e4c05534ff48",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ea9f35c2-aadf-4819-a9fa-1bb3095a296d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c97c40a-6a8e-44ee-9124-26f36102321b",
        "cursor": {
          "ref": "b8f9e8f2-6a09-44a0-b26e-9ea119c956fe",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "01fc165b-f37a-48a1-9f51-e599a8c89261"
        },
        "item": {
          "id": "4c97c40a-6a8e-44ee-9124-26f36102321b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4d2e3327-0100-4b40-ad0b-13dc5f6dba8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b109723-ccaf-434c-b668-c4ae09603fdd",
        "cursor": {
          "ref": "e0635302-b9ea-4f65-a07f-34cca8374000",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1364587c-3a3d-47c5-a324-2b9fb9c37f4b"
        },
        "item": {
          "id": "9b109723-ccaf-434c-b668-c4ae09603fdd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1bd39df4-bbe4-4198-b4f6-fa953bc2f8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91e1b9b-b585-4bd6-abf1-b4a5d7013614",
        "cursor": {
          "ref": "ef7af92e-0758-470c-a4d0-1ffb754c0074",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d2111942-c6ab-4462-ae13-1e9d9f0a7ded"
        },
        "item": {
          "id": "e91e1b9b-b585-4bd6-abf1-b4a5d7013614",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6d7b396e-a8f3-4ac1-b9d7-98876fd21a34",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "0f45d1b1-5685-4d80-bbde-7103b41c59d7",
        "cursor": {
          "ref": "8e0cd17a-c796-4bdf-8634-191147979b12",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "872def32-ef5c-4e8d-8b51-286310523932"
        },
        "item": {
          "id": "0f45d1b1-5685-4d80-bbde-7103b41c59d7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9a9a491f-341c-4595-b049-1653d0b3a9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b629fb-3775-4450-a78b-fc717fb511e2",
        "cursor": {
          "ref": "67aa0de6-539d-4610-963e-b2c4f3e36b0b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c6ab10d5-4bec-46c0-bbc0-9a4ca30e4282"
        },
        "item": {
          "id": "28b629fb-3775-4450-a78b-fc717fb511e2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c22ebdd2-cfa5-4f7e-a0f9-7a9eb89876d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249c7683-1fd5-4dcc-b630-8ebd614dffde",
        "cursor": {
          "ref": "1df2a216-d4c9-4297-ae4b-1f3e7bbf9088",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "95d91557-4bd9-44d7-bd95-0e3ce0bde899"
        },
        "item": {
          "id": "249c7683-1fd5-4dcc-b630-8ebd614dffde",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3b124953-1d07-450a-be6b-48eda76b88a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b61bc-34b6-4d94-ae5c-1026ee64a65f",
        "cursor": {
          "ref": "5327e3ef-aa93-48e2-b0e1-8db6f2b11312",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0bbc116d-9415-49fa-9f6e-9077cd44c6bb"
        },
        "item": {
          "id": "cc0b61bc-34b6-4d94-ae5c-1026ee64a65f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "be97a427-936f-4211-a4bf-429a49e602ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e511483d-10de-4125-8479-6108159f51a2",
        "cursor": {
          "ref": "6410f30a-deff-4718-9095-c7db2d7c9fef",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "48c3af69-50f7-4baa-8032-3d041e9f8a83"
        },
        "item": {
          "id": "e511483d-10de-4125-8479-6108159f51a2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "75770991-5861-4f45-a7db-4a929b78af9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f404938-cb5c-45a0-9aff-ea2fe6e45ab4",
        "cursor": {
          "ref": "cad0eafc-cf1d-4a0e-a799-8e02591e5fc0",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e56fc62b-4d2b-4253-8842-e410377f734c"
        },
        "item": {
          "id": "8f404938-cb5c-45a0-9aff-ea2fe6e45ab4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "03de6c8b-3eba-4dbb-b4a8-18bd32479cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a84db4-cc9a-4585-b6fd-68eb4a311150",
        "cursor": {
          "ref": "b35632a7-d759-4464-a3d7-345507df179f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6aecae57-0e69-49e0-aa40-bcdf4f7264eb"
        },
        "item": {
          "id": "41a84db4-cc9a-4585-b6fd-68eb4a311150",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "746cc659-c87e-48e3-a1c0-6e6f2891d9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e6f722-8cb7-4098-a233-3fc5ab8812be",
        "cursor": {
          "ref": "bf4ba98f-ff70-405b-bcf1-9bab9a009c5d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a9c7b3e-71de-412b-a195-1beac64f16df"
        },
        "item": {
          "id": "d5e6f722-8cb7-4098-a233-3fc5ab8812be",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "07558524-8abb-41be-9782-26d89487e3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfb668f-ff7c-4baf-8230-8cafa7c88b9b",
        "cursor": {
          "ref": "99ae2c64-f515-473c-a95b-d00a440974e5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f002253d-de13-4b0d-b22a-d95017ea29a9"
        },
        "item": {
          "id": "bbfb668f-ff7c-4baf-8230-8cafa7c88b9b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8329715a-58ff-4c5d-b4f8-88e19c7c6f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91427f0-76ee-4a1d-bc3b-4ddba79694c7",
        "cursor": {
          "ref": "f4359005-af60-4f23-b8d1-5fa6f1ec846d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7a2c5901-31e1-4c01-9c76-a54a4ec6d502"
        },
        "item": {
          "id": "a91427f0-76ee-4a1d-bc3b-4ddba79694c7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0476df41-9766-4997-9595-768a757ca74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc10624-a33f-4da9-8f0a-4fffed7888e1",
        "cursor": {
          "ref": "01aac21a-ac61-4e9f-98bb-ed1ff4e20c5f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "167c20c7-666d-4fc9-b164-6b4b1200ded2"
        },
        "item": {
          "id": "8cc10624-a33f-4da9-8f0a-4fffed7888e1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e1c5475d-acbe-4e5b-b17b-e8e87539bb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b379c0e-530c-450c-bce4-bca5ae7c3a24",
        "cursor": {
          "ref": "06b02f70-7944-4d4e-8b77-0f6754d210c2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e0203857-f37c-4787-979f-64c5e3a4b643"
        },
        "item": {
          "id": "4b379c0e-530c-450c-bce4-bca5ae7c3a24",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a1a1bf8-f3ca-4745-97f5-abe21941a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239ee4f9-09d5-4b50-b14c-30c0374f68e8",
        "cursor": {
          "ref": "ae734660-be6d-4dc4-857c-3743acaccd7e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3ad43dbb-d38e-4109-9888-27e470226ce8"
        },
        "item": {
          "id": "239ee4f9-09d5-4b50-b14c-30c0374f68e8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "14fb5ff6-a48d-4e8a-9c0d-94eb0bd0c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949faa03-5b11-4679-a837-4ade2badc8dd",
        "cursor": {
          "ref": "647aaf8a-ab6d-4a5f-9939-32c2d09038a6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d8972845-b615-4bba-a08f-c9ff110632a4"
        },
        "item": {
          "id": "949faa03-5b11-4679-a837-4ade2badc8dd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9a428bb0-1550-4cc9-88cb-1f818ddf72b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc582f06-6c6e-499b-880b-525038b81c5d",
        "cursor": {
          "ref": "7274e67b-11a7-4ed3-95c3-f54e78ca5d92",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3b5a2cfd-bad9-4488-bf8e-412a457f9172"
        },
        "item": {
          "id": "cc582f06-6c6e-499b-880b-525038b81c5d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a9be9b4d-27bc-452b-aaa2-a6d5a96a7ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90677015-db4d-4d89-9433-443b2243502f",
        "cursor": {
          "ref": "c47acf31-0fa4-46e9-9f41-91593834cad0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "19ba8b70-9ae7-4d98-b573-b0b93dd66c6c"
        },
        "item": {
          "id": "90677015-db4d-4d89-9433-443b2243502f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "367fe8ba-7a2b-40f2-b271-34b6d16aabdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0c101e-3d03-46bc-8fae-5b1a7d78978e",
        "cursor": {
          "ref": "d9f363fc-5fef-4a8a-8855-735493e1f655",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "38d1734e-9461-4772-a176-cf2442b6fc26"
        },
        "item": {
          "id": "1e0c101e-3d03-46bc-8fae-5b1a7d78978e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "adff7c38-8a45-48b1-a25f-a08f18608e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa776772-1c68-48c8-bc20-69daa6774b7a",
        "cursor": {
          "ref": "09871ed9-0f83-418b-92e9-500b83e9ab8a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3d1683f2-4e1f-4fe0-93d4-68305763ae6a"
        },
        "item": {
          "id": "aa776772-1c68-48c8-bc20-69daa6774b7a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6541e468-9701-4ca5-afc4-bd02bcc2e4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c376e8c4-938f-4189-a861-dbdfa3668e82",
        "cursor": {
          "ref": "7a8e4596-1a57-4360-833a-d5c493f1d074",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "804986c3-8ad4-42e3-95d7-bc8f56d0e0bd"
        },
        "item": {
          "id": "c376e8c4-938f-4189-a861-dbdfa3668e82",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "81ec1477-a91d-482b-be07-8b73b2945e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5417a79f-cbb0-4e7a-8f3a-fad5c8b75cdb",
        "cursor": {
          "ref": "e1b482cc-6ac4-4ab6-ab10-b8e2df827599",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "975f6088-5b3e-48ff-ba0e-538670e72ea1"
        },
        "item": {
          "id": "5417a79f-cbb0-4e7a-8f3a-fad5c8b75cdb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "33384a13-4bfb-4c7e-a747-feae99307b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca057fa-0ed0-49a1-b91d-9f6ff2d872f6",
        "cursor": {
          "ref": "7ab4cc34-c3b1-4379-b46b-9ba3142ec185",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12b5d64b-aa69-4f23-a6ee-e8a4a9372a84"
        },
        "item": {
          "id": "eca057fa-0ed0-49a1-b91d-9f6ff2d872f6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "229f5fab-35e2-479c-b2c9-6d2823f05006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bbac97-434f-4705-a0ee-3c0974ba861f",
        "cursor": {
          "ref": "a526301a-5051-419f-acb5-155f22372511",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4b60ac70-ceaf-4c93-b2ae-99f28629afb6"
        },
        "item": {
          "id": "c1bbac97-434f-4705-a0ee-3c0974ba861f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a7020fde-e72b-4bd4-89e0-23381fef3f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9951d2-e8ba-493e-af41-0b5f3d5034b9",
        "cursor": {
          "ref": "a7142ce4-0d21-4ca9-848e-8b26fd925d5a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e9961cfc-4607-44e4-8260-1ed82831ac10"
        },
        "item": {
          "id": "0d9951d2-e8ba-493e-af41-0b5f3d5034b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "efaaba74-5252-4632-a667-2a0c44fd71c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f80889f-3f94-4d63-ae52-2b54aed6411c",
        "cursor": {
          "ref": "0ec3ec44-1834-4185-acb6-3511a265be02",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "56eeed34-c042-4468-a7f1-19053ba6574c"
        },
        "item": {
          "id": "4f80889f-3f94-4d63-ae52-2b54aed6411c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6dd6e1f0-6745-4d30-839e-0bef0f733f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135419ac-ee2d-48be-b155-514ed3193d6b",
        "cursor": {
          "ref": "93206a10-5746-47b7-91a2-4cf47882ddc5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e2b364b7-9136-46a4-b89b-ed9ee70023e4"
        },
        "item": {
          "id": "135419ac-ee2d-48be-b155-514ed3193d6b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3019b089-b38d-4fc9-b9bc-d8f4e5c9e1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee096df0-4e75-469f-bf22-457568101036",
        "cursor": {
          "ref": "4f6e2d6f-9575-4960-8685-8656cc22b33c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5ea38079-9ec8-40b9-b7e8-2d4431176c5b"
        },
        "item": {
          "id": "ee096df0-4e75-469f-bf22-457568101036",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "20093e86-9d96-4e75-80f1-958b616ea2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cfc212-945e-4594-a7d2-c61cb091dfff",
        "cursor": {
          "ref": "bf6efd44-27cf-49e7-82c5-9b04e080b94b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6ea25b3a-cdb0-4450-9f21-5c93e67e42bd"
        },
        "item": {
          "id": "37cfc212-945e-4594-a7d2-c61cb091dfff",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e9006a25-2820-4a71-82cc-fd8db0489f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696516c3-eb63-41bd-8ca6-16c143e7220d",
        "cursor": {
          "ref": "f66fd14e-6dc5-4c8c-a001-e76c7cb4fec7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6104e019-d088-4fe3-9449-aec2f760abd5"
        },
        "item": {
          "id": "696516c3-eb63-41bd-8ca6-16c143e7220d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "eaaa8f05-fcb9-4d5f-9e81-8d81c65f6b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a14a270-989b-432b-bedc-334543428c57",
        "cursor": {
          "ref": "c78eabe1-6cbd-4c21-8bf4-be1672975906",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "13cb193c-8b63-4ca3-b19b-e5244ae76175"
        },
        "item": {
          "id": "8a14a270-989b-432b-bedc-334543428c57",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "05cfe582-830c-4a09-a584-ab91a3453585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26cb8da-d7c7-4522-a24d-7e5df759cdf7",
        "cursor": {
          "ref": "6999fcdf-edd4-4e1e-a4c0-bb3288eb4a47",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0a28d9be-2675-48ab-a167-ba567200b1a3"
        },
        "item": {
          "id": "e26cb8da-d7c7-4522-a24d-7e5df759cdf7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6d677242-4c58-41f5-a3d1-468b5ed6d66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbd6f1c-0a50-4817-ac6c-0625b279bd6c",
        "cursor": {
          "ref": "3c6d57a6-e207-4073-a328-458eaf54b0d2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fd17e3b6-418f-40ef-ad34-c0a38390919e"
        },
        "item": {
          "id": "4dbd6f1c-0a50-4817-ac6c-0625b279bd6c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "362556d6-a0f5-4bff-ba25-3de0dc0d60da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c31fa4-815f-4d1b-9589-a59cd70320b1",
        "cursor": {
          "ref": "6983e937-15bf-41cd-9554-3c443d54182b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "610d6787-f4a1-4b4b-bc0e-f8cd3f3bd4d7"
        },
        "item": {
          "id": "39c31fa4-815f-4d1b-9589-a59cd70320b1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "790188be-127f-4bfe-94b4-1e5a825ee828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de3615d-3b9c-4936-bcda-1d3799c7bf13",
        "cursor": {
          "ref": "cc37dfb3-1adb-42ad-a25b-aac39c75e9b5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d91d196c-951e-40d5-898a-41303e6997f0"
        },
        "item": {
          "id": "3de3615d-3b9c-4936-bcda-1d3799c7bf13",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "347b6e83-c6cb-4200-859a-ed8f12d73d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63186d53-6e5e-4dc0-9e4d-06376e9b9f97",
        "cursor": {
          "ref": "9b284999-6cc3-4f18-9902-51f8e2b05140",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5d218c23-60a7-4bc0-8903-4a11cd20235c"
        },
        "item": {
          "id": "63186d53-6e5e-4dc0-9e4d-06376e9b9f97",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6a9af135-53ca-4929-96eb-176af7311734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a52262-504c-45c5-8541-b5ef36dbedff",
        "cursor": {
          "ref": "018d949e-e46c-4d34-9358-68b3a3d03752",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5ffaab20-cba5-4db5-9b5f-e69ff8e203ed"
        },
        "item": {
          "id": "43a52262-504c-45c5-8541-b5ef36dbedff",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "264d06ee-b974-4958-a357-900d18dfa38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8008b00d-58be-4a93-93fa-88db7e345d89",
        "cursor": {
          "ref": "10f26ac8-6314-46f1-90b1-f0eb4507f9ae",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "49716805-2cd3-4afa-b7c0-e34a91a5529c"
        },
        "item": {
          "id": "8008b00d-58be-4a93-93fa-88db7e345d89",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6a288182-6e08-47c1-b66a-61bbdfa84ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f062760-fb46-4862-8985-bbd128b0056c",
        "cursor": {
          "ref": "85e93951-53c8-4530-842f-a6c0e4ab612c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ffc9538b-88bd-4c59-a8c5-27546d090fcd"
        },
        "item": {
          "id": "6f062760-fb46-4862-8985-bbd128b0056c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1601d395-e2d7-4986-a43e-1620b666e966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddc710a-5678-4155-a603-beeee1c9846f",
        "cursor": {
          "ref": "f9de239b-8576-4c7f-bc45-eac3b19121e7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "26d1f2b4-f10c-44ae-818a-a6c4a367c728"
        },
        "item": {
          "id": "3ddc710a-5678-4155-a603-beeee1c9846f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "09fff222-fb28-4316-b7cd-a5cf349b317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d33321d-c2e3-465e-8b54-9a1cebc48387",
        "cursor": {
          "ref": "e1ecd108-4787-4a46-92fd-db07ba572608",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5861bd30-b03c-4eb5-8867-4de7b9061ff4"
        },
        "item": {
          "id": "7d33321d-c2e3-465e-8b54-9a1cebc48387",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "121274aa-9975-4494-a890-024191aff2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f34ea7-6a17-4319-bb03-cdd63a12b94b",
        "cursor": {
          "ref": "3ddd1174-6b13-41ce-94c6-a069a09839ba",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4a75d983-2b8f-41eb-bf6f-3a493d97ed96"
        },
        "item": {
          "id": "a9f34ea7-6a17-4319-bb03-cdd63a12b94b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "146a4173-ff7a-4e52-9d68-d1e9ba86adae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cde5de-b6e3-40c9-a584-431935c75993",
        "cursor": {
          "ref": "c286b5f8-0f31-4069-8730-17251450be7e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ccd6a245-d268-492a-aa37-d9fcb0b803f6"
        },
        "item": {
          "id": "17cde5de-b6e3-40c9-a584-431935c75993",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "676c756f-6a45-4473-bdb9-bbf44d6661d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63b2e63-e9c3-4455-9fba-79ff7e31ad51",
        "cursor": {
          "ref": "08ee90f6-078a-4f53-9785-ff5113d817ab",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "71251b63-90d5-41e8-8d3b-195b702ff46b"
        },
        "item": {
          "id": "e63b2e63-e9c3-4455-9fba-79ff7e31ad51",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3bec87ce-0d74-42d9-ad5b-8dce5fa73a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a1c7d5-907d-4b39-a2f0-194212bdb1df",
        "cursor": {
          "ref": "b55bb438-f4a7-48d6-a2e9-dcfce828562e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "45388a86-6e8b-4013-b1c9-6ce8540176a8"
        },
        "item": {
          "id": "06a1c7d5-907d-4b39-a2f0-194212bdb1df",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5d100238-27c1-4a29-aac8-61b9ebfd0f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1150ed9d-a3ff-469f-a5b0-5d9b9da72c76",
        "cursor": {
          "ref": "74420885-440f-48ad-99e5-a037d9d3846c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4cac9fb8-a136-43d6-897a-cc74735f49ec"
        },
        "item": {
          "id": "1150ed9d-a3ff-469f-a5b0-5d9b9da72c76",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1befc138-0c1f-4b6d-93ea-18100e231283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd79f47c-d67b-4fc9-ba92-e83279d42127",
        "cursor": {
          "ref": "c69a54c2-97e7-42cd-bf19-ee23f1d88059",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e585f222-4dd5-4cb1-953a-d8527f84131b"
        },
        "item": {
          "id": "dd79f47c-d67b-4fc9-ba92-e83279d42127",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f48b620-6c97-40c4-992e-26a029242e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aaa713-37a6-4273-8209-75ec0899a88c",
        "cursor": {
          "ref": "ecda631d-1210-42bf-ab61-94f5321b0169",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ba949aa6-4be5-40e6-bab7-fa3d7eca2737"
        },
        "item": {
          "id": "f6aaa713-37a6-4273-8209-75ec0899a88c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "53baeeb3-be1e-45cf-8e6c-14dada0ac683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe8618-77f8-4f06-b565-7bcb85cccf5f",
        "cursor": {
          "ref": "09f49294-ae84-4432-8d3a-2244b19d62ca",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e1471b71-68e7-4fda-9ea4-340d82e51732"
        },
        "item": {
          "id": "fafe8618-77f8-4f06-b565-7bcb85cccf5f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0897369f-7f54-4f0a-a24a-6b25eef7dec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b337b230-7f3d-4e22-99e6-8f2da99d2c8c",
        "cursor": {
          "ref": "f44a646a-fe58-4740-8a34-f6505189c960",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "caca4458-094f-4d63-b550-41df9a2d61da"
        },
        "item": {
          "id": "b337b230-7f3d-4e22-99e6-8f2da99d2c8c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1cf4d02a-1ff4-45ba-b121-5452963143d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0af187-5ff7-4685-accc-2ad63f600356",
        "cursor": {
          "ref": "b223449c-243a-4de0-9533-c1bf03adfe0c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "14a5f1ba-9a5a-43e7-880a-61e38e19bfd2"
        },
        "item": {
          "id": "9a0af187-5ff7-4685-accc-2ad63f600356",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae21338c-719d-4a19-bdf2-190232f52571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8a15a8-e5d2-4530-b8b3-34f1ef12e737",
        "cursor": {
          "ref": "c1a34397-e49e-4d80-85ff-0bcfb45f4ff8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dbecca54-2b97-4282-a7b7-85443602348b"
        },
        "item": {
          "id": "cd8a15a8-e5d2-4530-b8b3-34f1ef12e737",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ccaf1b3d-9d1e-457e-b6f6-eaf235cd5bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4088dd-a65e-42a8-a873-2055bb9d1f72",
        "cursor": {
          "ref": "3859fd95-f24f-425d-a4f3-7c8f6484d580",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d1b6694d-8519-4b46-a218-c8440eb44b89"
        },
        "item": {
          "id": "5a4088dd-a65e-42a8-a873-2055bb9d1f72",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f4a9e60e-8f09-4a65-99ad-67a5e07bd44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47944a93-0534-4c92-96ed-3575248d9b6b",
        "cursor": {
          "ref": "d4f59ce8-7065-4712-8b5d-d528211f08d6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e365a089-8b03-4095-86c7-15f7125de159"
        },
        "item": {
          "id": "47944a93-0534-4c92-96ed-3575248d9b6b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "942b98ec-00f1-4384-a9c1-33ff9e56ad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cae38a-c81c-4301-8704-b05413a44a06",
        "cursor": {
          "ref": "9c14ad56-e8e9-4baa-9e0c-4217ad0e0dda",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d30e109c-e694-4b76-af54-eade1d2efade"
        },
        "item": {
          "id": "95cae38a-c81c-4301-8704-b05413a44a06",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "436795b3-b190-4fcb-bf97-c9eaff97fe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f28835b-e09c-4fff-9a31-12049eef4480",
        "cursor": {
          "ref": "6a13ba21-ae7e-4ae1-9ee3-8ee44d134fb6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c48fb7fc-2a2a-42a2-ac53-84e4e7eaded7"
        },
        "item": {
          "id": "2f28835b-e09c-4fff-9a31-12049eef4480",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9fb30063-a5ee-487a-a801-2ba5501ca39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012b26b9-531b-44aa-bc7b-d64b4bfafef2",
        "cursor": {
          "ref": "aec516ba-00e5-456d-80ea-7f332ba346db",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f9406393-be4d-4fb6-a055-ef33d86147c1"
        },
        "item": {
          "id": "012b26b9-531b-44aa-bc7b-d64b4bfafef2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "553a6b5a-06a6-42c5-9494-798c181656f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5d33c9-e4eb-4fec-957b-a025ca5288fc",
        "cursor": {
          "ref": "9f342d11-c617-4e0d-8887-18b7791770f2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a50845b4-13b8-4de8-8995-1bc82e721651"
        },
        "item": {
          "id": "6e5d33c9-e4eb-4fec-957b-a025ca5288fc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "303162ae-f0e9-4ec5-ad72-5a69b1db9754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf8def9-7939-415b-b5b3-89c0c6d63c00",
        "cursor": {
          "ref": "ed517a58-426a-4c5e-ae25-a1bb95971982",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "28daddbf-2051-4b24-a76f-f25d59ff7926"
        },
        "item": {
          "id": "ddf8def9-7939-415b-b5b3-89c0c6d63c00",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2d95d3ca-e4e1-473a-81ea-c3d4f7637e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d914c641-8ae8-4a1b-a9e8-e095cd9e6f3a",
        "cursor": {
          "ref": "417f38d4-5046-47c4-b16d-bcf82e2ed386",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5f8dea7e-39b7-4912-a4a6-76aa035bbd2c"
        },
        "item": {
          "id": "d914c641-8ae8-4a1b-a9e8-e095cd9e6f3a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5b920564-5d79-4038-bf03-4bb44862cddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bdd097-ba35-4e66-9e16-862439182202",
        "cursor": {
          "ref": "091c13d1-5f8b-4762-81f3-8bcefa22a7e4",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "40618332-36b2-423c-9e19-3928a285235c"
        },
        "item": {
          "id": "c9bdd097-ba35-4e66-9e16-862439182202",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d65e6557-5b8e-4a0b-b25e-dac096a35487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cb8345-b51a-4d64-95ee-b269906b9fbc",
        "cursor": {
          "ref": "47bbe25e-64e9-4437-9fd0-d26295a4e819",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "499962d5-bb12-4919-a544-f8dc1b46a16a"
        },
        "item": {
          "id": "77cb8345-b51a-4d64-95ee-b269906b9fbc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1f55e2c9-984b-4c5e-89d1-65df0849cfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7f912c-ac33-4e05-b45d-c2fd95b3593d",
        "cursor": {
          "ref": "d0d78ad2-b2cc-4b25-b988-2b7b48ed75cb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4b2cc7a7-eefe-4e6d-bc61-cc4a7fe32a29"
        },
        "item": {
          "id": "3d7f912c-ac33-4e05-b45d-c2fd95b3593d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "61b474af-3c54-45c8-b2ea-23d40774ded2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67587f94-490e-4cad-93e5-ad2784550232",
        "cursor": {
          "ref": "075965d5-daef-44ce-b2ae-85278ab0cfca",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6d6a5e5a-a739-4af1-b720-7c3772fa607a"
        },
        "item": {
          "id": "67587f94-490e-4cad-93e5-ad2784550232",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "436a066b-3c75-4c41-bb6c-b364e18a9035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50170526-388a-4a31-a8b2-be43b68ab57e",
        "cursor": {
          "ref": "591e04dc-792a-49c4-86ad-cb6c4736b957",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f94bab82-424a-4f37-ac45-1df794edd1ae"
        },
        "item": {
          "id": "50170526-388a-4a31-a8b2-be43b68ab57e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6154db89-872a-43ce-9049-5a6b1b14d901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838ae167-d79c-4a71-afad-380c004d810d",
        "cursor": {
          "ref": "8820cb1f-58fe-4483-afae-1698c52ecdb5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c28c091f-0ced-41fc-afcd-3f6b7e28184e"
        },
        "item": {
          "id": "838ae167-d79c-4a71-afad-380c004d810d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9bf6f71e-53a2-4ee8-adbe-460f36d98b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134df4c7-a054-4cf9-a0d6-9dab436044c9",
        "cursor": {
          "ref": "4af5db25-77a7-4068-a868-f32ed08ecffe",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "89483d48-b52a-4c1e-a914-2c29c2274c65"
        },
        "item": {
          "id": "134df4c7-a054-4cf9-a0d6-9dab436044c9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ad1c31fc-0b3d-41a0-aa2a-bacc0ada56d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f478b5d4-f43e-43b5-924f-63c42b371d90",
        "cursor": {
          "ref": "4e96e914-134d-43dd-a970-919dac3d79d6",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e7000ddd-9c42-4830-8819-6aedc57d299c"
        },
        "item": {
          "id": "f478b5d4-f43e-43b5-924f-63c42b371d90",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5ec862b3-8140-4ef5-ae00-7717920f85ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f39fdd-25ab-49a1-aec6-c2db531a32b9",
        "cursor": {
          "ref": "8644ada7-851b-48f5-8533-ade799004de8",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "28a6b213-cc4b-4c78-a168-dcdd1e7e5b42"
        },
        "item": {
          "id": "94f39fdd-25ab-49a1-aec6-c2db531a32b9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cf5d8e33-5dc7-47cd-9396-4077375ea2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489882be-af75-428b-9bbb-4b0f1599142c",
        "cursor": {
          "ref": "271601c3-2377-4f98-a121-2db32cf0b298",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6cb17194-33b5-405e-9837-025a8abeb2bf"
        },
        "item": {
          "id": "489882be-af75-428b-9bbb-4b0f1599142c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8d9a1943-d0a0-4e69-9ee1-49983ec5eac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd5b4db-eda8-43fa-a4e0-00451288dba0",
        "cursor": {
          "ref": "8ba02179-30b4-4c07-9193-0f8b71b97e66",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3e5438a2-7236-4843-b950-3e67306efd02"
        },
        "item": {
          "id": "bdd5b4db-eda8-43fa-a4e0-00451288dba0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2b7c6cc6-02a8-48ee-bcbd-ac64c3aeeb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f994d3-fa5a-4c17-8e84-5c2f98a1fd11",
        "cursor": {
          "ref": "221ff822-c72d-451a-9a66-fcac829828a5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b11eff32-51a1-44f5-9809-f23e8aba1d66"
        },
        "item": {
          "id": "62f994d3-fa5a-4c17-8e84-5c2f98a1fd11",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7af86cdc-9bfe-4b03-824f-70a210f12287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44579c2b-8c91-4e36-bde1-a29d9c82e119",
        "cursor": {
          "ref": "30bd4763-1954-40ad-b803-2baf1ae390d9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c88bd153-3994-4eac-8104-dd0019acf199"
        },
        "item": {
          "id": "44579c2b-8c91-4e36-bde1-a29d9c82e119",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "554e96fb-c895-46b6-8ce2-f7b362b65660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18c49e-bebc-4942-a267-2bb7b7c453de",
        "cursor": {
          "ref": "a9a74a20-99fc-4526-b26a-14f90577cf81",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4b22c475-264e-46b4-aa4e-2e55c30dd1ce"
        },
        "item": {
          "id": "ca18c49e-bebc-4942-a267-2bb7b7c453de",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5d942b67-682c-49d4-9f22-f14993d1f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c1e958-b738-4c6c-bf58-769bae403f06",
        "cursor": {
          "ref": "d22895bb-0a3f-4910-b4ed-8fec943989ef",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3d8c0d52-cbfc-4aa1-88f5-a04004a03146"
        },
        "item": {
          "id": "d2c1e958-b738-4c6c-bf58-769bae403f06",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7b70d044-c827-41ba-a601-1f048d7a7292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578d32ae-6a16-4f82-b060-befc37e6ff68",
        "cursor": {
          "ref": "80018261-3992-4e79-a08c-d75b41ef2509",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "17619b5f-0834-40ab-b005-39c15561bc95"
        },
        "item": {
          "id": "578d32ae-6a16-4f82-b060-befc37e6ff68",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f0a936d6-715c-46f1-a34c-b6aa67a5e4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6a155a-f137-4821-9c6d-12cb31f4ae48",
        "cursor": {
          "ref": "b06b4ac6-95d1-4a69-8ac3-4f28a7862289",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "81ea1930-ce85-4c9d-9b16-91f452e16d76"
        },
        "item": {
          "id": "dc6a155a-f137-4821-9c6d-12cb31f4ae48",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "670eaf0f-ad19-49c3-8d3c-e08bae2003ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e864a-8dfd-4a46-a8c0-085a5d8c7fea",
        "cursor": {
          "ref": "623ff8a7-447a-4269-be1c-596f0c526284",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e3f31510-33fa-47b9-ab61-7bfc57e5f279"
        },
        "item": {
          "id": "147e864a-8dfd-4a46-a8c0-085a5d8c7fea",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bce160e5-9060-41b0-89d9-9b0a5d157f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd0e81d-fc22-46bf-9b5e-0be833163e7f",
        "cursor": {
          "ref": "9e6fd024-4bd9-4c84-acdd-4c99e8b4ca1b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c1c58530-e514-4514-84c2-5525565d8f16"
        },
        "item": {
          "id": "7dd0e81d-fc22-46bf-9b5e-0be833163e7f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "77981c23-225b-4c05-a4e9-f57fbf3f8ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89330d3e-83dd-4afb-a611-77848fdf6a97",
        "cursor": {
          "ref": "9a972fde-fc04-49db-814f-7563780490c8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8b319977-8e84-4ccb-8bd4-2f73212203ef"
        },
        "item": {
          "id": "89330d3e-83dd-4afb-a611-77848fdf6a97",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "69da4eec-bceb-4b99-b2a4-6dae5314fd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab197a75-7d81-414d-a275-20e1d90bd39a",
        "cursor": {
          "ref": "066bb41e-08f3-44a1-ad8d-e388f47af2ee",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "719eda37-f668-463a-a482-b3bdafdfe5d9"
        },
        "item": {
          "id": "ab197a75-7d81-414d-a275-20e1d90bd39a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4ec69669-a3b9-4316-9cb2-a1c0726611ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24be34ad-ded2-4eb5-997f-e02f1af6081e",
        "cursor": {
          "ref": "3a9d221e-7c32-4e18-8786-2bb95fc4271c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e23f8bad-6e25-4846-98fd-38a66f9ba009"
        },
        "item": {
          "id": "24be34ad-ded2-4eb5-997f-e02f1af6081e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10a98f71-9562-48f7-b08b-876d7f7f0367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02c31ec-c9df-49be-9b14-99671d5bce86",
        "cursor": {
          "ref": "6f27ad22-d00e-4275-99c5-ab65982ae833",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e519b870-752d-4a43-800d-b11d5370b6fa"
        },
        "item": {
          "id": "e02c31ec-c9df-49be-9b14-99671d5bce86",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1e2e1349-3739-41d6-aca1-94cdccb59fb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b548d7c-7fa5-4173-b574-05a8e46b68bc",
        "cursor": {
          "ref": "72aa9216-0371-4a48-99b2-5f446d98c3c6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c30aead2-77f2-4a44-a50d-4a26598a4865"
        },
        "item": {
          "id": "9b548d7c-7fa5-4173-b574-05a8e46b68bc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ba789594-e1e8-433a-ab31-625f84bf42d0",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed913226-32fe-4fe4-8277-2a6bb6a75f50",
        "cursor": {
          "ref": "070a6842-0fa5-4e56-9c88-e9c68d4e02ad",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b7e2827e-8539-4793-962d-142a723cc18f"
        },
        "item": {
          "id": "ed913226-32fe-4fe4-8277-2a6bb6a75f50",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b708af05-61f6-45a1-b6e9-a8451672caba",
          "status": "OK",
          "code": 200,
          "responseTime": 4024,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26305d10-182d-42aa-b2a2-7b5361884a33",
        "cursor": {
          "ref": "b66205ed-ae18-4fbf-94c0-fe10236e129e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "075ff408-04c8-4f10-9fb1-a747a7a2ac65"
        },
        "item": {
          "id": "26305d10-182d-42aa-b2a2-7b5361884a33",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2b7b091b-e5f0-4894-92e4-f84490e4f5f5",
          "status": "OK",
          "code": 200,
          "responseTime": 3557,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9d5203-7f06-472c-9785-de3c68648141",
        "cursor": {
          "ref": "08f80244-ea46-4dd1-b5d1-3b41e523b2ed",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0e354120-195b-46ba-84f8-95de6e9212ec"
        },
        "item": {
          "id": "eb9d5203-7f06-472c-9785-de3c68648141",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2393d19e-f3bc-486b-a87e-0e4f155b4816",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9d5203-7f06-472c-9785-de3c68648141",
        "cursor": {
          "ref": "08f80244-ea46-4dd1-b5d1-3b41e523b2ed",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0e354120-195b-46ba-84f8-95de6e9212ec"
        },
        "item": {
          "id": "eb9d5203-7f06-472c-9785-de3c68648141",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2393d19e-f3bc-486b-a87e-0e4f155b4816",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e483c9a7-8f77-4495-a37a-71899362b9ce",
        "cursor": {
          "ref": "b6b631a0-9688-4dd0-a4f6-f4831284c013",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "20a69d8a-e396-4ff7-bc1f-3eefdfe195e2"
        },
        "item": {
          "id": "e483c9a7-8f77-4495-a37a-71899362b9ce",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "81a1886e-6c00-49a5-9f85-277a11931b9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5513d85c-6079-45a4-8aa2-6aa309ce5c19",
        "cursor": {
          "ref": "9ebf3190-acc7-41d9-9698-97d5bdb1e9a7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "48d9b0cf-4964-4d69-b340-ae88dabbe62c"
        },
        "item": {
          "id": "5513d85c-6079-45a4-8aa2-6aa309ce5c19",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb4ab16c-5f7a-4f34-a1a5-7faf6f913dd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}