{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "070fbd38-9b16-47b8-99f4-a3f8311e3edd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1066bc4d-7730-41aa-80b0-b6288d2525d8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c21858a-be14-40d5-aad3-0f2d915d11d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46e82dfc-d077-4b78-ac01-085d21bcc101"
                }
              }
            ]
          },
          {
            "id": "c0da634d-f6f6-442e-855a-e37e64c6f7a0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a1f52f3-6110-41ea-911a-4d8a4eb16831",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4ff6a6fc-e302-4e1d-bde7-7fa7e5f1e39b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "24e4c30b-7428-4536-9120-23ad2f7e61b9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c97232f5-1e90-48cc-ad6b-a150b9714725",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7511ae32-fd93-4077-aa15-a118cacb4f6b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a056d7f-c0db-442b-aadd-d70bef512786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "def837d6-4656-49d4-9eba-0bae06d71b20"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d014381-6201-45b4-92d8-45b8be88509f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89cdacfb-27d5-4e6f-a14a-82964628fb6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "285235b9-4cc9-48c8-ab29-c7b003a7c228",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc3a1599-471e-438b-a0a8-1a7a2b1bb241"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47616679-8a2c-4376-a902-6ae25e8c331d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "49fa4fe6-acd8-45ca-8b92-00295bbf072d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc1fb1aa-f138-4698-86eb-651201b1e91e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4b6efae-1ec7-4862-83bc-8a8ee83d05af"
            }
          }
        ]
      },
      {
        "id": "cd7cdbb5-3ec8-4345-b81e-ff8a02142e2f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "727a2cbb-e5d5-406d-806a-ce6d9e718d19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0f0f8f2-105c-4cab-b87c-6e00025789a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87864353-0c7d-45be-ada9-9598b72b23ea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23c5628-9483-4bd9-9315-718cdd66b3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "798c1d88-a1e6-45d5-8c7c-9f3aa6e8dbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfefea4-6e19-4fd1-a32d-ac450cdf393f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c914623-083f-4289-9d93-5d23a485b092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb62ddfc-5840-4f99-80d7-f5bc952794b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6687df-245a-44ab-bc7f-7a0e3d88004e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b716b31e-01fd-40b1-81b1-8d5ae7054edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0b2c351-7266-4509-9a4f-481d448d44d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51f428ae-de1c-420c-b7d1-8c5f8011e1ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d3e06cf-49be-4509-8764-85309262b841",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb971f05-845a-406f-90cb-00274a597529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b1d85df-293e-4e4e-bb67-4a865090ed76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5773b6b3-f2d7-4e69-9144-04f70214867b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690efdbf-91c3-496d-803d-7026871e77bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba483834-c2c6-434c-a2fd-ecac7fefc9e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "befd65e0-fe8f-42c4-95fb-4d0efecf1bf7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "196b83b2-7d30-4592-9169-7ed042465b62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "810e630f-ea9d-4e91-a2a0-5ff2245eb999"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b24cf08d-31d8-46c3-894d-115faf14eddc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4a8abe6c-0fca-496e-8910-ff943b3cd745"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d93c84e9-a173-4d40-b3bc-8b5173a7949c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c916235-0a80-4f83-ae36-1c61ec342a3a"
            }
          }
        ]
      },
      {
        "id": "bbd466c9-2510-4b0c-bf99-9bc2d70bfc46",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "43fffdaa-cae7-4f3e-8aef-d46a7b794a57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f137629-db1f-4f68-98c9-8e3eb327f73e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "18991086-1c55-4121-8439-a3fcd5aa7b67",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2256b117-1c4a-4759-b17f-d262d1664d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab9e554-6e32-488c-b4cd-6bf0ada0ba79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6466c6-0f8e-4418-bf49-d68f873f94b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5da8430f-195e-449e-8a31-f5e0b6dc44db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567e47b6-eff8-46ed-8e0c-16c7c49090fd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad71d59-20d8-490f-a82e-cb42cc4e1ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe2ebf3-70ea-4fa7-8b8e-77f6df019e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6699fef-3481-4415-8a64-786df97a3b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7092fd39-907f-4055-b41d-f065b7f1dedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee491145-d3b2-4acb-9889-e400abc3dc86",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ac07eb-2652-4857-af3f-1ef2ce183c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fc130a-1054-42f1-a606-99f0993c7549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43deb500-9030-4b61-b417-105741573799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d868aef-7e32-4568-afb8-5d7f8537b7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a11e4a-aa82-44f1-af24-29fec506db95",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d75577-4283-46c1-bd78-d683850b6ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad82556a-0889-4106-972d-f6c1896f0a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e019e042-f49a-4eee-aad9-a19a468d9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e1499d3-da88-4842-a205-6dd5d841896d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb74afb-70b1-4771-9b94-344278a23ccc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eedf09-e7b1-4166-8a30-ef66e57a5e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd69ff4e-c30f-4ac7-8def-0c1e141bbda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e7693a-8db1-4bda-89eb-cfcb959e3b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb8d55bd-e839-4eaa-877b-eccc92fe3bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e107fa-7e08-40b3-8f35-5686b3d15a8e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4287b5e8-589a-4ea6-8c63-0fd002e42482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c01db9c-c5b5-4d2b-bd80-fbe4a390d788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310a108d-494f-41e0-9486-2adf0095faa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8caa9ae3-8d9b-41a1-b76a-367851aee5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93e19a5-5e82-4966-a995-2ada666162e5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20681011-0590-4554-a9fb-f167f27a9f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85660c76-8888-4573-b65c-92dd6e1a0f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d373b8-923a-44e8-b425-daac41a57a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0592a208-452e-4fd5-a849-b70db3339209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cda74c-a3d3-4ad0-8a8d-7cdc1f7a7acf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5f86b3-c7b3-46f4-b272-a90708abd32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23fbb50-20e4-4ac2-b299-ae4918875cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2374a4-881f-4a6e-a7a1-78b14947517b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bbdfdea-8074-4f02-9c7f-f187619b4def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b43f5a-05d3-49d3-a995-84250516ea43",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f74d29a-578a-4584-bd93-df0d05e6c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2765b0-a501-4429-8bca-b73c2df80880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55862f67-3897-46bd-a9e8-68c784a0354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df47f988-56df-4262-b5a6-e591318d52c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c9b752-4cbf-4d4d-ac22-6f61d3bf3e85",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e80252-27de-4aea-9672-b8076f996449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16a4849-cc52-48f9-ac13-d9b1b43e2ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507de461-85f9-4466-b98a-f41dbeb58eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14512a78-96c4-4224-ac8d-c12ffe862e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34a01a2-ad4f-4ea4-a8f5-3bf0569961d5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263ddd27-15c5-4ea0-a06c-8159205860b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99d5000-6df6-4b8d-b3ae-3b018c95cec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93668c1-9cf0-4142-9d97-be82b0543313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e1f3bca-dcbc-4da4-b3fa-4047e3a94876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff563a7f-52a1-4d3f-9fae-3aa6ab5cd753",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269968c0-3daf-4dac-b37d-35772e6a3550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371a0803-e497-40dc-bc20-b1c847fb75e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abb449f-bddc-42ec-845e-bc37285ae307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e321a65d-1663-4f1d-9d7e-6b569d4bd898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0596f322-ec76-43d9-9bf1-bdb0a4bca93f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86781bfa-6e8e-424d-9dcf-8465c6c2ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aedca7c-8f64-444d-ab2c-64ce3758e0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d92441d-49d6-4017-9da3-fa63dba01338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eb69168-9406-4475-ad5c-ff993a44d496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c4c49c-b071-4e1a-aa47-3a91b0e7e3e4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614a2db8-e76e-45b3-974f-670cc193c99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69d8883-2c1e-45ee-a264-a6ecc4b24013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe73d4a-bed5-4932-b3a3-b1362ecd026e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "196380cc-eec7-40f1-ba68-2b240377b7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc12282-a8b4-4747-88a8-33db7c360ea3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691c5ae1-ed2c-4faf-88a7-a2cc0f41f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6f0a72-2df0-48a9-a126-0996d03b48f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048412d0-4ce9-4d88-8d35-6daf55ba3771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6326b92e-9590-47f4-be6e-43681eb4fe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e53d93-192c-46ef-bd82-cc452fd56bc8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b962f486-c76a-4c66-b7d3-508aa2b30bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883368fc-9e99-4499-9b08-e2004a881152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac52c55a-ad19-4aa2-a6de-7827723f14c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6082b995-524d-47a6-8771-dfec9e8e13c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79feb78-8419-42b5-96d6-9dafa78e7a00",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abf7f99-c922-43e7-8473-660b3c4dc581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9d191a-291e-4543-a676-aeb846b66e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7130e0f-9002-4929-bed7-8a834e9e0668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c055080c-3ef2-4896-a2d4-ad9c334d16d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eb8a4a-ecc8-4107-9a94-6990dbec6c5d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac46abc-ebe9-4f6f-a180-97c532a617c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6c4690-0dea-4824-a09c-6d52b969806e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cb7af3-0d44-4873-938b-dd24dd0507e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c14b33-febb-4bd7-b1ec-0a738ba0804b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4449a84-0b65-4d78-853e-9977516951ac",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f08d39e-8d27-4cd5-b8b6-a27b2abc1a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36caf82f-7d34-41d5-a543-d263c0691c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9ea104-72ac-4fb4-89ab-fd856ed09dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "098c2d99-9d7c-4a97-a97f-10cb7530662d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea1858-7978-4d47-842b-0b609b3282e5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6d63b0-1dcd-45ca-a05b-da6202fbde48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa9dfcb-2a85-4a5f-b460-310f28f9efa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23f99d4-39cf-442c-b9b4-54302fca25aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de6f410-8977-4c9d-8278-07b4e660a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd9e9e9-3ee2-44bb-9043-bcdb119ea21c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff2594f-3114-4fb3-bf8f-70c3ed174fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69af583-b0d1-4216-8441-6d5f7eed74c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69dd95-0b31-4039-81c7-d28b2f45d815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86b3d18e-02ec-4686-954b-6ea5c0384ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a223c879-39cf-478e-8e0a-9c0a5558ac61",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb244ba3-8276-4f24-bc92-1e2281cc8f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fd35e2-62b7-4185-a9e4-81d9b594c5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c3f4e0-4015-439a-9290-b6126ba7a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7a008b-15c3-4f49-bda5-2f6efb3df88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3a9a85-143a-4167-a832-b31ac43422a2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c358661-0d70-497b-ac9a-840646e2b412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c557a59-3b9b-4ebc-ad4b-f17b8e5b0aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ec1163-2a68-465f-9897-14710b59fb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfa992b-e213-4be6-a01a-68acbbba812e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23133c3e-db39-434b-8a61-630ec7a47b26",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197c4945-e23a-44fe-ab45-380c81865fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095317b1-784a-4100-957f-a98281471922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf155fc-c182-459c-9de3-15f821f02f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2eab560-9ee2-4fb3-bb16-8917f51f3915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fd2d22-f4a4-4039-b830-ec2a943c2414",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc087d4-d380-4949-9803-ab47ac3a1390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9651cf-ba61-4237-979c-499c607d765c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd194c20-f231-4485-84ff-f328b1356619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bd46f8-c0b9-4769-bac9-8c14bb60701a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18779d83-97ab-4b46-abb6-b4b171a6fa6b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb59f9f-6f95-4043-931f-224c281199a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b608dac1-387a-44a4-a1d3-3fc9ded10817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08ca7e9-c43b-4b4c-9170-5bed4dedbff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "512c7a27-7abb-4afa-96f9-5ab24a94e87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07567c2-8471-43fc-8fbe-deccae397816",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1935d521-372c-42d6-ad04-70ba6bb182aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2d4f94-cd7b-4b3b-9508-a0e9fb7f9b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45afd92-e467-4775-b3de-6bd76b09a185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba1d90c-fc46-45e3-91a4-b1b68148af9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c17a6d-b92b-4e30-a46e-25cb8596b35c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c8f0bb-17de-413d-84eb-810f6dc4cc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89bb95e-7edf-4ce6-8ff2-017aeeb2cc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcca2e18-1c38-41d8-8a32-c4725725daf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3aabfd-659a-4899-ab64-c8798886b603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078ec95d-2d9a-447b-96ba-fc8ac7e84eb7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0981083c-1bdf-44ae-a800-b0ea107fe244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42c3955-f59c-4bc6-9b1f-1b0a271d0184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ae4a90-e939-483e-9742-f4ca6c54ad40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cabb6b-bd11-427b-add6-4b80f47f8131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd6161d-3aec-44f7-a526-c255067b07bd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f165330-8b2f-448e-8378-c4741244947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ea2589-a211-49d0-8a66-838c021fb733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0441f193-96f8-4056-89af-dc9c16a17c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d39d36ee-7d8e-4afd-8d02-daba18cb63a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb48670-4fc4-4dd0-99d7-a96612cf3d0f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4f2903-43be-488c-94de-8ee6ac3f23b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c567dc7-59bb-4fb6-ac8a-d963a8575e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1b351c-7039-4d60-ab03-cb1596bb7752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc868ca-4168-4eb4-9679-e4f23cdde237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1facc0-3795-453a-8f2c-f528afed4b6e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e806021-7b51-494f-b2cf-abcc20117f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365d2311-b536-4c8d-9e4c-0f8de1a58ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1efbc66-7656-4aa6-b6df-f117ee184bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ba4be6-410c-423c-a828-c8440a9537f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492c33e7-cb3b-4a82-9e99-be2b8cbfc19b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63764718-a291-4374-808a-a6779cb063e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d53498-600e-4ee3-ad75-540b23c3d18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3edcfa-deca-4be5-b43b-575ae6562a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df8148b-3854-4575-92ed-7661fd582825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec318f90-76b9-41f9-bef8-a6f5f789fd61",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c388bd-8b22-4f9f-9e0a-5209a801b495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997332f3-12a3-4199-9bb2-1c3d644b5fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac05b277-f9ee-41ec-bd5e-bb09f0878367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3b1014-1897-4fb7-9aff-8fed2864896f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cec55c-3d51-4363-a822-47e66a5a63f5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c915743e-c52e-4517-b10c-5322bea886d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfbb8c7-25de-4aee-b3e7-084437dccbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f5292-5bde-4a10-9099-56e01fc82bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba3434f-4eca-412b-80e1-66a81de8689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b62c2e-22ac-4da6-9d1b-72a2419a82d5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bffddb-a3ad-4ef6-9bb6-b0e54b9fa56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8713d401-8215-48e7-8364-02760ce51bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23569fa5-1be5-4599-8584-e84d43588c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "150fe9a8-1f70-4e84-9af1-a123a7180b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc1f30f-c492-4d83-b188-762dcf1bc166",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfccd0da-e895-419d-863e-bc5523890e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2554b2c1-04f9-4d82-836b-e7c50321a1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97da42aa-11de-4f13-93ff-79084face109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c819cb-3cce-4350-90b8-bef06654a545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e61e6d5-893d-4029-a4d9-7966f8783215",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00855d38-212c-4d7e-9846-8bc6b127ca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d2648f-709e-4ec2-b550-5ff8fbd68c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e452fe-b202-4654-8b5c-b07bdc4d1aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b974a2f2-3230-4205-b005-56c8c9fb7746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520ac51c-0a4c-4b35-bc61-94afe1c14e1f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1b1942-11f8-4547-b047-e518b2cfcb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8d3eb2-6cd4-4d3e-a90c-45aeb2a9e637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe178dd8-ae3e-4e1a-a58d-617e81582d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "784f49dd-df3d-4478-ac96-3f24f741d0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d2253c-1520-4a33-9332-c4ab6cb613f9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f0a24-d477-49f0-b868-49411837aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d295bf5d-958e-4b64-a984-53ea7d8ef859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924c3d75-015d-4367-9257-661f7395815e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f9a567-421b-4a0a-a11d-66748fe0e778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ec2307-e455-4ff6-977f-180a2a8a380a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c1223c-144b-4ae2-8796-ddcea048f9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b193e9-07d3-417d-b03d-9b69ff56c1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c547bd-e6eb-4acd-b374-cd9b404ad9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24ba479b-5b7f-4c03-8771-c751126f8b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50b46b7-8c2f-4e10-a4ee-a9cf17ff487b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81400522-34fc-42d8-8614-6ab8179d39b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b073071-a814-413e-85f6-906423397353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da302349-fe10-4df2-a198-a42e1b0bd420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "856eec80-749a-42f5-a06e-e697f015fb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64c2a03-d91c-4b62-898c-dd67849c92b6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8c786f-3a55-4788-8e9e-2f0042d71380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1b4435-519c-469a-9425-afab00bf5016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1205afd5-a665-4658-9457-b6f239743e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62e3364-80ea-4537-af31-ece8a20564f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137d851a-f5a4-4f0f-8f8f-11823dc02ba0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b569fc9f-97c4-4c00-86fe-405899ba031f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a18265-164e-44f2-b4b9-3b0393d25d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d45119-9837-4f93-91cb-9865112982cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb940a47-80a2-4d6d-9a21-bb048c21d034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde28564-3eb4-4644-9610-89ae12dd0357",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7e8b01-0038-42b3-899b-8377aed59ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f8bfbe-177c-45be-bc1c-72642a4e51f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f832b728-fa7b-433c-8c4f-c12421b52b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c589c7f4-0acc-4297-b29a-9bd947ea4bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9524d48-9af9-4586-bd18-794f6c2f055b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29f21eb-eb3a-499e-a082-e528d4dbd818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f342d5-b6cd-4350-9166-9afcc8b81cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19feeae-46a2-4805-b70c-6028884f425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c7a358-9376-4621-8795-829411f24e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01951865-078a-456b-8d78-cc65a862721b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fd1c8c-8072-4a64-b137-2f6c118d7528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634d1c65-30fe-48e4-b1fb-c06b8bb1af57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cf65e8-b1e6-436f-adfd-d4ff2831e7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc3b062-b58a-4007-bd92-9d5473522015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e364fe-c649-406c-b51f-ade70ff9610c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a58a74-f896-4cea-b04e-647475c77bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b53062-2dab-4564-8159-7f579faea59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a817dd66-ed1b-4e3b-9324-f9c7f76ffcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df10661-86e8-4cbf-b792-d655b80df012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f94d2db-de6c-4768-b4a1-8d3bf8b96942",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657e0cf4-b863-4bf3-8400-0304bfd3b142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edbf994-13e0-4e34-a458-d7c2d2a897d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d530818c-b982-4a3f-ae1b-9b8ae89ff75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "389ec4d2-f6c8-4d7a-a87f-039042352192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d0f0af-d365-4a3a-9e32-9ac926baa4c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7318207a-4797-46d3-9ced-7ade11a67646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66f2046-3b91-4464-b345-c5a275845fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04633f6-13b5-484b-b0c9-4d9a148f1aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a30aec-799e-461b-b3c4-001532379c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b382124e-9d0b-407f-8085-22761b0f45f5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79e0850-bb6d-4910-829e-f4126f155924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9010681c-0fc4-4efd-95d4-7d56b0a52891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2943d72b-7534-4cb3-b842-e0fb90b2641b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "02f3d2fb-7961-42d5-8f51-458e3de79022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531ac7db-862d-474e-8137-f781fb09a417",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c254052-fbd6-4d70-b268-4b6841ddafde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfadb63-1499-4b85-8b85-1be92ebc32d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6576fb62-6761-4637-9a2e-9598d6f5a5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0134823d-e614-403d-a2de-788fa4675ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37491b08-6dc6-4bc3-bb10-2d056d62d2b9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c0a3d7-16d8-4a87-80f7-8dadf3526938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec80739-e2c8-4a77-a378-7ca8e1e16d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c6bf8c-f8c2-4fcd-98db-a3e88d17baea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72255bd6-aafe-4e9e-917d-8db3cd170686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc0f80f-c985-4122-838a-bf061026513e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65447e4-6489-4707-a6c4-7a76a79672aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f6fc9e-f539-45e3-899a-96f435a11a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cd53e1-bd26-4e7c-a2e1-a1976c322872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a5eb8c-be61-4d8c-ba64-d3f0529851cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f9874e-02b1-4cbf-a619-ed2d974e75bd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c7fca3-181a-4ec6-b6f5-05f6d8eebab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86545cfc-8045-48bd-9cfa-8340221bc759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfb1a4c-1f7d-4402-a7dd-53e15497a1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2695f0fa-95d6-4914-9769-35c235a78d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c36b88a-50e6-4b31-83a4-e2b411427a45",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd63ded-1087-4929-8e9e-ec1a3546638e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d718ab78-123d-4368-b62c-afce83abf42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4a3408-73aa-45a0-a1d6-6b5a187b8b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "140ff26a-29c0-4460-a541-d8a67b9ab667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2e0ea1-f7e5-414b-9b99-46d1eea39c2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936d7221-c603-41e0-ae15-6f3f21f6c255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c8d5b1-b856-43e7-9a25-1a88f2fbb263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097b640a-221f-4b3a-8018-31594d0f7100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db6cc27a-e60a-43aa-9cee-be761b818926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1df67b-bb53-4cab-906f-d2ab1611ba7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28a5758-3895-4cd5-b084-70e5bbf01291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5c571d-e2e3-4c13-b431-b1dc7cad29f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f74ee0-f951-4f2b-949b-5c14a3d4c810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce5db64-3f60-4670-a8f1-a590a2c5c7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f62639a-0412-4e76-8ab9-791942a9084c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c672f1-9c16-4e6f-a7f2-e1b169dd1755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbfe3e3-ef20-4ccc-9cd6-cdf7e57302f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b606842c-e50e-4f2f-9279-46c373f3361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7f1020-f029-4f67-a729-ee84733baf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3c1051-7567-48d0-8fd7-86da4c7f4840",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2169a8-d51f-41ed-97d4-7872a5e98f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c6edb0-a6af-4706-bc7b-159ab98cdf87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488e30bb-4f72-44d4-9a88-7d4f4a80fd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3dbb22-63ab-45de-bc71-9616e5439aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a65891-03a4-4aa7-8d39-267fd7d0e086",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f7fc7c-6008-477d-9381-1a1c81edb5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57c8463-d8bb-497c-8011-9462c1443f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc53284-6bc4-4e2c-8758-041170ee97b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c474b640-f78d-480d-b230-9f2ab8e0d67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab674a48-4894-41d5-b0d8-8e3aa9e02aeb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9992324c-99d1-4ed5-b0f4-8baa5fc9d8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689408ed-39b2-4ff5-a0bf-569627fa1a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dcc761-cfe3-4121-aabd-8f71be400305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f40977fc-6abd-4137-9d9c-d6123e9bac63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be88b30f-7dd3-418f-bc32-d1959d5f79db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10052f71-7a42-4935-a585-b7578c914ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3d3c46-300b-4e93-a17d-680800953fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5804b185-80c9-4d1e-8280-240c7217d28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d580ae31-e1bd-4f05-90fd-7987bbf49cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4bdc2c-b308-42e0-88d2-43e32dead122",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61fcb91-140b-48c2-b878-67f876b1e48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60670388-845f-4408-b754-6ef1cc3e8b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a426d0-0af6-4835-9665-6afcdc2f8f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4b1238-4163-45f4-a428-91f6c9c9e287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a94de7-f8a8-4f17-84dc-d1d5421c32d4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a145545-8f74-4f10-a82e-b5ceb756ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eed3c1-0434-4ad0-bafa-c4d63ef81f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8089b1ce-e366-4d50-91b0-7b82b4eb1733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2c7c34-7739-46df-b3bf-0ee3f5cd6556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfda00e-3a30-48c4-8fba-c744a904fec6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f959915a-67cd-4483-8913-a52f262beb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d543f2-4f7c-4a20-891b-c4f7b92d7ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd78fc7d-a140-4ec2-9c40-ee556366ea75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee402438-95a0-4dec-a2c4-705152e39188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066e36bd-564c-47ac-839d-ecdedefd20de",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba66157-e1d9-497c-865a-bd012c5e05d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8152d5-0800-4d42-97a8-e43f99d80425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e624a926-9ba5-4d86-b138-5445a977ff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bef94144-c8df-4928-acbb-c77b82eedca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f9e05d-8df3-456b-a673-0db44c0f0b03",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4a0b92-f957-4fe8-86b8-e4e3a65b5f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda35820-0975-4378-aed6-f3753e8407d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dda5da-7da4-40fa-bea2-c637edc15012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "151a492d-4781-4c61-a014-76af6aa298a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93401ba-5a72-462d-a597-5aa1783f1e69",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23df979c-54bf-4f2b-a764-52965bdc4b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9a8cf5-0e51-4537-9867-b720a30e1922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce029ba-f31a-490f-b127-6996dcd2eed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebee5cf-6abb-4cfd-95cd-26bbfe5e1417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa810f1c-d1da-450d-a99b-98dbc6343355",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c931448-b2c6-472b-bc2e-b65cc52f8ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2570650-8fd0-475e-bb1f-e76a2c3a9dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef2ebe8-c5ad-4191-9124-b7e989565a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74c3c1c-aa1a-43d7-9992-91e0b9754ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddd4bc5-afcf-4974-bc4e-0f062b27986b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe774a0-6479-4f3b-ac0e-c467d1959010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b4a8e4-2a68-47af-bdd9-35bfd4c691dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea83e77-23be-467e-81f6-a7a6f5fbfd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8d73df-fa7c-4a2b-b302-8205252bed5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a22e9fc-179c-4147-8576-b74afeafe6f2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cf5729-37a6-4f98-a291-29c9eab73790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36fbd01-1e8e-4a8c-a757-675b640fff9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f2a8ff-f585-47d7-888e-f188bbbd6f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9f8c9b-d65f-4370-bbd8-2825119d9be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eb87ac-6dbe-429e-b128-bac22fd60a55",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f51fd5-dae3-4a86-96c7-a06d6605e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2353eb1a-ffbf-4fd4-89db-21815216dd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4023a0c7-e4c0-408a-8b1e-a6bddb9bf581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "181437c8-4f54-4d24-a296-f5a52867b57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50030488-0529-458e-aaa5-92ac8cd858ea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5672b7ee-60df-435c-b529-c960fe0715b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d045886f-a131-4d36-8395-b1274bc0a578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88a0713-a115-4337-9fdd-5bd917aba006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37064341-819b-4e4d-8ed6-de77a9425e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41b6017-ab4e-4491-8b1d-93df882d00f0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12ce41b-d14c-4890-9cbe-327753e6025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667f5c00-cdb3-4cc3-adae-6e19a3ddf3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eccb663-f4ae-4a74-bd4e-02a1a836d6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb246cc6-c3f4-4f6b-b1d8-a95964c033c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4974377f-fb58-4094-a701-9fd608493aae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089cc48a-874a-4a2d-85ba-8d450a197f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b77b2dc-13cc-4ece-bc5a-84736e7b9986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da3d90a-6cc7-490e-aac7-3c7077853c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "604d7179-7ee6-44ab-8427-9d9082ae1854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc82c1e9-689d-41c6-889b-e55915a5929f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e990f6-2f3c-4264-b1db-e91799b93006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18eb566a-a6ff-4abd-9c0e-cfef09110a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf8d215-a106-453f-8b14-fe6a62febf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e986560-a7a4-43aa-a0ff-7793789f9692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c7a5d0-bd4c-4f47-8fbb-1c457c987a1a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d16d82-573f-4ac1-822e-1a43b2434629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7346625e-a938-400a-894f-afb5c7d3776b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9bb293-1776-485a-a19c-01eafa48f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39551cf9-eddf-494d-a8bc-fb6f9a235b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d232ed-108e-4fe1-93de-ae645b9ff994",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50599d2b-9c5e-4cfe-8108-a298f3f3454a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef96fb8-8d9a-4948-a92e-3117083d16d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1944ace0-a5b1-49a0-8710-65487f273547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "881b8a51-feee-4cee-9c8b-136ba8661dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0995568e-9fc6-478a-9980-4335d13466f3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bc075d-eae9-480c-8db2-6d3870632003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9648991-b281-485e-89be-8aa8835ae9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe4fefc-b98a-47f8-8259-c1dad507a19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8363c030-6312-48d0-bbaa-96d25dc0b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679575fb-3831-4f19-b17a-8251e1b1a774",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dc93be-cc68-4ef5-896e-146efb30332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a00a27-320e-4403-b254-5630225f891c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acae16a-8e6b-42aa-a587-c53395f2827e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a357dc-8579-437e-b3c4-5c99bf2a914b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4ef9d0-3816-4b63-8367-2fbbc5b01e07",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bae92ad-9a3c-4348-97f4-30f4e520e8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e335774-5ec9-4277-a20c-a02ad9816bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d2c9ec-3cf9-4f42-8523-db15d679a569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b774a0ab-9233-48fe-8e1f-8f362a5ba0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedb7bf5-03df-4fbb-9d85-f55f1f44aa1c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc54f25b-3767-4aae-b7f0-f129b9ea9167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ac948f-8516-4e5c-a4f5-9195f6003f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fff3f82-fec5-42ab-a379-7f713112c981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f6a49a-8445-4d2f-943c-d322aec833bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a3c1c8-42f5-44ce-8070-52044ec587d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567f76d0-2a45-444e-9a17-ea8a5f78ab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcac41c4-48ac-48a7-a2e6-f754fd8fd97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16abf7a-4887-4dde-b21d-582e77d52f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b89c9a-6bd5-4e95-943f-679ae706b421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572051cd-0d60-49a4-a7fc-197907baa8e1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4575732e-db83-44eb-bac4-4515bb6152a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977921e2-5657-4ce6-85e9-c7ea100e181e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de6a66f-aa3a-4108-b69b-14cfd2f45b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f96441c-efbd-4cc2-a558-4e3f6e607c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb72483-8055-4f87-a6e0-12310c185aef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880e3cb1-152c-4e09-9fb0-ca56fb2ef3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e532df38-47c8-4599-aeaa-51d34bf06d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d5ae0d-f78e-4461-be81-734b55204093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e071ab-8e39-4970-9a74-d206f82b1b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc1ba04-aa97-46fa-af44-a7ced399c577",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e65ea3-1620-4710-a2ce-be7e6ded39eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab33659d-fb00-4d20-8267-153a1cc1d6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb45e94e-a0d6-42a0-b7db-f34501aca9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9752e0f-22c3-4e6d-91fc-88c2e32f95ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d448b180-cbd8-4230-b52c-5c966d5f6638",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d91902c-bbca-4380-a345-9ea83cba60b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c571d137-ccc0-4d03-9bcc-2c9fe90b03e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9fc5da-0ccd-4ec1-af03-da6b099cb04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a35757-48eb-44e2-acc7-1dc7266c9863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6225228d-b5cc-4cdc-b19e-4f4ff99fb9e0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38799782-ee22-44fd-9287-ffd1171e8935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69990fa-8843-403f-b515-5eb9f6d13044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df00afe-73d4-480d-bb17-9e3f2c235cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cae880a-48cf-4985-adc2-62147d57717b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1568907-12bb-45dc-a078-43d6fcd6114b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443c7375-3d53-4e04-b6a6-3de92883c16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afe2f30-970e-403a-93c7-fb2c7affc94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2c58eb-2bb2-4d9d-b553-16bd12b8c174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7341564f-f8cd-433a-b8e3-f1cb05e5532f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa6bcdc-ded4-4c80-9351-2dc5626bfba8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a18e18-b950-4780-8cbb-a51aefdaeb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c757e37-2d8a-43e6-a695-f2c06d0e8ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc03fd4-75e8-4873-8cc3-4158c8d7bc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d72a8a1-eb27-47d2-9c3c-136a5ea7275c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bf8dce-1ab5-477b-a858-5aba8c3dfc59",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c023fdd7-4af3-42e6-baf6-0cedbd34bb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "99b24a68-c905-40f4-bb3b-9bc8bb6e5916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487aabf0-41d4-4aa2-bc9e-3d51b25c18f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec823e4-9d98-4ecb-b0da-e97f1233a007"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b7cf9f7-153b-4bf8-bdda-9a88d05b97a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e87b48b5-1f24-45af-8187-754281af54e3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de79951-6b28-4ba7-9b37-f0a309512173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f28f19e-417c-4e2c-8ac8-52a8645af888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99dbd9a-b649-4098-a3ce-ddd96f9dfe47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec3061cf-6492-42cb-9872-1641d074b005"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9548a8f-24fa-4124-a0f5-851baee2e23f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58e2fe0f-ead9-4259-b835-861c170f2710"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7449910-ecc7-4f50-bebe-e64bf4a265f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ef1871e-c2ee-4ac2-8a2e-4d4774578385"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9a49c1a-5d5c-48cf-8499-cbce4c9ea7b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffa773fa-c6a4-44d4-b4a6-6e5750c4ae8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba0d99dc-322a-488f-87b4-d5791f538c27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f00e528d-30ec-485d-8c12-bc81dc8f1d4f"
                }
              }
            ]
          },
          {
            "id": "1a5832c2-52d8-4f4d-9ac2-ada841bbd844",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6bd1137-6721-4e9a-a6c9-8c9883daeec3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "097369be-30d0-4f84-896e-d9fffc99caa3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cad30bc-5e43-4987-9f46-290b63ffdd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4939373d-f059-49e0-8075-c4b1eca282d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80e18e1-56d7-4c8f-b504-761dd7f6eca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a62054-6117-411b-841c-3d4ea240766f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5510013-1c3e-4883-9043-0da4cf54eaa8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd19a6e6-30f7-4ba3-94c7-a54c761c9b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab03f049-39f5-42d0-8653-746466dc9c8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e34733c-510f-41cc-a603-26d5918d9ee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc1881ca-9e3f-4b9f-a96c-327c8aa7741c"
                    }
                  }
                ]
              },
              {
                "id": "cd39898e-21fd-4b7d-ac6f-955a58081eef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e40939a8-b865-46f0-9951-88f5de9e79a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd9f8d58-5140-4cd0-8a2c-5af4265a8f51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eadcd1f9-b907-4271-adff-862ad3bb266c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cfc21b2-0efb-4503-9746-d9935b7ca170"
                    }
                  }
                ]
              },
              {
                "id": "32648819-72a7-4adf-a3e5-addbdef173a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e698fc64-1cbf-40a1-ae25-7ab9df0759d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e82b317-c7ab-4f8c-94a3-72b0d51d5909"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd0535d-8ddf-458a-896f-19a1bad83eb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21182ca4-44c3-4001-87d7-5d2f24036cd3"
                    }
                  }
                ]
              },
              {
                "id": "e96ea0f7-37f6-4487-9c2d-a3fcaf4c8121",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dd79fdf-082f-487e-a049-4a3f7b604180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45f9ab3e-9e34-417f-8bc5-7b3ec4a7fef6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53b6e0c2-b7ca-4afe-9e7d-820a955e9284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f1552650-67d1-4a0a-a4c1-af004f5146fc"
                    }
                  }
                ]
              },
              {
                "id": "566b3b28-5031-482d-a3fa-d5e2bd33c5f2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5a00629-b6e9-4e39-bf0e-33e58bf42abe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9fc127c-c087-4fd2-9689-e6a22c0521ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc1f19a3-80bd-4e78-aa04-8306ddb74ce8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e5f6880d-1f11-46d6-a0a5-d978e3dc9f82"
                    }
                  }
                ]
              },
              {
                "id": "ccd5e117-c745-401b-a2ed-9f0335809288",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af9511f1-7d5f-42d5-833b-f994d8f89612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ad93238-c39f-4252-a5c2-893f55710ed2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daecbc80-c013-4ee1-9cb7-ca5c98ee92d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29ba6700-5d4b-4c6b-9ae4-09605545c623"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd41cc97-8dc6-45c6-8155-73eed8f32363",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15da5a78-47da-481b-a524-a4cd0578e638"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89b94b0c-d3ec-4380-b76b-bb7e3f3fe902",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1a8db4c-bac7-4f0f-9b24-c53c7177d6b7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19c23c22-166e-4e63-8a5d-7e9c3db690e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6ef7f383-7efc-44de-87a5-94910a2aefc0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71edbeb9-b2f9-4be9-8e4b-b647e1995815",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a82a4a2-46a5-44fe-b931-cc0f4100c2de"
            }
          }
        ]
      },
      {
        "id": "ae70bde8-9571-4e16-a9a5-8976b771c68a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b24628e3-26a9-4638-99c1-16d91b77a211",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbe514b9-51ab-499f-9efb-bae753915822",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94d8af35-b355-404d-aa1b-2f03d7eeb1b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a0dc5f-4220-4f3a-a1c7-dc62967259eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122a7948-635e-4b32-b882-76eb0a16878e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496237ff-5fa0-4ae1-a240-0a6149a78a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa98d811-5fb6-45ca-8584-18ea252eb42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a577a738-9afd-4813-b10f-f6317fb23da8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e66880-8e07-43d8-9e88-438871b82c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d03a1df-8f9b-453d-b10a-147f8a2016d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4d4bd7-6ada-4ee7-a1fe-b7b234c1668b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab55a38-e471-4680-a50b-343f97757b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56cc5da-857d-4a04-829f-be0235daeab8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2db93e-24a9-442e-8616-d302e846da61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cd1e53-f665-4e2f-9162-23b9ccfb86dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8072c416-0c09-4a6c-94ee-e2f4ea32167e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9d7dd9-175d-4c6f-a665-18373607087f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb8fdb1-60a3-473c-8c8e-cc056f288c4b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8817e68e-1446-4d55-89df-a827eb46b0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff49fee-b605-48bb-8241-27e81692d157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc019c2-e59c-4308-a95b-42cb53a5841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee617de6-8d33-487a-aa71-b699f04c4de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8943e5c-1fae-4aaf-803e-51520357956f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b08f01-8fa2-442f-9b79-3c748217e397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac394301-0a06-43d1-aece-14e90be9b49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c13322-d16f-4cb9-8933-047b85e5d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17157e48-e373-4af2-abbe-71329cdeb850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5ce714-3f5d-46e9-bf91-7bdbd58fb09f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499b000d-b667-41be-b85d-bf05cbb24248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b59f2d9-c195-41a8-b9d0-da4ecd1e28a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e61b9f-f5a4-494e-a9ba-66cc6bca54d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffb5e38-d738-49d9-aec8-3ae36589f72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9a72cf-c155-4f39-b47b-46dfb8fa3b41",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17380bc0-9f42-4dea-9f7b-eb840175341c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707dba09-76ae-45eb-bfe9-5a3a98629937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36712067-7a6f-4e1b-8dec-1154f6e1943d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f13e8ecf-764f-4428-9062-aa81d278f3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0b77ac-a7eb-4b7e-bb21-53b3554ecc5b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb003b8e-06f7-4933-8a81-078e3548f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bc6adf-b663-4e0b-8016-b1a65cdad315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fff106-9ec6-4d3a-82c8-5e174f983ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9031c94d-7395-4d91-9bc3-7eb9706b55b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc232b4-b622-43a4-a6c2-a69e63bd4b75",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30ccb51-18be-428b-99a9-f5790f335c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafa8358-7c72-40b0-85cc-051ed955fdde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e3baad-6096-47f6-9dde-3b167d6f7552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ca38dd-1af2-4c0c-865d-ab5bdd691643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e411fc9-a3fa-4e54-89bf-0d426584a785",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829ce9c7-3987-4a4a-b564-661594bc271b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf46ae2e-505e-4543-a07f-86e15d2db0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f997f7b6-e2d5-4b41-89c4-892428d51e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c45639-bb42-4c35-8909-5a03b7849dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b2252d-c12d-456c-92bf-73e109a1ec85",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123aeb37-6ba6-42a1-b4a5-e512773b8e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16592e0-88c7-498e-a048-a7e8dd08a96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecfacfd-fa5d-429a-a6e9-77d48971d8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c8d0c4-e299-48c1-8b3d-30a0144b4622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad84805-46fe-4d67-a6bf-998a5910a3ba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9472f1a5-7248-41ef-b8cd-f0cd54fc54e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c705f1-34ed-4629-aae0-a1f51b9bf155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585dce0e-7d46-4d33-af1b-caf65e8b0172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fafad4d8-5964-48e5-b984-6787f6bfe2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8162e28-b3c8-43ec-8f46-ce09f4b68f67",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d16d7c-25d7-4262-acf4-b26c852c0c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceabf445-c873-4d65-946a-7d203b4ff54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca552b61-9476-454e-bda8-927ec76d875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc60c15-135a-4f9a-b06b-5c449794ee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c40acc-9c0b-4945-8822-d537b5af6c09",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34eed4d-500d-4561-8fb6-674b6fce87ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a281f353-7206-4c41-94a9-4511b092865e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ec0e88-ee38-4b57-9884-8f1eb2e1d1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "befb1c16-e683-42e1-b5a8-fa8e377ab592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febef66b-1f3f-40fe-8aea-f4eb10d9cf0b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d55842-1a7f-455f-83f0-f5b017b0dbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace08cb3-d8d4-4121-a6dc-5c543b8d3aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98bf6f1-4370-4d32-8e5c-f133d3a99b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "296fdd49-66fb-4894-ae69-ae7a08f5baee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598e0b07-f5e2-4294-a539-f6fb6bb279b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fdc2c9-17cf-4f88-bbfb-4413f7c8e2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6701b79a-4dea-487b-ad28-7648b2974194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87be91-217a-43fb-abd2-8af3fceaa7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "253c7e60-7fc5-4d45-91d0-178f61061a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5d74f6-7643-43ca-a49a-2e9d85d7f7af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087085a4-d2a0-4105-9346-f8bb7075cbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19069ec1-d928-4b33-95fd-bb3ebe758d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4d982c-5b6d-4249-aa2c-2f3becfc1184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62135964-35e2-4083-ba8f-00c6398cae2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c322cfc5-4b97-4e00-bfbc-236c7f394f30",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f88a0ec-5a0b-4c7d-ac9f-19a785550f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa67c625-e90a-4fb6-bb6b-22b9872b6564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d4bd11-79fe-4ea1-b375-a1ac8115ffd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcb703a-490b-428d-bb59-557b72ab43fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800fdc43-f271-457d-93e3-37925e0ff147",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50955306-aa04-4bb6-96f5-5479f1e69ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9387e9-c1c0-4d62-8b01-cf34631899a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fa2dbb-a344-4210-9392-e0a4f6cb571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3e9603-2bfd-4f32-a1a5-d40e4bc931bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e609d1-ee3d-48a2-ba2f-9de8e6452606",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0d7a65-b0de-4298-bd94-95c359502477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d8dcee-be07-4c24-aee2-2be6a9d1e846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f986993-991c-406d-a801-a12f1f013d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adced772-c149-4ba9-a8f1-06f05c2656d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b2f862-0534-4270-a355-432b564fb5f9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec3ae18-f79e-47bf-b26a-d98f8cde64eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122588c5-1ba9-4861-8933-6084b2cc88d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f298e7-3875-4047-840f-66efcc401209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2717f3bf-b93c-4ae3-801a-ebac6955167b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879013fd-8780-4674-b4b0-5574f1cd367e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a4b14c-7e1c-4edb-985d-123ae03c5c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cd0ff7-8691-4f00-b980-90534ec04c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ba7b71-b11c-4123-ab5a-9ceefe7deaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "199a6329-77cf-4149-a56e-c9850e3a0a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ac884b-9a57-426e-8f76-f3ee60d83dc8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5cd285-0392-41b2-b2cf-18830407c710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a541593-9470-4e8b-943a-b05d74e42d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fb886b-d1c3-431b-8e08-045bba5cd1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7eb565-c4ee-4361-8bfd-b3372e8b1be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d01c1f-00ce-4512-a5da-8bee7a8cda0b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13af4c0e-5f44-4357-88f9-42420ebb7773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a5cf1d-5800-4f0e-90b1-5f905c372887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fadd41-4705-4970-a139-0c1127e1c31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfbb3f6-d01c-435a-b5ca-1a7c53faa837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4519a1a9-1886-4e5d-b2af-c61e9d786f72",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3919e2-8520-4c90-abfc-66269d0e2021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d12dd2f-aebf-41c8-8964-46ff9b62ecd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b5428c-3125-4edc-a70c-4b559953e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac870fec-30e3-441c-bcb1-ac9ca45ec652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b4f7b3-cb19-456b-8eb4-d3794d773a16",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c51140-6ca9-4c64-af5c-e96716d3051a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55f6420-7861-46c5-b027-839835a02df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b88b37-17d1-415e-ab3d-df4ea46e3be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99b6814-fdb1-40e3-be43-d8eab5fa6c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33d50aa-8bd4-43ae-8f19-fb8e2786fe22",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287ed767-d19f-4e40-991c-62f04c7a338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476a5973-2d2c-400d-afb1-60fb0a457412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1383e95e-c8eb-43e5-9fdb-c2814023abda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0f82c3-6072-4680-a149-58f9bed539f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e35725-deab-406f-9e3b-e380cdf9642d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e8e597-82f9-4534-9200-083c47f05db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476438c6-d188-4682-85d2-3ea56a6ddc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b271e0-c2c4-4e1b-8727-bcea93a02d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f482e8-9b27-41c0-bbf9-573419a1fce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e44fd3-5e74-47be-8d2b-509eb9d96f2a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7302c721-411b-45ee-8f63-8501fe6711ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd03585-5300-4fde-a39b-3d00f0f98ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0b6e81-6564-46be-9671-73438251bc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6345e29-ef90-4d32-8de2-a907c96dc3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ca0953-68cd-4417-9227-c0af617f8f12",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567d5590-6338-41a6-a0de-3e9f2cd2ed87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a224580e-869f-4bc1-ae0b-cf5f54d22aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388545f4-423c-4b66-bab8-e7db2b2f9dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c91d70-f9c1-4ac7-aac4-7ee6887ea084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb192311-87e1-45dd-8717-1bb1f0116dcc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9995b2-7212-412b-a5d8-82cc69656085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48189ef0-45ec-47fc-ade7-e2fce70593c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0f802f-0868-4dd4-a3d8-b3ff6979761d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc8b515-2c61-4190-a43f-ce55b178713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2ef8c-50c6-4254-a5d8-4ed3d77f9a62",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18b5b87-c143-4710-bde4-6485b226b07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41de3bf7-6c09-4fe2-a8ee-8275140a0f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b5266d-14ab-4676-8c21-d7a2b0e41b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d29ea5b-a044-41f5-9c7a-b5e2023f67b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d15d0b-05c7-4abe-80d8-850a5978abbd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aebf27-45d5-4025-a0bd-15f49594d32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c384c093-1bf8-48ca-86ec-5acb1d03a64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7bcc50-99eb-40e4-a5dc-40a88c66567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4757c444-6b56-4f8b-863e-8bef30d933d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac88dc57-75c3-429a-bb6d-2d209260a4c8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3fce32-0c6c-435d-a8ab-d6eef13f733c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d2ecbf-af57-48d8-814f-8db4ba90c805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a958b2a-9a35-44ad-809c-b542cf0c40e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ae70ff-02e4-4a1e-80aa-755613929fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf3e14b-afd9-41ac-a6d9-c6d603e1efa7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c3db72-a2cb-441c-bfb7-ada13576b320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5319a707-fd62-4dd9-93c2-155df68ed0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965764f3-5208-4351-a537-f164210d8d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74fd1af-0ca3-4c60-a5c4-c150d5f2c6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44fcbe6-5030-49a6-ae4d-d3386787992f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990eac19-b44f-4dc9-9d51-39b88ed6faea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d84f83c-0acb-48c5-8bd5-8b3521253c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d92eb3-0d50-4508-a1d5-c0b8a123a44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0261818-bb0c-405b-96c2-23d5a61e025e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccb047a-ff2b-4d40-b3f0-a0c8c057462c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8c0795-7e64-465f-9cc7-f2fbe7b03867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd302dd8-d6a4-4148-874e-89e76d5730b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfc6b17-adf1-416b-9de9-b254ace89bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6184609b-8dbd-4997-bff3-0450caa04c8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a3d2361-2847-46f8-9218-6909c968f28a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94270a9e-4ced-48c0-8bae-1ccb4054c409",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544632bc-f16e-4208-aba1-dd7224cdf9a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f74c4f39-340a-48f0-b8cb-3edbfc7efabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3591ca15-b172-41b1-b5f0-3d54abed6cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2a52096-7c39-4b7b-b569-b9f354ec4a53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb11e7f8-d5fa-426a-a9a1-e7cb5f60b660",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "178818a6-6f4a-4bf8-99c8-b8f4036728aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "421d3923-9b82-45a2-8f35-a4bc7211dc68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c793295c-2ee6-429b-96a3-e7c265b76e28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a1338b7-7333-4645-adbf-8ebc01a43d38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64116dd9-20e1-444c-8955-cd33a5b64b25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f5f219f-a5f8-4bb5-a368-b88c04b699c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6aa29fe6-be88-4f99-9f58-9e8991900d3b"
            }
          }
        ]
      },
      {
        "id": "255581ab-be80-4458-a51a-7c206c627396",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "54ca0bb9-ebf6-49bc-b971-6dc6e3474d87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06f772a8-eee9-404c-8473-8bbab2094a1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba8fb7a4-8a54-4f85-8afb-2fd708e7f258",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5369fd-71bd-4756-ac32-5ec66fc7f30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330a566b-e286-4877-ae40-3427ce4a4464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d95bfd6-aaba-4e9e-ac69-a4240e3878d7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddd6fc3-b82a-481b-8359-a90a30c862b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0678dc2-dae7-4d38-ba07-abbb8e1e423c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d333f362-1ea5-4fa2-8709-662ac85cbe72",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a7ce29-66c1-4252-8b75-52f5e2cb56ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15022737-4a97-43af-adf9-ba244d5b3970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade18228-0b13-42f2-af12-6ebd88b7346d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5122abf2-3712-4756-bd40-a5de802f6c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55d90c9-d6d6-4086-810f-bee0bc5a3c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc16fbaa-191c-4151-bff7-3cc2ad8cbd04",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcef58dc-8cfb-4afb-ab8b-9e4cfa90abcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb7752d-2ee1-43cf-89d5-60f31b6a005a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6617f128-2b14-4a77-b005-001a853b700d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65369d30-d0d2-450c-8af7-ccfcc5822166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd69ef9-91c1-4859-9302-d1d88a973a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cadd49a-2958-4178-ac41-d8c92e3dc881",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2396af7a-fcd1-423e-b686-69ec1879340d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e43c57-655d-48f0-a1d5-6898edb0af40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f399f2f-6451-4a2b-a222-3c88f390c23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703a7422-5535-4e20-b295-4b9622033a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc485c79-0c13-492a-bf39-383613904d50",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdeadc2-47c1-4a29-ac79-03705229d964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ba7fcd-f049-438a-91b8-b1830cba97cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339fdfa2-e786-403d-9186-a7e530e24e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478b7589-3530-4ad5-9318-3e1f521673e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c6cecc-8e58-45f3-a71e-d5f46bf7d434",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4add7613-b1fd-4b2f-935d-606da34c0acb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9ff892-d2dd-4b1b-a947-7ae89fc4b6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770bc535-4354-41e3-905c-045d290a5e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a85465c-0eea-42ac-b427-b1dbda91f06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab5bc8a-bae7-4170-8f17-94b6bca49c8e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef67914-454d-4b84-9694-04e11a7c8dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47150d91-438d-4ac9-bb5e-5e80921d86e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31384e8-1583-41e6-bcb5-576c80a5f818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22710985-6034-4e79-96a0-eda335448dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326bdbc4-978e-454d-8904-1f5d2d361421",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be61cc55-faec-4332-8a28-662c7be2dd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542523f9-54f7-44b7-bd00-299c6ad21abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5203c83f-895a-4a59-bfe9-9f580ab13736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c140a2b-9f26-48d6-8d1b-406836f6fb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999da840-a640-4611-9388-842fa7671a4d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f25b427-1df7-415e-8c22-99268841e2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3b1697-feae-4cc9-bd29-678c17deda08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc7e818-aeae-468a-96d8-f0cf33050d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c019db7-a513-4a8e-93cb-442a74cef75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd6e512-b248-406e-bc29-46b4d2eeac6e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3305d3a-1a7f-4566-b0b3-a888e39d35b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdee1b7c-9c4e-4683-bf59-2fe244b42ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add018b8-d607-41da-98d0-a9198214f172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5659377-d56a-4590-8c84-d5f8df214466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e1bf52-195d-4383-a265-18c8cdeeed7c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625f6637-f4df-4c79-962a-f9e76bc9be40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c91ade-8958-46f9-81f6-a1029155c0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420902c7-cbb6-4f7a-b2f2-ca45b36dd268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9c14dc-2b95-49e1-887f-453fd4358da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ee45b8-680f-41b6-a830-131134d2e308",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1f0a73-10d9-4b12-b666-fa39b86904ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "795868b9-2827-4115-995f-7651772c5d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0601ae22-57ed-4a23-8e87-a87fec161e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a38404-7b08-4493-9648-7427423c94fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87764ea-7baa-43c3-854a-24fa56fbcf59",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8b949f-3688-498e-b5af-91e9b1976444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baebd283-f6d3-4806-8b74-c0fe924c553e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ce2155-565d-4266-a447-26aaa088f2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e198081d-49de-4200-85c5-4a0353e70e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ec63ca-da31-4314-bfb3-cda2261e9338",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87571f9f-561a-473d-8799-0d27e3fc4cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7541f9b1-ee1c-46e8-8482-f4b1f852b7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c608fc06-7625-4f6f-84ef-924c1a067732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97188422-07ab-4e2b-885b-1105e0b7bf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46c3e46-aadd-4e80-982d-4694868baf66",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47554e42-fbe5-448b-b372-b5e7561d1b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2232367b-227c-4006-95d9-01f10d7acb4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63473b1e-c9bf-4fda-a8c2-5e2b568923dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6eeb3d-5d2c-4a86-abee-8cdabd9809c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6d3e73-8a05-486b-af47-113bc2ed2a2f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db53cc73-85bf-4b1b-b264-def13ca65284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb8c6d1-e4c8-4147-a834-94b958dd820a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47771492-7954-46c7-9a9c-dc2420ae7306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ff8e1c-b422-4ab0-9059-5da8aeb09e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bf9ae1-8dd3-4e5f-89e4-b3b8b51f5d74",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f631d6-b17f-4a01-b113-92ee78905a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4df960-3f12-41f2-b960-990e80b9c37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c9aa40-287d-4d75-9467-1684d84604a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72cbd1e-fa90-4cba-9b21-282ab7c8d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a7c40c-c24d-4d7a-b970-f3e1ccb858fb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f5b6c0-6100-40b4-9b03-f2563369cb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255563c9-d8aa-4d9d-90ed-d929e233f378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6cc06d-b986-40e6-a1d6-601a22c6e544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948b237d-f6f5-438f-aded-5f623ae5da0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae03b129-049e-4474-be4d-619c644c0e0e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941001f3-8316-4353-aadf-fc94a20b5b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c335f86-1a47-4591-8f75-6f7b5c5aa838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ef6ecb-daa1-4b9a-8e2c-e922348de75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b486182d-204f-4971-8f29-a1af04e43548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed7eb2-c0f6-48b4-b8ea-03ed60a96bda",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc4a61-ff93-49a8-907f-ac7f24daee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7f438b-2195-4d6c-9298-ad494097b74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d18e86d-c49c-4000-a997-8891c9ce1d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65fd59e-aca0-4a2c-a93b-b13e5c900678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f72d969-127b-4981-9667-e83f99389e3c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0913636-d210-4ef2-88ca-0f5874c00c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51332fb-8279-450d-b666-7acdec5a94c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0b47e-dfb6-4aa4-9d25-8e8f7f37da2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9765fd77-59ca-4e88-a738-60fdfe2afe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6deffb-2257-4c8f-a956-f25bc377d816",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e90991b-7d23-46c6-9680-7748166ef1f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abcd572-66f2-4a30-a37f-0c90ccbdbcd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa51f4d3-d96a-4247-95a7-3ecf595a33e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ffe47c-d73e-45fe-b7e9-8651ba49eb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c35ee5c-b180-47ba-9abf-a866907a9121",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e93899-969a-4c08-abaa-c4c0a1d8b6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3297ce3-92f2-4b20-92f4-7eb82f1582e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac400a2-aa78-4340-b555-bef43d0efb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604bff5f-c2fa-4f46-9ba8-0c8c80ce3977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd31d76-47a8-44bc-b800-aaed2c984f78",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cd308e-d740-4d74-a621-19c82292a0d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56398023-fbaf-4363-960b-a9821b30f1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaed090-433a-4a81-9a28-a73cf44905f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe0467c-f81f-411a-8e8d-235cd356209c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cc6493-a13e-4846-b085-373522dd3497",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e414ad-ace3-4d41-8555-ad322d6342ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6af351e-8d11-4758-acc9-2bb0a1733a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27daf073-1055-48a6-94bd-d2c7dbc16c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf6073e-2b1f-4d59-990c-6e7efa0c0d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e616a-905d-4761-a0d7-a1afa3001d56",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5d1684-0bb9-4593-a3f6-87afd8e242a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a838d2-a845-4a3e-8f78-4afdc71700c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49104f3d-6b88-44b6-8753-9c3b44cac162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8929257-cc39-4e84-8867-ec64038be92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf61afb-0dfe-4f6d-87a9-26bce69367a8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9ee520-bba1-4a71-a938-f73823b9f5b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf2d22e-5fa6-4d3e-b3dd-e47805794fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d954af0-3cd1-485f-97f9-76b930eabf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73781f1c-402a-4fa3-9bf6-54e53ec8ff76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cb1ddf-b755-4cda-8d94-b5d4aab87073",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f10a80-f6ac-49d0-88cd-5d6fabff3615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf533999-bc5b-496c-8083-6f4286e72a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e531b80b-8359-4dba-aded-5de5018da99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d7f056-fd9c-4c40-9bb6-00f886108a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cb26c5-f96b-4287-b2db-5b94dcdf9c48",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc38caf-1fb7-4cf6-b47f-83fb0bef1328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8a6e87-8bc4-4e00-a21f-e07d6442aa2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0621ec94-7ccf-41eb-9037-9e01dbd75656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba660bb1-beef-4c9b-8904-7b62e976c176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93544237-e068-4537-b66b-2f1a67b8ea5b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655de8d5-a0db-46c1-a462-c37d11bff5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5cb588-ba66-4a0b-91bd-150486725a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81311d8-c139-487c-a005-d67ad80266a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1d1c97-4830-4ddb-b004-9376daa48ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2305ede5-164a-4c15-af83-6f54af073d4b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ad74c-a2cf-447f-b50f-31e1601a78d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf5221e-04cf-4e15-a347-69efab5da726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02386535-ee59-4179-af7d-1b66ed156c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b483e4-6c53-4829-80ee-5c04d40a383c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26da5a3-d83b-4fec-a8e8-1a6923ea5e0f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1225dd70-dde8-4f42-9a77-d111ee6e5ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b28c5a-1eaf-4953-90a3-8215780b31d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f47735-cdfa-4bd1-b188-a9a496ee1bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1fb5ff-c81b-4a1f-8a6f-9ebb3c8d5834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5248fef-2276-4dcc-ac1e-1c74c075d5e8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5895f8-2d0f-4835-83f2-cd37983c152e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc5d7ae-3709-4bdc-84ce-ebc70b20af24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11471c09-717c-4e7a-b139-6fa90f08e217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d1641b-8ddd-4bbb-9222-b7f184ef1209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2407717-77eb-4803-a961-71aa41444761",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d99f9-78ed-4925-925f-4ac7c8cca1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5756f0-2eba-48b9-b6f6-892f53c566ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f4826c-9d44-4345-906c-295a9164d139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c154f1f2-0b37-429b-a7ba-4b70be40510d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada0451a-53e7-419b-b8f3-45fd4c17b572",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e727448-94ea-452e-9917-9925c68da25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa936a0-fbe3-4ede-8c69-9691c95aa66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758a346f-9456-42ad-8a0b-a5a89b66323a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefec93b-fd84-4173-97b9-6798e2da81fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9684b5-7d32-4189-910a-4bdcf2db653b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55c9501-7bd8-4ecc-8554-8b6c827a6d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3eb80a8-6b59-4ba0-b92c-445ae06ac77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98bb363-9471-4a1d-a0c6-78b1ee4539be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50a1ed7-c195-43b7-b69e-bb7279b140df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9017284-d855-4a35-b924-81bf6f148789",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f5ce6d-cbb8-4e29-937b-bf013ddd5dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf0178a-0f51-4336-9603-e7201fc06e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468b2dab-7385-4b0e-a899-4209f1fabfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41cec3b5-5794-421e-a51c-2178547b0c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca5b158-1b60-4d98-a52d-6ab0b8edd955",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f692f65-1d78-4f01-b4aa-7f09ff922289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae378203-780a-45a7-844b-e7731e2556a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3b2646-c176-45dc-b5c8-076a1f5dce1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739f4c81-82b8-41e2-b8f5-dda446ae1b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266550f1-d067-40bd-b572-c68fca7bc48b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24903a49-6867-48ff-85fe-63e9e7965e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eb9fa4-66a7-47c5-bb36-f37bcdcce2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ea2a82-5c9b-4aa2-98b9-01cf88c2638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1416836f-188c-4002-9b6f-b7f78604c4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51796b21-cf0c-4c45-8229-9b413ea1549c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab50289d-9f04-442d-9bf6-204b59b30514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18e2361-33b7-4d92-b92c-49fd3837bbeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7449996-70fd-4053-995c-03c15536f984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a706728c-9994-4d4c-acc7-36e467fbbe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c057c6-9fdb-4b31-adbb-8516ed232c7d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f9d0b0-6bc9-44be-b675-4306220f698f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7503e6-08ee-471c-a1e1-aebb372bbc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a661cc06-ff65-4f66-a14f-db38dd62f85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7c20ef-9e5c-453e-ab6d-0f6ec9792c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f73b3d-92af-4308-88d0-e8ed9a4507ef",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56f77de-a1bb-4956-80b7-a3ce54f1f38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178e0abc-f432-4c78-9f5f-36a3c59683a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccdf9a5-7c48-4de2-839f-25660277ae92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d11d375-d79d-4801-910a-6bc159318e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8de6a7-4935-4547-87f3-eff1f1178b8e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eb770a-75d7-40ce-8b32-1e62223ec76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdf207a-6cc5-462e-82b9-5e291655c49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308198b8-e1de-4790-9067-4c5a8ac1102b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689fa97a-93f5-4954-bd36-ebd93dae424f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4843a7c3-a114-4e1a-af30-70cddef2f8d5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402d04b7-7aeb-4fbd-8d7c-91e3c2ffd9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cdeff0-1d98-49b0-afbb-e9021c33bb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63d113b-b62c-485a-806e-c9d247d907a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eedd2c5-b120-4645-8bed-08be81479b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52319e0-3bb1-4075-bff9-01a898bcd5e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425ad0a7-39ca-4048-bf09-d4ddd6d5f984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f9d0c7-85fc-4754-ab5b-893009d0f226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07d207e-438f-4315-84de-332974caf46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96121977-23e3-4b64-88a1-14bb0cf35681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4941f738-ff7a-4a5c-8d34-48f95ec3172f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0191dd0-414f-4125-897e-28a0861e4845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f363d8-c3a1-4c58-a45c-a4eec3079d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51612c2-a252-49bd-9565-57973b321873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739f844f-81e2-4662-9d97-41a32b525599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76790e17-3e74-4a7e-af85-b231c1551400",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4506164d-3958-4c74-9546-aa0e8d52cf96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58da7efb-2be4-43e4-afdd-43d6d117b8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd8e3a2-9b51-4b43-bc2a-0c7ce2830a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd62a76-5459-4e06-bf71-22aa639af4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64df4e5e-defb-4a18-aceb-fe82090cb7df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e2c11a-a9bf-49e5-af32-3e70c6ec0821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97caa510-dcbc-4149-84c7-76f71af7b502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a80dc2f-d84b-4dae-ba54-078978ed2c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789ae240-e5e9-4329-9450-70d984e42f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8a7f5a-6cfb-41b6-b4c5-9e1cdd05c457",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31beca3-cda5-4a34-a1c7-61b68e89bd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34724c4a-0022-4588-a61f-12e7fda80d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5414060d-f99e-46cc-9ca8-18560e07472e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d691e6de-9286-493e-926f-6afd2c66eb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12d9ac6-ded9-47f5-be72-05e9e19a8d45",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaba1c4-e7b1-4071-ae99-f8dce46f7963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ef0528-157e-4b8d-96ae-d6042ba6cd39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e21b922-8cd4-480c-913c-947e91203d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2570f03e-7cef-4516-bdcb-d70c81a89c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa08c6fc-729f-4310-874e-085829c87768",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930f1232-781b-497e-a5ba-097696d3c9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ef2489-3be2-4682-8b9d-7cb02b386814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081e307b-f644-49d4-b885-3ff8a849d38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdc7260-7aed-4358-be13-43a2d96a03c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfecc4cb-e3f8-43c5-9cdc-4572dbecf33e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5156ba1f-4eba-41c7-9204-54798ef1f455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52dbe3b-635b-4e8d-bec7-9360163403a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3c565b-ef70-48b4-9ac3-aed26fe24238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335b957a-21fb-4e35-9b71-7b49b5c3ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761c4b8c-b175-4ea7-8926-e82061e32f0c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e44f0e-e680-4412-8798-67f63a0a5d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99417a38-1e5e-485c-b3b7-a7eabb658061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574cffbd-82b2-42fe-a87c-c68d941c07be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df29476f-5ed5-43c6-9ff9-084660126927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17104e81-a86b-4b21-b423-b40f5c9fe48e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732915b9-f1e7-4a5b-b346-3f1ab6ee4aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefe49b1-32cd-4cb0-ae3d-89eca71a70c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd85fd6-00d1-42da-9fd7-9db86e6ba0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd876f58-9808-4ef9-9bd5-4634860b1eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7be2ef-c46d-4dd8-b3f8-e905a40054d8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95b170e-6d62-4a82-83fc-8777ae67bee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f85c73-7acd-4db9-a3a6-72c8814b75dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c1f481-d7b5-4db9-a985-ef739b486067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3278c8-7797-4820-b1eb-5a777d60eccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831ff31e-3938-479f-8362-a660a77c9b55",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6005695f-c349-4c9c-a75f-82d694a3cb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df96216a-2d91-4a4e-ad03-a59a0aed1840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbf2c4f-6f64-4471-8651-4f1a24f2b6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6362a6-13a0-4553-976b-6f26a6fa0123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42c9547-2c82-4c1e-87b7-420945868368",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eb4888-48fc-4a61-9be4-6f481c36c34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c574c1-d4eb-4366-9718-13250805204e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7751b8f-60b6-462c-a8c7-c9ec382f77c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bd5ea9-42ec-4fb6-a769-61e51b248093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a238d7-faa0-4fc2-ad43-a1bb400c3752",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cae34a-13e1-46dc-b0c1-b5433e331137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690f59b7-a9f9-4f60-8c46-309183b06252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726a55af-c7ba-49a3-8b7e-7474d4c3066a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7557216-9efd-407f-90be-6583d680429d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f15f5a8-fdc5-479d-9208-8f82c97b5c1f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b282ba-63ad-4e77-98f2-7a21d3e237ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d75bd0-b3ca-413c-a94d-f875c5cdc390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5db0d3e-4311-4648-a995-004415e9a575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea286744-f3dd-4af8-97e7-9264fd73dc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775515bc-0e30-4ef6-bc44-27afbd3fd4b1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fca57d-9eb9-48e3-8296-b28235cac2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4df5e52-0ad7-4709-8b48-a8c9d54bc382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f493c98-86de-47ea-ab01-9d27e4f2099c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8de83d-d5fb-4472-855e-aa50473a3d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04749b60-1f8d-4519-815b-abfbf959091b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34bbf42-9fcb-4ea9-b943-77097bada75e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaaf8f0b-6162-4e74-9448-49fa5216f755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7e37e4-8f5c-4ce8-a74a-e42f88cdb61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646ad846-1049-43f5-a402-762bb64e0513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7fda9c-d9f8-480c-a95a-58a529638eb9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e86c0c-2828-4cc8-8818-2931d1e30d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcdbd24-b2f9-470c-a7df-93558c48ebbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09960ae9-625c-41a0-91e2-bc86b088dba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632cf8f6-cc5b-4580-b63b-5ca9994fb194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c30538-b76d-4a3c-93d5-ba8937c3d2d0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1c5013-c9c6-460c-85da-97ebb7caca65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2ea7fe-d31d-489c-ab92-63c44d26c73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe62c1e-1456-4195-9417-b00f64c2155b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb8f30c-b9dc-46c9-a36e-36599c64089c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543a53ca-64a6-4fb7-a143-aa6a071eba87",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7180bade-ee9c-483e-a233-e0d720a41832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1b54e0-a2a2-4b0a-9293-4a959b10efe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fa52f3-0701-42a7-835e-563c03cc22e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc34eb5-2167-410d-b55c-0bb203388257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceebc9af-98a8-40ed-b249-b7cda97b26fd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb7e89e-3873-4368-9b3c-d9f151e12bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb515c9-7572-4ac6-b72d-35b0dc50cbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d2170-0c57-4feb-9904-d8527bba2042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e235b351-76fb-404e-904f-76829530b1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c825811-ddf7-4322-b801-63bba8779ee9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a7d20c-efbc-4d39-9424-b5f51d5cdfd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e26f9eeb-2edc-43f8-babe-4f961823054b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a923c933-bf88-46fe-b4c0-dbda21bb8155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37da9eea-1bc1-40aa-a998-fe5c9d20b0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139b828b-d992-4c8c-bd74-e17f19097a5c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaf57bb-fcb6-4bc6-a272-8b41e7de9da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36952c55-0056-4052-866f-c8bfe9a5b468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473b826c-b5a6-49d9-bf6d-86d918d73094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b33d48d-d0ce-4f66-96a0-d74a91ddb760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c249c67f-e531-4d0a-897c-fcc9f0d9fe53",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b319e91-fc8e-4602-be3b-e31c4f89693e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ca7008-01fa-475b-94b5-5d28b92668d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d20808c-3eae-4a7a-a852-782874c681cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222e2419-c16d-45ff-9300-eb280b7bce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2541f1b0-e5c1-428a-92da-7e34079be218",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a6331c-c39b-4e31-9b61-7d87ed015f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b44d74-4515-4032-8581-8b18a7f936bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbad2d8-4530-4204-b7b4-ca0f646b9b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b334dc-277f-44fd-866c-b67e10539740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a026f-19ab-4883-95cd-9f0a486f90ce",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed0d0e6-d1bb-4013-9415-9cd7f5a8f679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa37d52-d3a2-417a-9919-566c2f368343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac72b3f-e164-4ca1-87c6-9ddd84164884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93b1cf6-f629-438a-b4cc-18d95638efea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7b8e08-591d-425c-b580-eb64e78fe714",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c811a7-7bac-4664-8906-1256c7f2238b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e434f820-a109-4388-8130-07aa068225e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f27bdf2-2795-495a-b093-c0b5110828ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75361f11-28ea-456e-bde1-485162f586a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ff2f84-8d98-4083-9758-929a4d3d822f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b1b221-cd6c-4eb8-ac28-19d8dcf23b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c43ed6-4062-4068-9b99-8728a6a27c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300a5ce2-10a4-4f74-b37a-029c26b27e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e923bac1-7b97-452e-8bd2-71dd9ac53fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0db5c95-f4fe-4bef-9f4a-e90b2b20bfbd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac73e4df-6a2d-4ec3-83eb-dd2e0b644217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695dd8b1-23bf-4231-8fcf-4a20613d41f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50613555-f388-4e9f-9756-fdc22e3ae39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8749beee-31d7-4caf-a222-e6d42cec3472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45f879b-e04b-43ec-98c2-3dec07f58d3b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f57598-63ec-4451-9104-28c3a0026aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5061c9ea-8ca3-4c94-9e73-138de6e8d017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a4fc2b-78c7-463a-a792-98a8aa285400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85f9578-cb33-44db-a34a-858710b672ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3b3940-fc9a-4e3e-97d0-cb4d9fa12b8b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81313b9-735e-49a0-ba0b-8774a16f9d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb1fcad-2dd4-4fd8-bb08-6dbdb9e8183d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dc9bd7-0276-4e2a-81a5-9fbc231cae8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38b40ab-aa79-44e8-af1e-1bb3db5094c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f902a0d2-d0c0-4356-b7e4-af837a861ef0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87d63ce-42ce-4c17-bb67-7eb4918bb7e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f08487d-137a-4838-b487-930229cbaab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e954a9-fa0f-462c-8b78-b7ad5c777d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c999fa-97e8-43bc-b46b-6be477174dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c47a36-043c-4e30-901d-883f9ae7d4cc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31a7eb8-042a-41b4-ad4c-8c16dfe262bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2796a46e-a196-4a54-aed1-52024e03936d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694705a-fdc6-4b7b-b7d3-07799dca9768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d34678-fa64-4b4f-8736-02b3dbda50ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ae24f6-6fe6-465a-b4a4-1d53a5cb834d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c31613-4dbb-444d-87c3-28f293d3734d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff738c9e-201c-4139-9d2b-c7f8485d71f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8774f85c-5e08-4472-98e9-27b6c505dd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcf3dd5-19bc-410d-9d08-89d4fb863707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5520de-ee66-48fc-9aed-7e189637c370",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d7a422-8912-4e0a-a618-5eda38dc7a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac0a29c-91cd-4a0a-ae39-4dfd19aa4f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08f3524-f7af-4e92-a439-4810268a022c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2e4ea5-f6ec-4c28-a2b5-e3c2e42d463c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd3ffc4-cf5d-43ea-bacd-d597fc61c0a7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f748319-89c6-4526-b71e-e6030b70d58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f09e63d-e04e-4ce7-b8af-66e237dc2c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ba7616-ac65-43b1-a999-629297ad5eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f0384e-d564-451e-b312-442fcb534a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87319682-bd13-4d15-a3a3-e1d40863daa8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97471c6-90aa-4c45-98ff-84b4650bd4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f907e55-165e-45ad-9d47-34a73b9e8657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4441d2fc-2981-44dd-b53c-443123a50e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c323e03f-0917-40bb-b9b8-3592a588054a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf1b6e1-cb1a-4c1a-8274-92474f8ae2a0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed46cf7-4cd3-4d12-aa16-8e9c326f3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ac9aa5-ffe6-4329-baef-080578d76d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa548857-6b2a-463b-b284-7ce52bea9af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd71b602-ccc7-4e58-9c22-c6e1a8ad4c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0128de7-14ad-4575-a328-a5404cb33e79",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedb51fc-8b65-43db-b948-3b62799862a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6054a48d-99f3-4b94-893c-0fb448224dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd900f92-98b6-4317-9e97-85c5e55705c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de43f40-69c6-4f0b-8b0f-d4b3b228ce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d36231-49ea-48b2-b2ff-efd70b48f09c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb176de9-2e9c-449b-88c9-d8d96d2bfaee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7c7e29-821e-43aa-a293-219e6612a619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ef545c-5fd5-4c0d-b624-344ced18aa41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bc1ac5-f4c5-4a99-b62d-fde0bf479899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d32d43e-dbc7-48f6-b29c-0b75359408fb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad06d517-7b04-4bff-a6b2-c2ece2f17a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cea85221-a4a9-4d1c-8355-37491496f056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcbbd60-c8a4-4dbf-b848-6f494832f311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8b6722-77cb-4d66-b3fa-e2ef95d07e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bd1fbf-de14-4744-b7a9-b5af79914039",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e50855-b6b2-4ce4-9094-f372209d0a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bebe4a8-138e-41cd-aa10-ad0a4abb46ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d779bf-4be9-4363-bd0c-7bda834516a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa9d9b9-4aeb-4453-bb49-d6f49c61cd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bfb72d-7df1-45b1-b333-145e1c7c40c0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5d095e-91c5-4476-9be0-72329d93a901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8525948-a6ca-4ab9-9af9-7198da711360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a084bb94-21fb-4188-96af-e93d82701f8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c9624d-08af-4636-b48f-7f94f36ce2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a970b0d5-515a-4b3c-bc96-32df348d9133",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6aed28e-9512-4813-adad-ba9e4ca60cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e65001d-f3f3-4b03-acb2-e001f64ea596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8ea564-04dc-4196-a653-2331ef195066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be61e6ef-b70c-43c4-9f82-42e79dc950d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247c53b0-4be0-45b6-bbd2-24a7d1ee0374",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000a42e-6890-42fa-ad50-a0afd683ce30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d2070f-e2c3-4453-afa5-67dc0accba50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a15a307-e32e-4386-9af7-f06c2442f698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1630d0-f33d-44ba-bb8c-485eb6ae8b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34488e4a-bd2b-4712-82ea-49e2ee5f328e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9015206-28a7-4931-9e4e-a03eedd7bb33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bf9c6d-d398-4cdc-bb9d-cdf0a60ef0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5bbb60-5ea6-4721-910d-896cc98a3239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9210bd-69a8-4139-a102-90b93d9ce43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1afe68f-740f-42ef-9c53-52910292c1c3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e754e9-2332-4fbe-a2ba-f6f26dd1c2de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b700f7-9adc-43f9-bd9e-66fe3853bff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12062e80-06fa-444c-b4a8-6757cbc342fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e494b3-1a31-47c4-9621-574e9f43cb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927dde55-f696-437f-bbc8-474e605842ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb04b49-aab6-421a-ba8e-21f63758acdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a8c6bf-232a-4fed-aedc-0b9e8bee4087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d46d05c-2cce-4a57-bb62-421c8906695a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ab1326-a459-4674-99db-ae369d5c551c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4ce099-a15e-44dd-b42c-396a94a80a72",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c9179e-8953-4bac-bb3b-f25cdc836438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb12f651-7fe8-4267-b48a-ecd528fdb161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c8d838-fd42-4f8a-9ec7-893e9ba1f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecda103-5c88-427a-b1e7-ddc59f8004d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173c230c-0c8e-4889-826f-82e1ea38a0bb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adfe8f0-1d97-48f9-a974-e2faab824eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327030e2-b391-41bc-a0d6-444d15c3af91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ef12da-6685-4b45-a8fe-3e868fdef24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8982e71e-a0fd-4499-ba2e-d9a1866633e0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec00c36a-48db-4bd8-b342-7a2ec0d704ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51a0caf9-9059-42ff-8c0f-10ab9ae66d7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba41ed95-6436-41f5-bfd1-64d11b5c3183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5644cacb-d8ac-414a-9272-da7088727e2c"
                    }
                  }
                ]
              },
              {
                "id": "fa94b921-4fca-4c4b-8d98-83cb976a470c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cfd068f-f5db-4da7-89bd-b659e3410578",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521ac852-4ab7-4ae8-9335-a343132db258",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "00febb53-f123-4416-9d1a-9da3dbddd01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d73701c-d270-4a10-94f0-204b4cf8811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62849cc1-98bd-400b-8bb6-55c15f130f3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb0a3c9e-6574-487a-84f0-9d322dc4fc7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a13280f4-3c63-4452-a778-56e273e052b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64807211-82bd-446c-9fe6-e6ec693c236d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26882a49-7f30-4224-b880-b20f6e2c5578"
                    }
                  }
                ]
              },
              {
                "id": "291dfbef-6ada-45fc-aea9-191712556fe1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b60613b8-5955-4152-8388-ce9dba33e23e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ea091-ee01-4072-9892-1a46ec7efb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b3b59fde-7c72-4863-bd14-e42885676e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c64e71-97ee-4b7f-83d4-41cca78eb0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa315466-0b84-42d6-9375-a7fc9043b87f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d7e6a7b-1816-419b-8e7a-ccf898f3e851",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b1e19929-7d52-484a-93a7-41ad1a23bde5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1239e467-80ad-4cfa-ab2a-a9983683f399",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "07018137-d29e-4804-9d63-b4af943322bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e37db8-3dfc-4fe5-8552-20ff68b32c9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d15a1b8-446c-4e58-8165-faaa69f36fcd"
                    }
                  }
                ]
              },
              {
                "id": "ef1fd34c-dd19-4163-952b-16a82c99255f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bd1ebe8-7dd9-4a44-91b5-dfcdbae34005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80869195-4190-4a17-a156-c163fe3f6c11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c5adce0-f693-4c89-8cf4-c0133f4dc6d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2592ee98-385a-4fcc-97f8-99155b2eef3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88ff9ac0-081d-44a1-bb9a-efccf8fc6cc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "953af807-a61a-4cbc-b28a-ca0f3851f5b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "030a33aa-257b-4c1d-b699-b27faab01a4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2192bc6e-042b-4947-b077-a390a7d40213"
            }
          }
        ]
      },
      {
        "id": "1b84f12d-47b2-45bd-a053-576fee57497d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9822f128-12aa-4f5d-b11d-617a077930fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34117cc3-7c96-4770-8979-59f1d46c5370",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cca03c80-8406-421d-b72f-6b265748aba4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ed64aa-eecf-4746-9523-c2e5046cd607",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44e805ac-ddee-427a-922c-de5b52c72dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6db7ee-5260-4b5f-8d0c-a5e4b758c29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86e4a8a0-b16a-4cbf-a570-c89417ad7616"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "739a0b0a-f2ac-45d9-a19a-20a2bdcb9d75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b5619f8-9479-4ffb-9687-34f656ceef03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82d1ea32-a0e9-4f74-9046-9327f374226b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ccb758e-0264-4d38-bc33-9819c80c576a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "064df7e2-f692-408c-a12b-d3658b510348",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bc0c065f-3819-4fd7-a1c1-a6455a825937"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db25dfe2-2ede-4258-a80a-39722f0d04f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "506b85ef-c3e8-456f-9e71-ee681989a3e4"
            }
          }
        ]
      },
      {
        "id": "551ea763-d0a1-44eb-bb41-d8ba56798d1b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ba42cf03-39a2-4af4-ab24-1de871edab28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67a1d7d3-4de9-4dc5-9bf0-8e254efee0b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd2c42ac-f32b-4ca3-a6b6-da09f3557e6b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34219ce8-00c3-49a1-953f-5066500ebf3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "646de17f-1c6b-4e1b-ae25-bae46136e703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f730fe-c91c-4534-abe6-cd494e4f9779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8249ebd0-c1eb-4430-91db-962e51542925"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c949124-861e-48fc-8a48-e11d2be0313d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0de14094-d229-4100-8455-fa011797b1c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "305af02e-d094-40b9-b250-6cc67ea42f62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96ea437d-6435-448f-896d-1e12d0fb28ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "045665ee-025b-4f4a-99aa-a42ff8586fe9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de4f06bb-a249-4b7e-86f7-5284fb6101cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20aadc98-ba16-4226-9063-df16b41a3e8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9fd8619-b817-4716-9a9a-513b27be58d1"
            }
          }
        ]
      },
      {
        "id": "38fb83d3-568d-4434-967d-81dba8c27c06",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e6334231-843b-4411-9826-e3f181301ce4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad229e6e-6e7e-460b-9032-5042862aa502",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8321504f-245d-4c90-afda-50e10f9a4fbd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6202aab0-ee5e-405d-a335-061cce87de02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58991d3f-ac0e-4b0a-a100-dd1c64d3019d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea201068-6044-429d-baa5-39cc9015805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "252bf32c-c93b-48b5-b7c6-cc6a04d5c5aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7959fbc9-f764-4feb-8c34-154aa9da30d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71352531-ff88-49f9-a315-9b01552249a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5affba59-0be9-4288-87de-6a19537fee58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd336a73-5b3b-4162-8ce3-86452c7d4cf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f305903-c641-4b09-b3c4-79e7dfd2bde8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b75e84bd-a527-4fd7-9843-e8de39a52480"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3715a213-b8cc-42e9-9df3-160b28345f8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d234894e-11bd-4fa7-9d86-ddd93aae2e68"
            }
          }
        ]
      },
      {
        "id": "b314529e-d062-49e8-9cf8-94dc732b95ad",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04ab7051-21ea-4fda-a10c-4ae485404483",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eb4f5cb-e0a5-4967-b579-13f39f4ecbac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bede3415-0840-4cbf-9b88-b6da141aecec",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a854a14b-a9d0-4f74-aa07-915a5f74135a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35b4f22a-b7c3-41e2-bb09-ff4c0880a72c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.29761904761902,
      "responseMin": 11,
      "responseMax": 8923,
      "responseSd": 619.2881111385119,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715819774146,
      "completed": 1715819810640
    },
    "executions": [
      {
        "id": "1066bc4d-7730-41aa-80b0-b6288d2525d8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9c403b4c-5e47-486b-81cd-b05369810726",
          "httpRequestId": "591cc5cf-1151-49dd-a42b-136de64cd6c4"
        },
        "item": {
          "id": "1066bc4d-7730-41aa-80b0-b6288d2525d8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1609c70d-1513-44a3-af16-fc6eef00abed",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "c0da634d-f6f6-442e-855a-e37e64c6f7a0",
        "cursor": {
          "ref": "3714d007-2448-4f11-8958-8fc7e7832b96",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "86c6611b-5d61-465e-950b-a099737bbbc9"
        },
        "item": {
          "id": "c0da634d-f6f6-442e-855a-e37e64c6f7a0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8af6942a-232b-4cbd-8856-745acf7b85ec",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "7511ae32-fd93-4077-aa15-a118cacb4f6b",
        "cursor": {
          "ref": "f46cc583-f6c3-49cc-9ed8-c430383c971b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8749056f-dcaa-495e-a597-55bfedc501f3"
        },
        "item": {
          "id": "7511ae32-fd93-4077-aa15-a118cacb4f6b",
          "name": "did_json"
        },
        "response": {
          "id": "cee05ad8-59ed-4100-8c44-5cffc9a12332",
          "status": "OK",
          "code": 200,
          "responseTime": 269,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87864353-0c7d-45be-ada9-9598b72b23ea",
        "cursor": {
          "ref": "4ea965e6-d657-4027-8927-5b0bfd2c8196",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d70d951-9de6-4477-b47a-f1eb2818c68d"
        },
        "item": {
          "id": "87864353-0c7d-45be-ada9-9598b72b23ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "d6625700-8649-4a6e-b2d7-090cbd70de55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 354,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87864353-0c7d-45be-ada9-9598b72b23ea",
        "cursor": {
          "ref": "4ea965e6-d657-4027-8927-5b0bfd2c8196",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d70d951-9de6-4477-b47a-f1eb2818c68d"
        },
        "item": {
          "id": "87864353-0c7d-45be-ada9-9598b72b23ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "d6625700-8649-4a6e-b2d7-090cbd70de55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 354,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfefea4-6e19-4fd1-a32d-ac450cdf393f",
        "cursor": {
          "ref": "6f50c066-eaba-4c5d-85ed-702e581a9257",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "eb78cf89-c1b8-420d-81e6-1cda9cab56d8"
        },
        "item": {
          "id": "3dfefea4-6e19-4fd1-a32d-ac450cdf393f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "962e4f3c-730e-44bb-b2fd-5dfa795d0024",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6687df-245a-44ab-bc7f-7a0e3d88004e",
        "cursor": {
          "ref": "15635b7d-206b-4f0a-ad2d-a1576de00fd2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "19ff9008-1afc-4978-b830-981932e99373"
        },
        "item": {
          "id": "ba6687df-245a-44ab-bc7f-7a0e3d88004e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f2863ef4-ff55-4ace-a18a-3a4de5f96952",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3e06cf-49be-4509-8764-85309262b841",
        "cursor": {
          "ref": "48248286-a455-4dc3-9f88-1aea7579ab0d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2800b3d5-41fb-402b-9966-5c965e09e72c"
        },
        "item": {
          "id": "2d3e06cf-49be-4509-8764-85309262b841",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c79583c2-0b37-484d-8287-95fd80b4fe73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd65e0-fe8f-42c4-95fb-4d0efecf1bf7",
        "cursor": {
          "ref": "9e04a2df-4456-475c-9480-5ac9850c2ed6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a69fb795-8d20-4228-b414-b82aaf55e35e"
        },
        "item": {
          "id": "befd65e0-fe8f-42c4-95fb-4d0efecf1bf7",
          "name": "identifiers"
        },
        "response": {
          "id": "81df0113-f978-4666-b19c-53af1a76fa60",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18991086-1c55-4121-8439-a3fcd5aa7b67",
        "cursor": {
          "ref": "1acedf10-48df-4c8f-9579-fdbc2ea530f8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0bf905ed-37cb-48fb-99fb-1d7e6cb8e01c"
        },
        "item": {
          "id": "18991086-1c55-4121-8439-a3fcd5aa7b67",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3cb80676-7174-46a3-a3db-92070e376fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567e47b6-eff8-46ed-8e0c-16c7c49090fd",
        "cursor": {
          "ref": "7702067a-2c18-4ae8-b326-674f6f159dbe",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b1d841c3-a383-46fd-b873-ede1cfdb8547"
        },
        "item": {
          "id": "567e47b6-eff8-46ed-8e0c-16c7c49090fd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "26b7c7b3-39ec-4e8e-86b4-f40a3bd88aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee491145-d3b2-4acb-9889-e400abc3dc86",
        "cursor": {
          "ref": "8fc42316-d2c9-4755-a1e3-0250dbc69b43",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7af15373-7c49-4e32-b3f1-f8e24adc50aa"
        },
        "item": {
          "id": "ee491145-d3b2-4acb-9889-e400abc3dc86",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0a60e38f-7f0a-44b2-9853-cb0b8e77d2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a11e4a-aa82-44f1-af24-29fec506db95",
        "cursor": {
          "ref": "bdf901a5-baaf-48cf-8a70-bb2563efa0fb",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0c39aab7-7176-46e6-907e-70c857bf60bd"
        },
        "item": {
          "id": "e3a11e4a-aa82-44f1-af24-29fec506db95",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "72e35f25-8bd3-4089-9158-d16288948714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb74afb-70b1-4771-9b94-344278a23ccc",
        "cursor": {
          "ref": "e06b8818-5aab-48f1-8e6b-acf8d1785c8c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9bd69f77-1456-4e85-bcb1-7adda821daff"
        },
        "item": {
          "id": "bdb74afb-70b1-4771-9b94-344278a23ccc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bcf14923-142e-4644-a95d-431bc3c2dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e107fa-7e08-40b3-8f35-5686b3d15a8e",
        "cursor": {
          "ref": "8281df97-2bbb-45f5-85c0-57dbc5ecf515",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6920a441-a036-45f2-8805-92fcf6f677f5"
        },
        "item": {
          "id": "11e107fa-7e08-40b3-8f35-5686b3d15a8e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dde1ad35-4f13-4ada-8a5d-b53d711ce650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93e19a5-5e82-4966-a995-2ada666162e5",
        "cursor": {
          "ref": "f9557c1d-e188-409d-8c53-4ff8cc6af4a5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1e6531e1-43d2-4ee3-be4d-e90aaae350de"
        },
        "item": {
          "id": "a93e19a5-5e82-4966-a995-2ada666162e5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7d697823-0fa0-4658-8c4b-cc5f390c35e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cda74c-a3d3-4ad0-8a8d-7cdc1f7a7acf",
        "cursor": {
          "ref": "c79a3b9e-2559-46a3-bfbe-681d19d30833",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "598b15ce-3bde-49f6-b54b-b7a3d1409093"
        },
        "item": {
          "id": "d2cda74c-a3d3-4ad0-8a8d-7cdc1f7a7acf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a5941be0-83e2-4d2e-a1f2-df6f6608851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b43f5a-05d3-49d3-a995-84250516ea43",
        "cursor": {
          "ref": "09171a65-7375-4275-a786-5ab40143f677",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "075bb107-d8de-4aa1-a92f-c26d82802cf3"
        },
        "item": {
          "id": "07b43f5a-05d3-49d3-a995-84250516ea43",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fae6bb2f-a314-45cd-a015-c91feb956272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c9b752-4cbf-4d4d-ac22-6f61d3bf3e85",
        "cursor": {
          "ref": "ce5f248d-2f99-4f39-a275-325d4c87b1a6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8d5a6a80-d970-42af-ac82-bbb1c1942917"
        },
        "item": {
          "id": "f4c9b752-4cbf-4d4d-ac22-6f61d3bf3e85",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "82aa22b8-db80-49df-842f-94e822ffda32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34a01a2-ad4f-4ea4-a8f5-3bf0569961d5",
        "cursor": {
          "ref": "debac858-1bb5-4d3f-9035-5099355bc220",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2246422b-19a8-4056-8467-0e1158672208"
        },
        "item": {
          "id": "c34a01a2-ad4f-4ea4-a8f5-3bf0569961d5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7144ef9f-7e29-44c8-a81d-97e094e97314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff563a7f-52a1-4d3f-9fae-3aa6ab5cd753",
        "cursor": {
          "ref": "43d9a5b0-d102-4304-b67f-ede70957942e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52533620-6224-437c-9a30-61f2b17b57cf"
        },
        "item": {
          "id": "ff563a7f-52a1-4d3f-9fae-3aa6ab5cd753",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2bba1c31-cde6-4066-868b-5163f08822f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0596f322-ec76-43d9-9bf1-bdb0a4bca93f",
        "cursor": {
          "ref": "a65c1190-bf6f-4dba-a78a-145bd38885ef",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "522abffa-8e25-4766-b086-09dcba4325d3"
        },
        "item": {
          "id": "0596f322-ec76-43d9-9bf1-bdb0a4bca93f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "eea63466-5485-4444-8534-447379db7f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c4c49c-b071-4e1a-aa47-3a91b0e7e3e4",
        "cursor": {
          "ref": "44a3ca8a-8f08-4109-a6a0-39a94aea868c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5d469ca6-819e-49b6-b5cc-fff09c62bc62"
        },
        "item": {
          "id": "b3c4c49c-b071-4e1a-aa47-3a91b0e7e3e4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d14a357d-44b6-4027-8b4d-1bef3013a386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc12282-a8b4-4747-88a8-33db7c360ea3",
        "cursor": {
          "ref": "6093842f-eaf4-4d9c-ba2d-0426e2d21fe3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9775b8dd-8afb-4cf6-ab24-eeb37bc3d3bc"
        },
        "item": {
          "id": "2fc12282-a8b4-4747-88a8-33db7c360ea3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d6915ad6-f800-4263-b8a7-39a387a83c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e53d93-192c-46ef-bd82-cc452fd56bc8",
        "cursor": {
          "ref": "7eef8fa2-4fde-497a-b6af-fc73ea06f2c0",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5f68c2d9-820a-4646-80a5-5a73758ed6b0"
        },
        "item": {
          "id": "b2e53d93-192c-46ef-bd82-cc452fd56bc8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba8ff6c5-bcae-4c76-a18d-2586a6e3e43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79feb78-8419-42b5-96d6-9dafa78e7a00",
        "cursor": {
          "ref": "bbd5a20e-47cb-4995-a25a-fe11eaaf6181",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "abed94b9-1b62-4ef3-a0f5-98ffed2a0d9c"
        },
        "item": {
          "id": "c79feb78-8419-42b5-96d6-9dafa78e7a00",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "944da41f-effb-49bf-a3bc-64affdf1097a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eb8a4a-ecc8-4107-9a94-6990dbec6c5d",
        "cursor": {
          "ref": "1214c08a-4e26-47c9-ad61-da2f54aa7f82",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "344f30ed-c0d0-4fb7-b355-1487136be78d"
        },
        "item": {
          "id": "a3eb8a4a-ecc8-4107-9a94-6990dbec6c5d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e038ee23-4d01-4fea-bb23-58a66c14325e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4449a84-0b65-4d78-853e-9977516951ac",
        "cursor": {
          "ref": "140243d1-f207-499e-9df3-9291d57e677b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "93e4b22a-0316-40bc-9706-ae1f4c26ad27"
        },
        "item": {
          "id": "c4449a84-0b65-4d78-853e-9977516951ac",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "655c41c4-a23a-426a-ac55-910052679c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea1858-7978-4d47-842b-0b609b3282e5",
        "cursor": {
          "ref": "edb0148f-b3ca-4a70-92e5-01b363acd689",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6d99d1bb-8ff1-4d50-8521-a945946e708c"
        },
        "item": {
          "id": "1bea1858-7978-4d47-842b-0b609b3282e5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a89f79b5-79ca-4cdd-8421-7f4bcce278c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9e9e9-3ee2-44bb-9043-bcdb119ea21c",
        "cursor": {
          "ref": "e71d9113-94ec-40d3-ab02-337ad3086e6c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "672dffab-17dd-46e3-9029-a5d5374aadee"
        },
        "item": {
          "id": "0cd9e9e9-3ee2-44bb-9043-bcdb119ea21c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f4029a9c-54b3-4991-b86b-19052c839992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a223c879-39cf-478e-8e0a-9c0a5558ac61",
        "cursor": {
          "ref": "bd66f3e0-7eaf-469e-b4cb-d25d9fbaca86",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "06f936c4-a8a7-4a0a-9d3f-fb8e6a2178c7"
        },
        "item": {
          "id": "a223c879-39cf-478e-8e0a-9c0a5558ac61",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "367122d0-b2ec-4a14-ae94-30429016e979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3a9a85-143a-4167-a832-b31ac43422a2",
        "cursor": {
          "ref": "d47866d9-07d5-493b-a8d5-bc7bd490ea89",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0ff1186e-cc05-47ab-a7fb-8bdf478ede92"
        },
        "item": {
          "id": "de3a9a85-143a-4167-a832-b31ac43422a2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4032f2ef-52a3-444d-a147-743c1da716a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23133c3e-db39-434b-8a61-630ec7a47b26",
        "cursor": {
          "ref": "46e6f26a-f16f-4f9b-8e96-1383375b9e2f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8f438910-c9f6-4b1f-b59c-46f49a5105dc"
        },
        "item": {
          "id": "23133c3e-db39-434b-8a61-630ec7a47b26",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ab55a9b8-d36d-4ed4-8cb4-b1f9b11e1a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fd2d22-f4a4-4039-b830-ec2a943c2414",
        "cursor": {
          "ref": "07d724b0-c283-4289-b996-7fabcffa9e7c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bcc2a718-11f2-4648-8c11-be2135bc0cfc"
        },
        "item": {
          "id": "26fd2d22-f4a4-4039-b830-ec2a943c2414",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "14233627-3bac-4b53-8ab2-9bb909128897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18779d83-97ab-4b46-abb6-b4b171a6fa6b",
        "cursor": {
          "ref": "5360797e-00b8-489e-aca0-173357798967",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e3a21e4f-d147-40c6-8cf5-3660a9f50ae9"
        },
        "item": {
          "id": "18779d83-97ab-4b46-abb6-b4b171a6fa6b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b461a616-4541-462f-8863-1c6f8057629c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07567c2-8471-43fc-8fbe-deccae397816",
        "cursor": {
          "ref": "d28bf217-7a80-4d7e-8fb1-dfa99ea2a211",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "42ba60c6-784e-4416-9f1e-925ada81393d"
        },
        "item": {
          "id": "e07567c2-8471-43fc-8fbe-deccae397816",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "23b0cb2e-a8d3-4daf-8f00-8d33382c9afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c17a6d-b92b-4e30-a46e-25cb8596b35c",
        "cursor": {
          "ref": "e3e57ac4-efb0-4c49-9149-c0c7583cce2a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2ad24566-f1ae-4838-97c7-25d36036334a"
        },
        "item": {
          "id": "59c17a6d-b92b-4e30-a46e-25cb8596b35c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8e9ebb7d-208e-4cc4-9d0a-c28ed0a2a19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078ec95d-2d9a-447b-96ba-fc8ac7e84eb7",
        "cursor": {
          "ref": "a41c2179-72af-4cfd-a5d5-ed72487faa3c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c4199d9b-221c-4b07-ae48-c45e598a2736"
        },
        "item": {
          "id": "078ec95d-2d9a-447b-96ba-fc8ac7e84eb7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "09311762-7218-43f0-bf1d-2049e2228caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd6161d-3aec-44f7-a526-c255067b07bd",
        "cursor": {
          "ref": "a4c6e43b-d297-4575-bad9-297e1972fa4e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fcb236e7-99e1-4848-901c-f35112699243"
        },
        "item": {
          "id": "9fd6161d-3aec-44f7-a526-c255067b07bd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bc4bce8a-ebd8-4c8b-b482-68750e4b2cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb48670-4fc4-4dd0-99d7-a96612cf3d0f",
        "cursor": {
          "ref": "29ce6712-92fa-4500-8884-8286872cc3cb",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0c40950a-30ef-4c7a-909a-1822fd7be4b4"
        },
        "item": {
          "id": "1eb48670-4fc4-4dd0-99d7-a96612cf3d0f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "92d6b08a-efb5-45f2-bf63-42946c833962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1facc0-3795-453a-8f2c-f528afed4b6e",
        "cursor": {
          "ref": "80e7b0c3-41fa-413f-be8e-560b9df6f5b5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "00c7e177-34e4-4816-9e8b-2c07c9574542"
        },
        "item": {
          "id": "8c1facc0-3795-453a-8f2c-f528afed4b6e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "93f70483-4bb6-4698-abc2-65524d985671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c33e7-cb3b-4a82-9e99-be2b8cbfc19b",
        "cursor": {
          "ref": "d6d1ab49-fd7a-4622-b1dc-3d659c6b4700",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ef551706-e8b3-4f91-9400-40f14bb7e925"
        },
        "item": {
          "id": "492c33e7-cb3b-4a82-9e99-be2b8cbfc19b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2182df1e-83b9-4960-991f-6accaf0e4ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec318f90-76b9-41f9-bef8-a6f5f789fd61",
        "cursor": {
          "ref": "496559a1-5133-4e2e-a419-a88ced02a82f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "97a86b40-9eb8-4786-9297-cc4e75570642"
        },
        "item": {
          "id": "ec318f90-76b9-41f9-bef8-a6f5f789fd61",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "04fb3282-51b8-49c8-a0a7-c71c99b2fbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cec55c-3d51-4363-a822-47e66a5a63f5",
        "cursor": {
          "ref": "6afed1e7-5045-4613-a1fb-d859de5a59fa",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e1ea207c-95f3-404a-ac81-b4029d5666a5"
        },
        "item": {
          "id": "17cec55c-3d51-4363-a822-47e66a5a63f5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9b4a4060-6127-4366-85fa-76a9d241a697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b62c2e-22ac-4da6-9d1b-72a2419a82d5",
        "cursor": {
          "ref": "01acaa9e-55cd-47b8-bff9-8657a343d83e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6b09b71c-093b-4349-9e02-323b60be4fe7"
        },
        "item": {
          "id": "98b62c2e-22ac-4da6-9d1b-72a2419a82d5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bf88c368-b935-4ae4-80f0-d190a541a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc1f30f-c492-4d83-b188-762dcf1bc166",
        "cursor": {
          "ref": "04dadbea-60cc-4fa2-8785-2e3570395fd1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a39256a3-0a91-4a81-a66f-2d12a9eaf1e1"
        },
        "item": {
          "id": "7fc1f30f-c492-4d83-b188-762dcf1bc166",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5716f49c-fa20-4cc6-96ad-26c54cfa73e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e61e6d5-893d-4029-a4d9-7966f8783215",
        "cursor": {
          "ref": "3d73aa58-3405-46c0-9551-f2c459304463",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "50b29f0a-5632-461b-b2b8-d7c5d809455c"
        },
        "item": {
          "id": "4e61e6d5-893d-4029-a4d9-7966f8783215",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "91a24994-6523-4ded-a188-e88db4a57460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520ac51c-0a4c-4b35-bc61-94afe1c14e1f",
        "cursor": {
          "ref": "ce94fea6-5d1b-487e-a00f-56b373b78454",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f2274863-1f1e-4d0c-82c6-5d9b446fdfe6"
        },
        "item": {
          "id": "520ac51c-0a4c-4b35-bc61-94afe1c14e1f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b2e6add1-7af1-431e-addf-cfe6e576064a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d2253c-1520-4a33-9332-c4ab6cb613f9",
        "cursor": {
          "ref": "43ba421f-3379-4837-b639-82768e1182c8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1b2e3f7e-9563-48ef-b4ed-cd043b1562b6"
        },
        "item": {
          "id": "38d2253c-1520-4a33-9332-c4ab6cb613f9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "df67e041-0b62-437a-a5bf-de04a1223db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ec2307-e455-4ff6-977f-180a2a8a380a",
        "cursor": {
          "ref": "80d08d6a-0e5d-437a-a872-b70c93bdff18",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "20cf005d-9b42-49f1-9459-fb2d2d5d9fb2"
        },
        "item": {
          "id": "36ec2307-e455-4ff6-977f-180a2a8a380a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0ba5b998-e53b-403d-b0f6-d573bcc31a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50b46b7-8c2f-4e10-a4ee-a9cf17ff487b",
        "cursor": {
          "ref": "2dde8139-ac63-4b72-90c3-39e617357050",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "774835ef-46c3-4d10-bed3-9c02c109eb86"
        },
        "item": {
          "id": "a50b46b7-8c2f-4e10-a4ee-a9cf17ff487b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "19e3f538-02d1-42ff-95fe-19b1b27cc386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64c2a03-d91c-4b62-898c-dd67849c92b6",
        "cursor": {
          "ref": "8108f438-b9c0-47db-a992-dc1c6d7211ee",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "92fd55f7-b460-4857-a296-ee6e261cfe57"
        },
        "item": {
          "id": "c64c2a03-d91c-4b62-898c-dd67849c92b6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b945f968-a5d8-42f2-b1c5-4b2e427de3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137d851a-f5a4-4f0f-8f8f-11823dc02ba0",
        "cursor": {
          "ref": "1667784c-f990-44a1-86f0-dd191fc8931f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "50ca4aaf-a293-40ab-9cce-83eb19b1e1d7"
        },
        "item": {
          "id": "137d851a-f5a4-4f0f-8f8f-11823dc02ba0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fbc0de32-1cda-40b5-95ab-1b9c7c03f74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde28564-3eb4-4644-9610-89ae12dd0357",
        "cursor": {
          "ref": "4fd52f69-4f79-4035-b827-e07868b08430",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "26c8883b-869a-40ac-bab6-31f8445a0332"
        },
        "item": {
          "id": "dde28564-3eb4-4644-9610-89ae12dd0357",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e6471ba9-5b95-4a51-ba7d-1d74af1c6747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9524d48-9af9-4586-bd18-794f6c2f055b",
        "cursor": {
          "ref": "ab1ffe80-f8ca-4bdd-8cb8-8b205388cc65",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "420214ce-0825-44b8-919e-e2f9b3c5debb"
        },
        "item": {
          "id": "b9524d48-9af9-4586-bd18-794f6c2f055b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3a5c441b-328b-4f97-b6e6-b5bcfccb692b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01951865-078a-456b-8d78-cc65a862721b",
        "cursor": {
          "ref": "03a7b618-a65d-426d-91c1-31d73ef169a5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "05519f6d-7573-4062-90f0-52897401432a"
        },
        "item": {
          "id": "01951865-078a-456b-8d78-cc65a862721b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "87c1bcd8-c186-4865-b160-ec5be77f766e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e364fe-c649-406c-b51f-ade70ff9610c",
        "cursor": {
          "ref": "772787e8-c985-412f-8da9-f787586d8db5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ac65eba6-a7f7-47b0-9329-1b71f41cdb77"
        },
        "item": {
          "id": "f8e364fe-c649-406c-b51f-ade70ff9610c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0084918b-0e50-4f11-9f6c-d5a0eaae48f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f94d2db-de6c-4768-b4a1-8d3bf8b96942",
        "cursor": {
          "ref": "6a2ba937-96f3-45d2-a709-1fede2ec78a4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "148f4305-b3ba-4c1b-9e53-4d1fb9c6b845"
        },
        "item": {
          "id": "5f94d2db-de6c-4768-b4a1-8d3bf8b96942",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c33baa05-013d-4b10-aa24-97dd1676620d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d0f0af-d365-4a3a-9e32-9ac926baa4c9",
        "cursor": {
          "ref": "ebe77312-feb6-4fdc-8b67-c07b0c1722c5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a08e1017-6fd1-4c7f-8ca7-b72c0ba3ad16"
        },
        "item": {
          "id": "79d0f0af-d365-4a3a-9e32-9ac926baa4c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f83ce123-f9f8-41a8-bfb5-e2e7b4badb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b382124e-9d0b-407f-8085-22761b0f45f5",
        "cursor": {
          "ref": "aa7c6463-5704-4eeb-9a3f-c0fdc1aba3d3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "890cb86d-3ff4-4c72-a4ba-5721f4f9c334"
        },
        "item": {
          "id": "b382124e-9d0b-407f-8085-22761b0f45f5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fcde856f-c5e7-4c3a-b04a-0aef2d190d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531ac7db-862d-474e-8137-f781fb09a417",
        "cursor": {
          "ref": "c420f56f-abcd-4206-88ba-c5f7665e646e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8bdea45f-1be4-484d-bca1-d94c78e41f4c"
        },
        "item": {
          "id": "531ac7db-862d-474e-8137-f781fb09a417",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce9a5cdb-96a3-4957-8903-c13299873904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37491b08-6dc6-4bc3-bb10-2d056d62d2b9",
        "cursor": {
          "ref": "55fd06b2-72ef-4a01-bcea-23765321bac6",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "68d6f67a-525e-45f4-9a23-0e980f97db72"
        },
        "item": {
          "id": "37491b08-6dc6-4bc3-bb10-2d056d62d2b9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "59164673-2636-4f60-b84c-27114625f53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc0f80f-c985-4122-838a-bf061026513e",
        "cursor": {
          "ref": "ecfc5161-d899-49c7-8a6d-729e98da66ec",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fd9615bf-8157-4b00-8129-4c7b98dd369f"
        },
        "item": {
          "id": "dfc0f80f-c985-4122-838a-bf061026513e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f0a3348e-a144-4fdb-b09f-7026dad4d99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f9874e-02b1-4cbf-a619-ed2d974e75bd",
        "cursor": {
          "ref": "da5c339b-6f65-4f10-94d9-2bda89520629",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6f10bef2-fb2a-469d-b7ee-76972614d63e"
        },
        "item": {
          "id": "18f9874e-02b1-4cbf-a619-ed2d974e75bd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f5791582-7755-4da8-9cd4-73b8c12caca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c36b88a-50e6-4b31-83a4-e2b411427a45",
        "cursor": {
          "ref": "60c1ebb7-e2a0-40be-bc4e-7772cda21942",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "675eb798-a097-4650-8392-e8c726462126"
        },
        "item": {
          "id": "2c36b88a-50e6-4b31-83a4-e2b411427a45",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ad011d8e-8c69-4825-8727-3789048f21bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2e0ea1-f7e5-414b-9b99-46d1eea39c2b",
        "cursor": {
          "ref": "0fc9973b-fabb-43a3-878c-f8665c826884",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6b2962f9-1062-4f7e-afea-daa57bd6c485"
        },
        "item": {
          "id": "2b2e0ea1-f7e5-414b-9b99-46d1eea39c2b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cbddf115-80e1-4b38-83ec-9cd5ea7ee97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1df67b-bb53-4cab-906f-d2ab1611ba7f",
        "cursor": {
          "ref": "18fd6f8b-84c6-40b2-b506-c89d420fb8ad",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6743d943-9c62-410b-a786-3e295f50d272"
        },
        "item": {
          "id": "2f1df67b-bb53-4cab-906f-d2ab1611ba7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5317969a-f29d-4431-8bb9-96c20a1002a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f62639a-0412-4e76-8ab9-791942a9084c",
        "cursor": {
          "ref": "c44dccd9-199a-4158-b1ab-0448eec8b48a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d8981cb9-7775-4057-bc27-9479999a01e1"
        },
        "item": {
          "id": "8f62639a-0412-4e76-8ab9-791942a9084c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "88ed2325-e021-4de7-ba64-570030410adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3c1051-7567-48d0-8fd7-86da4c7f4840",
        "cursor": {
          "ref": "46e65693-e0ce-4435-b921-64f72aa159bd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0090fb1b-b337-4fe0-bead-8ca5a84a79d7"
        },
        "item": {
          "id": "fd3c1051-7567-48d0-8fd7-86da4c7f4840",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3e6517ed-cbca-4fcf-8205-6f3d3676e510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a65891-03a4-4aa7-8d39-267fd7d0e086",
        "cursor": {
          "ref": "b65e0665-0a7a-4ee2-9ba0-20070deb3373",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0c36f5a7-8ccb-4c36-af37-de6bbf39c80d"
        },
        "item": {
          "id": "39a65891-03a4-4aa7-8d39-267fd7d0e086",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "711f8555-f3a0-4672-a033-9a3589f49586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab674a48-4894-41d5-b0d8-8e3aa9e02aeb",
        "cursor": {
          "ref": "9c991966-a861-47af-ac83-9fb7c18d0eae",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4d92a280-8594-4483-bfa5-125a47e48fc1"
        },
        "item": {
          "id": "ab674a48-4894-41d5-b0d8-8e3aa9e02aeb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "31f00b1b-3685-421d-976c-3d67f0be1b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be88b30f-7dd3-418f-bc32-d1959d5f79db",
        "cursor": {
          "ref": "823d03db-f7cf-4f3e-8253-9e75ab98f64b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2e4b4468-0eb8-4fab-8823-8058a9b80bcc"
        },
        "item": {
          "id": "be88b30f-7dd3-418f-bc32-d1959d5f79db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f0f4c972-4bf8-47f5-bec4-e6e0c4363c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4bdc2c-b308-42e0-88d2-43e32dead122",
        "cursor": {
          "ref": "91373650-1c52-4f1d-b6ce-6a31b88bf1bc",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7fcefecd-c1dd-42e8-95bc-cf05a4a3d92b"
        },
        "item": {
          "id": "9e4bdc2c-b308-42e0-88d2-43e32dead122",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9bf2a3c8-9979-4624-9370-dee43ad105f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a94de7-f8a8-4f17-84dc-d1d5421c32d4",
        "cursor": {
          "ref": "4e1a70ee-0faf-47d1-9750-a60bd51cb548",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "df1d1848-3bad-4806-8360-9b0649e1c64f"
        },
        "item": {
          "id": "61a94de7-f8a8-4f17-84dc-d1d5421c32d4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "625b9df9-f71d-4e0c-8deb-ef3d8646d9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfda00e-3a30-48c4-8fba-c744a904fec6",
        "cursor": {
          "ref": "364fac9d-e526-4b16-89c0-b815777a6a69",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8398eab1-50b9-49ea-8454-bda6a9f1eb59"
        },
        "item": {
          "id": "3bfda00e-3a30-48c4-8fba-c744a904fec6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "18899590-5feb-4d7f-9821-3113767331e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066e36bd-564c-47ac-839d-ecdedefd20de",
        "cursor": {
          "ref": "9c6676dd-6cc1-4cd9-a003-af3ebb93135f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8a972825-6b85-4869-a8e6-ebb01352269f"
        },
        "item": {
          "id": "066e36bd-564c-47ac-839d-ecdedefd20de",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "30bd7baf-bffe-4435-8988-a3a671a40d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f9e05d-8df3-456b-a673-0db44c0f0b03",
        "cursor": {
          "ref": "e814212c-88d5-4eba-8e5e-aa2d25c70b10",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fb76cb60-5a72-4670-a230-290fc25c8d93"
        },
        "item": {
          "id": "73f9e05d-8df3-456b-a673-0db44c0f0b03",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1c68a478-8783-44b3-b0c5-3f45d7f66afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93401ba-5a72-462d-a597-5aa1783f1e69",
        "cursor": {
          "ref": "3ba14d93-0c56-44f5-bb67-ed34325cb744",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2aa033a0-b73d-435e-a2ca-68fb5ec14391"
        },
        "item": {
          "id": "e93401ba-5a72-462d-a597-5aa1783f1e69",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7bf9ad91-4226-4c4e-afda-bf4c1e1444f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa810f1c-d1da-450d-a99b-98dbc6343355",
        "cursor": {
          "ref": "5d57b899-3bfa-47f4-be3a-1e5b03c1ba59",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3bf9aeb6-e43e-43db-acda-bd20bbe40cbc"
        },
        "item": {
          "id": "aa810f1c-d1da-450d-a99b-98dbc6343355",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "620ca1ab-05d4-4cf7-a63d-9f3b82b166a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddd4bc5-afcf-4974-bc4e-0f062b27986b",
        "cursor": {
          "ref": "d3f81a30-42ad-45a6-8877-e3de7664beb7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8f0926ca-4826-411f-9da5-0e5f9cd6a337"
        },
        "item": {
          "id": "fddd4bc5-afcf-4974-bc4e-0f062b27986b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dcfb4652-1330-4b3a-b178-b17549180a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a22e9fc-179c-4147-8576-b74afeafe6f2",
        "cursor": {
          "ref": "5303ebbe-3a76-40a9-a04d-95f7ccb45adf",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "45bd1361-b00b-4e48-a5ba-a6ba99f2f8ae"
        },
        "item": {
          "id": "4a22e9fc-179c-4147-8576-b74afeafe6f2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a143eb2b-53f8-4a6d-8015-a799958e782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eb87ac-6dbe-429e-b128-bac22fd60a55",
        "cursor": {
          "ref": "f0ef8744-992a-44f1-b048-0649786c54e7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d0ac984f-da97-4060-b4b3-af2afdcb993f"
        },
        "item": {
          "id": "f4eb87ac-6dbe-429e-b128-bac22fd60a55",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7db5d39d-8ec1-4c5b-9792-8e72b60cfbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50030488-0529-458e-aaa5-92ac8cd858ea",
        "cursor": {
          "ref": "85aeeaa4-ad9d-467c-9e04-70f97418d921",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "14e085a2-71ec-4cfd-800b-b5e2aa3219fd"
        },
        "item": {
          "id": "50030488-0529-458e-aaa5-92ac8cd858ea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "67cc6138-7ee3-4af9-9e99-4c37744542c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41b6017-ab4e-4491-8b1d-93df882d00f0",
        "cursor": {
          "ref": "13a7d4cc-95e4-4613-a282-3e438851bc3f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "57f543d5-001d-4a70-96ab-be476aa21964"
        },
        "item": {
          "id": "e41b6017-ab4e-4491-8b1d-93df882d00f0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3b8c17fc-32c8-4039-b979-eff6195ce432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4974377f-fb58-4094-a701-9fd608493aae",
        "cursor": {
          "ref": "74940071-d2e0-4bac-b677-a6761b570bcb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6e3b45bf-503c-453c-944d-63e6e92e6c4d"
        },
        "item": {
          "id": "4974377f-fb58-4094-a701-9fd608493aae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "748e5f09-cf88-4a77-911b-cc5e39a91934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc82c1e9-689d-41c6-889b-e55915a5929f",
        "cursor": {
          "ref": "bbff2313-e9e4-49bc-88a4-ce5b7dddb72e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "313928df-82c9-4801-96a5-4fa144c5cfa0"
        },
        "item": {
          "id": "bc82c1e9-689d-41c6-889b-e55915a5929f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bb11aa17-263d-4d3e-b919-a2a9c9c9de43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c7a5d0-bd4c-4f47-8fbb-1c457c987a1a",
        "cursor": {
          "ref": "4f983883-b38e-4cc6-9fc8-4af908fabbe4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "499b432d-f150-4c21-b2a7-d469bbc6c454"
        },
        "item": {
          "id": "b0c7a5d0-bd4c-4f47-8fbb-1c457c987a1a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ee60039f-9157-48bc-bc84-183ac1a06bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d232ed-108e-4fe1-93de-ae645b9ff994",
        "cursor": {
          "ref": "f2702eb3-f7c4-4bd0-acf2-984f44739b52",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "86d1f199-d6b7-4490-bd69-c301224abccc"
        },
        "item": {
          "id": "28d232ed-108e-4fe1-93de-ae645b9ff994",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a9bbce35-56b9-476c-86c7-882c0332fcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0995568e-9fc6-478a-9980-4335d13466f3",
        "cursor": {
          "ref": "d5532fb4-1f10-41c3-afaa-a25f4db1e41f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "388d7a41-b8b2-4fe6-a869-6d333bbff28e"
        },
        "item": {
          "id": "0995568e-9fc6-478a-9980-4335d13466f3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b485f2c1-a41e-41e2-9e35-15ec7eda31b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679575fb-3831-4f19-b17a-8251e1b1a774",
        "cursor": {
          "ref": "655f3224-9d07-4dee-a4fb-095075d2ce8e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7e76fcf3-36e1-4266-8a38-184fac3c5617"
        },
        "item": {
          "id": "679575fb-3831-4f19-b17a-8251e1b1a774",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "306dcf88-4f7f-488b-a254-c3c92d361a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4ef9d0-3816-4b63-8367-2fbbc5b01e07",
        "cursor": {
          "ref": "a6de9445-ea38-4b5b-97d7-80b5ed07b7cd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "96b4e4e0-a275-4cd5-94a4-f418c4911e50"
        },
        "item": {
          "id": "0d4ef9d0-3816-4b63-8367-2fbbc5b01e07",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8a5070af-e76d-4105-9f43-2fbb3b265d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedb7bf5-03df-4fbb-9d85-f55f1f44aa1c",
        "cursor": {
          "ref": "ff8599e0-471c-4ae1-8cc7-f9d13ecc90e4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "23ca1c29-b127-4e51-a69c-f61d67696a96"
        },
        "item": {
          "id": "dedb7bf5-03df-4fbb-9d85-f55f1f44aa1c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1a2cf36c-82d4-4e8e-bec2-03f4ecb7593b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a3c1c8-42f5-44ce-8070-52044ec587d6",
        "cursor": {
          "ref": "a3bd6870-c1c1-45e1-8db6-97edd429c4b8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "29e98237-8362-43e0-8830-6520298abfbb"
        },
        "item": {
          "id": "72a3c1c8-42f5-44ce-8070-52044ec587d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6803755e-fd0e-4a49-afb8-b9a16804b711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572051cd-0d60-49a4-a7fc-197907baa8e1",
        "cursor": {
          "ref": "ae93554b-84c5-4721-8653-e3d2ce0a313b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3a8bf639-73f4-48e7-b962-29ca7a65a49f"
        },
        "item": {
          "id": "572051cd-0d60-49a4-a7fc-197907baa8e1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d18c4c5c-60a6-4bfc-a787-b32e9e695647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb72483-8055-4f87-a6e0-12310c185aef",
        "cursor": {
          "ref": "12b7ce5f-dd14-4338-a328-75d7c61debcd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f1e82a47-11f0-4211-afe5-73628996ddcd"
        },
        "item": {
          "id": "2eb72483-8055-4f87-a6e0-12310c185aef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "706ee6bc-7911-4e7c-a840-81cfa7742e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc1ba04-aa97-46fa-af44-a7ced399c577",
        "cursor": {
          "ref": "cc9dac00-781e-487b-91ea-43a820f737b6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ba177143-fb9d-4b6b-af5f-cf5493c4c14b"
        },
        "item": {
          "id": "afc1ba04-aa97-46fa-af44-a7ced399c577",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5b1258b7-5c3e-417a-b50f-ee5d95c7a682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d448b180-cbd8-4230-b52c-5c966d5f6638",
        "cursor": {
          "ref": "0c6f6986-d090-4b25-be15-30d2667c61f4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "91f28747-16a7-48d0-b94e-667d066b3126"
        },
        "item": {
          "id": "d448b180-cbd8-4230-b52c-5c966d5f6638",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3a9b154b-e3a4-43e7-94bb-d72b45fe8590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6225228d-b5cc-4cdc-b19e-4f4ff99fb9e0",
        "cursor": {
          "ref": "6fe7f2b6-bcc8-4cc8-b075-58c9626b1c0b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2318311c-356f-43a6-8d58-257b6d911a6e"
        },
        "item": {
          "id": "6225228d-b5cc-4cdc-b19e-4f4ff99fb9e0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3dc0ff05-d063-4901-8f01-425826f14c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1568907-12bb-45dc-a078-43d6fcd6114b",
        "cursor": {
          "ref": "8b7ec849-41d7-4486-970f-87d280a68863",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9353e6ad-8c82-4289-96f4-93e7744706c2"
        },
        "item": {
          "id": "f1568907-12bb-45dc-a078-43d6fcd6114b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "08dee0c3-b330-4a6a-9b15-438d9d7d0846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa6bcdc-ded4-4c80-9351-2dc5626bfba8",
        "cursor": {
          "ref": "9e02faaf-b307-4b1e-8298-8ce71bb646c0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "95956546-5e03-4ac4-9f54-91957c8ee548"
        },
        "item": {
          "id": "cfa6bcdc-ded4-4c80-9351-2dc5626bfba8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "42540221-53d3-4720-8900-9563b4aeb6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bf8dce-1ab5-477b-a858-5aba8c3dfc59",
        "cursor": {
          "ref": "533b68cb-036d-4c2e-8fa3-05d7343b5762",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3cb5e897-1d01-4df8-a340-a3d5e50769cf"
        },
        "item": {
          "id": "c6bf8dce-1ab5-477b-a858-5aba8c3dfc59",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b9dbf75f-ead7-4d73-b4cd-e9ad92f4a771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87b48b5-1f24-45af-8187-754281af54e3",
        "cursor": {
          "ref": "6fcf6705-581b-4837-9ebc-b212c88ee226",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6df7485f-3779-4a21-b478-f0ba78834f59"
        },
        "item": {
          "id": "e87b48b5-1f24-45af-8187-754281af54e3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4c25933d-8b25-459f-84a5-72dd4ad7b4ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097369be-30d0-4f84-896e-d9fffc99caa3",
        "cursor": {
          "ref": "d3e34423-1094-4ae0-a8fc-1bfa5036667f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "04503be9-369e-4522-9b0d-9fc2036fdbae"
        },
        "item": {
          "id": "097369be-30d0-4f84-896e-d9fffc99caa3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2c591ec0-427e-4d99-a745-5c2ee407b9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e5510013-1c3e-4883-9043-0da4cf54eaa8",
        "cursor": {
          "ref": "110daed9-44f8-4ace-bdf6-2a055f77171b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "647079b2-a7aa-4e10-91ee-ebaee242defc"
        },
        "item": {
          "id": "e5510013-1c3e-4883-9043-0da4cf54eaa8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e13723b2-19b4-4ddb-aa58-96a2547071da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "cd39898e-21fd-4b7d-ac6f-955a58081eef",
        "cursor": {
          "ref": "0f76f68d-2a08-435d-9518-c0d1b4a50bd3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d848a1c9-61be-4346-8096-8e69f5388ae8"
        },
        "item": {
          "id": "cd39898e-21fd-4b7d-ac6f-955a58081eef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "90669cd7-a6c3-411d-81cb-f1be88dbda85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "32648819-72a7-4adf-a3e5-addbdef173a3",
        "cursor": {
          "ref": "71051e80-f351-4ef6-a5f6-f4dc3080c561",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f6f53d93-2ca1-4953-a044-6664fcec697c"
        },
        "item": {
          "id": "32648819-72a7-4adf-a3e5-addbdef173a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "68d38508-6db8-4774-a82d-c124f8e22b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e96ea0f7-37f6-4487-9c2d-a3fcaf4c8121",
        "cursor": {
          "ref": "be43bf5e-dfd1-47f4-b7bb-7c5b3644b142",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a53932c2-1f75-4ed5-bdcd-792172567eb0"
        },
        "item": {
          "id": "e96ea0f7-37f6-4487-9c2d-a3fcaf4c8121",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a50f15bb-7eda-4b9f-9f00-e353e2e15e1d",
          "status": "Created",
          "code": 201,
          "responseTime": 8923,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "566b3b28-5031-482d-a3fa-d5e2bd33c5f2",
        "cursor": {
          "ref": "3e39e1d4-2735-4ed3-a37c-162fc0d7418e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "93f877ff-9a51-4432-9648-70751026e517"
        },
        "item": {
          "id": "566b3b28-5031-482d-a3fa-d5e2bd33c5f2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "574bfccf-8984-4e01-8007-7e9155a2acd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ccd5e117-c745-401b-a2ed-9f0335809288",
        "cursor": {
          "ref": "f2c2d6e8-7fbc-4d98-bb83-d7c76a065d9d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d3e1a9e4-078d-440f-842f-e0993c236c63"
        },
        "item": {
          "id": "ccd5e117-c745-401b-a2ed-9f0335809288",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fb652713-7c93-4850-a480-c73913b89ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "94d8af35-b355-404d-aa1b-2f03d7eeb1b5",
        "cursor": {
          "ref": "d7a3e55d-6d94-4bc6-8dcd-6793896f1b12",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "41cc7b49-93e1-4821-b4ee-4c41b7c1ae69"
        },
        "item": {
          "id": "94d8af35-b355-404d-aa1b-2f03d7eeb1b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "444444be-329f-4ef5-a030-b48b3055f12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a577a738-9afd-4813-b10f-f6317fb23da8",
        "cursor": {
          "ref": "21517e69-d091-4a72-a743-ab7a837937b5",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1627235c-98b0-43dd-a142-318feea5e3bf"
        },
        "item": {
          "id": "a577a738-9afd-4813-b10f-f6317fb23da8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cbeb1c46-83ac-4497-acb8-e35417f81261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56cc5da-857d-4a04-829f-be0235daeab8",
        "cursor": {
          "ref": "b7ac60dc-f747-4056-803f-bfaff3f7d3f1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5dbde46d-3443-4526-9547-2c2e09d074f2"
        },
        "item": {
          "id": "d56cc5da-857d-4a04-829f-be0235daeab8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "47dae348-d495-4d1f-8404-bf6e8768e90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb8fdb1-60a3-473c-8c8e-cc056f288c4b",
        "cursor": {
          "ref": "037276af-17bd-4441-b4dc-c5eb8eb03641",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3cde580c-4eae-4085-8d9e-8402aa818372"
        },
        "item": {
          "id": "0cb8fdb1-60a3-473c-8c8e-cc056f288c4b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7beab611-e607-473b-b1f7-c49f8e36506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8943e5c-1fae-4aaf-803e-51520357956f",
        "cursor": {
          "ref": "bdfda9da-c7c5-4e46-816d-49f0dc831c50",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "856b34bd-621d-4ab7-b9e5-2de0af11cb56"
        },
        "item": {
          "id": "f8943e5c-1fae-4aaf-803e-51520357956f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "faf5a5f1-32d9-4ade-b983-06ae03397c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5ce714-3f5d-46e9-bf91-7bdbd58fb09f",
        "cursor": {
          "ref": "963dff60-bf9c-47f6-bd8a-4a23a4401121",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2977ed67-24a7-4a7e-b7ba-0ff15e18e667"
        },
        "item": {
          "id": "db5ce714-3f5d-46e9-bf91-7bdbd58fb09f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a9b91372-9fd6-4dde-84c4-d9df1b0f5f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9a72cf-c155-4f39-b47b-46dfb8fa3b41",
        "cursor": {
          "ref": "be8d7790-8ca6-48f1-99dd-ba9c723aec2f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "81145607-bb42-4cda-b920-cbc53512632f"
        },
        "item": {
          "id": "6d9a72cf-c155-4f39-b47b-46dfb8fa3b41",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f14b8215-7be4-4088-9622-c38170c082c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0b77ac-a7eb-4b7e-bb21-53b3554ecc5b",
        "cursor": {
          "ref": "aa5ddf59-3032-4d83-b53f-22b24da6fc5f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3207ecde-3a26-4c85-8091-da76edbe87fb"
        },
        "item": {
          "id": "aa0b77ac-a7eb-4b7e-bb21-53b3554ecc5b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ab77f49b-7785-4546-98e6-928682153e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc232b4-b622-43a4-a6c2-a69e63bd4b75",
        "cursor": {
          "ref": "99704999-32b0-49ab-962d-4fa54b03402e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2edcdcab-edd9-4ac3-868d-b44aafe58c7f"
        },
        "item": {
          "id": "cfc232b4-b622-43a4-a6c2-a69e63bd4b75",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "40588421-d87d-4c2d-9d1f-3fa02aa87520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e411fc9-a3fa-4e54-89bf-0d426584a785",
        "cursor": {
          "ref": "1f7fe207-5e4a-4c21-a957-2ef145eb0bfb",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d8c6a772-2848-4770-9dbd-ee3dc97f8300"
        },
        "item": {
          "id": "7e411fc9-a3fa-4e54-89bf-0d426584a785",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8c1eb514-63ba-4715-a334-41bb1f32ec57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b2252d-c12d-456c-92bf-73e109a1ec85",
        "cursor": {
          "ref": "ce674046-1330-48e3-9020-6ab864c49dd9",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1ff5e496-c515-47dd-bc23-9ce34e8984fc"
        },
        "item": {
          "id": "43b2252d-c12d-456c-92bf-73e109a1ec85",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3f9f78a8-21c1-467c-922b-df4e02fe3ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad84805-46fe-4d67-a6bf-998a5910a3ba",
        "cursor": {
          "ref": "8f56b2e7-b9c9-49a6-9b57-57949ec8ddb1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "27488697-ceee-4a26-a4b9-deb92b4d0c44"
        },
        "item": {
          "id": "5ad84805-46fe-4d67-a6bf-998a5910a3ba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5cca772e-98b9-4d61-a060-4465d4d8f665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8162e28-b3c8-43ec-8f46-ce09f4b68f67",
        "cursor": {
          "ref": "9f58b4bf-9426-4ed7-8b88-45e19b349f7a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "21073a8c-6970-4389-af27-f29007ebb30d"
        },
        "item": {
          "id": "d8162e28-b3c8-43ec-8f46-ce09f4b68f67",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "96fbaa2a-7b48-4c95-a9ed-7b769e2c3263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c40acc-9c0b-4945-8822-d537b5af6c09",
        "cursor": {
          "ref": "a1d79088-0e49-4a3c-89f3-c4e0446bd9d8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eb06bc1a-b959-44bf-b1d8-b04c2fe2fe2b"
        },
        "item": {
          "id": "50c40acc-9c0b-4945-8822-d537b5af6c09",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0e52ca9b-9283-42a5-b613-9a2939b01c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febef66b-1f3f-40fe-8aea-f4eb10d9cf0b",
        "cursor": {
          "ref": "2661a925-8b1d-40e3-8fa2-8a1c68b2eb27",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "123629ae-f87b-4f0c-850e-1cfbc310c2ab"
        },
        "item": {
          "id": "febef66b-1f3f-40fe-8aea-f4eb10d9cf0b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c94489f-1b4a-4512-8c49-04f878d47fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598e0b07-f5e2-4294-a539-f6fb6bb279b1",
        "cursor": {
          "ref": "ea7bdffb-d4c9-4644-b509-0fb673ad64a8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cdedd106-5776-41ca-a10a-bc6ae445c985"
        },
        "item": {
          "id": "598e0b07-f5e2-4294-a539-f6fb6bb279b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0632d9cc-e1bb-4a41-9098-827a2dd8922c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5d74f6-7643-43ca-a49a-2e9d85d7f7af",
        "cursor": {
          "ref": "e31a7906-d305-4348-929e-7a05b0d4d107",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7482e512-0a45-4c79-90eb-892520c858bb"
        },
        "item": {
          "id": "ae5d74f6-7643-43ca-a49a-2e9d85d7f7af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "08452c0b-9314-4ab7-882c-df2fc0fa0143",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c322cfc5-4b97-4e00-bfbc-236c7f394f30",
        "cursor": {
          "ref": "0fe6c845-3865-4201-ac00-61dcd8e9a9bb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ad6253b5-9506-4d8d-8765-228ebf7b089d"
        },
        "item": {
          "id": "c322cfc5-4b97-4e00-bfbc-236c7f394f30",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "30b7ff26-8183-4d48-ae9d-c52b109426f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800fdc43-f271-457d-93e3-37925e0ff147",
        "cursor": {
          "ref": "2f58d7fc-1ec5-4d23-8334-b7d037d2a81f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d1284164-88e4-469e-92f5-42d0014fa4e5"
        },
        "item": {
          "id": "800fdc43-f271-457d-93e3-37925e0ff147",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8ae69b3-ad1f-4119-a003-4f8a4c37e25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e609d1-ee3d-48a2-ba2f-9de8e6452606",
        "cursor": {
          "ref": "5d308554-72c3-4b61-a74c-96a1eea1ca2b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2571e1fb-5eae-4593-ab91-a06e10d300d8"
        },
        "item": {
          "id": "29e609d1-ee3d-48a2-ba2f-9de8e6452606",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1912f1c-43be-41b4-8a4d-70d40cdd2303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b2f862-0534-4270-a355-432b564fb5f9",
        "cursor": {
          "ref": "ad72c1f4-0701-4cad-a122-ebe33746e216",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7ee0c953-3a38-4dc9-abfc-f9486bf20eee"
        },
        "item": {
          "id": "d3b2f862-0534-4270-a355-432b564fb5f9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ca01875-5407-4306-8f1d-812a7ead3320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879013fd-8780-4674-b4b0-5574f1cd367e",
        "cursor": {
          "ref": "0605b1d7-79f1-4c94-86b0-cbb71af16bb6",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0a7eec2b-40d7-43be-a529-dc3f02db2bae"
        },
        "item": {
          "id": "879013fd-8780-4674-b4b0-5574f1cd367e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "feefc99a-cca4-4538-b59f-d1699b22082d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ac884b-9a57-426e-8f76-f3ee60d83dc8",
        "cursor": {
          "ref": "41de61b1-b5b5-4b15-8b23-ea711e29247e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e11fa7bc-47f7-4c5d-acbc-4986bf9ba72c"
        },
        "item": {
          "id": "28ac884b-9a57-426e-8f76-f3ee60d83dc8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a2ee1672-d365-4b01-ae4d-64cb88278262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d01c1f-00ce-4512-a5da-8bee7a8cda0b",
        "cursor": {
          "ref": "835b9cf7-2f22-48fc-a241-09f8126a2c9a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1e2ff36b-d0da-4b6a-a374-e87cc3ea3a40"
        },
        "item": {
          "id": "c6d01c1f-00ce-4512-a5da-8bee7a8cda0b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0d6cc762-7fa1-4387-bb60-3d8f7c89c8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4519a1a9-1886-4e5d-b2af-c61e9d786f72",
        "cursor": {
          "ref": "9d993cab-8677-4a2a-aaad-0936e09a84a9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "79383d48-ebc8-40b5-a0e1-0e31341c4d1a"
        },
        "item": {
          "id": "4519a1a9-1886-4e5d-b2af-c61e9d786f72",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dfb37951-7e5f-4355-b5b4-2910f5ed06f7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d9b4f7b3-cb19-456b-8eb4-d3794d773a16",
        "cursor": {
          "ref": "c869ec6e-f3b1-4851-8404-cbc4cb961090",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f0a34c60-29af-4a13-8906-d9d564e7ddd2"
        },
        "item": {
          "id": "d9b4f7b3-cb19-456b-8eb4-d3794d773a16",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "56ca0b70-c769-49b8-b223-a0713106c459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33d50aa-8bd4-43ae-8f19-fb8e2786fe22",
        "cursor": {
          "ref": "334b2321-69d4-4869-b672-05fd8c7bbd93",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b9e0e592-880e-4478-adbb-c19f17bdaa50"
        },
        "item": {
          "id": "b33d50aa-8bd4-43ae-8f19-fb8e2786fe22",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bb70e701-d685-48bd-9818-3c0bafbf2f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e35725-deab-406f-9e3b-e380cdf9642d",
        "cursor": {
          "ref": "79bef97c-b520-4f86-98b1-9164ed5fa715",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "746b3255-076a-41b5-bad8-bf37634c0662"
        },
        "item": {
          "id": "68e35725-deab-406f-9e3b-e380cdf9642d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e58fce0e-bd93-4859-8f9c-2e538a003e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e44fd3-5e74-47be-8d2b-509eb9d96f2a",
        "cursor": {
          "ref": "2ee3ade1-fdc2-4720-bed0-07d57b2e4609",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0cf5127d-f886-4709-b884-01cbff50affc"
        },
        "item": {
          "id": "a4e44fd3-5e74-47be-8d2b-509eb9d96f2a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "025e3095-711c-450f-9015-e1d920297c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ca0953-68cd-4417-9227-c0af617f8f12",
        "cursor": {
          "ref": "99fe54e9-528a-4f29-8831-68e3123ca329",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e50c6d20-6b54-4680-8c33-cd30216abec8"
        },
        "item": {
          "id": "92ca0953-68cd-4417-9227-c0af617f8f12",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "de94d5e0-3f89-40c0-baaf-5f3c57a8c871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb192311-87e1-45dd-8717-1bb1f0116dcc",
        "cursor": {
          "ref": "b3d7f0be-3fa5-40f2-9a6e-e3aa0353c8c5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a7f63f98-1483-4604-a026-cd5a346174d2"
        },
        "item": {
          "id": "bb192311-87e1-45dd-8717-1bb1f0116dcc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "795bca23-8c99-4c1f-9b90-df15bb906d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2ef8c-50c6-4254-a5d8-4ed3d77f9a62",
        "cursor": {
          "ref": "c5545adc-4c6f-44d8-85c8-6be920a0a78c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fd995c8b-329d-4080-b334-28f492b92668"
        },
        "item": {
          "id": "09c2ef8c-50c6-4254-a5d8-4ed3d77f9a62",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2f90bd81-03f7-4617-b6d4-1883886db08a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "74d15d0b-05c7-4abe-80d8-850a5978abbd",
        "cursor": {
          "ref": "7b0f5382-5b85-41e4-ba46-17f3c0b6ab54",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3cea392a-413c-475f-828a-021dd130e25e"
        },
        "item": {
          "id": "74d15d0b-05c7-4abe-80d8-850a5978abbd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fc93d595-b370-49ed-9a8c-c016735ec479",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ac88dc57-75c3-429a-bb6d-2d209260a4c8",
        "cursor": {
          "ref": "5df1fa0b-0863-4be6-b7d0-079114fec7ca",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d0e5685a-020b-4a7e-ba37-5e41a0548992"
        },
        "item": {
          "id": "ac88dc57-75c3-429a-bb6d-2d209260a4c8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "74e4bf30-d66d-4a64-b578-7ef96a31a5a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "bdf3e14b-afd9-41ac-a6d9-c6d603e1efa7",
        "cursor": {
          "ref": "8f6d86cd-2522-422d-97b0-3c4aa4ac12ec",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "115d4df1-aa20-40d0-99c9-5a1da242d02e"
        },
        "item": {
          "id": "bdf3e14b-afd9-41ac-a6d9-c6d603e1efa7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "95837fb2-af99-4bfc-9707-ee65a6209aca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b44fcbe6-5030-49a6-ae4d-d3386787992f",
        "cursor": {
          "ref": "8decfb78-f4d5-4d5e-930f-d7945bfeae11",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4969e566-98ca-40a9-b67b-d1c6dc4a2c85"
        },
        "item": {
          "id": "b44fcbe6-5030-49a6-ae4d-d3386787992f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d08a5505-10e9-4641-bfcf-d5da5e9fd8dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "5ccb047a-ff2b-4d40-b3f0-a0c8c057462c",
        "cursor": {
          "ref": "d8e485d6-57cb-4547-b2b2-a59be469f171",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1ff4293c-1215-41a6-8798-60c17771c815"
        },
        "item": {
          "id": "5ccb047a-ff2b-4d40-b3f0-a0c8c057462c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ab6922a1-3ff5-4742-b9b9-2fbcee311384",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "94270a9e-4ced-48c0-8bae-1ccb4054c409",
        "cursor": {
          "ref": "2c791e34-4aec-4d9f-821b-252469edec09",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a5902f57-535e-48c6-83d4-48a62b009aad"
        },
        "item": {
          "id": "94270a9e-4ced-48c0-8bae-1ccb4054c409",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9beeafac-a626-4a7d-bea3-e3b5e08493b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8fb7a4-8a54-4f85-8afb-2fd708e7f258",
        "cursor": {
          "ref": "8d55ba1b-57f2-4582-87ec-08c851dd1b04",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "075b2846-33a7-4f5d-94dc-21627f54c1a9"
        },
        "item": {
          "id": "ba8fb7a4-8a54-4f85-8afb-2fd708e7f258",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "11a89084-e80a-4344-b2d0-37d691584ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d95bfd6-aaba-4e9e-ac69-a4240e3878d7",
        "cursor": {
          "ref": "ae8cf488-60bd-42e4-a473-67c4925ef666",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3a764204-301e-46e5-af32-be4e695f9900"
        },
        "item": {
          "id": "4d95bfd6-aaba-4e9e-ac69-a4240e3878d7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "95f5fed4-00b7-406c-b75a-8e3005f64bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d333f362-1ea5-4fa2-8709-662ac85cbe72",
        "cursor": {
          "ref": "46cfbcc7-beb0-465a-8316-c16c95b980e6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "16336fff-711c-42ba-9780-44ecc971e1c4"
        },
        "item": {
          "id": "d333f362-1ea5-4fa2-8709-662ac85cbe72",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "055cb6de-5397-4514-8057-8e1a7ae4e7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade18228-0b13-42f2-af12-6ebd88b7346d",
        "cursor": {
          "ref": "617e2eda-5979-4dae-8ce3-ee120781a5de",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "67ea19a4-d663-4302-a698-eb2870636d46"
        },
        "item": {
          "id": "ade18228-0b13-42f2-af12-6ebd88b7346d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "822d3d99-0686-434e-8f02-d59b87c6de6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc16fbaa-191c-4151-bff7-3cc2ad8cbd04",
        "cursor": {
          "ref": "35549b37-06fc-4d07-b7ee-0e6758ded7a9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3baae027-0fb8-4593-9360-07fb61ed95ce"
        },
        "item": {
          "id": "fc16fbaa-191c-4151-bff7-3cc2ad8cbd04",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1892dae0-0c65-4c5c-b857-734bb477e85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6617f128-2b14-4a77-b005-001a853b700d",
        "cursor": {
          "ref": "89eb29ac-2ac3-4050-9371-df16fa54888e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2e176490-e40e-478a-a0b4-e54ba54952c4"
        },
        "item": {
          "id": "6617f128-2b14-4a77-b005-001a853b700d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ae6e4a9e-5d2b-4595-9afd-008337790dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cadd49a-2958-4178-ac41-d8c92e3dc881",
        "cursor": {
          "ref": "4b8dfe1d-c287-48b2-bb22-8e360cfc71b3",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "68d8cb3d-5fc1-4eb4-b694-221eaaaa7870"
        },
        "item": {
          "id": "3cadd49a-2958-4178-ac41-d8c92e3dc881",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f060fbb0-5794-4338-975a-b8a5a5958f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc485c79-0c13-492a-bf39-383613904d50",
        "cursor": {
          "ref": "f08be4bc-8167-42c8-be18-70f38e15c431",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "89c3d986-4b01-4f39-8f66-7e8136d06fd7"
        },
        "item": {
          "id": "cc485c79-0c13-492a-bf39-383613904d50",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "78ee6ad7-f567-4e0f-9a16-61f899c12ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c6cecc-8e58-45f3-a71e-d5f46bf7d434",
        "cursor": {
          "ref": "e40d57be-2fc7-46cf-a8cc-908b9f2cf82b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "585c8b9e-3870-4614-997f-15db38eeb51a"
        },
        "item": {
          "id": "b2c6cecc-8e58-45f3-a71e-d5f46bf7d434",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1dcbdb51-9fee-49aa-9ca5-02d791a0c893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab5bc8a-bae7-4170-8f17-94b6bca49c8e",
        "cursor": {
          "ref": "1e425057-6303-4cf9-bacd-f871a2de8d72",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d905e89a-813d-4d00-9cf7-8515afe7a824"
        },
        "item": {
          "id": "9ab5bc8a-bae7-4170-8f17-94b6bca49c8e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d9005e82-55bc-4fa6-8f96-a7893f63d526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326bdbc4-978e-454d-8904-1f5d2d361421",
        "cursor": {
          "ref": "10d4b938-fa03-4d52-aafd-43f3939ab50b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a20969e9-0bbc-4294-b374-9cc83d2d1dcf"
        },
        "item": {
          "id": "326bdbc4-978e-454d-8904-1f5d2d361421",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b7eb68b-05a0-4472-84d6-06d1f8d3661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999da840-a640-4611-9388-842fa7671a4d",
        "cursor": {
          "ref": "8f64f9bb-3e01-4278-a060-102c25431887",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b9229a66-b7a2-460e-8451-2b17aa6c229c"
        },
        "item": {
          "id": "999da840-a640-4611-9388-842fa7671a4d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fb08ad40-cc58-4d18-8d6c-918411f76558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd6e512-b248-406e-bc29-46b4d2eeac6e",
        "cursor": {
          "ref": "1f5018ab-e8e5-4249-aca7-3b488f9da682",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f05d5e8e-d2ec-46fd-bcb0-800cc4f643b9"
        },
        "item": {
          "id": "4bd6e512-b248-406e-bc29-46b4d2eeac6e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6976f188-cb4f-4f56-afc4-4fe35c6f0afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e1bf52-195d-4383-a265-18c8cdeeed7c",
        "cursor": {
          "ref": "8d0f7acc-fe03-4950-a092-a21bf5635ecf",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4aee7eaf-a5a9-4bff-8610-2035b6db268e"
        },
        "item": {
          "id": "d0e1bf52-195d-4383-a265-18c8cdeeed7c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6e994bdf-3ed3-4697-9ddd-66f4fd71c46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ee45b8-680f-41b6-a830-131134d2e308",
        "cursor": {
          "ref": "4e8b3dba-d651-4e22-b678-fd503497e2d0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ef628648-de2f-45e6-8a67-cd6fe747e5b9"
        },
        "item": {
          "id": "26ee45b8-680f-41b6-a830-131134d2e308",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3adce4c8-b900-4ec4-ae0f-c4fced96dba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87764ea-7baa-43c3-854a-24fa56fbcf59",
        "cursor": {
          "ref": "da994aaf-fcdd-44f4-ba0a-bff7e0fd2282",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "74817f93-2980-4515-a895-95bc1f7b6128"
        },
        "item": {
          "id": "f87764ea-7baa-43c3-854a-24fa56fbcf59",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b36696b9-9d16-42af-a9b6-496637bddf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ec63ca-da31-4314-bfb3-cda2261e9338",
        "cursor": {
          "ref": "9e002aeb-9aef-47e3-acc9-cf481273d18b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7f93a865-6638-4df0-813b-7eb6c16f686b"
        },
        "item": {
          "id": "c2ec63ca-da31-4314-bfb3-cda2261e9338",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5d4f8d6d-8696-4373-ad5f-9875df6b0852",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d46c3e46-aadd-4e80-982d-4694868baf66",
        "cursor": {
          "ref": "9df657e4-f067-4d93-8f7a-a735fa7b3bc2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5a5f8b0b-6b90-42d3-b4d3-f31a0a4b99b1"
        },
        "item": {
          "id": "d46c3e46-aadd-4e80-982d-4694868baf66",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "59c86fbb-dbe6-4694-a783-90b5d6924d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6d3e73-8a05-486b-af47-113bc2ed2a2f",
        "cursor": {
          "ref": "1301e300-e5ed-4b41-8182-f0be291f30ee",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bbd64674-c0e2-4b5e-8a88-0ef53fb35c86"
        },
        "item": {
          "id": "8b6d3e73-8a05-486b-af47-113bc2ed2a2f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7e7def61-f128-4b6d-b8e0-379863bc6862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bf9ae1-8dd3-4e5f-89e4-b3b8b51f5d74",
        "cursor": {
          "ref": "e6b00166-7e8e-4da7-ae81-beb9797170c2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a78234d0-2356-4216-bd37-4887c744cdcc"
        },
        "item": {
          "id": "92bf9ae1-8dd3-4e5f-89e4-b3b8b51f5d74",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68c2b0ca-bc99-43b2-9088-64eae4709ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a7c40c-c24d-4d7a-b970-f3e1ccb858fb",
        "cursor": {
          "ref": "efa20194-ff2f-4010-abd5-c68e7fe389ea",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d9edc1b2-8718-4b22-a808-cf2c623ea489"
        },
        "item": {
          "id": "58a7c40c-c24d-4d7a-b970-f3e1ccb858fb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c8a01c08-186f-475b-9854-390846c22184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae03b129-049e-4474-be4d-619c644c0e0e",
        "cursor": {
          "ref": "a5932428-4aec-4c93-8dbc-48717a3502df",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "099911ab-8e7a-4027-8007-74ae2edda1a0"
        },
        "item": {
          "id": "ae03b129-049e-4474-be4d-619c644c0e0e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4c7a4b41-30b3-449e-89ee-04c565337ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed7eb2-c0f6-48b4-b8ea-03ed60a96bda",
        "cursor": {
          "ref": "8d3331f0-78ec-4faf-a4e1-bd782b96d0b5",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "745d5cf7-a7d5-4697-a29f-f10790dcbe62"
        },
        "item": {
          "id": "4fed7eb2-c0f6-48b4-b8ea-03ed60a96bda",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "aaf851c5-f1a1-4722-b176-1a51fc366be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f72d969-127b-4981-9667-e83f99389e3c",
        "cursor": {
          "ref": "ac4eaee4-72b9-406d-8d3a-90b38677148e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1723b361-16b5-496e-8d16-ce4be7c4468d"
        },
        "item": {
          "id": "6f72d969-127b-4981-9667-e83f99389e3c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "90883118-0268-4972-be84-b4edb852b315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6deffb-2257-4c8f-a956-f25bc377d816",
        "cursor": {
          "ref": "d5c5e436-bd85-4fc7-bf58-c349fd787846",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "97074ea5-0345-4721-b9e8-3abd49f5660e"
        },
        "item": {
          "id": "fc6deffb-2257-4c8f-a956-f25bc377d816",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "edf1bcdd-8862-454b-b628-f5f33eec2515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c35ee5c-b180-47ba-9abf-a866907a9121",
        "cursor": {
          "ref": "f7186b77-4ab7-4af7-9c96-eb47a6d975a3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ba37e8d3-b184-4f8a-878a-144cbcf85898"
        },
        "item": {
          "id": "8c35ee5c-b180-47ba-9abf-a866907a9121",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7b090131-f6d8-4090-9392-d545617d6e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd31d76-47a8-44bc-b800-aaed2c984f78",
        "cursor": {
          "ref": "ca77f016-62ba-42b2-a039-d8dc86942a54",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "64600957-977d-48d4-b442-9a0b3b406b73"
        },
        "item": {
          "id": "cbd31d76-47a8-44bc-b800-aaed2c984f78",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a583b228-5868-4dde-b3fe-ed9076425e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cc6493-a13e-4846-b085-373522dd3497",
        "cursor": {
          "ref": "a66fae7b-2c83-4feb-b97d-3b9cfa41e04c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7abacf1c-c84c-4ebc-a894-b24b1dfa534a"
        },
        "item": {
          "id": "67cc6493-a13e-4846-b085-373522dd3497",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a3a9e88e-1095-40ad-95c8-4b7d44858ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e616a-905d-4761-a0d7-a1afa3001d56",
        "cursor": {
          "ref": "810528e2-f9cf-4721-86d5-dd466e42dc79",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4e4a0eb0-e174-452f-a837-5bff25d60224"
        },
        "item": {
          "id": "a15e616a-905d-4761-a0d7-a1afa3001d56",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b6ba0e7-4911-45e6-8620-80a9db4f5a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf61afb-0dfe-4f6d-87a9-26bce69367a8",
        "cursor": {
          "ref": "ca6d94ad-efac-4d36-9c83-0abc4f65b744",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "af8910e3-efe6-4fbb-bf71-a4388a1cbb61"
        },
        "item": {
          "id": "3bf61afb-0dfe-4f6d-87a9-26bce69367a8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "80f0c47e-08b8-460b-b903-7690c9b89d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cb1ddf-b755-4cda-8d94-b5d4aab87073",
        "cursor": {
          "ref": "f0b02c7e-19a0-48e0-a8e3-6cf5baa6d390",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "455d7978-1233-424b-94a8-99c35616f247"
        },
        "item": {
          "id": "c3cb1ddf-b755-4cda-8d94-b5d4aab87073",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "27507c5c-b425-4264-9fc4-d4425a731433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cb26c5-f96b-4287-b2db-5b94dcdf9c48",
        "cursor": {
          "ref": "f0439ed2-69a4-4c68-943d-2458b42bbc02",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "183b3a71-5759-404c-a7a4-0ca21b71f668"
        },
        "item": {
          "id": "57cb26c5-f96b-4287-b2db-5b94dcdf9c48",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8bd7e567-662b-425b-87cd-487b39751cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93544237-e068-4537-b66b-2f1a67b8ea5b",
        "cursor": {
          "ref": "450bcfbc-338e-4aea-a5c8-897151b6172f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bfe54f43-8286-4deb-818e-76bb75fb3dcd"
        },
        "item": {
          "id": "93544237-e068-4537-b66b-2f1a67b8ea5b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "44799d12-4919-41dc-b9fc-ddd7ad5d82f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2305ede5-164a-4c15-af83-6f54af073d4b",
        "cursor": {
          "ref": "2e683c0d-3f58-43fa-a19e-87b8eabd0b74",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a877749d-62e5-400c-89ac-9972e1a3c17c"
        },
        "item": {
          "id": "2305ede5-164a-4c15-af83-6f54af073d4b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f7ece8ca-30e7-4a79-aee2-a349b5a34b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26da5a3-d83b-4fec-a8e8-1a6923ea5e0f",
        "cursor": {
          "ref": "304510fb-32e9-4de7-a2ae-14691ed7636e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "13d1b86c-4e84-425a-9809-b1b23e5c5a48"
        },
        "item": {
          "id": "a26da5a3-d83b-4fec-a8e8-1a6923ea5e0f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7ea4654c-3a20-4f8c-9466-0074d6c752ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5248fef-2276-4dcc-ac1e-1c74c075d5e8",
        "cursor": {
          "ref": "9752002d-6a61-48f7-b292-5e2de86193f3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9ac4cc66-ecc1-4179-9d4a-827c73c0f46c"
        },
        "item": {
          "id": "f5248fef-2276-4dcc-ac1e-1c74c075d5e8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2c48cbd3-af20-4a17-b4f9-19313c2d1ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2407717-77eb-4803-a961-71aa41444761",
        "cursor": {
          "ref": "782893aa-7dd8-4095-bb6a-0e4488d61d74",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "92f01510-f1f6-494c-aa9b-16291af31da3"
        },
        "item": {
          "id": "a2407717-77eb-4803-a961-71aa41444761",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f4592036-924c-4898-a463-60c6bb90e842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada0451a-53e7-419b-b8f3-45fd4c17b572",
        "cursor": {
          "ref": "32e82731-f64b-4e31-99d7-63b21120e98f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "282b4d45-ca8f-4994-9055-8f8f224dddbb"
        },
        "item": {
          "id": "ada0451a-53e7-419b-b8f3-45fd4c17b572",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1fa17a6d-09ae-491e-acf1-6608fa1c9195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9684b5-7d32-4189-910a-4bdcf2db653b",
        "cursor": {
          "ref": "49996d4c-a576-43e2-ad61-1540fd196042",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "542bd732-059c-4f8b-9b21-8b4105c77af9"
        },
        "item": {
          "id": "6c9684b5-7d32-4189-910a-4bdcf2db653b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e235caea-7e8d-4c2d-a22a-b0702109f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9017284-d855-4a35-b924-81bf6f148789",
        "cursor": {
          "ref": "1f803b18-e804-4915-bb80-1e16bf228417",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a4bf17dd-7a49-4b7e-84cb-13652831bf0e"
        },
        "item": {
          "id": "b9017284-d855-4a35-b924-81bf6f148789",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c05558f8-bf30-456b-8e2f-8f119fd9382a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca5b158-1b60-4d98-a52d-6ab0b8edd955",
        "cursor": {
          "ref": "36825f07-bf6c-4285-9638-e0f60983217f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "43638840-06d2-4f2e-b4c8-82789bac1875"
        },
        "item": {
          "id": "eca5b158-1b60-4d98-a52d-6ab0b8edd955",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8883832a-626c-40f1-9f20-12810285753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266550f1-d067-40bd-b572-c68fca7bc48b",
        "cursor": {
          "ref": "72efbbef-4ac0-494f-9f15-f2a70d146c37",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b95245d2-5ff2-416b-83bd-a0ebc1d9ee28"
        },
        "item": {
          "id": "266550f1-d067-40bd-b572-c68fca7bc48b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "715bf70c-9248-4e78-b534-f5daa3cb3821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51796b21-cf0c-4c45-8229-9b413ea1549c",
        "cursor": {
          "ref": "803268c9-e4d3-40b9-9113-2da9c2856f16",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1399f889-e8e6-4d9c-9a33-d235f7ee11b6"
        },
        "item": {
          "id": "51796b21-cf0c-4c45-8229-9b413ea1549c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "605e25d7-d95c-4d75-ac2c-b221b0d697d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c057c6-9fdb-4b31-adbb-8516ed232c7d",
        "cursor": {
          "ref": "02a9b5cb-c001-482a-9035-56e90a266982",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f55bdd2c-698c-4101-bfdd-5c7bb319fa2d"
        },
        "item": {
          "id": "92c057c6-9fdb-4b31-adbb-8516ed232c7d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2abc47aa-b2ef-4d57-9099-dac64b569056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f73b3d-92af-4308-88d0-e8ed9a4507ef",
        "cursor": {
          "ref": "60c4b6ed-d331-4a9d-8ecc-0741cd89e10b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e8a4c4c3-383f-43cf-9ed2-a23f11dc6c6f"
        },
        "item": {
          "id": "e3f73b3d-92af-4308-88d0-e8ed9a4507ef",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2ba4612b-ad70-4ae3-9cdc-274f20830472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8de6a7-4935-4547-87f3-eff1f1178b8e",
        "cursor": {
          "ref": "0c6b71ad-77ea-41b7-b5c6-e7042abc7898",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4fe8671-8457-429c-8ae2-cbc3bf2ad3f3"
        },
        "item": {
          "id": "ee8de6a7-4935-4547-87f3-eff1f1178b8e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f31195a3-289a-4be6-96f2-c2ba450e5e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4843a7c3-a114-4e1a-af30-70cddef2f8d5",
        "cursor": {
          "ref": "9c9a10d1-9090-4154-a7fa-dd69b0fb73e1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "44b7dce5-91bd-4a45-889a-bc09c6258384"
        },
        "item": {
          "id": "4843a7c3-a114-4e1a-af30-70cddef2f8d5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "582f0145-e5c1-435e-9977-f766d7facf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52319e0-3bb1-4075-bff9-01a898bcd5e1",
        "cursor": {
          "ref": "d6432c3e-9508-4767-a2c5-a76249ecde6b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec54e0c0-3378-4fd7-ac42-fdca6b76ec88"
        },
        "item": {
          "id": "e52319e0-3bb1-4075-bff9-01a898bcd5e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "74264a8b-d981-4374-8e94-6ee06989c80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4941f738-ff7a-4a5c-8d34-48f95ec3172f",
        "cursor": {
          "ref": "47a063b9-e58a-4361-a2e0-c7d6b2592209",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "357f907b-9493-4d37-b25c-659bd987e1ba"
        },
        "item": {
          "id": "4941f738-ff7a-4a5c-8d34-48f95ec3172f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "051748c9-4891-4728-9cd8-7c33937a83df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76790e17-3e74-4a7e-af85-b231c1551400",
        "cursor": {
          "ref": "61cd9ce2-eb6a-4155-96be-d98161ab457d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "608f953a-5a73-46ce-82d9-ca555dc8ebe4"
        },
        "item": {
          "id": "76790e17-3e74-4a7e-af85-b231c1551400",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7c364427-32b1-4105-bcce-dec2c5a7fcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64df4e5e-defb-4a18-aceb-fe82090cb7df",
        "cursor": {
          "ref": "51e66207-8e07-4529-acb8-f09d64f1949f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b4aa961b-9e95-444a-b063-ada1640b98eb"
        },
        "item": {
          "id": "64df4e5e-defb-4a18-aceb-fe82090cb7df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ab986c17-f323-455b-ac67-b747d904682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8a7f5a-6cfb-41b6-b4c5-9e1cdd05c457",
        "cursor": {
          "ref": "93bb38d4-1443-4850-97c8-9c613c29efd8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7984307b-5fbb-4d21-aaff-a0bc215b201b"
        },
        "item": {
          "id": "4b8a7f5a-6cfb-41b6-b4c5-9e1cdd05c457",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "455ef1d0-3778-4e75-ace2-fe0bb472ff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12d9ac6-ded9-47f5-be72-05e9e19a8d45",
        "cursor": {
          "ref": "263e4b3a-a467-47a8-9a00-fc31ca3dbad5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4067b8de-7a88-4d6c-abcb-53dbeab707e4"
        },
        "item": {
          "id": "d12d9ac6-ded9-47f5-be72-05e9e19a8d45",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "96612747-efe5-453d-bc81-bb9bcb09c854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa08c6fc-729f-4310-874e-085829c87768",
        "cursor": {
          "ref": "44e44508-6261-46b3-b5f7-8b9989494e74",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "eb3ecde6-de0a-4af0-9805-5b3c9c4201c2"
        },
        "item": {
          "id": "aa08c6fc-729f-4310-874e-085829c87768",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0e1f3a3f-883f-4915-a333-3331cff2ca61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfecc4cb-e3f8-43c5-9cdc-4572dbecf33e",
        "cursor": {
          "ref": "b13109aa-5a1b-4b4d-9448-683a16133c33",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "03eb29f6-51bc-46e4-aa68-e8fe5b8e0df5"
        },
        "item": {
          "id": "bfecc4cb-e3f8-43c5-9cdc-4572dbecf33e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8d55f000-8895-4cf2-89bb-c6d27d16d14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761c4b8c-b175-4ea7-8926-e82061e32f0c",
        "cursor": {
          "ref": "035b0d07-6d32-44c0-82d1-96f5a337ac2f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3f4862a1-8591-4a45-94ee-23f40e250299"
        },
        "item": {
          "id": "761c4b8c-b175-4ea7-8926-e82061e32f0c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "07a94e47-3474-47ee-8829-bd5341a60861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17104e81-a86b-4b21-b423-b40f5c9fe48e",
        "cursor": {
          "ref": "c103afaa-afee-4bc9-a826-f2e7d9aa3643",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f65d2e0a-f3ed-4fa9-b35d-9fc7b2ce6b1e"
        },
        "item": {
          "id": "17104e81-a86b-4b21-b423-b40f5c9fe48e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8cde6c76-faed-49a3-af3f-24c4f0c62384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7be2ef-c46d-4dd8-b3f8-e905a40054d8",
        "cursor": {
          "ref": "57a44ba2-7c37-4327-9882-2bb8370826bf",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5f03ceaf-2115-4673-b5cc-901a06817860"
        },
        "item": {
          "id": "0b7be2ef-c46d-4dd8-b3f8-e905a40054d8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "75672a50-0d0f-4dfd-a431-99368c9bf7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831ff31e-3938-479f-8362-a660a77c9b55",
        "cursor": {
          "ref": "e796b15a-5c9a-455b-b87a-2d8f936e1668",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c31f33db-de05-4a0a-8458-790097720283"
        },
        "item": {
          "id": "831ff31e-3938-479f-8362-a660a77c9b55",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "87fc5428-02d8-4921-9832-bb3846e86206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42c9547-2c82-4c1e-87b7-420945868368",
        "cursor": {
          "ref": "06c118e3-3c80-4c91-b373-11f88a3e3df7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b9267c6b-4807-4d86-bc65-898eec4b4306"
        },
        "item": {
          "id": "a42c9547-2c82-4c1e-87b7-420945868368",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "58c7ea33-8f9c-4d9f-a553-43e0a9f05b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a238d7-faa0-4fc2-ad43-a1bb400c3752",
        "cursor": {
          "ref": "87b297df-519c-4419-a0a4-1d417257c44f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5997e298-193e-4e10-b383-4e482872c0ba"
        },
        "item": {
          "id": "a9a238d7-faa0-4fc2-ad43-a1bb400c3752",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e9a370b1-d7ba-4fd9-a9f6-cdd2ab5970c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f15f5a8-fdc5-479d-9208-8f82c97b5c1f",
        "cursor": {
          "ref": "2fb84e91-5326-4455-9169-55ca979fc38e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8fe59f7b-8583-42b9-b2b6-35e887fa5371"
        },
        "item": {
          "id": "1f15f5a8-fdc5-479d-9208-8f82c97b5c1f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c3620620-80c6-4554-bd0f-6977f19ca6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775515bc-0e30-4ef6-bc44-27afbd3fd4b1",
        "cursor": {
          "ref": "b56ccfbf-9102-488f-b57f-ad8d903809b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "25c83e42-e5a6-460c-a65f-72fa17e3cfc4"
        },
        "item": {
          "id": "775515bc-0e30-4ef6-bc44-27afbd3fd4b1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cc17cbe9-90b7-443e-8d42-c5e6d44d6c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04749b60-1f8d-4519-815b-abfbf959091b",
        "cursor": {
          "ref": "8a6be645-4087-4fc8-9f8d-e13c72e8e379",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3f2ee84c-2fd7-4fef-9b70-cba15ef337b9"
        },
        "item": {
          "id": "04749b60-1f8d-4519-815b-abfbf959091b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9bcfc34d-c488-418b-a4ae-1b7862d5c218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7fda9c-d9f8-480c-a95a-58a529638eb9",
        "cursor": {
          "ref": "8a55e6f4-1d17-4c62-be86-82b7bfd5f58c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3c3387ea-b7b6-4574-a230-353896b1c1c9"
        },
        "item": {
          "id": "0b7fda9c-d9f8-480c-a95a-58a529638eb9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4b6b293a-7fd5-4c95-9636-fedbae9a72b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c30538-b76d-4a3c-93d5-ba8937c3d2d0",
        "cursor": {
          "ref": "c6efde8b-b730-4859-b1b2-ef7632301e85",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f23594ee-e287-4c5e-82e1-a2fe43a96930"
        },
        "item": {
          "id": "91c30538-b76d-4a3c-93d5-ba8937c3d2d0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "59570aa8-d8a7-4f25-8770-bc7c8c3a1c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543a53ca-64a6-4fb7-a143-aa6a071eba87",
        "cursor": {
          "ref": "0e3b86eb-5b34-4b2b-91e0-cf8fccadd9e6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "acb8d0f8-199f-4da0-8dc3-bf34797f1032"
        },
        "item": {
          "id": "543a53ca-64a6-4fb7-a143-aa6a071eba87",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b9a889d1-e6a4-4e16-899e-969e312875ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceebc9af-98a8-40ed-b249-b7cda97b26fd",
        "cursor": {
          "ref": "309b9ca6-a531-43ac-b71c-ed71780deced",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2e1ed93e-4d48-4651-b5aa-51501296125e"
        },
        "item": {
          "id": "ceebc9af-98a8-40ed-b249-b7cda97b26fd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c8311e62-1c21-4904-a471-a3c78ca6fa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c825811-ddf7-4322-b801-63bba8779ee9",
        "cursor": {
          "ref": "43a1c9db-9a10-4b9c-9fa9-2c1970492c0a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c2574b4d-81fd-4548-894c-4b29df635423"
        },
        "item": {
          "id": "8c825811-ddf7-4322-b801-63bba8779ee9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9a128aa8-9f9b-432d-aed5-c2652dcdac0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139b828b-d992-4c8c-bd74-e17f19097a5c",
        "cursor": {
          "ref": "a685c016-c2f8-4c02-aa70-7dd699302746",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "96693937-2708-4dfd-b20b-f92377f1d15b"
        },
        "item": {
          "id": "139b828b-d992-4c8c-bd74-e17f19097a5c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f38bd0bc-8ed9-47d3-af94-905394424b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c249c67f-e531-4d0a-897c-fcc9f0d9fe53",
        "cursor": {
          "ref": "c164b9ad-8ba1-4d0a-ba79-61cfa328deb1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0e237f2a-c306-4a9e-b41c-3d30d551ebbc"
        },
        "item": {
          "id": "c249c67f-e531-4d0a-897c-fcc9f0d9fe53",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8d1e4dd8-6a80-49bf-a5c8-b5b0a8761c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2541f1b0-e5c1-428a-92da-7e34079be218",
        "cursor": {
          "ref": "2eb3502b-19e4-4498-858d-1733a87fbbe3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3c6d16cb-87d9-4d06-80bc-fd14c613005b"
        },
        "item": {
          "id": "2541f1b0-e5c1-428a-92da-7e34079be218",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ba8bfd03-61ec-4106-8e34-41704109e331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a026f-19ab-4883-95cd-9f0a486f90ce",
        "cursor": {
          "ref": "39bd67a5-ae77-4767-8002-6859da64b193",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ed76b35-2a77-4699-9548-35984fd72cbb"
        },
        "item": {
          "id": "2e9a026f-19ab-4883-95cd-9f0a486f90ce",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "537dfedf-14b9-490e-962c-1272519e5316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7b8e08-591d-425c-b580-eb64e78fe714",
        "cursor": {
          "ref": "3f1b7622-851b-4a69-a7ed-067493695581",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "104617df-5270-41ca-a321-c45efa85a55d"
        },
        "item": {
          "id": "8a7b8e08-591d-425c-b580-eb64e78fe714",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5bfcee68-fa11-44a2-8a62-afa05eef3805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ff2f84-8d98-4083-9758-929a4d3d822f",
        "cursor": {
          "ref": "058bc9d4-41e2-4ae8-bed4-68408273b751",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5b432f0b-d3f2-4511-8219-8085556f1d97"
        },
        "item": {
          "id": "a4ff2f84-8d98-4083-9758-929a4d3d822f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6d4e074a-1b41-40bc-aa00-bface2793a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0db5c95-f4fe-4bef-9f4a-e90b2b20bfbd",
        "cursor": {
          "ref": "40ea8aab-ef9e-452b-9fc5-ed2b2d136f76",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "89c342e4-905d-4455-a176-0fb29499ed11"
        },
        "item": {
          "id": "b0db5c95-f4fe-4bef-9f4a-e90b2b20bfbd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ca12dbb1-65fe-458e-b32c-6814300b4c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45f879b-e04b-43ec-98c2-3dec07f58d3b",
        "cursor": {
          "ref": "a8bc80f3-5b99-4065-b520-a439b08dc144",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06a68a7f-7ba9-4b65-8aff-0cf9b4840d0b"
        },
        "item": {
          "id": "b45f879b-e04b-43ec-98c2-3dec07f58d3b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2b203a8e-3a17-438d-a818-07c43133a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3b3940-fc9a-4e3e-97d0-cb4d9fa12b8b",
        "cursor": {
          "ref": "3abc589a-c16b-4bbd-a46f-8dd18615fe22",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "92377a72-a568-49ab-92e7-506d29886071"
        },
        "item": {
          "id": "7d3b3940-fc9a-4e3e-97d0-cb4d9fa12b8b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ea2956eb-30ac-4ec4-b495-6f50f37fa0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f902a0d2-d0c0-4356-b7e4-af837a861ef0",
        "cursor": {
          "ref": "6d527a77-017d-471b-b8d9-3c41b22aa69c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "adeab42c-050d-4abc-9d7e-a6509e4546ba"
        },
        "item": {
          "id": "f902a0d2-d0c0-4356-b7e4-af837a861ef0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab6337b5-aeaf-4b38-8b9a-9e87a9d56cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c47a36-043c-4e30-901d-883f9ae7d4cc",
        "cursor": {
          "ref": "cd18fc39-3d5e-4089-8885-452f9a30f42a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9d5d91e2-9780-4072-a386-2cb655ca597f"
        },
        "item": {
          "id": "83c47a36-043c-4e30-901d-883f9ae7d4cc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "18155399-9339-419a-b97e-c90ccbe0a2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ae24f6-6fe6-465a-b4a4-1d53a5cb834d",
        "cursor": {
          "ref": "7a40ca4d-2115-47e6-89a1-6bfcf03bdd4e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "10b0676a-9e91-45bb-8afb-ac7dcb9f8de1"
        },
        "item": {
          "id": "e6ae24f6-6fe6-465a-b4a4-1d53a5cb834d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "520c3b7d-bfd3-4efc-a930-c8d43ca6a1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5520de-ee66-48fc-9aed-7e189637c370",
        "cursor": {
          "ref": "6c68cf4c-c19d-4e02-9f24-d5a303270de2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "23fc2de5-e4ea-403b-8b72-b2690ef66afd"
        },
        "item": {
          "id": "cd5520de-ee66-48fc-9aed-7e189637c370",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4d8bf56b-3665-4df4-8d06-954fb081e73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd3ffc4-cf5d-43ea-bacd-d597fc61c0a7",
        "cursor": {
          "ref": "1d9fe60b-938b-4b05-b3c1-f13817bdd68b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5fa99a2a-7eed-4185-83a0-2bb3eb883a0b"
        },
        "item": {
          "id": "dcd3ffc4-cf5d-43ea-bacd-d597fc61c0a7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2fe6f935-cfdb-4795-a6ca-40db6c546e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87319682-bd13-4d15-a3a3-e1d40863daa8",
        "cursor": {
          "ref": "afdb4aba-f03f-4080-a9b3-c3468e314711",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "919b38ac-9b02-4b80-a46e-2e40d404ee45"
        },
        "item": {
          "id": "87319682-bd13-4d15-a3a3-e1d40863daa8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d1bec60e-c32d-42b0-b5d0-8101a7257810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf1b6e1-cb1a-4c1a-8274-92474f8ae2a0",
        "cursor": {
          "ref": "f1a2000d-653e-4cce-9855-efad591f4f81",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2d00fee2-386e-4527-ae53-a8d2e486c06c"
        },
        "item": {
          "id": "acf1b6e1-cb1a-4c1a-8274-92474f8ae2a0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a86d61c3-38d5-41d9-9dec-3ff67a945d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0128de7-14ad-4575-a328-a5404cb33e79",
        "cursor": {
          "ref": "5eeac6d4-3a35-4811-a7db-01b421953fdc",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9607d1f9-c8cc-4a3c-ac7b-80498a25d60c"
        },
        "item": {
          "id": "b0128de7-14ad-4575-a328-a5404cb33e79",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "38dada2f-efc4-4264-b922-dd3b4e9bec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d36231-49ea-48b2-b2ff-efd70b48f09c",
        "cursor": {
          "ref": "e07873a9-4bf4-491f-b1bb-360d66d9e398",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8f6fde73-2f13-44b1-aa4a-32e65ecbca7d"
        },
        "item": {
          "id": "b3d36231-49ea-48b2-b2ff-efd70b48f09c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "00431865-0b86-4144-b2ca-8961906a0e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d32d43e-dbc7-48f6-b29c-0b75359408fb",
        "cursor": {
          "ref": "24a64879-e2f3-4994-8a13-55271d8e7265",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2d19b924-93e4-4e66-9caf-9b78d3bc26ed"
        },
        "item": {
          "id": "2d32d43e-dbc7-48f6-b29c-0b75359408fb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "af0fd167-cb15-4568-bfc9-488c13c26fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bd1fbf-de14-4744-b7a9-b5af79914039",
        "cursor": {
          "ref": "94e67f6d-bcda-4f22-999d-890187cadb6d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e2587fed-410a-484f-9025-ec00fe10a204"
        },
        "item": {
          "id": "b4bd1fbf-de14-4744-b7a9-b5af79914039",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2abf7fe0-2947-43fb-a061-429a948f92ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bfb72d-7df1-45b1-b333-145e1c7c40c0",
        "cursor": {
          "ref": "e889ea25-cd07-43dd-b559-ed6556b6e895",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0b162e76-5b8b-401a-a11a-663ed4f175c8"
        },
        "item": {
          "id": "95bfb72d-7df1-45b1-b333-145e1c7c40c0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "32c71fc3-e07e-469d-8ff7-8c8407d97ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a970b0d5-515a-4b3c-bc96-32df348d9133",
        "cursor": {
          "ref": "078a3fbf-477b-4d8d-a593-d88c6862ebb0",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1bebc565-52fa-4a04-bba8-ad66b9ea175e"
        },
        "item": {
          "id": "a970b0d5-515a-4b3c-bc96-32df348d9133",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2ceb8c15-0db1-431f-84e5-75abf500a51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247c53b0-4be0-45b6-bbd2-24a7d1ee0374",
        "cursor": {
          "ref": "2d1fe4c8-2afa-4149-9475-b38bc32f00c2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4835f319-7588-4136-8da8-2d860745c094"
        },
        "item": {
          "id": "247c53b0-4be0-45b6-bbd2-24a7d1ee0374",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "974eb44f-1c13-4fd6-9e1b-46572c5740fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34488e4a-bd2b-4712-82ea-49e2ee5f328e",
        "cursor": {
          "ref": "0d7e1c9b-b5d7-458d-98a8-ef61c38687c9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eb39e34d-3260-4ebe-b593-39368817d3db"
        },
        "item": {
          "id": "34488e4a-bd2b-4712-82ea-49e2ee5f328e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ac94a555-aa4c-4f9e-a603-fd9d78c34baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1afe68f-740f-42ef-9c53-52910292c1c3",
        "cursor": {
          "ref": "95d62d29-20db-445e-b28d-ddbb8afe8f92",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bcab923b-3c5e-4d06-87e7-e1d12bf3be52"
        },
        "item": {
          "id": "b1afe68f-740f-42ef-9c53-52910292c1c3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "046c88fb-10d0-411c-91a0-23c97bce6511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927dde55-f696-437f-bbc8-474e605842ca",
        "cursor": {
          "ref": "28abb52c-5a77-44a6-b84f-2504fadc9150",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1d32963b-2776-4804-b5b1-59d25afab362"
        },
        "item": {
          "id": "927dde55-f696-437f-bbc8-474e605842ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4aa52fc3-b710-4033-9d05-9580844edffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4ce099-a15e-44dd-b42c-396a94a80a72",
        "cursor": {
          "ref": "80bce930-65d1-4eb7-a7a9-92e339b30fe3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "332a9934-bcd1-46ac-afcb-777e179283d2"
        },
        "item": {
          "id": "be4ce099-a15e-44dd-b42c-396a94a80a72",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "62007e13-09b2-4ec2-bf37-f462f25d2a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173c230c-0c8e-4889-826f-82e1ea38a0bb",
        "cursor": {
          "ref": "18977f71-f080-4261-9eee-cc6ad711a52e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "daf36450-7b15-4c04-9ccd-5e1a978a8a2e"
        },
        "item": {
          "id": "173c230c-0c8e-4889-826f-82e1ea38a0bb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "43e22d81-cba0-4535-93e1-244d2fe9a542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfd068f-f5db-4da7-89bd-b659e3410578",
        "cursor": {
          "ref": "073edd8b-766d-4822-a3b4-2e2ad5ee1717",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fcfeafad-4cd9-47ac-a85d-3c7c8bacdd3f"
        },
        "item": {
          "id": "6cfd068f-f5db-4da7-89bd-b659e3410578",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "15426448-78f0-42c1-bb00-0830ffd0df26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60613b8-5955-4152-8388-ce9dba33e23e",
        "cursor": {
          "ref": "75d563e8-f736-4cd9-96e0-cf30420522ce",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dfaccfd9-d205-4aca-a718-a5a4a89df9d4"
        },
        "item": {
          "id": "b60613b8-5955-4152-8388-ce9dba33e23e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cd2e3a3f-7d96-47dc-b879-27f426402b5b",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e19929-7d52-484a-93a7-41ad1a23bde5",
        "cursor": {
          "ref": "30852e62-ba54-4e55-9097-c8dcc068e5e9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "32aaa628-3fd2-4f33-98f4-1c6c30718382"
        },
        "item": {
          "id": "b1e19929-7d52-484a-93a7-41ad1a23bde5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9a6793be-4d56-45d5-bfef-e03d746aac2d",
          "status": "OK",
          "code": 200,
          "responseTime": 3252,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1fd34c-dd19-4163-952b-16a82c99255f",
        "cursor": {
          "ref": "e715d1f7-0c37-4d2f-90d3-91a00ac37524",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b3eb417c-47c0-4dd3-8c6c-544f9d9ef502"
        },
        "item": {
          "id": "ef1fd34c-dd19-4163-952b-16a82c99255f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6bea83aa-4b55-498d-a010-c1e8231ac5b8",
          "status": "OK",
          "code": 200,
          "responseTime": 2554,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca03c80-8406-421d-b72f-6b265748aba4",
        "cursor": {
          "ref": "6ed48f02-1702-4eae-88b3-b662bcc58eef",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c6c78877-e530-4fa7-935f-ea1cd14e5d18"
        },
        "item": {
          "id": "cca03c80-8406-421d-b72f-6b265748aba4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "642a5880-ce02-4acf-92d7-b175d4201310",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca03c80-8406-421d-b72f-6b265748aba4",
        "cursor": {
          "ref": "6ed48f02-1702-4eae-88b3-b662bcc58eef",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c6c78877-e530-4fa7-935f-ea1cd14e5d18"
        },
        "item": {
          "id": "cca03c80-8406-421d-b72f-6b265748aba4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "642a5880-ce02-4acf-92d7-b175d4201310",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2c42ac-f32b-4ca3-a6b6-da09f3557e6b",
        "cursor": {
          "ref": "1056b9f8-6ff2-45cb-9787-7a4f50fcd542",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "740374a6-9f55-488f-96a6-483c2cefe1cc"
        },
        "item": {
          "id": "fd2c42ac-f32b-4ca3-a6b6-da09f3557e6b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b005e2cc-10dc-4f9b-b608-5383b31c2895",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8321504f-245d-4c90-afda-50e10f9a4fbd",
        "cursor": {
          "ref": "cbd6707a-eba8-4878-b3b5-398fbc8192c9",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e2e43b24-e0a2-418c-86f0-271b394d95ae"
        },
        "item": {
          "id": "8321504f-245d-4c90-afda-50e10f9a4fbd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9df651e1-480c-4306-8cb2-fac365ebb568",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}