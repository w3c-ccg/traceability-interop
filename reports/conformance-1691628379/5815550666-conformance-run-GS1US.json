{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3192973e-5a96-485a-a25d-dc005206918e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bce66f27-4930-449b-b155-5e46fe40a2bb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c20de0cf-9bb5-4588-bd73-0c7737dca3c0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ec73ff6-68e1-453b-b1ff-3c7f39913f42"
                }
              }
            ]
          },
          {
            "id": "ad98071b-e416-4219-908c-958ff75a4cf4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce68b1e8-ad04-4022-8cf8-e917e44d0d6b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "da234348-0423-4497-8650-44230fb8dae1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b35457e6-da85-4e52-925c-06f2055c7281",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "47b587e4-b58b-41e8-9875-e73bb196ac81",
            "name": "Positive Testing",
            "item": [
              {
                "id": "967356c9-f0d3-4fcd-a906-7363edbfaf40",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e42be33-fc79-4525-9409-12e430b5cef2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83243e54-4e39-4043-a577-9d550c06be3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f05f60ed-3af7-4b15-8b98-ab8549da8977",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d0d4fc2-079d-4264-9e6b-d21b4dd93e1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d5ddd0d-8e1d-4cd5-97ce-a61baff9e181",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "396f5309-4f75-49d0-b7e5-bfb7e90cda51"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9369d44c-f8a6-40d2-a461-e28419264837",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "197a41f2-8fcf-4ba8-a9db-cd3721a0427f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "910573bc-cf1a-4fc6-a863-8de5a7699fb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25105962-cba1-4c16-95ca-3f60ad50431a"
            }
          }
        ]
      },
      {
        "id": "d7d48eb3-8f02-4a02-b9e2-57216c67408f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "87509a48-08a6-4467-b9d3-8afb11e405d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df106c3f-0fbc-499b-8eac-d9b24e2f09b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9fc4c314-4370-48ed-882f-71d95c540fec",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49ca0dd-4093-4b8a-a7be-08785db1a4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e79d0bf6-fc65-497d-b37f-d523a9c53434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deadca16-421f-449d-98ab-474acdf09b2b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9536659-1909-4ba1-bc17-6e84eabae79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "903ad8ee-6697-440a-b015-9315bf23a73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164fec5f-cf93-4cb0-acf0-8df211124f77",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0f2fa7-ea88-4e92-af36-da646bfd4113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6735c913-ae72-479a-992f-da13ac68d8fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79e7f942-acef-4cc3-9bcc-accc2176fd1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e54f030b-6701-4842-a855-73a7d220f7ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1594f0-9506-4739-a5f1-62e47e116791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f53b041-c2bc-4cb2-9c51-ccea8afc7774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac0379f-3074-4b2e-ac1e-abb77d2c739e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c11c4b-194b-4a0e-ad3f-ff348bb0ab03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6213f6c2-d350-4879-803b-e659a04b40a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "751376d5-b3b9-49d5-822c-0ff76ed45ca6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "197fb95b-bfc4-4de9-bd66-e476521d592a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6359620e-96c3-44c0-9b46-4826803e08e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f1cddc4-50fb-4efb-b25b-47fb0c26e8d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "83f5aadf-5f3c-4acb-8bad-8ca48a197d74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d05dcefc-7c4b-4923-9b3c-37e3f81ba63d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6655eabe-462c-4169-9e25-e9ff716a37b2"
            }
          }
        ]
      },
      {
        "id": "a22c1c56-2427-4b63-842d-a2d639cc34ca",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "99c2e5a9-9555-4a51-b515-04f1a500c0fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "102e2b15-226d-4934-8eb2-495e7d5d2bd6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "edfed82c-0448-4f2a-b0c6-e81b6ea0dbb9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c451afab-23fa-42c8-96a4-a95e75dec180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90205dc-be8a-455b-9e77-4c7e3e571339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272b1656-da30-4f0c-bb59-93ac06c60a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0101db0d-7ee0-44e1-a62a-93c6206cc2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb12fa35-1283-4dce-aefc-f9258b674c6f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29dfaf6-cc72-4844-b1dc-7a1676fd0da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9a2a68-5005-43bc-b530-ba40942bb3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05585db-ca40-4e2b-887b-7096e5841dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9721b072-abd3-4d7c-a87f-0be4ca58aa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbdd831-670e-4779-bf47-9f3532f20462",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3675337c-93d4-4fde-be2c-2155c4037aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088fa22a-46c8-4faa-b526-7cfad01fac80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1876cc60-368c-46cb-af72-6204b3997fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c27ffc7-b847-44b2-932f-88ffb91914d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5077869-a126-4755-a1e8-bbc03d224c18",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7e5cfa-97f1-44bb-a79a-4f5ff64fde17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad24457-5f36-4533-9595-928fcb3dae72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54f8934-e7b7-4bc9-8b93-d6f85f61d5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c552acb-b918-46a1-a0ad-f8640a43fd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcc1bd9-2014-4dc6-82dd-91cfb9722fbe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5fe6fd-23a6-4fd9-bd1a-e2042c313125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27342767-f31f-4803-bd74-42d9152b74cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008abf7b-e973-49db-9eb6-6a2863872b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89817aa9-fa3c-4c3e-8577-40e012330abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522de327-3020-4433-bc33-fd97b80893d1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d8410d-24c7-4099-bf17-2618c61463ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a710142-12fb-4449-a863-52ade96b36a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbc5f3f-38c1-4568-9e99-e990f4a613ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "727a454d-8adf-4291-9638-cd7fef7ad854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b70600a-f3a4-49c0-87fb-963414aa6d71",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c3bad-2db8-4159-9100-6e35cd2e66ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091cc3fe-2c79-446c-a26b-80607ef8f523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdf4aa9-0a86-4cbc-939a-5ce4e284f959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40aa7fca-50aa-4df3-8548-046a30ccb95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee939f6-3456-4258-b2ae-b2a171025cbd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74e0ed1-7826-4860-a852-e846a27e652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf18673-cdd1-409a-8990-84052519f101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b1ecc5-1cd6-481b-a009-88cd61234130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a3bb9af-c30a-4c5c-8211-614ea2b9c399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af821676-e25b-4f5b-91e5-27c1931a085a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185d2140-4d78-49ef-9603-d4e477d5054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e28fbc-94d3-406b-994b-0fbf164ced26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f102a93f-c035-4e83-b9ae-72155b6b56b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b641328-07f0-43f7-a92a-0fc242a2443e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c2d268-18a7-4433-a4b5-bc07f2903659",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9bdd6e-5d26-48f8-ba1b-7e10d53f8f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304d0711-4791-4d4f-a348-78ad9dcec512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca347240-9abc-4d4f-b0d4-0a7077cd2fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7623ae78-db9d-40aa-8190-b4374e683aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdc01b5-847b-407e-b44b-f9e9705b626f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac452b6-9b1c-4cbb-910f-2b0a01f1b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4b769e-cce2-4897-be9a-fb592921ed62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f867ce-6f65-4408-9f08-88a8c0d13bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1387425-0724-49d5-8f57-2f0b97e653c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afbc2df-c097-4e2d-86e1-79110407a80f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f16409-1b12-43da-b20b-eba790080d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3af43ee-abf9-4834-9c73-d5e26e52a112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba23ae-72ec-4117-a338-6aab69abfd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e2f0c41-e664-4973-a3b8-4abe4b80068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5caf841-5e10-45a6-8c39-739d7d1ca9d1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92960a71-7e7f-4cf1-aafa-4d7d2266e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6093b3-e38d-47b1-9de4-f608d0726c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efb983b-29fe-4a77-b75a-187086eb0194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de2cfa1d-828e-44d0-be87-fd27c9a1d6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a332f536-5ba7-41dc-bcb4-bea33150081a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38c6240-9882-4f75-b2d6-547fd30e5978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184cd09c-20d9-4da6-a5f4-dd12e4c360f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a65b6-0068-4c1f-8bfb-c2ad48231037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0e1af28-ca34-4fe1-89eb-f475c2494de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee7abe-eca1-4d74-b555-c9da2de3e239",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de6e7ca-db89-4bad-ba72-8579eb26f082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8e76a1-8df2-441a-af85-5653a491c797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ab6966-e651-412d-860b-c8b165af0d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db816d20-4950-4260-bab5-287525bab792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a126c3ce-6540-4b3b-9872-df03f8286c02",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42930f9-712b-4e39-a54d-50f50913985e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82a4c34-0206-4fe3-8b87-72cc498efe72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91396a4-7164-405c-926e-ebd9d838ae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad8584f3-d51c-4bbb-9693-144088e2d605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48c47e7-5a97-4479-9e5c-59b44f39bf9c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471938ca-0786-4739-9183-a953cf6132ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e51322b-732c-46da-88fe-d507f65ad6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b0c112-dc3a-4c36-b66b-695624305122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11634c9d-5fc3-46f5-b5c5-3c0a8396ea70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b029b3-a07b-48e6-ac9e-b61c89cdfd69",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d446cc-2ec6-45e4-8644-72ff026f030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2d34a9-7bd7-44c7-b5fc-912781cccfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b74268e-63f2-4f7a-93a0-cf28617f3e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6413f885-26e9-4cb9-8d00-9cd5cfe6493d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ba9798-8b54-4313-ad9d-61a967c843a6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cc7ff1-2371-441f-b321-d83b312079d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da32ef42-ba5f-46a1-9620-4eb4d00fa2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a677fdb-180c-4aba-815c-772f4d1b89e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3194f1-d31e-406f-9a45-f685a3042075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ca7119-5ec6-4d30-8210-ec2476505036",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f965e32b-40c5-4705-b706-e7ba904ede37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2559a7-8313-4dca-b0e1-eacffddf9424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb71ad-2118-4c6c-a80e-2a216a374749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "687ed23d-ef56-4a77-b4c0-4623104f6c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a860e3f7-b465-4e69-b3d8-9138f39bf627",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dbdf90-7dff-466e-a04a-72c2656b64fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89b89a0-1d20-4361-a643-29caa05f88b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a5061c-8dd4-449e-ac72-c7a776251b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad125d31-96b5-43c5-93a5-247d081c5543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a245302-c3b8-442e-b97e-d6a0941901b2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b2fdd8-f33a-4b25-98ec-5ab985c71a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8699d8eb-f361-4967-8678-f9884b28fe15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fd533e-dd02-484a-88c4-6a1b6ce2e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e47591a-cbff-4f0f-9373-f2ac97f57892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80999202-8fb2-4c69-961d-60ad1c576ef4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738ec730-c823-413c-ab76-24e411c63b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019372c3-ff9c-43a0-959e-5036be4924be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a295cd46-0b82-41f9-a46c-4b32da97ab08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "522d2656-c966-4505-9242-1e5651cd94f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a56758-4ae4-4809-82cb-a5982f858f3e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ca664a-fc8a-489c-b856-50d28cc7e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1207e04e-eae9-4b3d-9054-bc4138e72016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f17c431-18da-4b4d-b65d-b02483eda31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3758888-50db-4b9f-baf4-dd1832507101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920dc8c6-a309-4d6f-838f-5b80b46ccb13",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872ef730-d1d0-4188-8f0b-8b76bc5515c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b61c58-fe63-48f5-a03d-8df9d2c0d314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cc2bc5-a0e1-42e8-a035-0ddeab9cfe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aef5711-ac1e-4d3a-8c6a-00b50d3c5fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff50172d-ebdf-4ef7-9276-4272e058813a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23721099-b11f-4b22-913f-1de6b9ed2687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d050c206-218f-4398-a10f-2f07bb656b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadda6f3-b236-4db7-9ac2-fe4f00e759b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b349bde5-2d24-4684-858f-2cf74fea7e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eceda5-0d47-466f-b39c-f656cc6edd0b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5ad0e9-e6a6-4ba3-a134-a30642cb0cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fa624f-23c8-475c-9763-565c83b49778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed53fe19-9715-4c39-8ff4-fd979ad5bc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "320e41b4-d346-40dd-83fd-165164d5fa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99316a93-a528-4fb3-a8b6-2b88f07067ab",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d71804f-9def-4b8f-b57f-d6b0911c27f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008edd87-8799-4ea8-b3c3-2348ce10d10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd35a4d-4faf-456e-b275-4fc4c1aa6ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3f2b73-504f-41d7-adcb-fe724141e20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f393266e-3403-4ca6-917c-e29889c4a71d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0f6be3-c08c-488a-96d2-61663508b6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7635b219-8e24-4f6c-acd1-210c21de7eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0071d3c-f256-4f18-a03c-dad5e369a475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "381055fd-e649-4ea7-91c7-90fe83de1b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73ce089-1ef8-4fbe-9f95-4966591fcdd9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed2e3ed-4cc4-40a4-86be-d14f60ff9c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d147573-593d-447a-a45c-3bc3faa5a38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22964db2-290a-49fb-8feb-252edf966cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7b5f97-2249-4f44-b6f5-56c15337186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55da16f9-2898-47a5-8996-1302e08f7d3b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9656db-63c4-4502-bbcd-c13339df361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc389829-f85e-44ae-9ecf-4757eeb79919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77fda5a-006d-46e7-96bc-d202e80e3d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1ac426-33d5-43ad-8f27-7a5a891d054e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6b27d2-5c2c-499c-8274-f7676a5bf101",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3ea96a-c4ea-4e3b-96f4-72f55ca636d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693b7bcd-cf4a-441d-8586-f095986a6b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4f288-8979-473e-811d-6cf16306ea58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8886901a-69d8-4575-8629-200db1eeb183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0fae3a-ac8b-42b9-aec4-1642b2d04eb1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725d02a4-b6c8-4d86-891c-86e589e73ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6442fe4-1877-4d4e-99cc-4cb066260983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5919ed4-ca9b-422e-8d84-e3f227a6fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb48f9d-f2b7-46d4-9254-b3e002240081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee74315-2273-4af9-afcf-63648ec13290",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a092aa6a-0c6c-45a9-80f9-12be09d30029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f14bc6-feb9-43e6-9406-7f670e11b837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f6ba8a-aeba-4048-b130-1e39bce44ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64895f28-8d29-4a53-acfd-89e61346b916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1a35f8-9754-4260-aad0-dec0ff4eb761",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48a2f73-b003-4920-9d3a-06b32130bfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b24d44-209d-4b40-a77e-986763b8f058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663f69f9-f38f-43fd-a665-17b4daab6955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "50accd1e-49b5-4204-b9f9-3c2a35307089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e6750d-1881-4554-8ac6-1202a99101d1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b71d4-494b-48db-aa86-5e4bdce1fc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "277a951c-2806-4019-986d-aeb03cf6ac0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e33a6c-1a41-497a-99eb-c3f3e3c608f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08054dcf-90f5-4a5e-907b-4ca2eefc2d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1353f9ff-70c2-489a-a5e1-ac64fbe0f54a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0eb8e2-cf68-4177-8fe5-c9c70d8797b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3088171-913f-44c8-a561-a1619027865d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c52bb56-e966-4661-97ef-d74f0573e764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f21e56-64f5-4768-a69d-a821b72d30cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b571c4-660a-4ae6-8d07-1cf0205d15b3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66624180-f2d3-4f75-bfb3-5e1a2c1bffb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3607bb0c-2e40-4a31-b159-9f13717a7750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a370a-c4c4-4151-9c51-61630c56cf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0148fb67-abc3-48a0-befc-a953f2cfee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e32c5d-6f95-43cc-813b-ec120131540c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde42dc5-d53b-4445-b351-35c7cd8e8385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3423dddf-75d0-4918-8c7c-c6030b8e0a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a4a3eb-e14d-4162-9b14-00344ca29ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7ea385-e258-40b5-b393-4c9867fcef0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b728a79-1861-49f7-b5d7-21cfc74f01ca",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c463e50d-83d2-4f25-969c-1399179a6502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffbb080-489a-40a4-bbbb-7a26834405c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1a73a4-b1a2-4c29-ab0c-9f27f7d076b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91cb9fc4-a1e6-45c5-abbb-66b73cd42e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19398c82-ba48-4fe2-9335-9885c65fff5b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1bec96-aada-48a5-90d9-37b27c663ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07698b2f-8a59-4f65-837c-f5cc3177a3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f32f128-1e3e-448b-8820-023b9f16f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10728445-e71a-4541-b96d-12be9acd5bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80ede94-be58-41f2-9ee1-237128005b35",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ea9bae-09c6-4479-a472-5dc76c266619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11aa843e-6b4f-4e44-9ac2-ef84062fe652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927662aa-a789-41c7-aa2a-630fd01f4f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c0827543-0ec9-4841-b12c-f6c63f06afa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dd5579-6416-40f5-aec5-f5eac32a672e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66056d7d-9d9f-40b9-a623-e52b6204e511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9ebee6-83a6-4bb3-a239-6aa6fb494c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff44864-e6de-46f5-9f28-0aea6d558bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3e217f-b4b1-4133-b44b-81a2c729f1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6534b8f-383b-4b2e-b8f8-8aaa3762831f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75377bb9-45ef-4302-aa03-8f5989cc662d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fe1ae7-c11c-44e9-9595-d2adb5977a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398a4268-6691-4cf3-8a09-a981da718b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f029b884-26cf-4112-b1f7-e5deb9e34ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cf0426-41f0-4566-9d2b-fba3a01e6b87",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177c52f5-9a19-4479-bf0d-93cff8c546b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1064ed-1ced-4d37-9437-6a11f8b0ef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7e30f2-c234-426d-b873-5a4fa8f5f8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9846e51e-6c13-452a-a38f-e9b324e75165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf46460-c579-47e5-a9d6-13f3136cfc1b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4b46e2-ad41-47dc-9086-1ff67c233326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2551c5-ddcd-46fd-9855-ab46d6b24d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e821b1e0-64bb-4082-b98f-e57261c3c387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e49249cb-8b68-463a-9d3f-27020a898d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352af7e3-b2cf-4469-8ee5-5a856e3dd80b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03589ae-f696-4bdc-bac8-9f0b7e12bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53cf7a9-034f-4555-a0d0-f18094e36dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038ed286-a189-4970-b26c-e32126794bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be53c8f-fa53-46ee-9b4a-9b565072cbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe547e32-237b-45c1-aa22-12d83f13eb90",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f328bb3e-77f6-49d8-a116-5ac2074ed8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6abcbce-e1fa-4d2a-b64d-f04b65d89e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768c443f-8633-428d-92b0-fde309430970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba08e8ff-9227-4239-ab71-1d5b1d7db7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b279ad-41db-4cf9-83c4-679c871cfc97",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73990c0a-51b9-43f6-b6a5-a8b09115c7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a26efc-0c19-4bb3-81fe-5c17b0cda235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b81d357-adae-4f38-a163-f642766691e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f681d83c-a0e2-40b9-a608-8b3f8ed45a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa1c779-f7ac-4a0b-ad67-75c0d3992698",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1ed4cb-a35e-4121-9fcd-f00e27f3bca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a854cc2-da97-4114-b94b-80fe90da6b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106606da-f7c2-4a40-8fea-7440d0aeda83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97ccd8a1-135a-41c4-87d4-d45bce81ac19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d81ff1-12d0-4d93-8dbe-f2568783f9ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1dc7e6-f728-4b4d-96fd-1269f47b5725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c0f871-c116-491e-9971-92624cd0af9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de0d487-281e-40a8-a74e-a5fb31dd3a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7c15ad-6192-4f5b-92bc-20c633914060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e27ab06-8891-4f3e-b071-ed463da30599",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104165ee-3684-43f7-87ce-0676408779db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb5de53-9e03-4610-b143-d01f3b30a8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc37a05-5009-4d20-9485-08f453ccac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a022ad-fc52-40b0-94b8-abe3e848b30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbda78d-8734-490e-8ad2-f70a23a4f4fc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c0f9a5-f4a1-4ed2-9363-186dc9d0fad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264aae4d-2644-4670-a257-e38eadfe23ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7440736-01bc-42ea-be68-4bdb4cf4a644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a280be9-cf7a-4590-96d0-d6abc390abc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e53f5c-dd27-4c66-8698-887266659d13",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490af978-c965-4a08-9f6d-b33f7b71f481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7726efea-9df9-4387-81d8-3f8ea47cf549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63ee41d-cdf4-4631-82c7-c99aad940be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdff07f-d345-4408-8e2c-c31b60a27d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f772959-f157-44c1-8f96-3539ce2e3dac",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df27c0be-8910-4ed4-9348-c2bb59e5a233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239fb887-7843-4ab1-ac34-f63dfa518ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f069369a-9075-463e-a7d6-76dab57265c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ef6597-7936-4d78-b0b1-edfdf08364f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d0611e-b4f7-40d9-b768-f7eae2d2d022",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d9a66e-18e4-40e2-acc8-3c0b8ad9081e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b9ea12-b419-4f10-98e0-543c91691fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8d64a9-9e2f-4dd3-979a-c198c5776fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f85e1439-9e38-48de-ae9f-24472fbb980e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa8786d-fcb8-4275-85f8-2848138304a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8635837-b089-477e-9b70-afc8a8c8e300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2588c916-9c1e-4499-9557-53f4af070477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5450485-d189-424a-94eb-602ea2af8284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8629891-e522-4c38-9ffb-ccc662f6d5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8766dd-25d2-4200-afd2-28c54fc16d39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415f805b-3d64-4265-8503-afebf26aaf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338df736-eda6-4ca3-b61b-9aa8b59b0622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c39f7a-c1f5-45c8-a4b4-fa1d2e47a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d66cebc2-0b3a-4c3a-b185-f359b8968d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a2734e-8911-4934-990e-6b056186f77a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90778605-efe2-407d-bca9-1c51e0af5e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feae8da-5cf6-40ff-b857-eb4e09c98ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fecafcb-e299-48dd-afdd-04e973ff1c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43426655-cb25-4ff5-ae4a-68ac423c3cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04fdb8a-ed5e-46da-ab92-3d013b1505f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d79c45-9ed8-49c0-a89d-64fbe979c838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4188c7-9792-402c-ba7a-430356829a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a3d400-c459-4968-b98f-6c835aa2a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f53d9c8-25ed-475f-b704-00884e65ebc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df2281c-6028-48d6-a58e-c7018aee118e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea60d0ef-2e7d-4d12-8cb4-9235bc97d6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd549b2d-c037-4c67-97c4-efa5666bbd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627429af-15b3-4ac8-8ae6-534867d6950e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef878d5-27cf-4041-a2f2-5d29fd6fe2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074c74cb-6214-495c-b4da-669caff92b6b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98f1d51-dd2f-4b17-9128-dc1dbdc19c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7584a8f-c31f-42c5-9d69-4ee6d959f02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43111b9c-0669-4e35-900c-4ed7daf6d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dde77f-746f-453e-b231-3cac7a29fe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d8bbf3-0ca4-44de-9dcb-09bcd4a47218",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115b8059-be82-4ba4-959d-50e95b484cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502979ba-4269-4cd5-bd9a-f1aa9326ba4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ff9603-1330-40ca-8741-f1fde158e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88e058f-ffb9-440d-b6cc-d639247769c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259b3357-d6a3-410a-b584-50dc857b70c7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ef34b3-6ede-4c24-a481-5b33707dd368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7b6dec-00dd-4107-a4e8-da21afef1a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a968c91-23ed-43b3-afd9-818659cd7f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a993782-34d6-44e2-9c5b-d9c6929593e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557b446d-4c6a-44fa-8360-c22ee5c135ea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d51a73f-80fb-4eef-adfb-d9c3bb84938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed492e98-215d-405c-812e-d0e23238dc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcdf401-68ac-41be-b8dd-59ba94fe5e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f6540e-3235-4d75-8a16-066ff28fc15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af262e34-90fc-4612-bddf-84285ff10037",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e83e41-ee39-47f7-acd4-f71b9de88e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8b0584-3dc8-4828-b2cc-9253c6cc5cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d11e66f-0563-4d8d-bff1-6a3a31593bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1621d8-cc71-452e-9811-e175a4cb3b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f716e3-70db-482d-9a67-15b039fed548",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee8d299-d58b-459a-86aa-9cc184b00f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9433b5b7-3449-49ce-8369-8ca2689c1a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6c8df0-35bf-4888-8cfd-2caf7eef7755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63d4a79f-3fee-46fb-b6fb-65e72880a73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c454b89-1754-487b-8e5e-8bc253dab978",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20625883-3509-42cd-bdbf-a7483ac0d20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65a8f79-0aa4-4a0d-9da7-d92942bd1d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbea933-abee-40ce-8925-20c8cce4b10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf89dcd-ffee-4276-93a7-c079dfee4d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f33751c-46a6-434a-99c0-4455501680ce",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ef4f17-2c3e-4c42-ae39-f7326b9005a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d69e520-cf50-4608-8910-28333c683ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cca328f-0bfc-4d80-a69b-857524998967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e22009f-2641-45a5-884c-cc986355f9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea8e835-d807-45d4-b703-f82bb22ab7f4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edfb9be-da7d-4338-9baf-d2ee0451035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442e4b19-125d-401f-9343-9069638df731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb51fae7-677c-4253-a018-8e36f9515b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af71220-7cc8-472f-827c-aca73ed1aae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50f6fc4-f9c1-466c-b5d2-2a1a7eee2c5d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25862fd3-8839-4f39-9194-4a0380b7d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b51a8d-fb12-40a6-b98f-8a652ac54321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6c0902-48de-43e8-a0e2-f0a7b32e09bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a16654-7688-4168-a138-993834057037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ececca09-4ff9-497f-9e38-aec8a50b957a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beba1151-c7fe-463a-aab2-bde708262b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d87932-1428-4f3e-a10a-4e1404e5ecb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454e7261-5cdc-4fde-8396-ef04d76b533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a72ce446-ff11-40ad-9103-a79df9dd61a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799705e8-9965-434f-9296-dd0c2a8f6633",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc37b3bb-e867-4d97-9948-30de20719abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7744b598-1b0d-4633-a804-d06e5cefee93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bd7667-8058-479a-96e7-5f6482893a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d783fa0-33e0-42e7-b118-683f3562c1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdeb201-0a39-474c-9d47-9b404b4084b4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312cee05-1fb4-45a2-8c14-becbbe9a000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1853e6-7bd6-4a6f-8dd3-323543d507c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be50544-0808-4a5c-a9d3-44f2419a0928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "406bdd83-fb44-4998-be17-2f3bf0d5e6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3527f41a-0d1c-4e63-8ad5-2319cc9686dc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af66daf-f7b0-4abb-ac8f-66853064f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e71529-a84b-4457-9e85-36f72e12d5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952e1efa-33c0-4ab4-af0e-02d894acbef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d493cc96-70ff-4f8f-b191-4af5a3ed00bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e1164c-8b62-47e4-b346-a450f06be828",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e51976-cb45-4a0e-bbfe-cb0b229ea64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8336f8-5ed6-4d4a-96af-f0bf3e68a01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e819c8-f463-4148-9ab8-a907a8bd5b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5d96dd-54ab-44ab-bb56-adfb2e90f780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1d452d-3060-4569-9d1c-4e80099a352c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc265350-75ee-475c-a2f4-d38c4d757d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47547bd-2aa1-48a4-92db-27812ca9f7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbe8a4c-907d-4a75-bb85-2097103cbfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1ae291-a9bb-4a4a-b40c-6a022b9aee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70706f64-5536-46f2-b19b-259054d2fad5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc6a4dc-f055-48e9-8c40-6eed5e0a2645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ea9a84-f5d8-4620-8abd-3f438bc8fdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fc4a48-ca9c-4733-a648-2a310789b3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "373eb3ab-d513-46c1-89d0-4480f2a59e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d5ac64-281c-4d95-b188-8c1206008607",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db031c7-b5e1-4786-bfcf-f4d1f3fe2c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4a4ad7-198c-4ada-923c-4bb4a6373269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d18274-e6c1-4a56-93cf-ad0c1fc9fe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e65fa1f5-6b54-40d5-b335-84d0dc37768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4a2ae4-c95b-4596-ba53-14bc0b4520f5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585a756a-0037-4f3a-a304-84f7b6ec5bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb30a452-febf-450c-8e87-a70ac4516169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9034fae2-3c54-4017-a8fa-3a04a13139f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "669cb3d4-d21f-4121-9583-f7229208b8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1c7d47-4045-45b7-8005-990eb7c8daf9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3008231-e4f7-47cb-90b8-2f1670852d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9011db05-f584-47c0-a927-5df5ac17f8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0569bbd9-56d5-4ab3-b5a7-760f09b374db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e339b627-1b58-452f-b520-155730c836c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e0efc7-0083-43ab-8ea0-74deb1b73d7a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad79d42c-6c6e-4e74-946f-e42890865b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbccf9eb-e88f-41aa-984d-591156adcc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb2b961-0b99-4ded-8772-0825d797a693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61321686-f659-4778-9702-f7f1de06d003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82391bd3-2ed0-4473-a064-977b154d251d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b48e7f-fd1c-496c-bed1-d32011cba6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d9dd69-2a3c-4ab9-a7e6-8f210a5dd2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a403ed48-923d-4d3f-8f17-4889040bbd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc349f4-b0a4-4d98-8338-0857a6cb08fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e62d9cd-fbe9-43c2-b4eb-2894ec200c2d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e25855-00a1-489a-99f8-9dc2119cda08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59076d7-27f3-4020-8d07-8a562afa21a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7561bb7f-e1e6-48a0-9b9b-b852849fc7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58742d9-5095-477d-a173-d8d60ce8ac4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3bccae-ac16-4986-8e9f-26fc38c671c7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e56c48e-03e9-47f8-b0fd-f891d9806e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc925d54-ac0a-45e8-bef6-707fe107835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42049426-261a-40ba-962a-c0d2386e79ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b08379a-14ac-4aa8-a7b0-e79874771d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0816d304-9f00-4a85-9843-7f3b7f3b2ba0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4484cf-fc2f-4c8a-87aa-2c607f798192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36578ca3-fb00-4c3d-a216-e228ede5a109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f287bc5f-73de-42f6-80fc-f1786ce9b627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4de6e5-46a7-4d1e-9541-8f232b6d5237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb96afd-e3e8-4e9a-b70b-8962a4bef442",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a908b2a5-8eab-4133-b0a9-bbec0116d0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8a6def-697f-40b3-b5c7-7ebf10541f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aae7d8-ed0e-45fa-96ab-e6374de4592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "611c972b-f83e-4294-b9aa-6b5d0b501cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941b698a-234b-4ee8-a0be-76c4768a9802",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afb4152-43ba-447c-aa1e-209ea76cfcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d317811-1a1e-4973-8a58-15ea37f7d080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e81c5cc-5eb4-472f-b176-6cb86d6a9a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3106e0-6487-46ab-ac71-8ff1c181b08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce8c85c-b979-4a4f-9b79-827e9e656b18",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ba60d2-eb16-4274-9c00-5869f1080970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996a859c-af80-47ea-99f3-60dba57fb991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c88516-84e3-4a6f-bb14-bdf01dc9f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f817ade3-e187-412d-9293-fc3ba9665812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23db7df9-1477-4375-8a6c-ce80f80b9657",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376b71d2-1c2d-47df-b419-8b53ffe9dc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d61b55-c739-46bb-ad23-5e63fa93ccfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0908ee16-3597-429a-bba9-26e62669b4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e06d7ca-e511-492c-993f-2ccb8a093d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7125bbfc-43bd-4b11-9abc-bf7ee1b8f2d5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128cc329-8d47-4308-9599-90c682aceb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d6d6fb-4a18-437a-9c07-24a01569a65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be818c9e-73a4-4bea-b7b8-0143cca157c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c502010-f3da-4090-8f59-f58cb65aed39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd82414-ca51-48ec-9e82-8e2dd75d6ed2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83243516-8962-4711-85c7-085f1636fd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "abb738d4-a201-4a60-84cc-706c08098e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e813bca-e940-45d0-b63b-7ab554c5f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41a2c259-ea5c-49e9-8ac3-c0805016a2e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dad72cea-caa1-4b74-bb71-c586e9693f5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "827a032e-2e31-4bb6-9f09-75bc498151ce",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0822f83-b64b-49dc-9c16-bcded4c3f1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e46f411d-05b7-44fb-9987-efc17270e9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff80a28e-dc7e-45f9-a01f-a2a89205b0ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "716fc183-d645-4ea6-bf5b-672dec6156d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a9afa68-0a0e-4120-861f-f588cc0b2821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f38b09ea-8664-4f6e-b40b-ae149f27c0e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abb41a3e-6d27-4c93-9d0e-7758061d9325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31d9e695-cbf4-41c6-80ba-e4d89f6482b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "981dae6f-ce85-43f0-b87f-2d35ec8ee192",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfd6dfda-2b8f-43c8-ac25-ab3219b57c5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e7e048a-2a0c-4257-8355-aa6efb30cbfe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77e8de00-e13a-4db8-9062-f47c04fcde4a"
                }
              }
            ]
          },
          {
            "id": "496ae486-0efa-4469-86bd-7232fc29652d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8bd6c186-2219-4e7b-b307-4e1075a16e02",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a6bbb0e-fae6-4463-a66c-00d5aa3ff1bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e06a0c4-4531-4a70-98ea-1ee5cc542d69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "311a911f-c326-45ef-b72e-783ce4e747cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "edd91bf9-ea3d-4b36-afbe-96c598998cd5"
                    }
                  }
                ]
              },
              {
                "id": "cb0b8965-47fc-4fe5-b6ad-448ea831ec10",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce396575-2ce4-46e4-9331-c2dfb70e8e7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03e77356-05e4-4921-bf97-330b72a59fea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2673004c-5041-4359-8519-4b14ba483f84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bb10749-a8a4-4034-89c2-be2de5668d2c"
                    }
                  }
                ]
              },
              {
                "id": "ec6b5bed-0a1b-4919-b1e9-56d3512d4f20",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "800dbabd-15f8-471e-875b-63f8459e2b50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84880a8c-1035-4d95-82b0-83ff1b9f0c77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f34892a-466e-43ef-977b-797f4ed4670d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dca864bf-66fa-4ff2-a2a4-0f68fbec0107"
                    }
                  }
                ]
              },
              {
                "id": "e3ff5e88-35b9-458f-a323-36d6bb5348b2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3daa1915-3d83-4241-a0ed-2ff5c855a551",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07b5c0f9-1f4e-42d7-89a7-492b822fe5f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29dadb5c-f098-4b7f-97f3-12ddbd414cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "528d4e8b-d16c-40d6-9267-bf0e43d2b0ab"
                    }
                  }
                ]
              },
              {
                "id": "20a3402e-20d7-4d85-8723-16dd962f4297",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30969d0c-fb8c-4aeb-b3a5-007ec299b8f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1454a98d-b515-405f-8787-a10d697178de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7890553a-66aa-45ea-8555-db92448b39e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c77bef60-40fa-49e0-b138-a0f26569bcb3"
                    }
                  }
                ]
              },
              {
                "id": "c19fbe2c-1a0b-4d51-8239-3a07897b4559",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a664c3f-97e6-4c9f-bc55-f1acb13697ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82cc1dfa-60fb-49f6-91c5-fbaf724ac25d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a79f30b-9bc2-4812-9542-d1cb1d70eed5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "390c61fa-5dd1-423b-be73-6bded9ab678f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92f3b330-51aa-4a4b-8b3f-90758ebca3bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eab580e3-efe2-4597-ad6b-a45eef756b6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f7d9e55-f412-461c-b312-ce33fa42563d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "785640b2-566f-4a31-8e1d-fe934237cd90"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bef0ce8d-56ea-438e-8e0f-996072f603d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dcdc03ae-c506-4b44-96eb-84b181886a47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "531499d1-f33a-4b63-b538-e985d2942420",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc7ed038-9658-43b0-88ec-b06f5de5341b"
            }
          }
        ]
      },
      {
        "id": "0af74886-c053-44b5-9f5a-75739f4de2db",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a0aa864a-b4ea-42ad-a14d-0c0e93bb4df9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03a110af-e357-41d7-bd96-3eaa2bbb4008",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d6a25e0-e4cd-4e9c-b868-7198be0211d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4b7f51-c4be-4599-b808-2069abdd586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76ef008-1ce0-4d4e-b083-06d06002e5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf7ab66-51a0-4279-8efb-d27c0441c296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1482fa2e-4533-446d-9b94-bc50c55ee539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aef0cb8-15ca-445b-9ccd-bbc9f1197349",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0061fbf9-42a7-4e4b-92a1-6a5c9ecab04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfe8911-ebeb-4a4f-b126-80deebb4a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adde56ff-861f-4f21-bfd4-b61a02ffc0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaa37b8-9069-46f8-a619-25d307ba43b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ad7a8a-5762-4d07-9e8f-746065e50a5d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9972664-bdbb-49ec-82d5-5a4b438690dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3613a0b-6884-42ba-b759-32ca0dd91d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980bd027-8022-45fd-9755-a1f4382a446e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "043f2b53-9a4f-40d9-a420-d76adeb455e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c646e63-e711-47de-b4bd-078f1d6ae286",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ac792b-0ea4-4603-8480-e82e88173088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da819ba3-51c7-4a97-80b0-8f8f3021aeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8a8c9f-f9bd-4312-83ac-ac68d2f7dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbab585a-aa5b-447d-b5ff-354321c60f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5edba93-ac57-4738-bcb4-2c053368458c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a49e89-387f-4434-a4de-d794fe312ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dbadc1-1ef8-4562-b6eb-fb5db10b06f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7a97aa-9374-4491-b30d-0045962cf63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f30fd4-d972-4822-b1f3-cf6ef4e4ba45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fea677-f811-4a25-80ba-4975062799d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69afbe8-3d72-4f6c-b228-8408c1620479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c19ec08-373e-4be0-92b8-bc27399e0364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2d4cbb-cb23-4746-8ed2-4cc4e47a1dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea0a2ef-ac1c-4bb2-b590-434a9005c71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e56e43-e075-40ef-81ba-f6785648b2f7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9b6a7a-0de8-4db1-b97c-a955be6523de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732e7bab-ba9a-4dff-85d5-3fac63c68220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efcd87e-b0e6-4607-87c0-2596bba0526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b14f53-ce75-406b-9a14-be2b8887ebb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed3bf25-b0c4-4fe2-b1a3-b374a07c6de3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7868b8b4-8bd2-4020-9791-a8f183cb7658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddee54c1-5ce1-4296-93ef-760024d1113a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd1b758-9293-403e-a947-b6e474e4b8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98030478-a233-415d-b4cf-20021e4ecb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d1a627-c006-4290-9644-e907db8689b5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc200e0-7626-4405-b0be-f0e9a972ca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c48f9f6-663a-4edb-b17d-065d6af90086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916ea1c7-c65e-49fa-93ea-018728e0d0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "231cdf84-eec0-4ffd-8abe-1ff0c9de953d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f225f9-bca3-41bb-a6a7-b5fdd7629f58",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00891852-731b-418c-8578-7c717726fd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80a67d2-632e-464e-8ae0-7e47eff55332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dff8b9-771d-4ffb-8c10-d37f822fce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "129e32a2-28cd-4a00-ab62-337af37fb724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622ed895-8a4f-416d-b34a-d7bc4fcab3fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b1415c-2091-4ea0-a376-4b9f333fbd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924ee804-74c1-4022-811e-73cc825cd14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d67118-0ffb-4cdc-bad5-d8b315614cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e8e80b-5bbb-426f-8311-b442e6929e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d9553b-f4a4-49e2-9ce8-cc5896108de0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8771cf39-30ee-49a7-b59b-80c66a1946c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8440be10-5216-4737-82e1-93a7c22f5fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ed68a3-5752-40ff-9f4e-d549bb78a217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e01d5e3-df55-45e6-a66c-63564a0f974d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf3e72c-8a10-4587-94ba-ea6611c75f06",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c1e31-97e6-4f29-bb80-6d38691c3a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5b6bb2-307b-4666-ab36-e48566320f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814b1248-8f30-44a3-845b-ffcb1d57b8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b1061d-5558-4dec-b0a4-a2abf91d2a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de38faf-bb3a-4919-9935-5bb1e62f64b3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab23c2e8-7e47-422f-b126-def574c0ae18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd0ebd0-ea10-4699-8f7a-9103431dbfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9501c4f-fbc1-47fc-9041-e5c739586db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c706de8b-6a8c-4033-8a9f-b9be81bc67d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cd3b69-34c5-4e80-86df-072a4bc3379a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04978842-d8d7-403b-a09b-de8a0881c590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04747bfc-ffb2-4aa4-88ec-c38ec03d82d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6c6e74-9cee-40f3-97a5-2019c7a956ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aae19d-159f-401a-9554-70791999782c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e07b07-caa0-4844-9096-07b572d5e707",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8b64c7-9d8e-4cd2-81c3-9103ead84f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ddc37a-10a3-4269-9bb6-4c2cd47172f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73760d9d-6400-4851-90b8-4ec9328ff547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d655c9-c0bb-40dc-9407-fde9399fdc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0afa746-0f7a-4b5d-bbb7-582deebc7b55",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aba5f1-ff8b-40f6-b7f8-8d4c95be9c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817051cf-114e-4331-9a46-7546e7bac2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74ea85e-101d-41cf-8dd3-425073493f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6647ebf7-24d7-4625-bbf9-66106cf91db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae3bc2f-daf0-45f5-9989-a6965d47d65e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f77cb33-95e6-4089-a876-4f68274046c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f050e2a-4299-4046-b78b-666cccc25d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8ae1cc-5cd5-4ca6-9314-6fa405a646ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46de8a3-a984-4685-a6d0-5db9d57fda41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0e0b90-4dea-4aaf-aa1f-671b8be58f35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e571a7d-0725-4662-8707-37b3cd2f32a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec5a18a-5ef9-469c-a69d-a2e47993b478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f68b04b-fee5-4ede-a7f5-0fe4e474af60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ba4481-2ad5-48d3-9eaa-7ccefbd5a3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bda855f-1058-429f-8f56-83ed6782c5da",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8740d4a-eda6-4693-83b0-8fdd532bea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcd05cc-76dd-46b4-a316-d4679ef81257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e070b3-4020-455f-87d6-cc16a1b8ae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a13e95-a7d1-4312-9098-9d68548dc83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931e3888-d460-4e03-bea5-b21df8159097",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332694b2-afa5-4b92-897d-50c585354b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5da673-016c-4f27-8c53-1c0b8d6af48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0707724d-1bf2-43a2-a146-1280425ccc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeed10a0-5aa5-4bdd-8493-03dae4fbfeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910fa92a-769d-4129-81a4-e929f5d9159b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad06916-d2ad-4b1e-b8c3-7a8449c4bddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e552a74-fbb1-450d-990f-69a8ff7e2664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0c9935-114c-4202-97d4-aecba3019021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "764c46f5-04a0-47f6-911a-f8e8a8405ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1010391-847c-4589-8fa4-842233a99642",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51118c1a-4855-47ae-9f4c-5b7686cfcc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58515274-1bb5-4cd4-8bdd-5ca917e5526c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72afb478-652d-4a90-a489-0cfee5dad9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8e8197-e048-4627-a0de-a47ea731fa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce8ed59-6015-4a42-bc25-07e4c0fdc0ab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcf7484-0f74-4267-b828-3873479209a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b0d55e-deca-47b2-94d5-f77ff8bf73f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4d6893-bce5-445c-8540-9c6b8e019ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120144c8-83eb-4159-90df-5addd6b80bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d994e15b-9d63-4106-b6da-76179d30acf5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf660990-d84a-4610-ad63-4d3fb77c0009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893c455e-00e1-46d4-9099-f57563e40807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d061b2e7-c5dd-4709-9808-9f20ffafefa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c18a44c-78f2-4c76-b49c-2e65554b663d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6200f0e-c1f1-4e68-b127-c9c86ccc392c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d9a71a-beee-468d-b047-91681859fcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44096c09-1c1c-448b-881a-f7314e643cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b7c572-6eda-4dfb-b0f5-bc9599a124a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ea0e69-b154-44d8-aba8-26ca64057292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7531d7d-82d5-41a9-aa59-ce4c8dc32ff5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d66c629-2616-42b2-bb6b-2b8d8950cea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc83ce8-a4b8-4a71-b7ca-35b9698e27c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9176ec-242f-45fc-9985-0cdc4d04c513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9729d4-dfae-4670-bcaa-eb6c6555410e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bcb465-6064-4646-8b05-824efb7ce999",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9720c2-eee4-4e4e-9980-8e5ec531efb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4feb9bd2-4676-49f9-afea-0365fee0cabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf64941-b1f3-4695-95eb-d4c140b58672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa85e57-95ed-48ed-b9bd-bfdb92be5bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6781f51-3c35-43ce-a0e6-85a4e05e57fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcee7747-956b-431b-be7b-6554c2f13a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844f0433-2adf-4ada-a3c6-c74e47923394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2732982-04b0-4a51-ab4d-4493e59abdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a42b350-2713-4578-9360-8d97a0435389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d220fe80-8309-4b35-95be-e92e72d43df9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f51b553-2039-4560-ad4a-c25a2ecaa2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c1e46e-0c93-4b97-8441-d82a388d8a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb43c2-4d82-41ba-9d1e-2b6b6174b07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8555132a-422a-4c02-bdc1-2a6eb137e76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556f7eb5-58ed-4f0f-b1b2-c6bcab74bf70",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c63f500-53cb-4354-ab16-63b84b1b08e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0ae8aa-7744-4fea-af58-28aa9cf68d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da319163-db88-47a1-9633-b6286022c9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bb2376-8497-49ee-bb2d-aa479b4a3f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad24e536-024b-4b75-9fbc-81a1e1ebb9b8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a51e6e-6b14-4828-b05d-a030d82a6cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6731d410-18bc-4dbc-bd83-8cbfd6be0262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21077ed-3d76-461f-8e9c-b4675e25d011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b75b90e-1d5a-430e-862f-b92f8d12fe2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5eb51c19-0863-4cc4-a094-286b0b7a2a50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10a51a7f-36d6-43ad-b68a-8484342ee5c5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f58b44-2b81-4571-b770-26e36e85ffd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cee403-4a5b-4577-965b-f0261d6bd093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e08956-d791-4787-97ae-5037b0523f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e687999a-df99-46d4-96e7-28c06a70992a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48d2db4e-19a4-42f2-96cb-a92bba2f4532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a81078a3-a89a-4a61-8e76-81f147054185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "858ada2e-8cac-4868-ae96-6527097516be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8dae180-e344-4b46-a454-b3b852343f94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cec37b8-8f7a-49bb-8a19-b93f9df55497",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42d9fe72-4436-4d08-9a89-e2be15746f5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3476bfc8-0a70-4df1-a5c2-2fbedacc38c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ecc8ac3-7aed-4806-9e3d-edcad92df031"
            }
          }
        ]
      },
      {
        "id": "675615e8-a46b-4c4e-9e95-29e65fd04f2d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "eeb7ad76-5c36-497d-a9ed-586bd5050436",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45b647d0-4003-4a83-a1f9-8b4964442af6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9539bd0b-ac99-4735-9c73-8780607962b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd89458-4080-4144-83b3-013ec386bf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13de896-ae33-4760-8d7d-dc83a863b994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5701d82b-1a37-4631-bf8e-104e9f4449f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5dccb56-d2ef-4e5b-b2aa-c12bd4df0c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7f9c2f-29f1-49d1-b66f-d9672533327a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c99cda-e237-41ec-b0d9-b763874e2422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b613ca-8051-47a8-a9f1-ef1316046041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5004bc00-5038-4ec7-a4ae-a276315554b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a569492-c5c1-42c9-a627-c00a13e2d761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cc655d-cfda-4b43-af07-723887c0d74f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24625ec-9f62-472f-9035-549b12667a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8020a252-511b-41fc-8d69-8a89d1f9d5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde4c004-e86f-43e4-bab1-2755d9966f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec19a454-7780-4102-9f7e-08613ceeaa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b48c042-dbaf-46ad-b0a4-7ca64e7d418a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b72c3f-fd58-4b82-afc9-f834a8b9413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b301077f-ad7c-48f0-968e-df61f0610c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f1dc57-08d3-4d84-94df-24bae9e297d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b32680-d2ff-4bab-a210-3a96eb0b0c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f5de6b-c9a7-4e86-ac2e-bdaadaf5a705",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9ce92f-471b-472e-a149-762c5f7236f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f98a956-cc4a-4b02-81fc-2838f925d30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb315cc1-2bf0-437b-8dbb-3648dbcd4716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ff796f-fb9b-4dfd-9ed4-47a781a9e394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627b5966-8f4b-4f11-8e44-c34c84d758f4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1ab9db-be33-4fe8-a98f-a8f79e95c607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052b3618-fabd-4ede-9312-a7e05144ab70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309b08a8-af3b-49d9-b968-953cf9fc8658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d3f637-be0f-4813-b1ba-7ee4aed45fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8c3da7-801b-4dd1-a8c9-79b299448d0a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d50e6c-ab11-4bb5-b42b-e6f167cdc3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc03426b-1b90-472a-80e3-04029c8293e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08408d00-13ec-4418-9c6b-6bfb696eadc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "52625b53-846d-4519-a6ef-687081ea2d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbb4a58-e107-424b-b8d8-69583f02db74",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2094c17-0ea7-43db-80f9-2aec88439e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b5b14f-bd7d-4fe2-a4bf-22cf485f2ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9714586-846f-4191-a3fb-93e6ab34ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fc950f-1e5a-4133-a91d-6a1d9f0b9187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e34bfe-32d9-4f86-a1dc-1cace1edfd8c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702dde9-6f82-4982-9dd2-3d1a3d30297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc397b2c-e839-459c-b02b-0d44c4b10a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6a9bb8-af3b-449a-a7f1-c73ebf9783de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e09b9f53-932f-438d-8901-89e8e4e13dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d246b6-ea82-4c26-9470-54370b4e80b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896a89fd-d6d3-4175-a8b5-be3c8bc93c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ba627b-e502-4792-a9f4-39eaa30edcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cb6639-bbaa-45f3-8be5-02915f686d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc67f2b4-37a2-45a9-889b-fed17835816a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e489e6-4fa5-4b47-980e-4c7003406873",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ca3dd0-0afc-4efd-b098-9941fa6584b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e2a990-dbff-4bd2-a56b-62599beaca0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35babab-fbc9-47ae-b487-95e058848980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b52ff60f-4771-4b03-80ad-08ac11df0cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484f553d-b0a7-4811-88ae-1fdc3a3d4fba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8bbef6-5e5d-40e4-b4a3-63a9d61cbbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f222a78f-70ed-41a9-8887-481345cb6484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321a86c9-39e1-4129-b19a-5b43dae5080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a966326-f7f7-4069-bd99-0a3e9694e141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752a698a-12d8-4a48-92d6-6ccfea2d43f0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c8342f-8851-48c6-ab2f-40b3ab467ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ab0b09-df57-4060-ba50-9b66f505798a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3293bff5-73fa-4500-87db-51cfc50d2b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfdf37a-60c5-4761-89aa-9c77412ea39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40f4da-0c3e-4657-8dfb-36efe17c9adc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712dbb9d-e095-4614-8f29-4887275a6062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95dcaae-ee42-4401-bb20-01451869c56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408d9061-f059-473a-b145-e5686f1ba6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "baccdb1d-d995-42e9-8ef7-9fe42b4488bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3148a688-20d3-467b-b622-39a6d08ad338",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c1cf4b-8995-4ed9-830b-749f66d69a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3cee83-c1c0-4751-bf69-48b006f3b0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef91e0e-fae5-4a9e-9aac-9bc108052941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4286aa0e-3f98-4b8b-851b-5cf686e86082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba6bdd9-2577-4953-9d2f-57b1824b722c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e950d081-479b-467b-b6e9-d7f230f61468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b344a3-c562-457c-8da2-ff5ce34e1e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80caa932-888d-453d-9fb7-9531dfd8b589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fca5ff9-094c-4bfe-bda4-07ef64ea1cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac576da5-5135-4548-a294-6926745995d4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbd7f8c-0b99-4306-aea5-17fef881fc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95deab4f-af3e-48d4-99bd-6182d427e251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9812c8c-bdee-429f-9126-660ec73fcbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8363f3-4097-475f-bcf3-e9178b30a993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eca665c-281c-4a30-b523-f97d4e42453a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5dad63-14da-4f2b-a3d0-889a6b0a041e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e2a761-6895-428d-8ed3-25ffc9a8ffab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c19a9f6-3303-452a-9ac8-24929a682b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d3514d-02c1-45fe-a5aa-5b11143df163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91055ff4-da18-4d67-9f1b-f38472bc2df5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93de39c5-3374-4d5f-89a5-8a7fa31e043d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0298c5-459b-452e-933f-d65631dad332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1083e822-4ea1-42de-bd70-eff9edc69dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5367d4bb-fae2-4d6a-bbb2-ae1604b05bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7432a6f4-8584-4c59-b73e-8e994e5340ca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66591bc2-1abd-41b1-8a05-ebc7c8b15f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25e2337-4c51-44ff-814c-47391d50ae26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e568c-0767-4f02-abff-a468d586afc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8ddc4e-e09b-4624-b688-6d31b1e2cbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0c9e69-0bed-4cec-b171-a08fda29e839",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52db057-fca6-4a43-a8ef-27411acec1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f16f9d2-7885-4454-9b7c-da20f50b8f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a9547c-3c15-4626-ad0a-67002c347915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761d8d98-973c-4e90-a0a9-64f910fbd988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b2ec8c-bb4e-4d8f-8989-ba973fb2caf9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aceee839-fdbd-4c8f-80ad-085437ba5fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9941a57-0088-4991-b8fe-84319f89d51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8aa9a7-e117-4432-a7cf-39b71fadfad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf9ee83-23a7-4434-8a59-f3bb35f7dcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3268b2-7d6f-4729-836a-37668a49b4ba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268a20fa-5916-4d56-bc2c-6a7a4335cc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d687b0-3941-467d-a304-a5f73d28382d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4e18b6-df9b-494e-b36d-c283dc19a8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "002030b5-0467-4a5e-b1b8-fc8ac07a3ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462564a0-f1ed-43ba-b6a3-e5bf072721c0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884238d9-2f69-48c1-b3ca-4be76cb2a5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a33025-6f75-40af-9497-26dcf429310b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814a31a7-3eb2-4889-9cf7-bbfd6f536451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb0741e-5f4b-40eb-8732-688bb991d5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49d6a74-3dde-4ed3-b4ea-d54381855f5f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12fa805-a627-4ce5-a27b-8738bddde57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2804de8c-c41f-4716-bb88-3e660a3efcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925c9c83-6b26-4f36-9471-a983e0a03565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9d7979-309a-4d22-bb3b-e698d6ebf0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4c2028-7bf4-446b-926f-0678cc7650e5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3087b3b-82aa-42a0-a10e-9ef6c6e249ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed3a718-9f28-44ea-8491-b0258121f225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3d5bef-ab2a-4e6d-b28e-686efcf02197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d896b9-09ba-474f-91c4-fc10348c9d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f81969-66f7-4c1b-9d94-3e7c615d0c80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff9aca0-72db-4903-830d-39a455a13b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40df30b-8e21-40c0-956d-95d9130f60bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dee31c3-f3f1-48bb-9b62-a1b54ed90c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6abfc2-cfbb-413f-b53f-f77083f3f457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133c7647-919f-4a1d-a947-c62fc8a0482a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece8f7f5-78ea-4c01-9ef1-9e741766dac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21447a7-64fa-4029-9f13-43a89b1d88a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a2227a-9c95-4a13-ad3d-510e26959ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "208f5d24-f7ce-479b-a70a-83ce14066712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0330d4-e715-401e-9357-fdb8c73e0a9a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81b24c1-d5ec-4d3f-974b-c7d3a1ef0bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abbb134-9593-4fd1-bd59-5afdb64255ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8d7600-0efa-45b2-a14e-5488a4f816c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3bfd41-a53d-42c1-a6db-e5f5d0bbe843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49078053-8c27-4a99-b6bf-67eee0f74b1a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a68e51-fb3c-43ad-b9c1-05c5aaa385f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4ca612-6582-47ed-9f19-67c081ae85aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c92767-a3d9-42a0-9447-e7c2d41a5669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60dbce7-751a-4181-8f03-756be39d752b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ef60b-ab6b-4b4d-a12f-24c5b549c32b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb049a59-d807-49f3-a8ee-2a82fb3837d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c3ded7-1138-4bc0-9d22-c8a20dc894be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc99dee-a924-46cc-9831-443b6143a4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5381fca1-ec18-47eb-aba1-ce3267a24829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131ee670-974b-4013-acc8-9d822ff4542b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0591b237-1103-4f4a-a14e-67042a654eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bfeb68-16bb-44e3-a4b2-d79a70ae1c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e2d654-e36d-43d8-abdc-d05f119798df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25e5e714-d738-4f4d-b79f-d569155bb1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94413312-2bbf-4379-a3ca-9af2c7406418",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d586e601-be94-482c-bf1d-57270d93ab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be035b1c-3762-49b0-8c60-fed7e2f2269e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6293776c-402d-4c0a-a9fb-9c87a95cf88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b417abda-3108-46d0-99c9-dd703170881d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ee2274-feab-4420-910f-afb33471e2d7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3822d6cf-ab99-413d-b6b6-44ec62c04ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f586bc83-041f-47d7-ac95-9b113e7d5542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ece46f4-eba6-4dd5-b383-5fa20ea20097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f151968-d2e8-40b7-a961-a161edd6da99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269aaa12-0fa4-4c59-9bc5-bc3be1688976",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050ba208-8126-43ae-a1d2-f60e6145a6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3476a82-c3af-4cd4-81ea-6d829ce96f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b068790-1e63-43e1-b844-1631dcc93a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c95e4c3-9faa-41fd-ae74-48d930a92325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a58d9-0dd3-4972-a34c-2f28cceddcef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74e30fc-faf4-4c54-b630-be0d85ff02d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0728d461-5c26-42c1-a572-5b20d35f90a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb50284-0e0b-4371-bf4a-318d8e93f35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cc716c-ebe1-436f-8c7e-55cff1d1c133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ba9685-00ad-4dc1-9bb5-a18beaa0b514",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6efb515-6feb-4352-bb3a-e9818da57535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc450fe0-f739-4a33-baf7-f98e5bdad14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d3dc5b-59a6-4dee-b99e-3a8db0a4aaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1074a1e7-1936-4988-9e56-477ff5fd2519"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39dbcfff-3a4c-46c4-89d6-bd651179a132",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cdeb937-7fa6-4c1d-b152-6290aa2644d7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2d5692-b55e-4758-b6dd-915b95c3e0bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a12c0b11-55d6-42d6-b56a-a14c5c226884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cfad31-4f32-47af-831f-c2f404f67c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6438ad38-f61a-47e3-9508-e536aebdb8ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8b2c598-d60e-4e27-aad7-2bea1480f975",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a443304a-b2c7-49a8-b696-15c81ae78632"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be66afce-a033-4ea6-93dc-27f7c5fad728",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbf31a7d-bba3-4af7-8277-3dbd56851b24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c9955d9-ea36-4bab-9eda-189ee258e62e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89c43299-e7d4-440e-80bc-2b64058ffb6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fb62801-ad36-4a4d-b0f1-cd66ccaa0357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a4345ae-cac5-444b-9c66-8e8e6137b8f8"
            }
          }
        ]
      },
      {
        "id": "49602acc-e1be-4f23-af85-ff314b926b78",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7b07829-ffc5-4bdb-9218-6a9a725c0c1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "caa3d1ad-b5b4-4ab5-849b-b1a9e43389ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34248113-edd0-4b87-bb1d-cdb2a7a0ee7c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e830f2-b405-47ce-a2d5-e7da61abc381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d974d821-a82a-4a48-b540-33cfc8acc37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bfa09a-88fd-4a4e-94ff-ada70dc17a47",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e4ae9a-4cae-4019-bfcd-ad4dbc649782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7043dc0d-ee0b-4b8d-96eb-78d404ddb366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7231ad2c-172d-456b-a3c3-1283562f8ac5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843bcc57-843d-4170-a332-acf4ad7fd1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2488dd-dad3-4e37-96f3-c0ff1dfc0503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf1a1d1-dc13-411c-acee-2a24c4587870",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c1e3ae-76c2-4e09-bfa0-716f9babeeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5da5a8-e78c-4ae1-b045-d8daf5fb4f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e4c25b-911d-48ea-ba12-0a54eb38c2f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f097f1e-be9d-4a92-bba7-5004ae511b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5242074-ecf0-4942-a7dc-e64f97d01a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8e721b-5ede-4ccb-9878-3be7ab89de8f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709b1ef3-1966-49a3-8dd8-396d18882105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c95b73-e547-4f1b-a2ac-65b48d84039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169dc8fc-a6c9-46f7-ba25-b8e47e0564c8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbbce45-cec3-41e9-98ad-5033869a579f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da110547-2ba3-4107-94f6-201e89b2db55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80c08f1-98b4-4382-bb09-b7d55d768c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810c1ac1-44c8-4089-a1bb-e28ff2fbab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7665e139-533b-4423-b799-c58efe6e0b2f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb0596b-5fb7-4d28-8f7d-4ed34b799a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8eca002-8465-4616-a4fd-b38cd3b3a48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84da51d-681f-4cc1-b963-3e9a2b353e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d335f1-d5cf-46a8-ae3d-5c7dec1ec1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d961c8-227e-4d51-ad75-ff760b326d1c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62ddf56-75b1-47b2-a933-5b28cca802fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc3e368-7e67-42bf-bd96-a2a3601e20ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6e9514-1e47-4639-9d7d-84dd32a7c65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6796d435-28f7-48bc-b665-91ada811ad7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a10f8f-ec01-4875-85be-da2cd87d98a4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd1ad1d-c38e-4df6-83ed-e13f5454c63f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa3a010-76c2-4f41-a4ba-a67e30ed3f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634f8566-a4de-4927-8f4f-745ea1dd8fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30db340-074d-4114-8415-1a95d4f101d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffa8db6-af2e-4856-8a22-ba38b50a0647",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01420339-abaa-42eb-82d3-6d1667ed4867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce05e687-b66b-4930-8d0b-0a781b08cd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a6c9cd-ac96-4a6b-a9cc-ef193d211425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbef7e0-9b17-4d39-9ab0-10fb6d6058ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748538ee-1a4c-4ddd-9c99-643b725833c0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b23f36-831a-479e-8e79-8f8bbf1e2ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6bf176-d201-48e3-8f33-43d52582e7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed98043-b042-47c5-aac0-616c4f247207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52972c38-3865-4120-825a-1694ae7cb3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eca7c14-49a8-4df9-bf3c-fb4b02fe7499",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8876ebf1-09bc-4fc3-be16-bf3341c6d1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884b31b8-38ca-419a-9dc8-c5ec339482bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e93b54-7111-44fb-9d4e-fed923680f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce26ed7-be32-4b7f-adf4-17dac91ea414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fbf25b-6a4c-4e22-9f85-d4db5dec5a53",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8347a2b8-1b2c-4b45-9602-5c245c653023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74c2e59-1c5f-406e-b095-54c1a929053a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd8ece0-8c78-4625-b39a-89998e3d168c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881c37da-fe10-4f79-bc55-c0ea5fe9b863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26468b3e-2ab0-4992-8726-e5245cc3ddcd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e2ca4d-5bc8-45f6-a85b-261559c7c539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7bd6fa-9cad-4fa9-9a31-dfa3f2c2d646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cba473-4f12-4950-ba9a-88e3cce8becd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fae589-46ce-44d5-861f-1147bce8eda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e249b8df-7708-416a-8f50-9a937b0a80cb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ac534f-6a91-424d-8142-149bcc10d084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ceeb655-15a4-4270-b662-2543e4955bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e16cc6-ec42-4f14-b46d-ff5cea03c7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31ec478-0506-4272-bc1d-4ec1af1baeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bf074a-9eb7-46e0-ae3c-677133996d2c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05660499-b2b2-4c9c-a304-7c626b16ba31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974e00d5-065e-430b-a0df-469107b12a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b358877-c5b4-49b8-a9e2-295bac03deea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e243094-7a44-4005-abb7-7fbc5c8194f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de801ea-deeb-44c3-997d-c78f0d4672e9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5021a996-1451-4511-b5c9-8bb7b9704cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de835f94-8a26-4525-a816-66477e798056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670bfa52-ab6b-4a86-ab1f-9da0a8122447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719df4dd-7a04-4052-b375-de3e08c6e948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45e0609-f667-4897-8b16-406454fda0ce",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e415d79-a2da-43e2-9f47-41b94456b8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9878b7-b25b-4f67-90af-3789c2597686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4320bf33-b312-4e62-b270-ada87ee552b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079dc9b6-48b9-41d6-9f06-95eae1587e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac22d224-7534-4a19-ac46-bcbe6e9ef05d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac510f80-2dbd-4707-8c45-c92f09546fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6548738-8978-4c30-b179-9371e5fa1f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a91ca9-5498-4170-9cec-d461765359c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae05ac9d-c99f-492d-acc4-0dfba3369924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97041b94-6d1d-47cd-89f9-23cfb3949961",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2919826c-e7f7-499e-9a33-b066a6871c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889e28a2-d06f-4aa5-9552-1311c4d98145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8def81b-f492-4e6e-b584-2371a33fc0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af43280f-d914-4915-9694-2ae451274488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998c0d09-6cb3-458c-bbeb-6dd861990d50",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df43a1a-ea51-435a-919a-948a69b24666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec673a6b-c91c-4be3-a41c-e3a72fe0baac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c04ca7-2a47-4b3d-8a8f-6f2c21aaf382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f80b51-f87e-439b-a89f-257e77f68598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f253818a-4046-49da-857c-0ba3c909225e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2455da74-7372-4cfa-b225-cef6f0542368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2b5d67-34a9-447a-af07-35e13caa8f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7188f02-17e7-44a3-bfa1-9141cb83597b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f20961-e429-407b-bd4b-68a86950f507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a0df6a-fbfd-44a0-a10a-4146ee51c2fb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbae4053-c1c7-4fe2-a73a-fe9d7905afc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994c5ded-2b65-4f06-bd44-da1abd1e67c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb018add-a92e-418f-9dd9-51550021cddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e241e0-1661-46c2-b10b-9d8e38661ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a9290f-0ef0-4993-ac39-8cb2b9cd9505",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ce020b-4aa0-4896-a210-d32235e25ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aff7e41-8685-484d-84d6-2c81be28a138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eb9bd6-a5be-4bc2-8f29-b3779953c53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911d4e89-a194-4e5a-a673-e66f58cf3fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7b8a81-872d-4efa-97a2-7780ac41c254",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b226364-f342-4988-9163-ba1306811e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70573a2a-3d06-4fc4-9001-93e4868ddc35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a8c8ec-e5d4-461b-b448-8d06daa6e7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d811a63c-7366-4dc4-ac61-1b51ac72b044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459bcaf0-a071-4668-88dc-edc339ad3c03",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f53a608-7bbc-4c52-9866-a5fd1693a352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6132c255-d248-4fb9-8c83-88ac2d43a1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fedd29-f596-4026-953a-1eecf46f8f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfabd52-e227-475f-aebf-5b0d83299b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730d94c5-cd92-4e26-8133-eb0141fc2be0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fad723-950a-4c0f-96de-37166ec9bf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d2cdbb-ddd2-4831-aec8-e13aa22ffeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca90b392-bcdb-4076-87d1-f11337b5e498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf2acd0-d499-4ecb-ad70-d75c8b315cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9767b919-bc2e-43e2-bf9a-587cda882065",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3665edf6-15dc-4cef-8f63-49baff5ee180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e95027f-9469-4b6e-ab97-8e42ec384ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e226f7-a8f3-492e-9ab0-191d12c91bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a033c0f-dcbb-439d-96a8-71f2e1c987b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1add8998-3775-4da4-b931-22c2649710ca",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf4df70-3367-4dda-95a6-f8229f0c979d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3133021f-69b5-471a-9ce6-9c44fa17ddc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae4247a-8c10-422a-8b20-2d72aec3d127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1c3a05-320a-4c38-9b6a-4897973e9565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfaae1d-92c3-45e3-b12b-6e012c97ce33",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949bedbd-3684-4d17-bdfe-2eb976d18e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9595c803-2366-4b7b-8345-1d0250a53e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f2e135-9bbf-4f4a-b796-77b3261d12b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd4964d-fc7a-4e9a-8964-a633668a254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bdfe32-8499-41a2-8c04-790eae081e35",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3933fc-98aa-46d0-9071-cf97772b05e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e0ddf6-30a0-4224-b74e-2376c1cefeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abdac5c-2dc9-4faa-b075-38b381ceb0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d5c944-0cf8-4be0-ba18-785d72ee2ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a622a2-6f9a-42fd-ae75-160610b38f3b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8c04ea-5f73-4143-b56e-01880f66c559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3920920-aa0f-48c1-aa8c-838b25c9cdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c36728-e80f-410f-abeb-3df4f237cb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5a648f-e7ab-4909-8658-1158d8dde46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0b2f1e-7ed7-4b75-9737-06fe6cc01266",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d781e6dc-bd5f-40a5-9055-678102e23a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd41c33-62ca-4950-87c8-0a58eb445a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c66e3c-2559-40fb-9283-447b94c697cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9b2f7f-4184-4add-97e3-89f6492aeabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a724aece-f765-4921-b4ff-4bd1fc3eedec",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ed135d-7e1c-4f14-b751-b46357455cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3875795-f55b-4145-a46c-ed1c86c671c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b41cbe-8e38-4db6-bb5d-c4b7889df3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7da1c1-19f3-45f2-a069-4e8de8bf8bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e2edf3-704a-462c-82ca-d715aedf4dd2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad6d5ac-78c2-4a12-be96-fa0b5e6cf3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31994ed-b280-4722-9558-e3bc5cb82441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48002541-8158-44b1-89aa-f94666025cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2644c193-8815-4a0d-abf7-b360b3e15586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadb7c75-6577-40df-a3f1-5afde9c71c08",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f0019e-7dd9-4703-ba21-6b2cd0432c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afb889e-d39a-4ea1-8e51-7b9cfffd46a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725620e3-e148-4d6f-aa25-8e48e50c5947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2bdf00-6f5a-4bdc-994e-6bd3fb52607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5a91d1-90d8-4a71-8929-4ff11d4eb460",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a3690d-4628-4fd7-bb8f-a8db5efebf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa35a66-8f46-4dde-974b-f0dfd61e280c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808ac773-662a-4cf6-a41d-3c9ddc5183b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea82a44-ff52-4942-a417-3e6d88dbe802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057783a2-0d0a-4fee-bfa9-01799e271f0f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c220c27-f970-408e-8144-42d4a0de41d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8f4bdb-94f9-4e97-b482-500c3cfd968d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76daa385-3c0d-4ae7-8c52-94c55c7a90ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6db55aa-5cef-4e12-9b3f-4506d680bafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c47aec9-7d0e-4845-a579-ac5acee196f8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e52c35b-afcc-4935-a926-ed0eb9ba4a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfd4dab-6e2e-4787-baff-20fca05dd329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3ef6a2-a43f-4dc8-846a-4aefc7861f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60a502b-65d2-4dd1-ba8c-a7b55f34bf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61601731-4649-497c-b23a-9753bdafd8ee",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4542f819-0e73-467f-a142-3019b30e4a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8f8658-8679-4068-8e12-7265919ce8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09915e8f-b492-4f05-8276-beb9edd90b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf7c183-75bf-48a2-ab93-a7b59dd7c549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e7c2d4-bb4d-4292-9b13-becd3b776ccd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2b1546-6dc1-4755-9a0c-d16df9441f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b979bf2-ba6b-4d41-b984-a2abed83a8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d2a782-6c15-47fe-a4a3-5eb4303b7bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3958bf-dd39-468c-b405-9a2f3fd09eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989e58d8-024f-421a-81b7-2e094c9a8e7d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ef2de9-4d7b-4cff-b755-568aa3172247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8acfbc-9d19-41c1-9b86-a7580e2bb8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ce794a-a257-425c-b113-3e6d3348de63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4afb0e-ae5a-4bd8-bdb3-1f8da940e78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7c3128-3977-4d32-9c11-b5bb0b6a4816",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a779dbd7-dfc0-4b05-88c0-066ccd24f114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b3eed2-f302-4bf1-9e7f-d04d9a4fcff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a7563a-288b-4845-8a2b-a811b87b8ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b67e64-5ea7-42ae-a689-119527b16311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b7b736-7074-4da5-84d0-06d161cae2b6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74416771-b081-4a94-b9bf-0d30256dac0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7936d9b-ea4d-464f-8589-8ee2b41f860e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd0d395-3057-4e99-918a-4f2a315aa010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14710aa8-0c84-4062-82e4-c3d6124ed80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981d2ba0-dde9-4c18-bc11-9cbb0373b97d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c2b0e8-3814-4d07-aef6-8856d5d72783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd8abd1-760b-420f-960c-dcdf9db427d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca6f537-0389-4e3d-992b-3066cc31bba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325282bb-73c4-4fe7-a71e-db56a5ae152d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3a1172-2758-4bfc-bbaf-44d416e1c9a6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b25fdab-6b71-4bbd-a7c2-cf428ff5a8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628d9fe7-d007-4205-a6c5-43c50a3f950a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd8bc2b-035c-43e8-b0ed-95bd998201ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3584ef9-4802-47f6-a9ed-9d9dc450d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c135a00-84c2-4208-9b5e-cecd75f097fc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89524c17-3929-4928-89b4-917ab3937767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b73a11-592a-4685-a20d-73d4ebefcbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98af534a-40f9-47a3-a7d8-4d012937c34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2a8e42-d6c9-4dc8-b918-a4cdd99fb92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232c06da-2473-4d74-ab05-54780aa4da55",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e74977-f70f-4f49-8991-261c14b2edff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b163911-921d-4e91-9f90-78ac420e903b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b572bc2d-00e1-447d-8bd7-202d1c9b8c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60af13fa-d08e-4bc9-b851-c24903d137d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96a9a0b-1906-4a71-bea8-6b0f8be73651",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52446029-8bfe-498c-ac99-89080e9239cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631b3864-3b46-474c-b7c2-4016cfcf055e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f3cfd3-bdcb-41df-9614-29de6f48a3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3bc41a-87cb-444c-8c75-69f5da3c6126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ff6af4-ac30-4345-ad34-024ea6255ca2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f988a0-4fec-46c6-a9ad-f0231933f1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f32137-e42a-4a39-955e-cb3e39799e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a603eaed-2270-41ae-9c6b-5b32a3978b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd44fe6-bb37-4639-8109-d7596b2b43ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f021a76c-112f-4ac2-a1c2-d0bd80d63010",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6e50f9-d71b-4bc0-93b4-af0a8a5e4e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8860429-04e5-4325-a307-14e8e2be21ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dbe181-4045-4759-ad8c-fa85f4639f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d9633f-21d9-4b46-94e3-ceb7bbbb5ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b7c8b6-a0db-488a-acc2-7efe9eeb2c31",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cacffd1-44f4-4a02-80ec-88e838fe3e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fe51d8-621a-4733-aeff-44c3963547de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5716d85c-57a8-4161-be0d-eed7d04751b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ce2690-81f6-45ee-8d13-c9dd4c472462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b6bdd8-6160-4b93-a7e2-d41be25dd68b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7377670-e38d-41c1-b3f7-7dd14e67c42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e037715e-5975-4bb0-9305-d77dd441686f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9034af-790b-4abd-84be-29ac5cbc2bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaa3629-8c58-4121-9db9-7a49671f8fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7794233-364e-4b90-92dc-4be4dd06efd5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a210ca-0ee5-4d89-9a2a-754df4982c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5b134c-344a-4289-bc34-17c8c2f5ad62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50a6e55-9272-442f-a84a-1a626401d751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82df7e06-2a82-41bf-9af4-e9f51e0b205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd8d240-c4d2-4e81-887b-e17cd6697114",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c3fafc-772d-4dbb-8a52-d4e905d69ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8ea871-62e2-40d6-8951-b088cd456015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a467248-7b96-4914-9b29-ce70b79652d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cf3935-4160-4ec4-a7d8-2cd3af50e7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6760d291-fde4-4d50-b05b-b08298604b86",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f41b6d-ea54-4fce-9947-6fbdbc964184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a93fce-6978-4826-996e-f59da398d635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4fe97-cab1-4017-a979-dfea0f0a26d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c7bdfe-7fd9-49ff-bf5e-5c528bf69260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b795b0-ba27-45de-b991-d6121ec5f189",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e551f5-9418-41cb-907d-1a99bfd95df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800c28cf-3db9-4f6e-92f5-72062510c523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45efbc03-1ea5-49d7-8575-03eb4ea7a42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857770ae-01f2-4888-8e5b-2ad8083f6009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4559418-f0ed-4a94-9197-23555df5bf21",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23fe4a5-7246-4a15-ac0a-8fa990afc360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e85ccd2-7684-4f58-9587-0cf943ccb2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80220226-dcc8-4fc9-a723-306ca4fd266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1815a7d-4584-46cf-9c41-b8470ed58e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77378b45-8b66-4910-8add-41039054f2c4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360ae366-01cd-4338-ae23-893025b3879e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c095d8c-65cb-4c6c-8c86-144fd5fae425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef5b87d-62fc-4757-9367-5c383fd9e78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a077b7-61a5-4d75-82ef-6c47f101bdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04b29a2-5e3c-4d0b-9689-33a249fecafa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9295f63-80ca-44b9-babc-01e9d187fa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69609db3-d43a-4042-a695-83ea579924de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c86cde-2aec-41de-b593-1f41eaf0e567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6420c918-ba71-4fb2-b810-9b91391828e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cc51b5-4291-4ebc-a32b-bfebbfb12974",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e71b15-affa-487d-83fe-19bb3fdd20a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb70742-b133-4f05-9e77-3dbafecadf3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23026088-60d7-4f5a-bf3b-5c4c72957fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57359873-0198-4830-8fbf-b0300b84ba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babccb67-1063-4cf6-9178-2a3ab40d5aed",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57ec52-a6f9-4031-b79b-8d142a9acb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d6c54f-92e7-479a-b149-5fd26b0ec697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddcf8c1-a408-4e85-96a7-6fa56dbc1211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78749b31-9c0a-4bce-b7ae-a229ec0b956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c97b22-de16-4f08-8634-2ab4a41aebed",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7b989d-561d-4e75-af88-28a4bc051038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51ec712-de73-45db-9a1f-be61604527e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd75a762-e8eb-4676-a4e7-b9998be08e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da92afe9-3ecd-4214-b640-f4bf1be3a615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae630e8-a10d-4e91-a113-8c69ee249cc3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32373842-dfaf-4eb7-bbf5-b6908b2ef507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb99f9a-1491-4a6f-958b-f64baa6291b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3978d24-de72-4166-b55d-4a77ce1f623b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57880d68-e693-4975-bcce-325536a6a05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de8983e-4671-45ae-a0f7-b5bb94b47eca",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a3e240-9e5f-4dc5-8d88-6ad9a4aaaaf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf8c1a59-bd3b-496a-8a83-d23d5f21abe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a5b538-a342-45f8-913a-8ac290e9dc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8802b1-693a-4fc9-a5c9-ad6bfd4bd960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89d6ff6-3dd5-46b0-a61c-14932da45645",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5109829-3714-4951-8b75-7b981a0ebbe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e0f034-5205-4834-91f5-e7cc2a529a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30a1d1b-668c-49e2-bcaa-ae415f4d0235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d20531-5faf-4867-9933-448a6b55b4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cef8723-5abd-4593-871d-2fb5c5f1b87d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52efc6f-73b9-4fe8-9851-ac5a97197978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5eb9101-08a9-42fa-9460-f23f554e6896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063fd39b-3ae7-409c-a0ef-b610fa2d583f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421d72a9-ee7e-4a5b-8fab-297199647f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc2129f-47f2-45e4-8bc7-6a192f4be036",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d28c589-be80-4d70-a897-6df29de04f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bdb442c-c397-4a94-8d1d-3113b9520e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57c1fdb-6a15-44fc-99e0-c0dee68d0802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1f4e05-76f0-4c2f-84f0-d585e73f589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a58128-d926-4d5f-b0a0-bf75a87d157f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb04ecc0-2c10-47eb-8dac-ea37bff2027f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe8b8252-a49f-4b94-864b-a70c10319a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b92a7f-ad11-46c5-98f6-8efdee5d8ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccb6aee-b4e3-443a-af7a-036ff5e03bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624d3a9f-a316-4534-9877-dce7b7acc921",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aaa2dd-3629-4b8f-a5ce-2e2f623a0689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e01e2e-1100-4092-816b-78d191624f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bdf993-42ff-41c5-8218-0a5e0b3245a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a3a168-6152-4773-88be-d1773ec965ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d581e0a4-7d8a-417f-8cb3-265531aeb065",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb63138b-4c8b-46af-9d1e-f139ea352221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d429db2-ba64-4c84-9412-0774ea4179a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d496af1c-acc6-482e-bf06-af6ddbab5c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c47d766-2cb2-4287-a0af-52f02c8cfffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfebca1e-ef4b-46fa-9c26-098350b9e218",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbf3632-bff7-4ff7-a5c4-adab465f008e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4445e907-1f0b-4f81-81c4-015f599c066f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b83af7-0010-4847-9c16-1c1840e885ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bba0b9-e584-4338-9d94-6f96ca4e33c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fd2f40-2da2-4ca8-94ab-e22b335c1404",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2d7838-ed21-410c-a829-42719a833608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcee142b-5a5b-486c-9867-ece6550da683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8e7bdc-ab6f-4011-b71b-6ff5acc93c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7362f8-0882-470b-b626-16d9ad021d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d4e5b3-1db6-46e0-bd6a-be48c2cd0647",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb897674-337d-4392-b48c-48f656f0ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9188b4b7-6218-421e-bd4a-7a30b8dc0ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500c0242-245e-48cd-8f76-a09d85e551b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7473d75-6cab-4fa7-94e7-0730b076341c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24d17db-fcd8-4049-b8bf-2aa5a0466871",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7b6e40-2fe2-4658-aa44-4e118643fca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d640ca57-be62-4392-b566-85725eac6232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dac8cc-3ad4-45cf-b60a-4b73a8f95b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e081b70b-0da8-44a8-9736-c5f639a74951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ec6642-b7cf-4acc-8463-1f64add9335a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ab972-6424-41e6-b28e-6951758fd33b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbff22b2-a10a-436f-8d63-29a7cfaf22d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0d292f-29c0-46ef-8629-004bb51e2ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2a8298-942d-434f-8670-da654244ca5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5849eb0-7d49-4d38-934a-7e01c440b441",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0eea00-1dd5-444f-9862-e4907a415d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9c4fc2a-3ebf-401a-8285-16e83409fe3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59e75a-f961-4c5a-9921-4a08de12269e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642c6a1b-40e4-422b-86e1-656c45919792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d45aab3-5784-4e6d-8bd5-3e5ac0fa8a94",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b8f9f3-ccaf-43d9-bb51-898ddbe0c4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad60d0e-872e-4797-a9b1-980e67d87d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a5320-cbfe-4a9a-86dc-3916f27f968c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939ae240-a847-49a1-9c76-8dcd56bff6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8917f7ef-934b-4d4d-9f6c-d566bb47c7a6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daf3bdc-662f-4594-b7bd-0df495f5bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fdb9396-477d-4aef-9f11-f3e6f542c964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6eb5e4-f2c9-4d0c-991c-5c592f71c9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bd37e2-5991-4804-be36-4d6b594162de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1a6bde-c470-4d11-979f-3c8dc20c068e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149a786c-9e1c-4952-af66-16e774f45fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407f78bf-037b-45ad-871e-8461ebe922f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c99bce-af17-4dad-b012-1d41fb346639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8676ffe4-38fc-4150-a349-ed7e983999b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d0835c-d72e-4eba-b7a6-8d75813d67e0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69af9944-1a00-43cc-89e5-f65bc16f8c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8286ae6e-c890-4b47-a7ed-fe7d92075ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5642218-0fee-4f6b-81f0-4b4236d172ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaca245-03fd-43e7-a403-4bcafa3e96cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97358d15-b1b5-4d9d-8bd2-5877de9349b8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f39fcb-8cc4-4a59-a65a-72842e607f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d4bc20-7239-4032-9641-a6722a8c1e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc54358-2015-403b-859b-20f893e2ec55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbaaac2-1db7-41ce-91da-15f05ed3f617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a363a857-d722-4f9a-be07-ef05c744d002",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5af09d-b2d3-4fda-81d0-1408d6366f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b74209-239b-45d6-8608-0a6ee65498b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf814d16-e212-47a6-b85e-8017f7650d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e04e2e-5bd9-4955-8eda-a47fbaa4efcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec76479-7472-4538-99ae-e6fb85f622a9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a939b3c5-b6db-4aeb-bfc5-149f7240aed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fb2f1e-083c-4a01-948e-5f06cc03b687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466d31ff-894d-486e-9238-e68366b5fcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1495f3-674a-4404-9651-5619bddfe631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5e0759-81bc-4904-bcb5-8b2f7424d093",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2b2550-42c2-4d9d-90ea-11152754210a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5606a3c1-cf5a-4182-bc96-5cfd5eb4ffc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf9ed64-d898-4ac0-9af4-d1807fd78201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0283ac42-dc0c-4c0e-8fe9-857e338b0f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476c58ac-d0f9-4fec-a587-5fd0bbaaadcd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487b3653-a70b-404b-b704-f29e2a822250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e3eca8-a6ee-437c-9efc-3e722daafd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dc2cf5-24f0-476a-a096-bb429568070a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af6a5f2-967f-4370-8cb3-9be04db90bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ad0146-17bf-4158-97d5-418c5f8b4f94",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed8169e-eb3a-47f8-8798-510c2fe2369b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b24d18a-618c-4c2c-9e7e-511f1184cc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f92cbe-111a-4d20-87e4-fb10bc32e52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65cc80c-b92d-4955-b973-468ecc4850aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0c0fc0-45c2-413b-b5d1-2db218d8051d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29abf57-0b84-4a81-80fa-997da8e97a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff71bcc-aa03-4bae-904a-d3a09a390aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa296137-afd0-4abb-83ae-9aa0b3271b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260c02c4-064f-458b-9425-30f9c77fde18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e51499a-c68b-4ce2-b09d-30afb59e5c80",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e0bf60-4c7d-4e06-8523-1fcf827165b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5cc6582-e803-4644-824a-1d2a15d77fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50f2dbf-fa87-4921-a98f-979cc9fa8e79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79b995f-dcfd-4881-aa76-7749489bd0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5750e262-e0b1-45a5-8153-fb71e584a073",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4789b4b-23e0-4738-85d9-f706f2d5228a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0f0b4c-58ed-4fa6-bbdb-0c9e19a4eb11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dac95f-628b-41cd-99d7-7249adb42d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e25c4d-1a66-4a94-a6e0-99f8cca647aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb34771-73bf-4f1d-92d7-33c87c5e91fc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfe20d7-c8ee-4a2b-81b2-0ee8c83cb8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc93020-b19b-4c47-a4df-c2a21152ce7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2cd046-855c-431c-92f0-f566f0521771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00b5a55-5a88-4756-9769-0efe3db346bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ff5716-1aa7-497b-b72e-fa5ae2f81b0e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3b1be1-7483-4371-9eed-d8bb262f7b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cde5cab-b1ae-4f6c-ade9-3d5391e81a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f036ee02-3b63-4293-b8fe-5fd9d983a44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f2a133-9b9d-4f09-ad3f-d4f5ab81a600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4c9094-2390-440c-ab81-ec9a298a135e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2f5103-99aa-49de-a1db-5bf84dbab3a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92445339-9623-49f1-8d02-8f295ee3ea5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e1ad6b-7180-414f-b7bf-5e42d5e1cd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d72eb29-6ad1-4aa1-bf40-e91809a1d384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba383c3-9841-4c41-b521-f0460674a7f8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b4303-0537-4f0b-807e-c5890a639abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "369a1d75-4fcf-4785-861b-72e2e68b5de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b17ebe9-dec9-4c6e-a148-05de6201d035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabdaf9d-c7b0-4713-800f-c0e0afc9b62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2111ca57-da41-4fd5-a806-29ddeaf727ac",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6526cfc8-370d-4cf2-b71c-1519b426e122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee528f0c-33ea-4834-8c9b-adc9a87c6635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fe59b3-d9d8-43fa-b5e3-dbc71f1c9971",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cd00f9-863f-407f-8216-c9a332981205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813b0b99-de50-45ed-b291-11fb88d2c31e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965551ca-5706-47c3-bb5e-80c763846f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3af23ec-7af9-4d11-bd06-8f49d027fbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e93e6b-4eb1-4e7e-890e-8dd980f779af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178a285a-24d8-4775-8163-d3c848a9b332"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f4b5086-25e7-41b3-8e08-5aac157804f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd6197bf-d529-4145-b7d4-70062a4d097b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a7d4ad4-c6f3-473a-89cb-07ea86d74676",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f929352-dff7-4a0b-9338-010cffaad139"
                    }
                  }
                ]
              },
              {
                "id": "44e1bd20-b9c2-41e3-b3cc-39788b27e7fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cdbe0f0-090b-4e3f-881e-3868ff0ef2bd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9596ef9-4458-49c6-bb63-69c0dce3aef5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "52ca2e3b-f89e-4db8-8121-44609b1f0022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2182942-c34c-451f-a393-e12487ba379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2ddb2b0-0045-4e5e-bc87-d91a9ded53fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20903d95-c478-4bbc-a508-0734337d81b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dc58da5-0ec2-43b5-a2b1-ee6df5eadd46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33d3bfde-2a42-4351-9463-3277776f18c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e574b6aa-5540-411c-b0e2-ad9b35f184c3"
                    }
                  }
                ]
              },
              {
                "id": "733b52ad-dda7-4abf-932c-cc289ed8926c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "475c29eb-cb2c-444f-a5eb-e4505aac1390",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e931ade-4140-48e4-a89a-dc0747f8939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a7e2ef5c-0be7-46b2-99ba-2b7d20ac07c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d9c39e-58df-4a56-8c24-ac8debe51e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a87ab15-fdc7-42f6-8c6c-1e891dc9298d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c7be89d-8385-4f08-ba0f-932df68e133c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15384f7e-382d-4448-a1ff-669fce551d57",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec81212b-3e9d-4bc0-b2b9-354efc6b8c42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a05259f7-e84e-4de1-9b2b-c12d406cdaa0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ae62de-fea4-4f37-9312-bb9b0c558e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8da4883f-8509-439f-b0d4-b5e243c460b6"
                    }
                  }
                ]
              },
              {
                "id": "2a22530e-93d7-48db-8115-60496bd06a4a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e60c3609-9bd5-4fef-9561-a5d28639aa2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ccfac6b5-686f-4b73-90f8-3a0ff9f824d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "101e01b2-9ddb-4995-944a-490ecd74c7bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50eefe7e-691b-47fc-b8f4-41c232d76dc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a3ddb10-41cf-4be1-a439-52fa80835fb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "05957659-a69c-433c-b1b3-dda4b557d61a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56c294f2-7742-4c0a-9bd0-936a3d404257",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d49e5a1-5610-46dc-85c4-a17888999f2c"
            }
          }
        ]
      },
      {
        "id": "12d5da84-d883-4632-b55e-cf14d39cd719",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "681faa48-b8a2-45f8-b09e-20d21511e5bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed175998-27c3-4aaa-baf2-552fbb0dc43b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16bd1350-b478-4c51-b985-e3d3b2d310e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccb3fb0-972c-4e6d-a8da-ec03f99d824a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2349778b-7205-4c34-9c5b-956e8843a6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d216fc8-8582-4b22-8f2a-9678af91e5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40e889cd-59c6-4721-b076-365aa2e396c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a9c48a-92b2-4f92-bb15-741e97828e0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fd8c0ac-c8c1-4e58-92ec-42891620a833"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b779b3b-bfeb-4dfe-bf31-ec9b7f16e44c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "347dde6c-13bb-4692-8c23-ae93d90a0495"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b0e34fc-5e16-4b70-9d22-6b902811418f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c546f84f-a824-4709-b5a6-d262b730bc97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3621eaf-84fa-4a49-a7f7-fdaf58aa209c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9725e919-20bc-4aac-8b42-92b880d4db0a"
            }
          }
        ]
      },
      {
        "id": "1d8004e0-0ff5-4ea6-b456-c7bb836bd5d6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7a1f98e7-7ba6-44a9-b2ca-f8ac86458f8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "283dbe91-8f44-44c2-9a37-9178d624743a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9aaca84a-d0d6-49fe-ba7e-41156df3c393",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f41ff1-553b-42b4-988d-65116998b4fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b0eec43-d0c7-48ac-b877-54be63b8466f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a118f211-5f2c-40ed-8f15-ff67ba5031d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84eec235-6050-48a1-bbd8-b261119b86ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "284e1734-f375-4ebb-8091-e2b6a378b814",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c498a90-af77-412c-aa4a-1f24095f1c8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "554244fa-4b25-4c03-8614-2501b7e51c05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dab070e8-1bba-45d3-af3c-2414d49c683f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aec2f394-1556-44d0-b139-0d521b3fbab7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "127c4106-30b4-4b12-945c-4939a325c3f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82dae820-28ab-4fcc-9211-c4373f561450",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "254dc6df-7184-4735-81f8-242db1e570b6"
            }
          }
        ]
      },
      {
        "id": "c84736e5-4bcd-40bd-86ee-1bb628e3fee0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "24e34fb7-3c00-4bbd-934f-b6139fff8418",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6df33753-97eb-44a3-a371-9b8b86f4c5ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "570612b7-a891-4d2b-9cb3-6c3dab89421b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8babbf71-063c-4742-92da-081798160b6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f3723e-393e-479b-81cd-0bc83989d6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe37a1e0-c914-4403-ade3-0fee805e6037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87177d17-428e-4ca8-a8a3-c7f4b5e8a6c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbcaf628-3351-4973-9c8b-f660d0d694dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "284cb957-0878-4cde-8726-1320eb664c6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30deadf7-970a-4df3-bc1f-bcaff68d019a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e59d148-97fc-4009-b699-86aa113a9a1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f3f7253-b099-45a2-9660-4be3e84dcf77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0290eb0b-7545-4bb2-97b1-b88526b84e20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8122c6cf-7c64-4b9e-b57e-df5abd431b96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4741bf1-59df-4e91-a141-b4188585afef"
            }
          }
        ]
      },
      {
        "id": "9652dc7d-7275-4bd9-ab80-8f7d5d267f62",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef5ab865-5059-4df6-a8c8-c23885f201e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30913350-302a-4a2a-97cb-99fd0332b4a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6e43a875-c40e-4a8d-8e74-f2d8f20d5206",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89d61ddb-b6fe-4e13-b5de-e7fe7be02c7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0930d61-3a50-495c-b071-301c503cd2c1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 202.112676056338,
      "responseMin": 13,
      "responseMax": 21193,
      "responseSd": 1559.6355551118008,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691628081245,
      "completed": 1691628152770
    },
    "executions": [
      {
        "id": "bce66f27-4930-449b-b155-5e46fe40a2bb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9430723e-d0c1-46ca-b50b-07e511baebb8",
          "httpRequestId": "34bed6c2-fcc8-4e4b-9717-7fecb4025c84"
        },
        "item": {
          "id": "bce66f27-4930-449b-b155-5e46fe40a2bb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0b0b0a10-5f11-4925-b613-4ae5d3e9efd3",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 0
        }
      },
      {
        "id": "ad98071b-e416-4219-908c-958ff75a4cf4",
        "cursor": {
          "ref": "8c54cad9-f8f1-464d-a764-2edfee3a1395",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1a181350-8ab9-4c66-9116-89388c828157"
        },
        "item": {
          "id": "ad98071b-e416-4219-908c-958ff75a4cf4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b10fa6f2-98f7-4f67-9c4a-4299b4a12234",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "967356c9-f0d3-4fcd-a906-7363edbfaf40",
        "cursor": {
          "ref": "748d4218-d03c-445f-9bd6-f5613c701ed5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "07920ad6-7e57-46da-a7a9-def5264ace39"
        },
        "item": {
          "id": "967356c9-f0d3-4fcd-a906-7363edbfaf40",
          "name": "did_json"
        },
        "response": {
          "id": "4a08e7da-8d43-4bec-8d2a-96e7da301270",
          "status": "OK",
          "code": 200,
          "responseTime": 384,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc4c314-4370-48ed-882f-71d95c540fec",
        "cursor": {
          "ref": "971a9cf9-269f-4327-886c-c9ebf59d9130",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdd4aa89-51fe-4e82-8419-40776a0696f3"
        },
        "item": {
          "id": "9fc4c314-4370-48ed-882f-71d95c540fec",
          "name": "did:invalid"
        },
        "response": {
          "id": "7cb8f34d-2843-42f5-8f0d-3704d6f516c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 972,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc4c314-4370-48ed-882f-71d95c540fec",
        "cursor": {
          "ref": "971a9cf9-269f-4327-886c-c9ebf59d9130",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdd4aa89-51fe-4e82-8419-40776a0696f3"
        },
        "item": {
          "id": "9fc4c314-4370-48ed-882f-71d95c540fec",
          "name": "did:invalid"
        },
        "response": {
          "id": "7cb8f34d-2843-42f5-8f0d-3704d6f516c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 972,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deadca16-421f-449d-98ab-474acdf09b2b",
        "cursor": {
          "ref": "07892d2d-24a5-4307-96f0-32cf7000a731",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "36725ef9-981e-4642-b650-bf9f0adc3ca6"
        },
        "item": {
          "id": "deadca16-421f-449d-98ab-474acdf09b2b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d7a3a197-bd58-4870-9640-adea12de19f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164fec5f-cf93-4cb0-acf0-8df211124f77",
        "cursor": {
          "ref": "7a9b9418-ebbe-460b-834e-464bbf46a676",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f22149b8-b838-4261-a237-ac83058cff92"
        },
        "item": {
          "id": "164fec5f-cf93-4cb0-acf0-8df211124f77",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d6b06650-e494-4ffa-bc40-731b9d36cc5f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54f030b-6701-4842-a855-73a7d220f7ee",
        "cursor": {
          "ref": "da763db2-2ee9-4f90-a552-0507ea3be545",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3079d8ee-8660-4ee9-8442-632253ab808d"
        },
        "item": {
          "id": "e54f030b-6701-4842-a855-73a7d220f7ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "aafb5f96-adb5-49c8-8122-94a012cc86ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751376d5-b3b9-49d5-822c-0ff76ed45ca6",
        "cursor": {
          "ref": "209b9348-251b-4fe2-a88c-44ea324d0a58",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "732e5fd5-b941-46e1-af81-cdad38ac80e8"
        },
        "item": {
          "id": "751376d5-b3b9-49d5-822c-0ff76ed45ca6",
          "name": "identifiers"
        },
        "response": {
          "id": "4d1b92de-df35-48a9-ac3d-afd858085ccf",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfed82c-0448-4f2a-b0c6-e81b6ea0dbb9",
        "cursor": {
          "ref": "0492050f-cf3a-4ef6-afb6-7d0930e1e381",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9791532d-35f9-44b5-b329-c07816def630"
        },
        "item": {
          "id": "edfed82c-0448-4f2a-b0c6-e81b6ea0dbb9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f3835c3e-0e97-45bc-9dd4-b2aa5b046a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb12fa35-1283-4dce-aefc-f9258b674c6f",
        "cursor": {
          "ref": "cc6d17ac-3e5d-4f5f-ac24-b5235ef24a89",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f513148-a48a-485b-9070-fd4d24af525f"
        },
        "item": {
          "id": "fb12fa35-1283-4dce-aefc-f9258b674c6f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "208659d8-9b7f-4148-b582-ef70c43a5579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbdd831-670e-4779-bf47-9f3532f20462",
        "cursor": {
          "ref": "d07ab5d5-eec1-49e9-bbe4-573a87870f97",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c1f97009-b3f4-4448-88d9-4aad75618c96"
        },
        "item": {
          "id": "efbdd831-670e-4779-bf47-9f3532f20462",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c8d090db-a216-49a8-b663-b573939397d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5077869-a126-4755-a1e8-bbc03d224c18",
        "cursor": {
          "ref": "790bd025-ee34-4890-9cae-6f6ebfb195f5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f6156bd2-ba7a-4dfe-9c69-a40f39e52bcb"
        },
        "item": {
          "id": "f5077869-a126-4755-a1e8-bbc03d224c18",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "54ab38a8-f958-4cc4-b87a-c944097be442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcc1bd9-2014-4dc6-82dd-91cfb9722fbe",
        "cursor": {
          "ref": "49926e99-fe65-49ef-a9ef-ed05e8ca2298",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "956bc72b-14d1-461d-b9a0-cc52124b284e"
        },
        "item": {
          "id": "1dcc1bd9-2014-4dc6-82dd-91cfb9722fbe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a636d650-b5c3-4d60-9808-ee031113f1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522de327-3020-4433-bc33-fd97b80893d1",
        "cursor": {
          "ref": "766da9c6-c0ce-4b5e-9e5e-c7a3acbc275f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f3b4b480-3f7e-45d0-9803-1354f30d2712"
        },
        "item": {
          "id": "522de327-3020-4433-bc33-fd97b80893d1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4f40b1b2-3eb6-48ac-8552-acb61a50cb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b70600a-f3a4-49c0-87fb-963414aa6d71",
        "cursor": {
          "ref": "41c73bc9-3c90-452c-8dfb-17a45728eaf8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4a729d82-6913-4c62-a43a-2e56705d6b20"
        },
        "item": {
          "id": "3b70600a-f3a4-49c0-87fb-963414aa6d71",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7d328b0-78a9-4e06-9993-b8508ef38ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee939f6-3456-4258-b2ae-b2a171025cbd",
        "cursor": {
          "ref": "3d49dab4-f699-4bed-a18a-1d1ff8c82104",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f7e2f16e-1d16-44de-a596-1ebef691a0ad"
        },
        "item": {
          "id": "5ee939f6-3456-4258-b2ae-b2a171025cbd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fc7a51db-35c5-4c5e-ba6b-47685443f436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af821676-e25b-4f5b-91e5-27c1931a085a",
        "cursor": {
          "ref": "2b0f3417-e3b1-4316-8455-4692f9ae5182",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "86f39644-38ae-42ce-a9ef-ecfe105c16b3"
        },
        "item": {
          "id": "af821676-e25b-4f5b-91e5-27c1931a085a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9d05fe55-01fc-40c7-afcd-8f04b815d3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c2d268-18a7-4433-a4b5-bc07f2903659",
        "cursor": {
          "ref": "9b33ebfb-967e-4558-ab16-18be7886ad1a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0464bc43-ffa5-4365-9f33-cf934c89d244"
        },
        "item": {
          "id": "60c2d268-18a7-4433-a4b5-bc07f2903659",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e4307ff3-c249-48bb-b3a9-e58795f53eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdc01b5-847b-407e-b44b-f9e9705b626f",
        "cursor": {
          "ref": "432c1c5f-4056-4d5a-8e9c-2f868209a136",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "07378056-6a54-4b97-bf7c-581bfe82a7e5"
        },
        "item": {
          "id": "5fdc01b5-847b-407e-b44b-f9e9705b626f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2c62a79f-500a-4571-9d6e-7cb7190b98b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afbc2df-c097-4e2d-86e1-79110407a80f",
        "cursor": {
          "ref": "2e12e8f7-2420-4f7e-932b-eba8614f789c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2ebbeb1e-81b4-46a4-9c44-41de59580fa4"
        },
        "item": {
          "id": "4afbc2df-c097-4e2d-86e1-79110407a80f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1e1b4cf5-40ed-400c-bf35-5b3b830adfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5caf841-5e10-45a6-8c39-739d7d1ca9d1",
        "cursor": {
          "ref": "ace99552-d886-4c0a-8576-2e9688345e37",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2322a8ac-eca3-478c-ba64-230eceadb56f"
        },
        "item": {
          "id": "b5caf841-5e10-45a6-8c39-739d7d1ca9d1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fea85795-f657-48e5-85a7-b949c2a2f3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a332f536-5ba7-41dc-bcb4-bea33150081a",
        "cursor": {
          "ref": "1a9e9b45-29fa-4b20-874f-f5201bc326b0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "53a1d5ee-7a2b-47ae-86be-ea242dd8d8c5"
        },
        "item": {
          "id": "a332f536-5ba7-41dc-bcb4-bea33150081a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7b45211e-44ee-44da-a25b-71e751db5a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee7abe-eca1-4d74-b555-c9da2de3e239",
        "cursor": {
          "ref": "f37988e9-b62e-431e-8a5b-82ab00e46dad",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c1760c16-9c2a-477a-a720-dc0fd9d5e5ac"
        },
        "item": {
          "id": "81ee7abe-eca1-4d74-b555-c9da2de3e239",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ec8f6878-b2f3-427a-aa70-783c395a3bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a126c3ce-6540-4b3b-9872-df03f8286c02",
        "cursor": {
          "ref": "27d5f94d-871a-4b73-8720-e4149a5f123e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7892c0da-0559-48de-914d-6dde79fc5bc8"
        },
        "item": {
          "id": "a126c3ce-6540-4b3b-9872-df03f8286c02",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3b55cbad-cec4-49bd-8198-c7633f46b15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48c47e7-5a97-4479-9e5c-59b44f39bf9c",
        "cursor": {
          "ref": "3bf37822-805b-4cd9-b9ec-4912faa914a8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f7851e8-207f-4fa1-a90e-11c406b4d401"
        },
        "item": {
          "id": "d48c47e7-5a97-4479-9e5c-59b44f39bf9c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "254a8c59-9ba2-4aa1-9d4a-37648c4c6ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b029b3-a07b-48e6-ac9e-b61c89cdfd69",
        "cursor": {
          "ref": "fb735136-4136-46c2-945e-f2f51cddd8b1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "403f4b1e-2f68-46d3-976c-ee58614e92d4"
        },
        "item": {
          "id": "07b029b3-a07b-48e6-ac9e-b61c89cdfd69",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fac0b9a1-1d5d-4d2d-9c99-6ddf09447e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ba9798-8b54-4313-ad9d-61a967c843a6",
        "cursor": {
          "ref": "b4d955f0-4777-45eb-933c-b885f60809c7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cf0613bc-8666-43e0-aad4-4157a2e90256"
        },
        "item": {
          "id": "f3ba9798-8b54-4313-ad9d-61a967c843a6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "95e6feda-e080-4082-a947-68e6c5cf29e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ca7119-5ec6-4d30-8210-ec2476505036",
        "cursor": {
          "ref": "be363cbb-15c4-408e-9a9d-17b72d1cca64",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "84402d0a-9693-402d-a0f1-dd774e859de6"
        },
        "item": {
          "id": "31ca7119-5ec6-4d30-8210-ec2476505036",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e25728ad-9859-4ca5-80b1-24d6cfe585d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a860e3f7-b465-4e69-b3d8-9138f39bf627",
        "cursor": {
          "ref": "fa4cb568-94df-4b0d-86e8-e66769f94e1f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "18fa463a-fc3d-4f37-9342-74bc7f37f02b"
        },
        "item": {
          "id": "a860e3f7-b465-4e69-b3d8-9138f39bf627",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7610ccfd-224f-49e9-9196-403ead30e0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a245302-c3b8-442e-b97e-d6a0941901b2",
        "cursor": {
          "ref": "897216fa-4612-4691-bad3-31fbcbbcf189",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8b8ffe6d-bb11-4f40-a11c-bf143db77c2c"
        },
        "item": {
          "id": "4a245302-c3b8-442e-b97e-d6a0941901b2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9877cb91-331a-41b9-bad4-3a16a63ae64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80999202-8fb2-4c69-961d-60ad1c576ef4",
        "cursor": {
          "ref": "628f6f47-3cc0-4b87-8f08-caedf9b9d5dd",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3938914e-bb7b-48d6-8f1e-e19126f44199"
        },
        "item": {
          "id": "80999202-8fb2-4c69-961d-60ad1c576ef4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5793f80a-06a1-427c-a72c-e1ea94e64a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a56758-4ae4-4809-82cb-a5982f858f3e",
        "cursor": {
          "ref": "e40459df-bb96-4f44-9868-02f10738c829",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2e859fdb-b36c-4e84-9868-ef12f1772ebf"
        },
        "item": {
          "id": "24a56758-4ae4-4809-82cb-a5982f858f3e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dc771afb-e4da-4e69-ac43-1b415cec05ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920dc8c6-a309-4d6f-838f-5b80b46ccb13",
        "cursor": {
          "ref": "adf7bf1e-8749-4d25-97ea-22bc4980e48a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a282843f-f036-478e-a1ee-a248d5ac40c3"
        },
        "item": {
          "id": "920dc8c6-a309-4d6f-838f-5b80b46ccb13",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dc88c3c4-c182-49d6-bf50-fbbb0a7bd849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff50172d-ebdf-4ef7-9276-4272e058813a",
        "cursor": {
          "ref": "3512c1db-a954-4406-a496-058b2ddcc83c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4c9f88ae-5590-4e1f-9c15-b462feeaa9cc"
        },
        "item": {
          "id": "ff50172d-ebdf-4ef7-9276-4272e058813a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5d28ce47-3efe-4866-b494-3712516724e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eceda5-0d47-466f-b39c-f656cc6edd0b",
        "cursor": {
          "ref": "f4aa5b77-f2fd-42f2-af93-4108e291af8f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e18beb70-0dd1-4d42-bd86-f72056da9373"
        },
        "item": {
          "id": "02eceda5-0d47-466f-b39c-f656cc6edd0b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8c56f83d-18f3-4d12-a7db-6a183322b5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99316a93-a528-4fb3-a8b6-2b88f07067ab",
        "cursor": {
          "ref": "3cccf8b2-08f2-4dda-8e16-a4dfacc12372",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "92e8d643-c888-49ff-bb5c-0282c7c226b5"
        },
        "item": {
          "id": "99316a93-a528-4fb3-a8b6-2b88f07067ab",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9af53fc4-b692-4009-b39b-144fa3d9fa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f393266e-3403-4ca6-917c-e29889c4a71d",
        "cursor": {
          "ref": "b407e1c9-9790-4a98-8423-2f61532836ea",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b8a79814-b833-4c0b-96d6-28863b30288d"
        },
        "item": {
          "id": "f393266e-3403-4ca6-917c-e29889c4a71d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3bb7b13b-365a-4a2e-bb91-2f7a2aa52f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73ce089-1ef8-4fbe-9f95-4966591fcdd9",
        "cursor": {
          "ref": "98e2937b-c1e5-4087-a98b-d906448a38ea",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6aa05062-032f-47f1-bcfa-d6055f3a9d69"
        },
        "item": {
          "id": "a73ce089-1ef8-4fbe-9f95-4966591fcdd9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c0d5f8b4-93bc-404a-ae54-cd3efc897d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55da16f9-2898-47a5-8996-1302e08f7d3b",
        "cursor": {
          "ref": "c1777f6e-65d4-49d9-b1b6-ab2263f1ea4b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8660ffaf-a405-4732-a72d-01a5a21e5c9c"
        },
        "item": {
          "id": "55da16f9-2898-47a5-8996-1302e08f7d3b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1f46fdaa-cf34-496a-bc8d-2202a380dcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6b27d2-5c2c-499c-8274-f7676a5bf101",
        "cursor": {
          "ref": "f2d8bd76-35de-4854-aec5-b60d9c3e6741",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7250f929-1a36-45f3-8a3c-511770e058c0"
        },
        "item": {
          "id": "9c6b27d2-5c2c-499c-8274-f7676a5bf101",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "89f9a132-01a8-4af9-a507-f073a76122f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0fae3a-ac8b-42b9-aec4-1642b2d04eb1",
        "cursor": {
          "ref": "7f7a91dd-f2ac-4fbe-bbd7-169ab71c66bc",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "babffdd5-634a-4943-a518-b3e8f3a2fb73"
        },
        "item": {
          "id": "3e0fae3a-ac8b-42b9-aec4-1642b2d04eb1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f38adff1-25c6-4c83-84b2-800bb1165e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee74315-2273-4af9-afcf-63648ec13290",
        "cursor": {
          "ref": "b5e6deec-3c1f-4edf-9905-40fb08298f31",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4feabe30-4d35-43e3-9845-49b26a365d3d"
        },
        "item": {
          "id": "4ee74315-2273-4af9-afcf-63648ec13290",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "63b7a11f-afdf-448b-885f-c1b99cb8d444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1a35f8-9754-4260-aad0-dec0ff4eb761",
        "cursor": {
          "ref": "e07dbb21-c1c5-4148-b3c5-f810be8794c8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b1019df7-df93-41ad-8d49-6c8f326645a1"
        },
        "item": {
          "id": "eb1a35f8-9754-4260-aad0-dec0ff4eb761",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8c21f938-6dca-4c46-a489-c39b0240a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e6750d-1881-4554-8ac6-1202a99101d1",
        "cursor": {
          "ref": "955c47ce-740a-4526-b2fc-9f805e369ef6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "92b82f27-95ad-4c83-b1f0-af714a3c29f0"
        },
        "item": {
          "id": "32e6750d-1881-4554-8ac6-1202a99101d1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "77e06bb3-b5fa-4baa-8e25-fbd4e8d5d7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1353f9ff-70c2-489a-a5e1-ac64fbe0f54a",
        "cursor": {
          "ref": "f63dd000-38d1-4271-a80c-0b203c5e9bbd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "71605ebd-ed1f-4f75-9196-494eb0cb6962"
        },
        "item": {
          "id": "1353f9ff-70c2-489a-a5e1-ac64fbe0f54a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4f17b280-a799-49df-bb7a-9edfa3eb6276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b571c4-660a-4ae6-8d07-1cf0205d15b3",
        "cursor": {
          "ref": "fd1db904-d41f-4bb0-95fa-3c54a4d09b65",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d4f9a9a3-e0b6-46c4-96bf-35890202ba7d"
        },
        "item": {
          "id": "b1b571c4-660a-4ae6-8d07-1cf0205d15b3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b631af8f-0c28-422c-ad05-eb2ae067f800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e32c5d-6f95-43cc-813b-ec120131540c",
        "cursor": {
          "ref": "22906dc3-0cd4-4292-a422-23538b0ec630",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bdbf0b82-7abe-47ce-b90f-5f6e23a52c0f"
        },
        "item": {
          "id": "c0e32c5d-6f95-43cc-813b-ec120131540c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "de496ac4-a35e-4f04-8291-11020e19b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b728a79-1861-49f7-b5d7-21cfc74f01ca",
        "cursor": {
          "ref": "26ab1d68-3c1b-4cf1-9d41-4ee1018d0220",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "04743257-6d9f-4a85-b9bd-8dfb50539a31"
        },
        "item": {
          "id": "7b728a79-1861-49f7-b5d7-21cfc74f01ca",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7e558f12-e1ef-4021-9374-83f57c7e8741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19398c82-ba48-4fe2-9335-9885c65fff5b",
        "cursor": {
          "ref": "d0b4537f-8387-4273-8749-e7195468e005",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10ac3d5f-7543-494a-8198-7f1dc6f576fb"
        },
        "item": {
          "id": "19398c82-ba48-4fe2-9335-9885c65fff5b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "00d3aaa3-d394-45e3-b47b-e57917428c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80ede94-be58-41f2-9ee1-237128005b35",
        "cursor": {
          "ref": "45dc778a-5b6c-4292-95ca-da01d1c41ae3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0e52080f-b290-49cc-9862-d2790cf589f4"
        },
        "item": {
          "id": "d80ede94-be58-41f2-9ee1-237128005b35",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a02eb985-88e4-4e04-934f-6a45724bc466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dd5579-6416-40f5-aec5-f5eac32a672e",
        "cursor": {
          "ref": "ee207edc-318d-423c-9c50-c9699d080bc2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "84c2c513-8a4a-43db-b833-8df51bc24b05"
        },
        "item": {
          "id": "56dd5579-6416-40f5-aec5-f5eac32a672e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b90cc3ca-54b0-498d-a10c-0d8f6663f243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6534b8f-383b-4b2e-b8f8-8aaa3762831f",
        "cursor": {
          "ref": "1f1e631b-9667-4d40-bf28-126a26f320e5",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "537f3605-5c39-4d6d-ae96-e5559fd7fbaa"
        },
        "item": {
          "id": "a6534b8f-383b-4b2e-b8f8-8aaa3762831f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "70f8bea2-f8c5-4711-9ac7-b2027f2f108c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cf0426-41f0-4566-9d2b-fba3a01e6b87",
        "cursor": {
          "ref": "fde7c686-b9e7-4bd6-859b-244003c689f9",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "25859867-87f3-45a2-908c-71b2dff91be7"
        },
        "item": {
          "id": "45cf0426-41f0-4566-9d2b-fba3a01e6b87",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b694208d-fa24-490d-aa75-9af3856f9b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf46460-c579-47e5-a9d6-13f3136cfc1b",
        "cursor": {
          "ref": "41414870-c922-42c6-9b04-13b5cca69046",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7f1abc2-7a2f-4512-b462-c4a99db50fa9"
        },
        "item": {
          "id": "4bf46460-c579-47e5-a9d6-13f3136cfc1b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9864013b-9653-4bf4-b69a-a2090d7a51b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352af7e3-b2cf-4469-8ee5-5a856e3dd80b",
        "cursor": {
          "ref": "c20f03ad-0ec4-4932-8059-3f13b4d64712",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f3a1cc77-fcf9-4b50-bb83-641ada6f7325"
        },
        "item": {
          "id": "352af7e3-b2cf-4469-8ee5-5a856e3dd80b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a8181fac-6ae6-4c0e-8cde-921dc91d8de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe547e32-237b-45c1-aa22-12d83f13eb90",
        "cursor": {
          "ref": "a85efd40-a466-49c0-ace8-eb509498a0f9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b984ceb-63f8-4c19-ba02-a0cef94d6557"
        },
        "item": {
          "id": "fe547e32-237b-45c1-aa22-12d83f13eb90",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4ce145e5-381a-4e7d-8ebf-41c0289e1ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b279ad-41db-4cf9-83c4-679c871cfc97",
        "cursor": {
          "ref": "d80c608c-2364-4a9a-8266-dff2e1b9679a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "06102802-f32f-4326-91cc-1690bcb60492"
        },
        "item": {
          "id": "19b279ad-41db-4cf9-83c4-679c871cfc97",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc3df624-8947-4c9b-9f6a-09999b6b8482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa1c779-f7ac-4a0b-ad67-75c0d3992698",
        "cursor": {
          "ref": "74820247-b108-4e24-bf77-1615b415888e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ecdccac2-1457-494f-a061-ff754edfa823"
        },
        "item": {
          "id": "8fa1c779-f7ac-4a0b-ad67-75c0d3992698",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "984fd0a4-29a4-440f-8fcf-0f3db8f7e1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d81ff1-12d0-4d93-8dbe-f2568783f9ca",
        "cursor": {
          "ref": "cd9f3c05-c21c-4e8b-8bc1-ee0fee1ede85",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e305c7db-9b94-4c38-871d-7b51f7ffba57"
        },
        "item": {
          "id": "58d81ff1-12d0-4d93-8dbe-f2568783f9ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2ed39a10-dec9-40d2-b156-fb85d1e127cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e27ab06-8891-4f3e-b071-ed463da30599",
        "cursor": {
          "ref": "aef1ec7e-e92f-49b9-85b4-471028d1ba4b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e9026864-8686-461b-a50c-6762cdd5dc36"
        },
        "item": {
          "id": "2e27ab06-8891-4f3e-b071-ed463da30599",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d67d95f4-64f8-4382-a044-78d44a926848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbda78d-8734-490e-8ad2-f70a23a4f4fc",
        "cursor": {
          "ref": "abe96cbb-b8a7-4264-9293-50ed54b3359f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5e4754a7-f3b7-4e58-9d6b-abb1cdad8736"
        },
        "item": {
          "id": "ecbda78d-8734-490e-8ad2-f70a23a4f4fc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "90badc8b-0f9d-4939-8e37-416dcfd77711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e53f5c-dd27-4c66-8698-887266659d13",
        "cursor": {
          "ref": "52355235-29b2-4f1a-89e1-00fdcd257187",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ba385b52-4a1c-485b-aa0b-91b159f83f0a"
        },
        "item": {
          "id": "61e53f5c-dd27-4c66-8698-887266659d13",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ed2d5add-c56a-4026-85eb-ff0b282ebfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f772959-f157-44c1-8f96-3539ce2e3dac",
        "cursor": {
          "ref": "cc40b7f9-9b51-4bf1-98bc-6da0def719ee",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d8decc87-e167-4549-abf5-c27cd15bcb63"
        },
        "item": {
          "id": "4f772959-f157-44c1-8f96-3539ce2e3dac",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1bc4dc3e-6b8c-497c-859d-98794ff422e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d0611e-b4f7-40d9-b768-f7eae2d2d022",
        "cursor": {
          "ref": "8151d4eb-5c67-413f-85f3-4717a2bb3639",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "82847eba-99ef-41ac-a211-41a59e6b8120"
        },
        "item": {
          "id": "a7d0611e-b4f7-40d9-b768-f7eae2d2d022",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2a56faf7-fda4-44b3-8fe4-a03e778a0d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa8786d-fcb8-4275-85f8-2848138304a3",
        "cursor": {
          "ref": "1ff68619-ae2c-464f-8d18-aa34d83ae039",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2e1c414f-ea07-4745-b14d-c2528f39346b"
        },
        "item": {
          "id": "2fa8786d-fcb8-4275-85f8-2848138304a3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0b29e14a-d9c8-41af-a1a4-2c9306f1cdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8766dd-25d2-4200-afd2-28c54fc16d39",
        "cursor": {
          "ref": "d43943e6-08cf-4448-912b-03942154d799",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "34275e82-2c77-491e-98aa-3d89ddf113ca"
        },
        "item": {
          "id": "eb8766dd-25d2-4200-afd2-28c54fc16d39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ade01d4d-d077-401c-9cda-d6a6c3cf5208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a2734e-8911-4934-990e-6b056186f77a",
        "cursor": {
          "ref": "254977fa-1c09-4e5f-9b19-6edb7e35932f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2df0c3a6-5064-4262-8f4a-8bf3cb5e2c9b"
        },
        "item": {
          "id": "b0a2734e-8911-4934-990e-6b056186f77a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a6b3db8d-d40b-4e24-9380-c2121b279c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04fdb8a-ed5e-46da-ab92-3d013b1505f6",
        "cursor": {
          "ref": "94522b16-e11d-4762-bcd7-f85658c85790",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ee66f748-b7df-4282-8620-84e6fd416602"
        },
        "item": {
          "id": "d04fdb8a-ed5e-46da-ab92-3d013b1505f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae612bc2-21f9-4dd2-a0b4-10b290145ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df2281c-6028-48d6-a58e-c7018aee118e",
        "cursor": {
          "ref": "96e26447-7ddf-4ed1-8145-b7fca45c2893",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2ba36d2d-2ddd-4211-94be-c5d6233ba72e"
        },
        "item": {
          "id": "6df2281c-6028-48d6-a58e-c7018aee118e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c74cd10a-eb2d-48a6-b74c-b2066e0d7377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074c74cb-6214-495c-b4da-669caff92b6b",
        "cursor": {
          "ref": "4ec3400f-7ccc-49a1-8d7b-4b61ab4da170",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ad4be9a2-3bda-4875-9de7-5d19e4976af1"
        },
        "item": {
          "id": "074c74cb-6214-495c-b4da-669caff92b6b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "972a6c4b-6e24-41a5-94e3-7448effc985c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d8bbf3-0ca4-44de-9dcb-09bcd4a47218",
        "cursor": {
          "ref": "7fb68b8a-88b2-4dfb-bcc3-0ffbe639efba",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e038edb8-84aa-45f7-b8d9-303654315457"
        },
        "item": {
          "id": "39d8bbf3-0ca4-44de-9dcb-09bcd4a47218",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9b4064ac-62df-4576-9f26-b5926f4bbbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259b3357-d6a3-410a-b584-50dc857b70c7",
        "cursor": {
          "ref": "dc29ce3e-4f54-4103-8f00-25b75f1bc6e9",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "432f2b5e-6f7a-47fd-a008-85bf7f615007"
        },
        "item": {
          "id": "259b3357-d6a3-410a-b584-50dc857b70c7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "38c9ff0b-4051-4baf-b6d6-239e6c715866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557b446d-4c6a-44fa-8360-c22ee5c135ea",
        "cursor": {
          "ref": "25d2d9a2-833f-4fb8-a712-c9f6fabae85f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d92a3aee-fe52-4974-9341-053ba18d52fb"
        },
        "item": {
          "id": "557b446d-4c6a-44fa-8360-c22ee5c135ea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7858d923-ae46-475c-a28c-982ef3fd97c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af262e34-90fc-4612-bddf-84285ff10037",
        "cursor": {
          "ref": "0da297f2-fc18-43a5-9c98-2aae5f61ec2a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "38bc9585-02fe-412e-b59b-73ece4c96e93"
        },
        "item": {
          "id": "af262e34-90fc-4612-bddf-84285ff10037",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5317ff66-9b63-4b67-b86e-0e644404869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f716e3-70db-482d-9a67-15b039fed548",
        "cursor": {
          "ref": "5b1acbbb-3bf1-4bb7-8a04-9e09ae0cf1d1",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d4233644-25d3-4e58-9aec-c91a1cf24140"
        },
        "item": {
          "id": "64f716e3-70db-482d-9a67-15b039fed548",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "90de255d-914b-4df2-814e-6afa3bb4146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c454b89-1754-487b-8e5e-8bc253dab978",
        "cursor": {
          "ref": "038b6534-8611-4fe2-a6ae-911858bc2aab",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "feebbd81-c1aa-4f14-a084-bd6f24962b01"
        },
        "item": {
          "id": "5c454b89-1754-487b-8e5e-8bc253dab978",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4682e8b6-dfa3-4e50-b3aa-4b612d2af9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f33751c-46a6-434a-99c0-4455501680ce",
        "cursor": {
          "ref": "68db89dd-887f-4eac-9863-13778f009cd9",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e56085bf-b8e8-4636-9a90-5cb35045fd26"
        },
        "item": {
          "id": "9f33751c-46a6-434a-99c0-4455501680ce",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f603005f-f8a8-4b89-91e4-4b8faeb317f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea8e835-d807-45d4-b703-f82bb22ab7f4",
        "cursor": {
          "ref": "56143bf7-74f7-407a-a805-d28573264713",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cddf26cf-0fc2-4001-a685-644ae62e9ef3"
        },
        "item": {
          "id": "fea8e835-d807-45d4-b703-f82bb22ab7f4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af41e010-ec95-4c21-8583-1cb427c8f459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50f6fc4-f9c1-466c-b5d2-2a1a7eee2c5d",
        "cursor": {
          "ref": "c16f99a2-1c0b-45a4-8c2f-f0f010faf67b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "14874446-697d-4d34-ac8d-ef8295082ab0"
        },
        "item": {
          "id": "e50f6fc4-f9c1-466c-b5d2-2a1a7eee2c5d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "78848256-b937-4f28-9b1f-96c8d66fc3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ececca09-4ff9-497f-9e38-aec8a50b957a",
        "cursor": {
          "ref": "447f4ad5-0305-4cae-9936-27215a8146f5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f6edb0dd-138e-4ccd-b5d2-0cfd90c92ab5"
        },
        "item": {
          "id": "ececca09-4ff9-497f-9e38-aec8a50b957a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fd81aaf3-0d11-4ecf-8f9a-43e4324ff3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799705e8-9965-434f-9296-dd0c2a8f6633",
        "cursor": {
          "ref": "9bb194c3-9e19-4bf4-801d-c11392ac619d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "89f5aeb2-ff3a-4082-b427-8ba1d18d7874"
        },
        "item": {
          "id": "799705e8-9965-434f-9296-dd0c2a8f6633",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a725bc70-7a58-49eb-a624-c9dc64581522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdeb201-0a39-474c-9d47-9b404b4084b4",
        "cursor": {
          "ref": "43b2b5ec-04f9-43eb-a77e-0ae9372e6f5a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8f5a7a8b-0d24-45e6-8051-17a3cca8bdfe"
        },
        "item": {
          "id": "2cdeb201-0a39-474c-9d47-9b404b4084b4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "45aef807-d8c7-4515-b2e2-6025f5b99a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3527f41a-0d1c-4e63-8ad5-2319cc9686dc",
        "cursor": {
          "ref": "ba276418-e896-4dc0-9067-f60600d43a5b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b13bd760-eff0-469d-9b74-9f2fa723fc3f"
        },
        "item": {
          "id": "3527f41a-0d1c-4e63-8ad5-2319cc9686dc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9b39444e-2427-46c9-9f6e-b3d4024d502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e1164c-8b62-47e4-b346-a450f06be828",
        "cursor": {
          "ref": "aff4ddc3-850b-404c-bce3-834a9325b025",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "daf02f7b-7f7f-4304-b37f-adc98056a283"
        },
        "item": {
          "id": "90e1164c-8b62-47e4-b346-a450f06be828",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "45ef4d5d-d5ef-449d-88f8-cb7f9c8abdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1d452d-3060-4569-9d1c-4e80099a352c",
        "cursor": {
          "ref": "f074523b-abd2-443c-9e36-716b265b8a6b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6435e9e6-b680-4bc9-b967-1b069c3ee448"
        },
        "item": {
          "id": "6a1d452d-3060-4569-9d1c-4e80099a352c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a7a9bee7-1c08-45e3-bce5-082cce25b4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70706f64-5536-46f2-b19b-259054d2fad5",
        "cursor": {
          "ref": "40300d61-d189-404c-ab1f-36c9ab099a7f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aafe681f-9917-40d3-97de-1025f50d372c"
        },
        "item": {
          "id": "70706f64-5536-46f2-b19b-259054d2fad5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "725f6e56-247a-46f0-847a-d955db79b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d5ac64-281c-4d95-b188-8c1206008607",
        "cursor": {
          "ref": "01a6b99f-d304-40a5-b67f-c410c5a92798",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0f5a8229-356a-49ae-9b3e-d1e52d2762cd"
        },
        "item": {
          "id": "31d5ac64-281c-4d95-b188-8c1206008607",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9befe5ec-be73-4be2-b6f2-08359cce161e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4a2ae4-c95b-4596-ba53-14bc0b4520f5",
        "cursor": {
          "ref": "25c197ca-4204-48e8-bc00-a8b7849b9cde",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3a8d6d3a-2a6b-4e1e-b18d-757fa8945f48"
        },
        "item": {
          "id": "6b4a2ae4-c95b-4596-ba53-14bc0b4520f5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9e3bca7e-6a40-49fa-9d7f-3843499d7f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1c7d47-4045-45b7-8005-990eb7c8daf9",
        "cursor": {
          "ref": "2b7e8a00-de1c-4c02-86ab-53494913ac2d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "619bea35-9189-40c3-be3d-50447f9cd733"
        },
        "item": {
          "id": "7c1c7d47-4045-45b7-8005-990eb7c8daf9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc31e6c6-4a0e-4a47-ae84-19a2dca92624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e0efc7-0083-43ab-8ea0-74deb1b73d7a",
        "cursor": {
          "ref": "510eebb9-4246-4bda-8aa1-f3e9bc56225d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "024a764a-cafe-413b-adfe-3599506bba5e"
        },
        "item": {
          "id": "a8e0efc7-0083-43ab-8ea0-74deb1b73d7a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "60d4fd70-6d50-44b3-b7bc-336c9d57126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82391bd3-2ed0-4473-a064-977b154d251d",
        "cursor": {
          "ref": "15f8cff7-1dff-4447-b1b7-7e7887581834",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8f98f9bc-b3f3-4dbd-9987-2412b13ce49a"
        },
        "item": {
          "id": "82391bd3-2ed0-4473-a064-977b154d251d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cd5ce9b2-86d1-4b42-ab1d-56364fb3d4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e62d9cd-fbe9-43c2-b4eb-2894ec200c2d",
        "cursor": {
          "ref": "dce3c5b8-678f-4f58-9ff5-d3352cdf06b5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "75283193-5f7f-4ba9-912e-ce288e5988bb"
        },
        "item": {
          "id": "0e62d9cd-fbe9-43c2-b4eb-2894ec200c2d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "659faebb-cc7c-46c3-8a1f-a9267fe93fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3bccae-ac16-4986-8e9f-26fc38c671c7",
        "cursor": {
          "ref": "891ab992-3242-4d0f-8d19-d37ea7aa322e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8e3f0797-bb6a-4e94-b5d0-70422893ce62"
        },
        "item": {
          "id": "de3bccae-ac16-4986-8e9f-26fc38c671c7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "80cad0ea-c4ac-41ac-8544-dc3c9a1435e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0816d304-9f00-4a85-9843-7f3b7f3b2ba0",
        "cursor": {
          "ref": "59a403c9-96b3-45c4-9d5d-789c93ea04fb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "100f7329-1338-4a86-a1d1-a77353f49579"
        },
        "item": {
          "id": "0816d304-9f00-4a85-9843-7f3b7f3b2ba0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f4cea163-d2ab-4eff-9c3c-379e707ba5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb96afd-e3e8-4e9a-b70b-8962a4bef442",
        "cursor": {
          "ref": "af2d18ac-f108-4ad3-830c-1fdd64cb0ad5",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fd6a0104-eaad-4b28-86ac-31bc08e56790"
        },
        "item": {
          "id": "8eb96afd-e3e8-4e9a-b70b-8962a4bef442",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "df70b689-c7d0-4369-b9a5-bdfc572a556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941b698a-234b-4ee8-a0be-76c4768a9802",
        "cursor": {
          "ref": "320a0f7b-c478-465b-8929-06a0b159da7d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7cb48887-5d82-4062-993f-e094fe05983f"
        },
        "item": {
          "id": "941b698a-234b-4ee8-a0be-76c4768a9802",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "30e9cee7-7a0c-4676-ba13-3d06c8f70d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce8c85c-b979-4a4f-9b79-827e9e656b18",
        "cursor": {
          "ref": "162eaaa6-e2a9-43ef-8ab7-3a4aaf4c878b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b21964f6-493f-4cdf-9554-d15d9c2dfc73"
        },
        "item": {
          "id": "1ce8c85c-b979-4a4f-9b79-827e9e656b18",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f1c263c6-da40-45f4-afc6-947bc30e82c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23db7df9-1477-4375-8a6c-ce80f80b9657",
        "cursor": {
          "ref": "487bc673-b78a-4e80-b007-4a6c69e59b1a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "23d9ad9a-6e3c-4b3a-99f1-6114d92b3180"
        },
        "item": {
          "id": "23db7df9-1477-4375-8a6c-ce80f80b9657",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c7780b17-9a85-4f00-86d7-31c55b8900db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7125bbfc-43bd-4b11-9abc-bf7ee1b8f2d5",
        "cursor": {
          "ref": "acf57b11-bb22-4429-beeb-fe72ecf323ed",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3bedebd3-b982-4cd8-8eaf-c2fb8508a691"
        },
        "item": {
          "id": "7125bbfc-43bd-4b11-9abc-bf7ee1b8f2d5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e0bde82f-430b-4082-ab23-5197ca412740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd82414-ca51-48ec-9e82-8e2dd75d6ed2",
        "cursor": {
          "ref": "555ced14-9a9d-4957-864a-7352d633f174",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0bfeccf7-5349-4668-9cf2-ce41c7a827f2"
        },
        "item": {
          "id": "efd82414-ca51-48ec-9e82-8e2dd75d6ed2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "245a65c5-7c6c-403e-923d-628f60fe173a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827a032e-2e31-4bb6-9f09-75bc498151ce",
        "cursor": {
          "ref": "b3d29b60-59f8-4445-93ef-85245431e716",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e0c784bd-1860-4516-9efc-245dc4cb0f11"
        },
        "item": {
          "id": "827a032e-2e31-4bb6-9f09-75bc498151ce",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1f499dd2-9f47-4169-ad49-e561f2c01ca5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd6c186-2219-4e7b-b307-4e1075a16e02",
        "cursor": {
          "ref": "487fc9e7-217a-4351-894e-4671926a4595",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "144f2d52-d3b0-4d30-a31e-6f2d053e9fe2"
        },
        "item": {
          "id": "8bd6c186-2219-4e7b-b307-4e1075a16e02",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0af91546-8806-49c6-877c-6e58bf3dff08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "cb0b8965-47fc-4fe5-b6ad-448ea831ec10",
        "cursor": {
          "ref": "63ff9627-5a5e-4175-bb0b-37effcce039e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cdc40093-84d5-4f6a-a9c7-46f4cdb2fcee"
        },
        "item": {
          "id": "cb0b8965-47fc-4fe5-b6ad-448ea831ec10",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "05301667-cd32-46a5-bf7c-1933a2d885fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "ec6b5bed-0a1b-4919-b1e9-56d3512d4f20",
        "cursor": {
          "ref": "0266314e-6005-472c-af8f-e2459d3f5c87",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8515581f-7bd6-4ecf-aca0-8693d365a2fd"
        },
        "item": {
          "id": "ec6b5bed-0a1b-4919-b1e9-56d3512d4f20",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d6818752-2389-45f9-9e4b-fa632e86d1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e3ff5e88-35b9-458f-a323-36d6bb5348b2",
        "cursor": {
          "ref": "68fe1d73-6e5e-411a-a16b-724ab83551f9",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7aa76253-2922-47e4-bae8-ffd24b798b93"
        },
        "item": {
          "id": "e3ff5e88-35b9-458f-a323-36d6bb5348b2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e3e52832-2aa2-4a5f-8e2a-1533ff34eb5a",
          "status": "Created",
          "code": 201,
          "responseTime": 7587,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a3402e-20d7-4d85-8723-16dd962f4297",
        "cursor": {
          "ref": "bf214639-68d7-4430-930e-3ee094fc74b9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "597d42cd-bf58-4295-ae82-6ceb3e065731"
        },
        "item": {
          "id": "20a3402e-20d7-4d85-8723-16dd962f4297",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f685efaf-cb00-4206-a97c-e6c92ab7bd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c19fbe2c-1a0b-4d51-8239-3a07897b4559",
        "cursor": {
          "ref": "2ed49f92-40e2-499f-89f5-d736f34b457d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5652e77e-17f8-45f0-a600-c730d6f16937"
        },
        "item": {
          "id": "c19fbe2c-1a0b-4d51-8239-3a07897b4559",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "db02fa7d-c6b1-434a-be4c-605109ddf3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "0d6a25e0-e4cd-4e9c-b868-7198be0211d0",
        "cursor": {
          "ref": "091b8874-3973-41ff-b4ee-894673c2c767",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b99fc87f-d803-4c7b-932d-1d2ac9036b9f"
        },
        "item": {
          "id": "0d6a25e0-e4cd-4e9c-b868-7198be0211d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4861f32d-1d65-4d3e-896e-2196bf900b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aef0cb8-15ca-445b-9ccd-bbc9f1197349",
        "cursor": {
          "ref": "06c654d0-7f44-4d44-b42f-6e1ee42d20b2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ac76cf46-051a-4fb2-b495-523f1262e843"
        },
        "item": {
          "id": "7aef0cb8-15ca-445b-9ccd-bbc9f1197349",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bd7090b0-0798-4b1b-b9c1-fc3de3881eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ad7a8a-5762-4d07-9e8f-746065e50a5d",
        "cursor": {
          "ref": "b61a5df4-1337-467e-83eb-883f10efbfa5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c100608-f7e2-4d79-b79a-c2d745bba3b6"
        },
        "item": {
          "id": "11ad7a8a-5762-4d07-9e8f-746065e50a5d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "51f1ed7d-d558-49e0-994c-910c5e4faca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c646e63-e711-47de-b4bd-078f1d6ae286",
        "cursor": {
          "ref": "730af230-5630-4476-95b3-b6fd46e0285a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eedbaaca-b635-4f7d-96d9-a1df9e319e00"
        },
        "item": {
          "id": "2c646e63-e711-47de-b4bd-078f1d6ae286",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a04449c-41ba-4899-80f3-14e4fccfcb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5edba93-ac57-4738-bcb4-2c053368458c",
        "cursor": {
          "ref": "f1ff4500-eac7-4d44-8bae-8df2339630a0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d1882fd6-bea5-4eac-9925-117f3adc6fea"
        },
        "item": {
          "id": "c5edba93-ac57-4738-bcb4-2c053368458c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e2b420e9-7814-4c18-8418-349544b5de1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fea677-f811-4a25-80ba-4975062799d2",
        "cursor": {
          "ref": "f98c03a5-5a89-489e-9c9e-1b5bf7ad6e40",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "522ba71c-9e92-4f35-b54f-7afe1454b283"
        },
        "item": {
          "id": "a2fea677-f811-4a25-80ba-4975062799d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2b650224-762e-430b-9b05-dc836ac8fb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e56e43-e075-40ef-81ba-f6785648b2f7",
        "cursor": {
          "ref": "754af057-2d56-495f-982b-0dab57d8d17a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1202cc6f-1ad9-4eed-adb0-11262500ab60"
        },
        "item": {
          "id": "57e56e43-e075-40ef-81ba-f6785648b2f7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c089c36c-e907-4a81-b9a3-bda2fa9f2b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed3bf25-b0c4-4fe2-b1a3-b374a07c6de3",
        "cursor": {
          "ref": "792185c9-9545-4038-a675-0e7ede1eabe3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "24826420-a7dd-4b2f-9b10-5c1784104b05"
        },
        "item": {
          "id": "eed3bf25-b0c4-4fe2-b1a3-b374a07c6de3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8935b82e-88d6-452b-84c7-d9dab34655ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d1a627-c006-4290-9644-e907db8689b5",
        "cursor": {
          "ref": "aa433f21-118b-44b5-8e89-ef332907f0fe",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f46213e7-4123-48b8-87dc-7d4956aba4ba"
        },
        "item": {
          "id": "d8d1a627-c006-4290-9644-e907db8689b5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f3a8d639-d6a1-4426-b288-e3da8c711e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f225f9-bca3-41bb-a6a7-b5fdd7629f58",
        "cursor": {
          "ref": "efe6badc-fe43-4e6d-9b34-6ab6094d30ba",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "49eff69d-9a4f-4336-845a-601b4b259532"
        },
        "item": {
          "id": "33f225f9-bca3-41bb-a6a7-b5fdd7629f58",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8460543f-eb85-40c8-aed6-9994496cac4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622ed895-8a4f-416d-b34a-d7bc4fcab3fa",
        "cursor": {
          "ref": "4cd7a5ce-0faa-4d5d-87f0-00e176276b40",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "27aabbdb-386c-4287-b565-6a8c0d64a12b"
        },
        "item": {
          "id": "622ed895-8a4f-416d-b34a-d7bc4fcab3fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bc62dd6c-7d5b-4ecf-8710-6337c07c38cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d9553b-f4a4-49e2-9ce8-cc5896108de0",
        "cursor": {
          "ref": "c4435824-5b29-4f1d-984c-db5da8a292b7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4490771c-0d91-4a52-acaa-a222c6a6b38f"
        },
        "item": {
          "id": "b3d9553b-f4a4-49e2-9ce8-cc5896108de0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c467f858-564d-4d76-b53e-681d4ef685d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf3e72c-8a10-4587-94ba-ea6611c75f06",
        "cursor": {
          "ref": "827e2a67-b53a-40c7-af35-41464a1bcbc0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0d4536a9-ef78-462e-aa0b-a1beca647dd5"
        },
        "item": {
          "id": "7cf3e72c-8a10-4587-94ba-ea6611c75f06",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "05b88c1b-0afa-4ac4-a59b-01f3332e4216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de38faf-bb3a-4919-9935-5bb1e62f64b3",
        "cursor": {
          "ref": "6086fa2c-bfba-45ce-85d5-8e42e88da9ed",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1017b781-ff79-4640-aa9e-4157f52f9832"
        },
        "item": {
          "id": "4de38faf-bb3a-4919-9935-5bb1e62f64b3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "120cb300-86a9-4e7a-80b5-7af6b567dd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cd3b69-34c5-4e80-86df-072a4bc3379a",
        "cursor": {
          "ref": "15ea72d4-4ffa-4e3d-afe6-80f751ec9eae",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7285d026-012c-4eed-8f44-b2d9eb1c7510"
        },
        "item": {
          "id": "80cd3b69-34c5-4e80-86df-072a4bc3379a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "80c4b11d-3d20-495a-9af1-5f5e1d8d8153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e07b07-caa0-4844-9096-07b572d5e707",
        "cursor": {
          "ref": "cfedcfdc-32d1-43d4-8275-48583b547cef",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "10083883-ec83-45da-89a6-4b672e6fe737"
        },
        "item": {
          "id": "42e07b07-caa0-4844-9096-07b572d5e707",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6f66684f-4537-47c8-a88b-9e4be871f27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0afa746-0f7a-4b5d-bbb7-582deebc7b55",
        "cursor": {
          "ref": "b2d78005-2a4e-4224-a14b-61e45e4bf98c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c46330e0-0958-4e14-a94b-6a6083eba505"
        },
        "item": {
          "id": "f0afa746-0f7a-4b5d-bbb7-582deebc7b55",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7771c3b4-9464-4bbc-a797-dc4b67f59b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae3bc2f-daf0-45f5-9989-a6965d47d65e",
        "cursor": {
          "ref": "0f3e7a19-1f30-40c2-a122-55d5646a5c49",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "df1164c3-f726-4c9d-a258-6d496845ff7f"
        },
        "item": {
          "id": "9ae3bc2f-daf0-45f5-9989-a6965d47d65e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d6bd25ba-4f97-4581-893f-6f2358521651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0e0b90-4dea-4aaf-aa1f-671b8be58f35",
        "cursor": {
          "ref": "dac6c5e2-c139-4580-b528-3c79d38f10d0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bdf061b5-e130-44c2-8ae8-cbabefc55c0e"
        },
        "item": {
          "id": "fe0e0b90-4dea-4aaf-aa1f-671b8be58f35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e8e9bb21-8f70-46e2-92b8-98908251e9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bda855f-1058-429f-8f56-83ed6782c5da",
        "cursor": {
          "ref": "1705a46e-1d1d-4992-9561-c3755d488669",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "573358c2-1247-4e7e-918a-65dc4dff4e1d"
        },
        "item": {
          "id": "5bda855f-1058-429f-8f56-83ed6782c5da",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dca724a7-2b05-4d7a-a492-3d0356b62c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931e3888-d460-4e03-bea5-b21df8159097",
        "cursor": {
          "ref": "1926e633-496d-4e97-9cb7-c6c32ba547e1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fdc0dcfe-ccd7-4f80-956b-91bf2c8a84c7"
        },
        "item": {
          "id": "931e3888-d460-4e03-bea5-b21df8159097",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "275b2b86-844a-49c7-beb9-61960cddd6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910fa92a-769d-4129-81a4-e929f5d9159b",
        "cursor": {
          "ref": "a2178d6d-6ed5-4e56-bd2b-25eb8757cc63",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e286a8e4-e427-49e5-ba96-03c86b23cdc9"
        },
        "item": {
          "id": "910fa92a-769d-4129-81a4-e929f5d9159b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d57678e8-370f-4e26-be17-c31d0a76d3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1010391-847c-4589-8fa4-842233a99642",
        "cursor": {
          "ref": "80cf0707-4a49-4aa8-bb94-a17aaf9c57e3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b2b47d3e-c3aa-4e1d-b6e4-4c927830b13c"
        },
        "item": {
          "id": "d1010391-847c-4589-8fa4-842233a99642",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5b080fb8-4a32-4b1d-b4cd-584812b5618f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce8ed59-6015-4a42-bc25-07e4c0fdc0ab",
        "cursor": {
          "ref": "3fe48b66-f20e-47fd-9193-6de2351298b6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c4ab7f31-0db2-4d3c-92dc-4ea6e2e3f1eb"
        },
        "item": {
          "id": "4ce8ed59-6015-4a42-bc25-07e4c0fdc0ab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "18b34795-4b0d-42dd-8a01-1d6c8511b900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d994e15b-9d63-4106-b6da-76179d30acf5",
        "cursor": {
          "ref": "29bf52a0-1171-47e5-89e4-4939c019adc8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "94617d6b-bf85-4b38-ba80-8dc4ce081091"
        },
        "item": {
          "id": "d994e15b-9d63-4106-b6da-76179d30acf5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d6c13920-48c7-4438-9716-bffa2bc87e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6200f0e-c1f1-4e68-b127-c9c86ccc392c",
        "cursor": {
          "ref": "eca61799-4949-47d3-a96c-c3dcb98f78e9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "887a8691-9341-46d8-b8c7-4cbc00990892"
        },
        "item": {
          "id": "b6200f0e-c1f1-4e68-b127-c9c86ccc392c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "114f4470-81da-4897-88c2-643ea6e96878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7531d7d-82d5-41a9-aa59-ce4c8dc32ff5",
        "cursor": {
          "ref": "568d3f41-cf4a-48fd-8ff0-a90e66b890ea",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0d3158e0-3a35-45d7-bcad-4dfed2004399"
        },
        "item": {
          "id": "a7531d7d-82d5-41a9-aa59-ce4c8dc32ff5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "39092e7a-3b8e-457c-8185-cb58290bb06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bcb465-6064-4646-8b05-824efb7ce999",
        "cursor": {
          "ref": "56c087ec-89f3-424b-b6c1-356c7f10ab77",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5c7d53ab-57b0-417b-8077-df8769a8a864"
        },
        "item": {
          "id": "76bcb465-6064-4646-8b05-824efb7ce999",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "235d6303-b303-4878-bece-4f6134fcf56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6781f51-3c35-43ce-a0e6-85a4e05e57fe",
        "cursor": {
          "ref": "0109e8b2-0ce0-48d8-9317-3a56f83db58b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2eea7543-3366-4629-95fe-64438c16869f"
        },
        "item": {
          "id": "e6781f51-3c35-43ce-a0e6-85a4e05e57fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cbebd686-2fcf-46e8-933c-5cb8351dc0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d220fe80-8309-4b35-95be-e92e72d43df9",
        "cursor": {
          "ref": "3b506a0d-71e1-4936-a75b-c2c3b70aa099",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c2c20183-d59e-461d-a0b2-c57520a5d282"
        },
        "item": {
          "id": "d220fe80-8309-4b35-95be-e92e72d43df9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b06f0011-99c1-47a6-8864-89478abeb17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556f7eb5-58ed-4f0f-b1b2-c6bcab74bf70",
        "cursor": {
          "ref": "c08c619c-6c49-4533-bcbf-81cacbbf43cb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bb994888-2a02-4d05-b37a-4e15306d70a1"
        },
        "item": {
          "id": "556f7eb5-58ed-4f0f-b1b2-c6bcab74bf70",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "99f2b88e-12a7-49fd-80b6-41d0f42137b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad24e536-024b-4b75-9fbc-81a1e1ebb9b8",
        "cursor": {
          "ref": "c9be1139-1a9f-47b2-a8b3-481ff6f5db85",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ac6e26e3-bcdd-4b0a-95b5-1cdc17837466"
        },
        "item": {
          "id": "ad24e536-024b-4b75-9fbc-81a1e1ebb9b8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "199b6f81-9c03-4967-97d4-c57e1d2b794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a51a7f-36d6-43ad-b68a-8484342ee5c5",
        "cursor": {
          "ref": "1897ff02-dbd3-452f-a0f7-8a47563d5dd0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d079d924-be63-40d8-83eb-406525dbc374"
        },
        "item": {
          "id": "10a51a7f-36d6-43ad-b68a-8484342ee5c5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2ed82c53-2df7-49ce-b528-e9255032096d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9539bd0b-ac99-4735-9c73-8780607962b9",
        "cursor": {
          "ref": "91b1b662-2dce-404f-9d84-d2bbeb5a0a74",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f37345b7-91f1-4906-91fa-4b31af106144"
        },
        "item": {
          "id": "9539bd0b-ac99-4735-9c73-8780607962b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d70c9035-084f-44af-8296-5b72cc5fa1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7f9c2f-29f1-49d1-b66f-d9672533327a",
        "cursor": {
          "ref": "f2a0f1e0-38da-4b11-9080-e2c0453aa59c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74db14e2-61a6-4a87-8f93-82d0a3c3b732"
        },
        "item": {
          "id": "0c7f9c2f-29f1-49d1-b66f-d9672533327a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65d729f2-9247-43fe-ad9e-40b5af2aa50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cc655d-cfda-4b43-af07-723887c0d74f",
        "cursor": {
          "ref": "82681e0b-0aea-4437-b7a6-f3292a0d9f51",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cf10de8d-8709-4a1a-8586-c91dcc3e82ef"
        },
        "item": {
          "id": "66cc655d-cfda-4b43-af07-723887c0d74f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "efa6bb8d-c5df-4172-b3f0-2379733bb1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b48c042-dbaf-46ad-b0a4-7ca64e7d418a",
        "cursor": {
          "ref": "8fadbd85-8540-4f83-880d-396796c788df",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "222eefb2-8c8a-492c-b944-7fef939d29ea"
        },
        "item": {
          "id": "7b48c042-dbaf-46ad-b0a4-7ca64e7d418a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "62f3ff49-379e-4909-ad5d-6fb31f3bf56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f5de6b-c9a7-4e86-ac2e-bdaadaf5a705",
        "cursor": {
          "ref": "07e83cc0-1a62-46f4-aded-1b7d178431c7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "431bc319-ba5c-4ea2-beda-ea9c2b007429"
        },
        "item": {
          "id": "82f5de6b-c9a7-4e86-ac2e-bdaadaf5a705",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3c097c3b-47ad-4fc7-9a44-2cdab52c7a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627b5966-8f4b-4f11-8e44-c34c84d758f4",
        "cursor": {
          "ref": "c9ec50c8-5707-4581-be3a-793a9bdd389a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "134f8406-3923-4698-a0f1-12d5e15c4d7b"
        },
        "item": {
          "id": "627b5966-8f4b-4f11-8e44-c34c84d758f4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2384b57f-c971-4aef-b2f0-c9f1782c10b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8c3da7-801b-4dd1-a8c9-79b299448d0a",
        "cursor": {
          "ref": "2f9afe16-d13d-4626-b116-5d80c71f5a8d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "50df636b-a337-490a-9c60-569cd461e512"
        },
        "item": {
          "id": "de8c3da7-801b-4dd1-a8c9-79b299448d0a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b746d3c9-2315-4b54-b827-cb94d1c502eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbb4a58-e107-424b-b8d8-69583f02db74",
        "cursor": {
          "ref": "188492ee-8c1e-414b-973c-da8fe76191fc",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "754d3e4d-8f89-4368-b119-201d7954381a"
        },
        "item": {
          "id": "4bbb4a58-e107-424b-b8d8-69583f02db74",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "15b6f898-9b6c-4d3c-aee4-8c23fa5a4885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e34bfe-32d9-4f86-a1dc-1cace1edfd8c",
        "cursor": {
          "ref": "91e72acd-9db8-4333-8edf-e2e69a9590ec",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4d132457-46b1-4d41-9cf8-66e354b763f8"
        },
        "item": {
          "id": "42e34bfe-32d9-4f86-a1dc-1cace1edfd8c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8502789c-8470-4d7e-b29c-9cd7a372dc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d246b6-ea82-4c26-9470-54370b4e80b5",
        "cursor": {
          "ref": "932be9d7-bd47-4554-9f9c-13887bd09fa2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "88dd6a3c-d6ce-4bdd-9bab-4dbd275ecc61"
        },
        "item": {
          "id": "79d246b6-ea82-4c26-9470-54370b4e80b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3430d122-0919-4e23-a76b-5477327ebfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e489e6-4fa5-4b47-980e-4c7003406873",
        "cursor": {
          "ref": "fa51b3a1-6672-40a8-bca9-0a52a63f80ae",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "71632ab8-30a6-4238-9759-de88dfa724b9"
        },
        "item": {
          "id": "a3e489e6-4fa5-4b47-980e-4c7003406873",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ebac6bc-0890-45d3-81b6-23a5dcf3bf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484f553d-b0a7-4811-88ae-1fdc3a3d4fba",
        "cursor": {
          "ref": "14c8275a-8999-4a13-9b30-6f3f11d2dc31",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f3656721-9a8d-4ef2-b202-59c5cfb00319"
        },
        "item": {
          "id": "484f553d-b0a7-4811-88ae-1fdc3a3d4fba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "49db9b36-e007-4617-9d90-09424fe66f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a698a-12d8-4a48-92d6-6ccfea2d43f0",
        "cursor": {
          "ref": "c7368691-ab12-4b46-80a7-e44d58d48952",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b3ce4768-b1b9-4c7f-957a-51ddfb1af26d"
        },
        "item": {
          "id": "752a698a-12d8-4a48-92d6-6ccfea2d43f0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f6424eaf-8b16-4b22-b7cf-c574ae82216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40f4da-0c3e-4657-8dfb-36efe17c9adc",
        "cursor": {
          "ref": "d94b3a36-6681-48c4-8c99-5080ebda1231",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0c0a1acd-1d54-4dec-89fd-10dc38763056"
        },
        "item": {
          "id": "2a40f4da-0c3e-4657-8dfb-36efe17c9adc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea54e5c5-841c-4560-b509-7ded128ceec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3148a688-20d3-467b-b622-39a6d08ad338",
        "cursor": {
          "ref": "006c3175-42c6-4228-b8ed-2767e34ba767",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9942196-c804-4818-9515-3ceed013c4da"
        },
        "item": {
          "id": "3148a688-20d3-467b-b622-39a6d08ad338",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "381de125-3594-41df-88e1-fb57e001386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba6bdd9-2577-4953-9d2f-57b1824b722c",
        "cursor": {
          "ref": "1334d2ac-eea7-44b6-8735-af9bd48e1f0a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8fe018d2-0e74-4ebe-a7d5-07e79f1647d4"
        },
        "item": {
          "id": "1ba6bdd9-2577-4953-9d2f-57b1824b722c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3c8b3a95-d421-464f-893f-fcb2e8f38a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac576da5-5135-4548-a294-6926745995d4",
        "cursor": {
          "ref": "04ee0224-d4bc-4d2d-82da-7c3b3cb194a5",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0b83bbf1-bf8b-4536-acc0-9e073632d818"
        },
        "item": {
          "id": "ac576da5-5135-4548-a294-6926745995d4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f8df6107-6d9e-44df-84f1-f3fb1b638b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eca665c-281c-4a30-b523-f97d4e42453a",
        "cursor": {
          "ref": "e5e117f7-6d6b-431c-b0c4-12461a8ea13f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "252058ec-b577-42cb-8250-850b27b16473"
        },
        "item": {
          "id": "2eca665c-281c-4a30-b523-f97d4e42453a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a00fd817-802c-45f6-a577-93da367f7349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91055ff4-da18-4d67-9f1b-f38472bc2df5",
        "cursor": {
          "ref": "2c939d7b-b73c-4f26-a204-48bb7a7a958d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8b9eae8a-456b-4aae-a218-1b0fa3ea8b7e"
        },
        "item": {
          "id": "91055ff4-da18-4d67-9f1b-f38472bc2df5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "96110bc9-7865-4fcb-a5cb-013b602e4bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7432a6f4-8584-4c59-b73e-8e994e5340ca",
        "cursor": {
          "ref": "461fd6d3-58aa-46b6-8094-e7523b7c5f8f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "79e90989-d06c-40a5-8e60-520b29c92021"
        },
        "item": {
          "id": "7432a6f4-8584-4c59-b73e-8e994e5340ca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c221c2b7-56df-426f-852d-29d0cd86e88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0c9e69-0bed-4cec-b171-a08fda29e839",
        "cursor": {
          "ref": "881e948f-61c5-4cb2-8a7d-c92ed8ce5930",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0df957eb-c2a8-4072-a935-d1f72ee560ec"
        },
        "item": {
          "id": "fc0c9e69-0bed-4cec-b171-a08fda29e839",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fc13d9ac-7761-4365-bcf0-1d7a57f7865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b2ec8c-bb4e-4d8f-8989-ba973fb2caf9",
        "cursor": {
          "ref": "46b6eb0e-6b44-46ca-a570-673057628d8c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fd6234a3-fca2-4a80-821b-3cf3aea1b989"
        },
        "item": {
          "id": "15b2ec8c-bb4e-4d8f-8989-ba973fb2caf9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9866c68-b50b-4603-aa2d-286e5b3515c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3268b2-7d6f-4729-836a-37668a49b4ba",
        "cursor": {
          "ref": "a03b5bf9-c5b4-495e-89a1-36501506565a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4b63d6f1-be85-4b08-996a-654f7cc1df02"
        },
        "item": {
          "id": "4b3268b2-7d6f-4729-836a-37668a49b4ba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0eed0e1c-16e6-42b6-a8c8-9254da4abfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462564a0-f1ed-43ba-b6a3-e5bf072721c0",
        "cursor": {
          "ref": "51bbbb7e-315b-47a5-af68-e4fede5b2a33",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "47443abc-2336-41ec-933e-b044f5550d29"
        },
        "item": {
          "id": "462564a0-f1ed-43ba-b6a3-e5bf072721c0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8c2999c5-8c38-46d6-ac9f-5062ad05416b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49d6a74-3dde-4ed3-b4ea-d54381855f5f",
        "cursor": {
          "ref": "8dbc1fcf-d249-4977-be8d-1966ad541ed7",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f417e3dd-0d0a-4f35-9125-d559b97aa783"
        },
        "item": {
          "id": "d49d6a74-3dde-4ed3-b4ea-d54381855f5f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "573ba2f8-482d-465e-a79f-25a0a8eb0483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4c2028-7bf4-446b-926f-0678cc7650e5",
        "cursor": {
          "ref": "381f0381-45a8-4994-b8ac-5303fe2108a1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b3d85dcd-f72d-4319-bf8b-f2f689943c7c"
        },
        "item": {
          "id": "2b4c2028-7bf4-446b-926f-0678cc7650e5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dfe99e92-71ac-4f84-bba1-9b5242ff3a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f81969-66f7-4c1b-9d94-3e7c615d0c80",
        "cursor": {
          "ref": "7bd8c0eb-72b9-4386-a9ce-b6a1b4b5cf77",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ab94516f-eb71-402a-9a2a-e6adf0505d45"
        },
        "item": {
          "id": "66f81969-66f7-4c1b-9d94-3e7c615d0c80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "790c261c-c54d-4cad-9bcb-c9e744b066f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133c7647-919f-4a1d-a947-c62fc8a0482a",
        "cursor": {
          "ref": "300b4fea-f357-42e8-9086-1ccc1af00218",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9039f9f6-2a6d-4ef3-95e8-49de2af8712e"
        },
        "item": {
          "id": "133c7647-919f-4a1d-a947-c62fc8a0482a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef65bd8c-609e-40af-837a-f8b9e36a0abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0330d4-e715-401e-9357-fdb8c73e0a9a",
        "cursor": {
          "ref": "2796010b-f220-467b-84fc-72c2243f1667",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2e1f0a1a-d714-49a8-aa12-ba2c574b8d7d"
        },
        "item": {
          "id": "fd0330d4-e715-401e-9357-fdb8c73e0a9a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "204d95af-1d36-41d5-b225-18eadf8a1423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49078053-8c27-4a99-b6bf-67eee0f74b1a",
        "cursor": {
          "ref": "cda19f9e-1cb4-4139-88a5-576c07db7f47",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "893b35e2-dcc9-4bfd-a83a-f8dcee53e463"
        },
        "item": {
          "id": "49078053-8c27-4a99-b6bf-67eee0f74b1a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13c6378b-4706-47b6-aac0-f29651c35c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ef60b-ab6b-4b4d-a12f-24c5b549c32b",
        "cursor": {
          "ref": "508a7635-1f33-40eb-a620-58d3ce922df9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "84fca47c-b19b-447e-9af8-2b713fb55344"
        },
        "item": {
          "id": "754ef60b-ab6b-4b4d-a12f-24c5b549c32b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e46160ea-5983-4d89-9f33-3c0b0164d73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131ee670-974b-4013-acc8-9d822ff4542b",
        "cursor": {
          "ref": "ad6d242f-9b5a-4cba-921f-9405c82283b4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ee59a3d6-ffb7-40e5-a419-36a31ebe1b11"
        },
        "item": {
          "id": "131ee670-974b-4013-acc8-9d822ff4542b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "724f8acc-d077-413f-a0cd-a803f115c9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94413312-2bbf-4379-a3ca-9af2c7406418",
        "cursor": {
          "ref": "077b30bd-fe81-4157-aa0a-b43aa446410e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "26984767-5284-4a01-9ef1-33f0b0c4aed0"
        },
        "item": {
          "id": "94413312-2bbf-4379-a3ca-9af2c7406418",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "00ab92f2-123f-4e90-bf7f-49d7395ba22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ee2274-feab-4420-910f-afb33471e2d7",
        "cursor": {
          "ref": "6e42ba8e-35b1-40e5-9db9-e13a57a56733",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "97ac512f-3f0f-450a-b809-c71049371ede"
        },
        "item": {
          "id": "08ee2274-feab-4420-910f-afb33471e2d7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4d3630c8-0518-4501-a887-bc496e5fc683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269aaa12-0fa4-4c59-9bc5-bc3be1688976",
        "cursor": {
          "ref": "808815ae-1567-4b2e-af59-45c8ceb71de5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "28f95238-9a4f-4668-b739-9a561c2fc814"
        },
        "item": {
          "id": "269aaa12-0fa4-4c59-9bc5-bc3be1688976",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "38505a5a-3a43-43f6-a56e-592752dd60c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a58d9-0dd3-4972-a34c-2f28cceddcef",
        "cursor": {
          "ref": "f27238b6-9de4-440f-9705-245aa4aad543",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f4dfd312-abd5-41e3-b4cc-318dbbc471f2"
        },
        "item": {
          "id": "5c0a58d9-0dd3-4972-a34c-2f28cceddcef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "462e3ec3-a0e5-4885-98ea-65692b5e41af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ba9685-00ad-4dc1-9bb5-a18beaa0b514",
        "cursor": {
          "ref": "32583c8b-f729-42ac-8c2f-cdc84309aae4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9062c16d-9ae3-4c4a-959b-168e6bc40b9b"
        },
        "item": {
          "id": "67ba9685-00ad-4dc1-9bb5-a18beaa0b514",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b5618ba2-f162-451d-96ef-0bd646cbad2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdeb937-7fa6-4c1d-b152-6290aa2644d7",
        "cursor": {
          "ref": "6e4d4af3-2ead-49af-bb00-8524444c49d7",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cfec7eed-aad6-4869-bce4-d9aadbd177eb"
        },
        "item": {
          "id": "0cdeb937-7fa6-4c1d-b152-6290aa2644d7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a79706d1-42ad-4b61-bf57-4665e02bf66f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34248113-edd0-4b87-bb1d-cdb2a7a0ee7c",
        "cursor": {
          "ref": "778cc5e7-e290-43d5-a3b3-ca9c794f7d14",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "efd29f60-3d44-49eb-843e-fec56c6f5051"
        },
        "item": {
          "id": "34248113-edd0-4b87-bb1d-cdb2a7a0ee7c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1c3d630e-29fd-41a5-ac34-31481e17194b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bfa09a-88fd-4a4e-94ff-ada70dc17a47",
        "cursor": {
          "ref": "233f975d-078a-434f-aa64-5b94200dd2a0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "833fbd25-8fc3-433f-981d-2cf4d32dfeb8"
        },
        "item": {
          "id": "a8bfa09a-88fd-4a4e-94ff-ada70dc17a47",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "426db6e5-215d-4982-8364-dc173ad8a3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7231ad2c-172d-456b-a3c3-1283562f8ac5",
        "cursor": {
          "ref": "d06dad85-5a05-436f-b5b9-206b247b2683",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "155fb377-9826-47ce-b1dd-06244d5e51a2"
        },
        "item": {
          "id": "7231ad2c-172d-456b-a3c3-1283562f8ac5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2f60ad75-e92c-4bff-aaa5-9eed9629b8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf1a1d1-dc13-411c-acee-2a24c4587870",
        "cursor": {
          "ref": "0fd7e511-96b7-4697-8af2-0b25c20626d9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a8db1acc-f199-4a8d-90c4-96f4877ae3b5"
        },
        "item": {
          "id": "daf1a1d1-dc13-411c-acee-2a24c4587870",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "16024af2-3eaf-48fd-8fcb-e67f195101e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e4c25b-911d-48ea-ba12-0a54eb38c2f7",
        "cursor": {
          "ref": "121a1e57-79c5-44f7-8476-410afd92f137",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "58a5320e-1b4e-4f3e-96c0-b871f447ca09"
        },
        "item": {
          "id": "d6e4c25b-911d-48ea-ba12-0a54eb38c2f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ada67e0a-f486-423c-b4eb-4215409b8bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8e721b-5ede-4ccb-9878-3be7ab89de8f",
        "cursor": {
          "ref": "b23b6495-984d-45ab-b260-50a7198d0efa",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e71964bd-e2af-4154-87d7-3be41d2058e6"
        },
        "item": {
          "id": "3b8e721b-5ede-4ccb-9878-3be7ab89de8f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "838512b7-6902-43b5-a4fe-28a76b12e2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169dc8fc-a6c9-46f7-ba25-b8e47e0564c8",
        "cursor": {
          "ref": "9e3c3aa1-1591-46d4-9998-996a10b1de29",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6a487f3d-6753-4d63-a9ba-b261071eb1ab"
        },
        "item": {
          "id": "169dc8fc-a6c9-46f7-ba25-b8e47e0564c8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f9c60e02-25cb-4fb3-8f25-fbfe6a03d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7665e139-533b-4423-b799-c58efe6e0b2f",
        "cursor": {
          "ref": "952980cf-9aa9-4c26-94e1-73dacb959e81",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cfd39545-1890-47e0-9d8d-964a9a343ab8"
        },
        "item": {
          "id": "7665e139-533b-4423-b799-c58efe6e0b2f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "445e18e7-f3db-4479-b1f5-4542f3415a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d961c8-227e-4d51-ad75-ff760b326d1c",
        "cursor": {
          "ref": "19a3d597-ee1f-4aab-87f3-cbb3e9a187d4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "34943e64-937d-4670-87a4-eed7201ba10e"
        },
        "item": {
          "id": "52d961c8-227e-4d51-ad75-ff760b326d1c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9eb469f2-7278-4d84-add3-e33e1c5d4887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a10f8f-ec01-4875-85be-da2cd87d98a4",
        "cursor": {
          "ref": "9d8c9bc1-91d5-4e02-813d-af3c3fc912a4",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "51e0bb56-e929-442a-910e-1ab55f4ee56a"
        },
        "item": {
          "id": "b6a10f8f-ec01-4875-85be-da2cd87d98a4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "641c86a9-5629-48d3-ab40-b981115db613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffa8db6-af2e-4856-8a22-ba38b50a0647",
        "cursor": {
          "ref": "dadbb451-b767-4a35-9b27-06b90cc33fd4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6d6d090f-474d-4b17-8cc3-dc2053331e65"
        },
        "item": {
          "id": "4ffa8db6-af2e-4856-8a22-ba38b50a0647",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "58f38e5e-92f6-48b9-bcda-ed51a45d0c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748538ee-1a4c-4ddd-9c99-643b725833c0",
        "cursor": {
          "ref": "a72ca6dc-3fe6-43e4-9440-fc8a848a8620",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "faa9d199-4a14-439e-bca4-b6f2339132a9"
        },
        "item": {
          "id": "748538ee-1a4c-4ddd-9c99-643b725833c0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d32bdb66-9c87-4c01-b0bf-95b4fe053d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eca7c14-49a8-4df9-bf3c-fb4b02fe7499",
        "cursor": {
          "ref": "c97aa8b2-bb2d-4f7d-8331-b59150a8e0e1",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ec7f458a-8050-4fab-ade7-2a64f667bb5f"
        },
        "item": {
          "id": "7eca7c14-49a8-4df9-bf3c-fb4b02fe7499",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0cb80da7-fa90-4906-84a1-12915e56a06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fbf25b-6a4c-4e22-9f85-d4db5dec5a53",
        "cursor": {
          "ref": "109fca25-974c-4994-9e1b-f2c62c64a6bb",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0dcc3aef-8692-4385-9cf7-391dc192a384"
        },
        "item": {
          "id": "67fbf25b-6a4c-4e22-9f85-d4db5dec5a53",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ae1838de-3885-4d02-978b-4e88a23431b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26468b3e-2ab0-4992-8726-e5245cc3ddcd",
        "cursor": {
          "ref": "5031be8a-33d7-49d0-85f5-06ddcb65265b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2fc5a69f-4190-4b09-8d35-0ac3f16a30f4"
        },
        "item": {
          "id": "26468b3e-2ab0-4992-8726-e5245cc3ddcd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3efa7dc9-df16-4df7-a003-376324ebc5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e249b8df-7708-416a-8f50-9a937b0a80cb",
        "cursor": {
          "ref": "e9d3656f-9039-44b4-ad93-8b53e4134eaa",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "de63fb86-9765-42ec-8e8b-114ee0b534a3"
        },
        "item": {
          "id": "e249b8df-7708-416a-8f50-9a937b0a80cb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1f8c0807-e0fd-4292-a8c6-1b8b0d2b581a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bf074a-9eb7-46e0-ae3c-677133996d2c",
        "cursor": {
          "ref": "fbbc70d6-a70c-4e25-a5c7-7ff3bf54f56c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3b3fe272-5a41-4e75-9f6e-d98fbd3dee53"
        },
        "item": {
          "id": "29bf074a-9eb7-46e0-ae3c-677133996d2c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e00d623e-e006-4450-aece-76ae647a3987",
          "status": "OK",
          "code": 200,
          "responseTime": 206,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "9de801ea-deeb-44c3-997d-c78f0d4672e9",
        "cursor": {
          "ref": "6e43c02e-ce02-4021-82a1-1d26edb9eb83",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "032f116b-dc55-44e5-96b9-87362273d1b5"
        },
        "item": {
          "id": "9de801ea-deeb-44c3-997d-c78f0d4672e9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fa0f7386-4679-411c-88d4-2569f699f48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45e0609-f667-4897-8b16-406454fda0ce",
        "cursor": {
          "ref": "52942bd5-0759-4f6d-bcb4-f16de912e30c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "968c663c-0f72-4ce1-aff1-32eeb144e41f"
        },
        "item": {
          "id": "f45e0609-f667-4897-8b16-406454fda0ce",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d500d920-4d18-4530-92fd-48a517bdcd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac22d224-7534-4a19-ac46-bcbe6e9ef05d",
        "cursor": {
          "ref": "b5dd935c-352e-49d9-9350-020b8be21931",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ed84c466-fc04-48d4-83e3-17e7174782dd"
        },
        "item": {
          "id": "ac22d224-7534-4a19-ac46-bcbe6e9ef05d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cc6eee9c-ddc2-41ef-a1eb-91b58c3cbeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97041b94-6d1d-47cd-89f9-23cfb3949961",
        "cursor": {
          "ref": "32a186df-2c1e-48d4-ac9a-fca99f8b7444",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4b8ad4bc-965a-43d3-9487-32d575c40c40"
        },
        "item": {
          "id": "97041b94-6d1d-47cd-89f9-23cfb3949961",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "17400562-d3ad-411c-b8ba-02bccb17f1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998c0d09-6cb3-458c-bbeb-6dd861990d50",
        "cursor": {
          "ref": "78897b03-b1f6-4907-8f90-82a4ceb9e5b1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5b1709c0-fb23-4125-a8ee-667ba1f997c1"
        },
        "item": {
          "id": "998c0d09-6cb3-458c-bbeb-6dd861990d50",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "843bd0c1-b81c-41ff-a7b4-7d117f79c076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f253818a-4046-49da-857c-0ba3c909225e",
        "cursor": {
          "ref": "48a7df37-2fee-45b5-93e7-dc4d1c9a8482",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31a9b77e-74ca-4586-aff6-f0921f8f676a"
        },
        "item": {
          "id": "f253818a-4046-49da-857c-0ba3c909225e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d39acf8f-286b-4e49-a11d-05e4ce3468fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a0df6a-fbfd-44a0-a10a-4146ee51c2fb",
        "cursor": {
          "ref": "757c643a-fbab-461f-9d4f-2321bd7e5aab",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5c751f64-47fe-4687-aaf3-1884e0b4d139"
        },
        "item": {
          "id": "52a0df6a-fbfd-44a0-a10a-4146ee51c2fb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ac6f1965-16fe-4529-8c89-a6764fd9552c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a9290f-0ef0-4993-ac39-8cb2b9cd9505",
        "cursor": {
          "ref": "c65b8bef-8d6e-4021-ad44-c8f57a47a787",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "71187734-e968-4d5d-a3e9-2caa574a3b27"
        },
        "item": {
          "id": "75a9290f-0ef0-4993-ac39-8cb2b9cd9505",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "26563607-3fc8-4a29-9d62-0a3482973399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7b8a81-872d-4efa-97a2-7780ac41c254",
        "cursor": {
          "ref": "6e9ce2fb-b123-4ebc-8d99-9663e106c380",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "85672a49-8898-422a-af86-c3d2b0c71c67"
        },
        "item": {
          "id": "bb7b8a81-872d-4efa-97a2-7780ac41c254",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9249271a-d893-4119-bf28-b54b8b4d1af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459bcaf0-a071-4668-88dc-edc339ad3c03",
        "cursor": {
          "ref": "1cfde534-c3af-4225-af6b-6c75ea02d38a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "679bfa3c-a937-42cb-b06d-941327469913"
        },
        "item": {
          "id": "459bcaf0-a071-4668-88dc-edc339ad3c03",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a1c00b89-115b-4875-b8e5-3ece50363717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730d94c5-cd92-4e26-8133-eb0141fc2be0",
        "cursor": {
          "ref": "554363b5-f86d-495c-9b46-c14c45096bcd",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6158c647-1d7f-42be-b0bf-08ca36817272"
        },
        "item": {
          "id": "730d94c5-cd92-4e26-8133-eb0141fc2be0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e455f1e0-8288-4067-b6c3-331cef61ec2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9767b919-bc2e-43e2-bf9a-587cda882065",
        "cursor": {
          "ref": "6e86c343-6ac7-414c-a35c-177300f52adc",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bb98460f-a280-49ba-bccc-d21eed962ba3"
        },
        "item": {
          "id": "9767b919-bc2e-43e2-bf9a-587cda882065",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fa3c3150-dde5-4844-8075-bfe6404ca10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1add8998-3775-4da4-b931-22c2649710ca",
        "cursor": {
          "ref": "3a9afdca-3fd9-4f30-aa9a-392addc45657",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5bb614c5-1da6-4b89-a026-b04013d12700"
        },
        "item": {
          "id": "1add8998-3775-4da4-b931-22c2649710ca",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "899477be-8ca1-4384-b134-42a3d6157004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfaae1d-92c3-45e3-b12b-6e012c97ce33",
        "cursor": {
          "ref": "4c6a00d5-9f90-4b81-89f7-82c7e0996c69",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d509927d-851d-4f32-be1c-36f0c277f937"
        },
        "item": {
          "id": "bbfaae1d-92c3-45e3-b12b-6e012c97ce33",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c0301246-2f70-420f-a870-95fabb6ed30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bdfe32-8499-41a2-8c04-790eae081e35",
        "cursor": {
          "ref": "8e6be30b-d002-4454-bc54-77beed4b662b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d77c5b3e-9813-430e-8ddf-e94711e91754"
        },
        "item": {
          "id": "55bdfe32-8499-41a2-8c04-790eae081e35",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b6567013-8a1e-4edb-a507-00760d89c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a622a2-6f9a-42fd-ae75-160610b38f3b",
        "cursor": {
          "ref": "781152e4-a1f5-48bd-a53d-feccc79d4103",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "47578767-4155-4184-954b-665c39a6177b"
        },
        "item": {
          "id": "51a622a2-6f9a-42fd-ae75-160610b38f3b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a785c2bd-1043-4d0d-8eb1-d000e2949ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b2f1e-7ed7-4b75-9737-06fe6cc01266",
        "cursor": {
          "ref": "e62a911d-4377-4e22-84cd-954e9bbc081b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b09b0d62-bf8d-437b-9e87-d2a798645136"
        },
        "item": {
          "id": "3b0b2f1e-7ed7-4b75-9737-06fe6cc01266",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c79fcbef-bacb-4a30-8c4a-4e139df9e36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a724aece-f765-4921-b4ff-4bd1fc3eedec",
        "cursor": {
          "ref": "c7a13916-fbf3-403a-b7b8-1a561c63583c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c0b2bc0-295a-47dc-ae8e-c3279440a7e2"
        },
        "item": {
          "id": "a724aece-f765-4921-b4ff-4bd1fc3eedec",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9c7ac796-f11f-47ce-9de1-cc42f0b0dfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e2edf3-704a-462c-82ca-d715aedf4dd2",
        "cursor": {
          "ref": "121459cf-7bce-4675-aab3-d54b8f785ed7",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b15642e9-3b24-45c2-acfa-3d85d3a0ff5a"
        },
        "item": {
          "id": "e1e2edf3-704a-462c-82ca-d715aedf4dd2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "993bac90-ade8-410c-9c12-8b854c74037b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadb7c75-6577-40df-a3f1-5afde9c71c08",
        "cursor": {
          "ref": "26ce40bf-3ace-43ff-8597-4d19f7f442ee",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2f4f7473-87bc-4720-a4fe-0f6202cf551a"
        },
        "item": {
          "id": "eadb7c75-6577-40df-a3f1-5afde9c71c08",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a4ca22bb-6249-49c0-bd8a-dcc2ff55079b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5a91d1-90d8-4a71-8929-4ff11d4eb460",
        "cursor": {
          "ref": "830b63d8-fb03-4d0b-a6b7-acda3bf25334",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e5998170-42ea-4c19-84d6-0923531a310d"
        },
        "item": {
          "id": "2a5a91d1-90d8-4a71-8929-4ff11d4eb460",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a17b3c65-fcde-4cd2-8c34-a0ff87d7b224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057783a2-0d0a-4fee-bfa9-01799e271f0f",
        "cursor": {
          "ref": "578539b6-672e-4fe4-a21c-4623d1d5cc5c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d8288f64-87f0-402f-9155-e78c9dfe955b"
        },
        "item": {
          "id": "057783a2-0d0a-4fee-bfa9-01799e271f0f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "51adaa42-36e8-4852-9078-3e2176c350be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c47aec9-7d0e-4845-a579-ac5acee196f8",
        "cursor": {
          "ref": "0f32697f-209e-4961-a4f4-9757131c88ff",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8f77eb99-3472-49e2-965a-c2a7f50a0a88"
        },
        "item": {
          "id": "1c47aec9-7d0e-4845-a579-ac5acee196f8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6a57c9cc-1f1a-4bf5-886b-76ed00080dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61601731-4649-497c-b23a-9753bdafd8ee",
        "cursor": {
          "ref": "ee27eb9d-5d84-488b-9964-fc54a7271519",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4a9806c3-3b94-472e-aad3-e7e4795c921a"
        },
        "item": {
          "id": "61601731-4649-497c-b23a-9753bdafd8ee",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "35cdd65f-d8a4-49b8-b5a4-92e4c6d6300f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e7c2d4-bb4d-4292-9b13-becd3b776ccd",
        "cursor": {
          "ref": "1547d9c9-e0c7-4df3-964d-c6f06bd24eeb",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d1ab0ae0-1730-45c1-931d-7575d9dc9123"
        },
        "item": {
          "id": "84e7c2d4-bb4d-4292-9b13-becd3b776ccd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "53090140-f5b3-449a-a51a-22854b24fa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989e58d8-024f-421a-81b7-2e094c9a8e7d",
        "cursor": {
          "ref": "b87f128f-5c05-457b-9741-b4984c64b5a4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3cb3fead-dcc8-4c00-92f8-6b06ed4e4a73"
        },
        "item": {
          "id": "989e58d8-024f-421a-81b7-2e094c9a8e7d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "113005ab-a530-429c-9454-5e3be9faee41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7c3128-3977-4d32-9c11-b5bb0b6a4816",
        "cursor": {
          "ref": "fc8fee2d-b202-4278-b228-5a6a1721b786",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5aa72362-2021-4bf4-9720-3de4f1285ae9"
        },
        "item": {
          "id": "ec7c3128-3977-4d32-9c11-b5bb0b6a4816",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e7695c1f-3ca0-4299-bec5-172b6c01daee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b7b736-7074-4da5-84d0-06d161cae2b6",
        "cursor": {
          "ref": "73910725-cd8b-46ac-8e32-561aa9aa849e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1aca2556-dd02-4373-8d3f-16932929170e"
        },
        "item": {
          "id": "59b7b736-7074-4da5-84d0-06d161cae2b6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "630ac363-15ce-4f88-83ef-9900cb6d251c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981d2ba0-dde9-4c18-bc11-9cbb0373b97d",
        "cursor": {
          "ref": "1471ce0f-dd54-4db6-9adc-f486295cf3b4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "707230e0-1b9b-4bf5-b3a9-3348c07bf4d9"
        },
        "item": {
          "id": "981d2ba0-dde9-4c18-bc11-9cbb0373b97d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "36007a25-45f7-4e0e-af1c-f36f7a0b01d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3a1172-2758-4bfc-bbaf-44d416e1c9a6",
        "cursor": {
          "ref": "07b3f5a5-5a8d-471d-91d4-f1cef8b57d64",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "38791400-2356-4a65-98c5-93f7c38f1227"
        },
        "item": {
          "id": "9d3a1172-2758-4bfc-bbaf-44d416e1c9a6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "017c6398-8d92-4824-ae39-f751f4d0d22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c135a00-84c2-4208-9b5e-cecd75f097fc",
        "cursor": {
          "ref": "1394aba8-f825-425c-85ce-1ac9c5c29349",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1ec692f3-72b4-4e79-8d3e-fe3d75cd9668"
        },
        "item": {
          "id": "7c135a00-84c2-4208-9b5e-cecd75f097fc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5204e89d-b5fa-4270-a8e7-4d6e26d6846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232c06da-2473-4d74-ab05-54780aa4da55",
        "cursor": {
          "ref": "c4873ce0-2a6a-4460-a74d-560d28c02dc3",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6f2849f7-489d-4168-a58f-1a177975b473"
        },
        "item": {
          "id": "232c06da-2473-4d74-ab05-54780aa4da55",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "106aea5b-7275-42fa-b24a-3735670cd1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96a9a0b-1906-4a71-bea8-6b0f8be73651",
        "cursor": {
          "ref": "24bb863d-be01-4d5d-a329-d44c218370e2",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2765e8c6-d5c6-4d92-b725-74367cfbd511"
        },
        "item": {
          "id": "f96a9a0b-1906-4a71-bea8-6b0f8be73651",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "34ccd7e2-5db1-4892-b56e-46cbc7d7f1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ff6af4-ac30-4345-ad34-024ea6255ca2",
        "cursor": {
          "ref": "099b3512-b923-4823-8a08-a84ea526a040",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e08b3df2-f00b-4939-8363-1cd919ed536f"
        },
        "item": {
          "id": "e3ff6af4-ac30-4345-ad34-024ea6255ca2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "59e58fa0-7f82-4552-970c-5980bdd9800e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f021a76c-112f-4ac2-a1c2-d0bd80d63010",
        "cursor": {
          "ref": "2a763d5c-1afa-4fce-a60f-b989b7c68372",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d6f9d523-5cca-4333-b50c-feaa82a787d5"
        },
        "item": {
          "id": "f021a76c-112f-4ac2-a1c2-d0bd80d63010",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ce16ecbc-f834-4183-8f73-cf9112cf954c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b7c8b6-a0db-488a-acc2-7efe9eeb2c31",
        "cursor": {
          "ref": "99e2d593-eb6f-4e46-8d44-0bfdf582bf18",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8898a6a5-3454-425f-8fc7-194378abfc93"
        },
        "item": {
          "id": "c8b7c8b6-a0db-488a-acc2-7efe9eeb2c31",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9c024e5b-1917-47ba-90ae-f68f6368ca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b6bdd8-6160-4b93-a7e2-d41be25dd68b",
        "cursor": {
          "ref": "f7ccf3c6-fe83-4f30-b215-e54fbb5808b8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "184859f5-4cc5-4216-a253-d02d52a63efa"
        },
        "item": {
          "id": "b6b6bdd8-6160-4b93-a7e2-d41be25dd68b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ccdd295f-df65-4eda-bab1-d99950e0f1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7794233-364e-4b90-92dc-4be4dd06efd5",
        "cursor": {
          "ref": "b6ea04c2-f1b2-407c-a536-9d92a029f697",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bf6c2dc5-3b06-41a0-94d0-b811172c5df2"
        },
        "item": {
          "id": "d7794233-364e-4b90-92dc-4be4dd06efd5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6651bbad-ab45-4bce-aa8e-7f103c2d1815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd8d240-c4d2-4e81-887b-e17cd6697114",
        "cursor": {
          "ref": "9cd99c86-3553-4874-b85c-062321d8efca",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ebd1c81a-172b-4544-94ca-84ef7c640937"
        },
        "item": {
          "id": "fbd8d240-c4d2-4e81-887b-e17cd6697114",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "687946ab-1851-44c0-ae24-be35137c1945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6760d291-fde4-4d50-b05b-b08298604b86",
        "cursor": {
          "ref": "afb76b69-c750-4bf1-a38a-7031d01156c2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6af539d9-219f-4af7-8fb2-8534b1f23cfd"
        },
        "item": {
          "id": "6760d291-fde4-4d50-b05b-b08298604b86",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "20b75d19-4d14-4d2e-accd-d40b7d061329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b795b0-ba27-45de-b991-d6121ec5f189",
        "cursor": {
          "ref": "527ce48e-964f-40de-8fb5-dc9f28c5faa8",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "73b2d7a5-e2b8-4026-bd7c-4e243eac7cab"
        },
        "item": {
          "id": "42b795b0-ba27-45de-b991-d6121ec5f189",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5c1f0ac1-a78f-4b93-825e-3e2f5e5c7c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4559418-f0ed-4a94-9197-23555df5bf21",
        "cursor": {
          "ref": "f5b6e45d-7dba-4ad3-8400-d3d4440f6f6c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "efcb9952-ef38-4524-9538-65c2f6a6a579"
        },
        "item": {
          "id": "e4559418-f0ed-4a94-9197-23555df5bf21",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6d181c8-b3c7-46f2-ad17-20d19af1ec36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77378b45-8b66-4910-8add-41039054f2c4",
        "cursor": {
          "ref": "f245d071-988a-4c81-9f99-6a137f444091",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0dc7599a-4b7a-46da-9384-32dd0aacdb2f"
        },
        "item": {
          "id": "77378b45-8b66-4910-8add-41039054f2c4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a47ed96c-dd6f-4993-bc83-65d6ac4da853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04b29a2-5e3c-4d0b-9689-33a249fecafa",
        "cursor": {
          "ref": "a0dae77a-dfe6-48e7-a99a-56a7075c64af",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "94776ebb-0fd4-4d84-8ec3-5335f4c50c67"
        },
        "item": {
          "id": "f04b29a2-5e3c-4d0b-9689-33a249fecafa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "145cffdc-3af0-4fd3-a474-cdede8178f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cc51b5-4291-4ebc-a32b-bfebbfb12974",
        "cursor": {
          "ref": "c7a04cc8-9f26-4352-b426-588f95b68073",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f369027e-9e26-43e6-829c-3ea14673b425"
        },
        "item": {
          "id": "02cc51b5-4291-4ebc-a32b-bfebbfb12974",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04dcc27b-60d0-4a69-800e-ade10b3fb334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babccb67-1063-4cf6-9178-2a3ab40d5aed",
        "cursor": {
          "ref": "46c398af-d584-4cde-9717-fd32fdb004fb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "52bc4110-5129-43f9-9cb7-7b696e562b5b"
        },
        "item": {
          "id": "babccb67-1063-4cf6-9178-2a3ab40d5aed",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2860a823-b82c-4ac6-a741-1598cee3be45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c97b22-de16-4f08-8634-2ab4a41aebed",
        "cursor": {
          "ref": "923e19e0-f556-4fae-9681-56423aed2e74",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0324aa9e-b633-4654-aee0-8d4c75aac486"
        },
        "item": {
          "id": "06c97b22-de16-4f08-8634-2ab4a41aebed",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cf5b20e4-06a9-4585-a5b5-9f0e216715a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae630e8-a10d-4e91-a113-8c69ee249cc3",
        "cursor": {
          "ref": "fc07c73d-719b-4fcb-b447-4b5a88ed72c7",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "58aa6c4b-5a99-4963-bb8e-1c02cd02a244"
        },
        "item": {
          "id": "2ae630e8-a10d-4e91-a113-8c69ee249cc3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "612c847f-dc6d-49ed-a33e-b9ed2b19175d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de8983e-4671-45ae-a0f7-b5bb94b47eca",
        "cursor": {
          "ref": "925ec722-2429-4b74-bbf4-31b3f982d601",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6ccd0aa5-d482-4aa0-8c5b-45d3b8d4becb"
        },
        "item": {
          "id": "3de8983e-4671-45ae-a0f7-b5bb94b47eca",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1e795288-ab3d-42e6-98f3-242e8ab74428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89d6ff6-3dd5-46b0-a61c-14932da45645",
        "cursor": {
          "ref": "cb97e437-d781-4508-86bc-6eb5d1c454e5",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "60f750b9-af64-4710-840f-a99bcf86f235"
        },
        "item": {
          "id": "c89d6ff6-3dd5-46b0-a61c-14932da45645",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "04d07bd0-e337-48ce-a650-c1104af0ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cef8723-5abd-4593-871d-2fb5c5f1b87d",
        "cursor": {
          "ref": "967bea9a-4c0a-4169-b398-691c70e0d325",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7317e2ba-88d5-47ad-b2c9-048884d30c3e"
        },
        "item": {
          "id": "8cef8723-5abd-4593-871d-2fb5c5f1b87d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c45b5fdf-4b07-455e-a0ba-41be1b639fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc2129f-47f2-45e4-8bc7-6a192f4be036",
        "cursor": {
          "ref": "6fe5fa6c-10b5-4a1c-910d-7f39f84a3517",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c2fc558b-4495-4f8f-af83-007ddc2cce8e"
        },
        "item": {
          "id": "4cc2129f-47f2-45e4-8bc7-6a192f4be036",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bc4502a9-f9af-4999-8c29-eac70fd7f876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a58128-d926-4d5f-b0a0-bf75a87d157f",
        "cursor": {
          "ref": "1d0acd3c-add5-4bdd-831a-487aba18d531",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "826a20a0-7714-45a7-b213-805828232423"
        },
        "item": {
          "id": "94a58128-d926-4d5f-b0a0-bf75a87d157f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2dd956fb-104f-4af0-8c4a-47387c159712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624d3a9f-a316-4534-9877-dce7b7acc921",
        "cursor": {
          "ref": "1761c936-ac95-4f6c-9ab8-e282b095a9db",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a5b0badb-1bae-4b17-a431-dbada0d19890"
        },
        "item": {
          "id": "624d3a9f-a316-4534-9877-dce7b7acc921",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ff5ec557-a884-4719-968e-0fbcd241dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d581e0a4-7d8a-417f-8cb3-265531aeb065",
        "cursor": {
          "ref": "139f45de-2159-46de-979d-43e6799b25cb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c6763e53-a713-4acf-bc83-d784313b39b3"
        },
        "item": {
          "id": "d581e0a4-7d8a-417f-8cb3-265531aeb065",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "990d7f4b-3379-4506-ab24-24da432c1983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfebca1e-ef4b-46fa-9c26-098350b9e218",
        "cursor": {
          "ref": "c95b2287-ad4e-4745-ba03-79a28ad14f72",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "30e76262-c925-4570-8fb0-950fe5d52fa9"
        },
        "item": {
          "id": "dfebca1e-ef4b-46fa-9c26-098350b9e218",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5e462644-0022-4e81-a713-c6c9e94367e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fd2f40-2da2-4ca8-94ab-e22b335c1404",
        "cursor": {
          "ref": "c12f4a0e-eb3c-4f6f-b707-8f5225701d21",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4064d383-7a7b-4285-9600-586e0fec1263"
        },
        "item": {
          "id": "b4fd2f40-2da2-4ca8-94ab-e22b335c1404",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "230735ca-ad1c-41c2-92ed-840449985f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d4e5b3-1db6-46e0-bd6a-be48c2cd0647",
        "cursor": {
          "ref": "b9ae7155-3f6c-41a6-9465-556c1eccd61a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3844a5b5-bd7f-433a-85bf-03b3d060091f"
        },
        "item": {
          "id": "e1d4e5b3-1db6-46e0-bd6a-be48c2cd0647",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eea36b0f-9484-4b76-8d21-b88eb9af1bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24d17db-fcd8-4049-b8bf-2aa5a0466871",
        "cursor": {
          "ref": "784c9f65-9bd3-4ef0-9376-57a16cc0a84e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "65b29e33-e041-4bbc-99f9-743f0fd6e893"
        },
        "item": {
          "id": "f24d17db-fcd8-4049-b8bf-2aa5a0466871",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b5e831b6-9bc8-42ff-9874-3ea1c7dcb22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ec6642-b7cf-4acc-8463-1f64add9335a",
        "cursor": {
          "ref": "8c13476e-193c-43f1-8441-51442f8aa39f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "279f9ebe-e026-4d48-ad8f-ae6d94761699"
        },
        "item": {
          "id": "03ec6642-b7cf-4acc-8463-1f64add9335a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "76fa8093-b859-4ca2-b669-34c6607aa338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5849eb0-7d49-4d38-934a-7e01c440b441",
        "cursor": {
          "ref": "d090c96f-0aef-411c-87b3-c1f9357a79c2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a877de79-a683-43a9-b0e5-09cea84fb11e"
        },
        "item": {
          "id": "d5849eb0-7d49-4d38-934a-7e01c440b441",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "da96500c-19e3-4685-86e6-1c116a113e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d45aab3-5784-4e6d-8bd5-3e5ac0fa8a94",
        "cursor": {
          "ref": "a3048fd0-abb1-46ed-8b18-900950c494fc",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6ce0275f-ed32-4f02-95d0-d1f08c2bcb95"
        },
        "item": {
          "id": "4d45aab3-5784-4e6d-8bd5-3e5ac0fa8a94",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6fbf39b5-0e9c-4b76-8924-7bd46e8cda83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8917f7ef-934b-4d4d-9f6c-d566bb47c7a6",
        "cursor": {
          "ref": "93e42a0b-09f9-469d-9153-616b9287cfa9",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "670658d3-b80d-4298-8adf-43957f15804f"
        },
        "item": {
          "id": "8917f7ef-934b-4d4d-9f6c-d566bb47c7a6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "73425367-a305-45d6-84ce-4606d6965f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1a6bde-c470-4d11-979f-3c8dc20c068e",
        "cursor": {
          "ref": "0bd5141e-491f-45b2-bc35-8d7d5b17fdba",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c7f77196-3d0f-4011-a7f5-7e2cab0da382"
        },
        "item": {
          "id": "ee1a6bde-c470-4d11-979f-3c8dc20c068e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "236ee90a-4bce-4b82-82da-b146fd369e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d0835c-d72e-4eba-b7a6-8d75813d67e0",
        "cursor": {
          "ref": "4dc2c60b-f4b3-4d96-9a08-ebc5faa7d786",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "76bcb317-7567-4732-9366-1444854fc64d"
        },
        "item": {
          "id": "09d0835c-d72e-4eba-b7a6-8d75813d67e0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b96e31b2-79b7-4562-881f-6f4b4268267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97358d15-b1b5-4d9d-8bd2-5877de9349b8",
        "cursor": {
          "ref": "ad37068c-900f-44fd-8ed0-7358ec897591",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b2c3039d-efd6-4c14-abeb-867d0d38c823"
        },
        "item": {
          "id": "97358d15-b1b5-4d9d-8bd2-5877de9349b8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5ab4026b-ae28-4387-a9b6-6ee5cc2ae67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a363a857-d722-4f9a-be07-ef05c744d002",
        "cursor": {
          "ref": "af100a61-99b6-434e-826c-d67e6a73cf7b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ac185609-8c0a-40d5-849d-6daf18c593d1"
        },
        "item": {
          "id": "a363a857-d722-4f9a-be07-ef05c744d002",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9edce9a5-cfe6-4ff9-803f-7f1817e89232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec76479-7472-4538-99ae-e6fb85f622a9",
        "cursor": {
          "ref": "e58147e6-a3f7-4812-ab40-e06cec36a8bf",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "227ded9f-7863-48b7-b643-77af2e2bb91b"
        },
        "item": {
          "id": "6ec76479-7472-4538-99ae-e6fb85f622a9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "49099841-8eab-4d74-96b0-3f8de1a717eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5e0759-81bc-4904-bcb5-8b2f7424d093",
        "cursor": {
          "ref": "88adb0d1-e927-410f-8a2e-5f2e82c55bd8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9f992f56-32df-4a84-a9bb-f9152962fd00"
        },
        "item": {
          "id": "8e5e0759-81bc-4904-bcb5-8b2f7424d093",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f7b73ef3-78b1-4b4f-a33d-48a6a9fa6adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476c58ac-d0f9-4fec-a587-5fd0bbaaadcd",
        "cursor": {
          "ref": "73b94f05-9408-49bc-a6f7-55545aa2822e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a3ad54a2-d9e3-405e-9802-2d52987d31f5"
        },
        "item": {
          "id": "476c58ac-d0f9-4fec-a587-5fd0bbaaadcd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c9b2518d-3832-4280-b1f6-f12bc87b715c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ad0146-17bf-4158-97d5-418c5f8b4f94",
        "cursor": {
          "ref": "c4f9b302-f699-4e0c-aa55-7972bca09ce4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4e8a5452-20aa-41d5-9978-9e6d8d8ac31f"
        },
        "item": {
          "id": "44ad0146-17bf-4158-97d5-418c5f8b4f94",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8b2457dd-4b84-4509-a171-266f99ec165a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0c0fc0-45c2-413b-b5d1-2db218d8051d",
        "cursor": {
          "ref": "7a855b8e-f41e-41a0-9f26-0d6281c1403d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f2a7e815-f997-4464-b845-9158d8ba1bf8"
        },
        "item": {
          "id": "7e0c0fc0-45c2-413b-b5d1-2db218d8051d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "421c3944-d316-4547-8aad-b791ee297769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e51499a-c68b-4ce2-b09d-30afb59e5c80",
        "cursor": {
          "ref": "fa41d1ca-db35-4d0a-885f-eff60fa43656",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fea1c7b3-3448-4284-a998-0e96d3c9702a"
        },
        "item": {
          "id": "6e51499a-c68b-4ce2-b09d-30afb59e5c80",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "42bfcdd1-3601-4eed-9ab7-db9a6f4c1d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5750e262-e0b1-45a5-8153-fb71e584a073",
        "cursor": {
          "ref": "e9d253ca-9c24-4ed7-8a1f-f294e5c47556",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "66c8572b-6984-4f93-b65d-55d14af18c8d"
        },
        "item": {
          "id": "5750e262-e0b1-45a5-8153-fb71e584a073",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c5b30b52-b2f8-45a2-8277-97f4ae5286ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb34771-73bf-4f1d-92d7-33c87c5e91fc",
        "cursor": {
          "ref": "85516898-64fc-4c66-be9c-1a8e3cfbaee3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f14484a2-e3fc-4eb0-aaea-6169f2dff611"
        },
        "item": {
          "id": "9eb34771-73bf-4f1d-92d7-33c87c5e91fc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "beb284c4-814e-432d-b162-0347abc04b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ff5716-1aa7-497b-b72e-fa5ae2f81b0e",
        "cursor": {
          "ref": "d9716d2a-bdee-42d4-a1ad-80115fa49b62",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0fd73d75-7d98-4b21-bdd0-e6793b38cbed"
        },
        "item": {
          "id": "87ff5716-1aa7-497b-b72e-fa5ae2f81b0e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "86989c36-7538-4065-9342-572deea79458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4c9094-2390-440c-ab81-ec9a298a135e",
        "cursor": {
          "ref": "c6ff29aa-bd7e-444b-8357-51b431622da2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "be4b25af-ff59-4207-b03f-8f4dc1f5f004"
        },
        "item": {
          "id": "6c4c9094-2390-440c-ab81-ec9a298a135e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "54252348-f304-4c40-a7ed-dc8bd5298068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba383c3-9841-4c41-b521-f0460674a7f8",
        "cursor": {
          "ref": "6041b414-ee2f-4bd4-ab74-eb3ce0bbb351",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "37af658a-b91f-439e-b836-1519e684b458"
        },
        "item": {
          "id": "0ba383c3-9841-4c41-b521-f0460674a7f8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "120d9188-e1a6-4d80-9d57-f08272763cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2111ca57-da41-4fd5-a806-29ddeaf727ac",
        "cursor": {
          "ref": "6cef4166-4310-46f1-b807-e2b5a491135d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6b82bd2b-2328-4a5a-a2ac-5b95666a1548"
        },
        "item": {
          "id": "2111ca57-da41-4fd5-a806-29ddeaf727ac",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "995ef2be-e092-4a6e-bcd0-f9f90cc22cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813b0b99-de50-45ed-b291-11fb88d2c31e",
        "cursor": {
          "ref": "8fd02b99-0b53-404d-9977-ada5f3e3511c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "95e53322-cc3f-4b65-80a7-f553e56586b9"
        },
        "item": {
          "id": "813b0b99-de50-45ed-b291-11fb88d2c31e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "81ae5211-b5ba-4bb9-9441-d69120af32cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdbe0f0-090b-4e3f-881e-3868ff0ef2bd",
        "cursor": {
          "ref": "4927acaf-f362-49a9-a898-b0ceb9a60578",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2aa4d686-9c1e-4f4a-ade7-d37cf324163f"
        },
        "item": {
          "id": "8cdbe0f0-090b-4e3f-881e-3868ff0ef2bd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2ab4dae2-514d-4b9b-9739-79935da9cd77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475c29eb-cb2c-444f-a5eb-e4505aac1390",
        "cursor": {
          "ref": "f7c6a121-bf9b-4f7b-8964-772d467b416e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8e3b5dec-e6f3-4e7b-b1a6-00908a790746"
        },
        "item": {
          "id": "475c29eb-cb2c-444f-a5eb-e4505aac1390",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6412e578-7960-4c8a-9f7e-edb33661ad3a",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "15384f7e-382d-4448-a1ff-669fce551d57",
        "cursor": {
          "ref": "fe5fba00-cc13-4158-a04f-411697c4d14b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e2c61400-6dd4-4905-947c-aaf10c775003"
        },
        "item": {
          "id": "15384f7e-382d-4448-a1ff-669fce551d57",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c659d45c-725a-4d2a-a13b-e0e94d0d849c",
          "status": "OK",
          "code": 200,
          "responseTime": 13753,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a22530e-93d7-48db-8115-60496bd06a4a",
        "cursor": {
          "ref": "a1fc106c-c6a7-46fe-9d41-f2d9446fe0f8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dd935735-9d17-457a-a8cd-0ffb58aff5a8"
        },
        "item": {
          "id": "2a22530e-93d7-48db-8115-60496bd06a4a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "62e2d86d-6903-4748-bf38-6b2de905b90f",
          "status": "OK",
          "code": 200,
          "responseTime": 21193,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bd1350-b478-4c51-b985-e3d3b2d310e7",
        "cursor": {
          "ref": "2571352f-1fe5-474e-afb6-8d860cbf1447",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "333d01ec-c34e-4501-8f2b-e98687ef298b"
        },
        "item": {
          "id": "16bd1350-b478-4c51-b985-e3d3b2d310e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "919b54c0-ce53-4171-a39c-c3b03d037b20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bd1350-b478-4c51-b985-e3d3b2d310e7",
        "cursor": {
          "ref": "2571352f-1fe5-474e-afb6-8d860cbf1447",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "333d01ec-c34e-4501-8f2b-e98687ef298b"
        },
        "item": {
          "id": "16bd1350-b478-4c51-b985-e3d3b2d310e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "919b54c0-ce53-4171-a39c-c3b03d037b20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaca84a-d0d6-49fe-ba7e-41156df3c393",
        "cursor": {
          "ref": "1d257dcd-67a7-4521-b1a1-f6b7f4ed8ae4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d7b84a64-2b1c-42b8-9fe8-d8a0c6a8a74e"
        },
        "item": {
          "id": "9aaca84a-d0d6-49fe-ba7e-41156df3c393",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2186d58e-13bb-4470-8d60-dc9d21e90e89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570612b7-a891-4d2b-9cb3-6c3dab89421b",
        "cursor": {
          "ref": "9df5672a-4570-4fd8-aaa5-39769eb9703d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8cbbbab4-9806-410d-af89-b4793da3d63c"
        },
        "item": {
          "id": "570612b7-a891-4d2b-9cb3-6c3dab89421b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5eb093c5-63e4-4087-8b99-08a411a7e06e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}