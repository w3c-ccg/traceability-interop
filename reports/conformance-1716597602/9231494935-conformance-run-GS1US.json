{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cbf23944-519d-421c-acb1-ca595cf7ae4c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f7bcff4e-cfd2-427e-9776-95dceb64a0fb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ebcb8a8-f16d-4a45-b228-716d3b79f22a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3d24d4ed-69a9-4488-8f86-fc182f7e171a"
                }
              }
            ]
          },
          {
            "id": "f3dd0794-7fd9-4c8c-a5c8-8b1b9a2ea8bb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9fdae36-b141-4823-9a23-6bd6181304f0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "482f5603-e114-4d6f-bc79-6ea4b785c219"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "74517dc6-b03b-4164-bb7f-879cd454072d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a8e0d206-a61d-4dd2-b61c-603d0a91408c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "343dcb82-0138-4873-b0dd-b0eef11189d3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62524051-64c6-4b4e-b30b-55375da44f86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "901416a4-ea45-4b4f-9693-9224a4302ec8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11bc0fe4-96dc-4dba-9ef7-fe870b154f53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d28ed60-8b8d-4d84-b862-0eb2bdb576bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ae912b7-c07f-4310-b3b1-1469e921a111",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccca5bb5-de0e-49e3-a983-6eb4d412f7c1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8461dfb5-8b63-44aa-b1b7-683fcd7b48fd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d4194a7b-b51d-45b1-b21b-e7eec4077593"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e113971b-c9c9-475f-b956-cc52024395ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "308d76ff-973f-40e1-845a-85749fb78a13"
            }
          }
        ]
      },
      {
        "id": "b8f158a5-6f6c-44f2-82aa-5abf012b65d0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b8ea4736-f487-4dfa-a50f-3cf7ca711bca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2df6cbe6-02be-4360-a7ca-3dda57de25ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "adaa28fe-4354-4b27-9b37-edda397dc4a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874bdf4c-3611-4692-b881-fcdb939ab393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad78eb42-c682-4411-8911-95f4bfefbcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bccc25-acdd-4108-82cc-533283395163",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f67393e-f1f6-4cb4-905d-2b702bd14ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b5ea661-86ec-4b0d-b29c-95df32b19db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3380d469-c1d2-43ef-aae5-49d493c70f19",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9d4e01-6e92-4ef1-9e99-82157157531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d4adb57-4116-4c63-84f0-8db46bce095e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85a066f4-a08b-4908-997c-b104af44dda9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ad146d6-3e20-4c86-acf6-28c20c7911bc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7def116-64f2-492f-a350-39c31489319a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8145b63f-e374-4542-bbea-bf038de566bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99168d03-979c-4bf2-b901-e6619ab4f3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78237692-ed22-4f68-8582-f54d68ce0b80"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "67a62e45-f678-4961-b3e7-04a862f7a233",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8bfb9346-b3d4-4526-a31f-509738894221",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc9b1cc0-e335-43c8-9f83-a2b7439517da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ef4d35dc-b1f5-484a-9a67-284d59af2bfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd89dfcc-48e3-462a-87c3-ee9f8dec9ea7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d5f26e2b-69ee-4e88-8e55-c1c3688faf78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c804971-5093-4d78-9417-a7dcbfbf0d47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75038068-f68c-40ee-a7e3-11bfe495a37e"
            }
          }
        ]
      },
      {
        "id": "58afc991-a0b4-4825-9300-bcc61de52afe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5f9e9dd3-7476-4dc5-9fd6-c18ccc54f0ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45bd78f6-8849-4b7d-90fe-566d07defe37",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0d4e7d25-71cf-4d9d-bdb1-9500cb9054d0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d85d96e-004b-4d75-9aab-1c363f396db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a95f98d-6fdb-48c3-8f73-f8e6bc4280f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57379fe4-a146-4e50-946f-d40474310ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f217285f-b4d5-47ec-8810-e0ca6a6afc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4afa647-ae3c-4f9a-a763-be1a913ae7f6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ff9af3-701e-4e85-8e91-38187ecf33d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1950cfd4-3a36-4748-81ca-b8f5b0a56ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf32690-20eb-421d-881b-164bcc27b2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d2c453-1d5a-4e9f-a2c5-21f59b1d5512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da89447-1429-4a64-a175-f04d5499636d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6edefdd-90e7-48d8-bb41-45570ccb0405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d37472d-8322-4d87-9b9d-c391087e005d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d228058b-f411-48e1-bb05-8f2819297afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c8e914e-3eae-4714-b0b7-6722c3476818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdf03be-ff2c-4f4d-9cac-09e7bc0a4925",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df7d6a2-3d46-48e7-ac4f-9ed15da047d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8b528d-2413-4c5a-85de-03727e4e07c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0aa39e-0b1a-451d-a2c3-1874978b39f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1efc12ea-e7ac-4bb5-aba6-549ec359d91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd935fcd-df6d-433f-ba1b-9154b3452674",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057005ae-2e82-48e3-bdb1-29a07e8f7394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d23c208-27fa-4857-bbb6-23348a90b734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3422f95-65cd-42dc-b9db-2fd68ab2f856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "555f9fb9-44aa-472f-8c8d-0907e1d426c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f288528-1ef8-49ba-893b-13ae9890c3be",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f634695-63f0-4c52-98a0-48c9ed0efe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12c0c1b-fd25-4596-aa51-863b3d870d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec967cd-c1f6-4226-bf3f-9b5528a6c14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a65db039-be23-4a51-a8c8-87cdfce3db69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055f8492-38b0-42ac-8eae-aecc7e066f48",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0246cd-9d22-4089-91f7-e6506595594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5803f61c-baeb-48b2-b032-5689ac867815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dae7139-0162-4e49-989c-31e9794e033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69855292-2763-4b1a-af7c-fb6069106bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a4ddf6-a503-4215-b680-1295dc0e4683",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8964fe4-d108-4b1e-82f0-515081d2c2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06a91e2-f4c2-460d-b097-8ca80043f4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f888ab-fc3e-4785-848c-7fa56a61b223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92a2b929-662a-4dfa-b3e9-1009c08ebd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13f79eb-67e3-4970-9c26-7b3c541b026f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405f1ae3-7ab0-4002-b7bd-e9376b54f736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c15445-8bee-40e3-86b2-c284d1acbaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e315e48-290a-44d2-bbf7-c6596d499500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d22c967b-189e-43d4-81fa-ac0d1cc1fa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf3b940-090e-4096-9113-a956470df6cd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f08cf81-64c3-4f5e-9abc-43673ccc9699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f2e7fb-7b59-43c0-a657-80dc8d3f1a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b36c52-7d31-4769-a1c8-eb6e060d7f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7fd421c-9090-4dec-ac47-4ec287882ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7810c8-f75b-4d66-a5c4-0d0722bc93ac",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7a3d89-6636-41f4-9001-cc1119709257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b1c315-aa0e-42df-9b65-b02d97081d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572d5af1-5e24-4426-9363-a00e00363aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3bf5b0e-451e-4324-9191-2ee24b2192c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb31e054-d332-4b1b-9255-4835df65e847",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a5cc68-5b13-4c8d-bfef-743108e0053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7dc9888-0d47-457b-ab80-9bf56f918d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46808da-00a9-4968-b2e8-559deb0f961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51132c0b-625b-418b-85d1-839ba7d96a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfb5728-4a8a-4cc7-b205-e6fd1f01fc7e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c48368-6e35-401a-bc93-a371e098614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88012fc4-8e27-4056-862c-15b53b9bf5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079c3cac-71a6-4412-8863-257439083207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "578fd5e1-2c48-4df6-bf0d-6e502aa567f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ebcd09-f411-46c4-9123-2a5bcef2f11a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5028802c-d6b9-47f8-96bd-f26dc9fa1a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae3f36c-8433-4c88-9b5c-4d2f4c2968c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f546f963-d680-49f2-bd90-df3fc7b92afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "defbfe08-d220-44b7-b207-c654ce61c16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a70dfa-0767-4ec4-8f60-30adda5ffcb0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacabf45-cf3b-408a-bb88-50bcb672a1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358b3af2-1600-4b88-91a6-c3fe4fa1501a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb898c1-5474-4f1e-b14e-c4eb36c8475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e06af9a4-a195-4061-9755-1a9c254ceacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3d2bcf-fe43-4059-965d-a1256735179b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0e519c-623d-4540-9780-bb94973bed49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ea87a8-09ed-4ea9-8841-74bae935630f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d2155f-5eb8-4bfe-a730-f42b20f5e067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0f1c70-315e-4c7b-8f6b-52c0657e4a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9cb6ff-c8bd-4128-b068-fa40d4b732e5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72e8296-5a02-4d33-8bd6-abc15e8b8ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61e4e49-bbd8-4ad3-8fe7-e9df657fafc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140a0384-1995-46de-ac8c-5c755f7491b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceabb8a6-985f-48af-90a4-e798e05f8733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8a3b24-f1ba-4ff4-aae0-1b44aec61cb6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c12ffb1-59e5-41fb-a5f5-d8db230ca976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d4b39a-6579-445a-ae7b-e4b085873cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2178a82-4394-4c0f-9eeb-bfa7126134b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "21fc88ca-55d7-48d1-af69-2e615dac8ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8f614c-3a42-4944-8466-d39cc0a956bc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b0451e-179c-4977-979f-586d63fe4115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe2ac83-2f55-40a4-944f-afa78502ff63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49e0523-0c10-4bdc-a9b3-0fa7865df6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ec32c5-fa40-4c23-8fde-16eb1ebad33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413bfd8a-903f-47bd-b940-cad6ea408816",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9479a4e9-def5-4d2b-9033-57a3ce2b17bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6621f9-9d27-432b-b386-b3db02693286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2602e3-d21c-4f1e-91ea-e486a31e317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39780e44-1461-4213-b231-b3b233d7098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8b1422-d83d-4b54-b9b7-722004ad4c0b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a3e657-9d01-41a3-b2ea-48d9acfc2bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb14c7e5-09ca-47d1-804e-ea55e2e68628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafbd0af-b679-4197-be23-3087071e812d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a65961-153d-449d-8bb5-8fcc38b7339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0ef3ea-ba18-42e8-baf1-10f7b10f738c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e9e79f-ef6d-4e01-8c72-535d72faf4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f9cde0-ad47-405e-a389-ff71d39d425e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d884ea-5d71-498f-a64c-e26d867e3de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00acbf0c-5b76-4a11-afdb-ceab753faafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f93a0d9-baf9-4c20-b7b0-293ec6034c7d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23135069-d38a-4c0c-8ed9-3a63f21410e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dc614a-c0bb-4182-92c7-5b8541352c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fa5c7d-f9f7-4594-a115-9908b423a100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d727dc37-b378-4284-9ae3-7f4457128c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2104d3d8-66c7-4aa8-aa6f-301d14edef6d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef74c34-b838-428f-9b61-0e9f7aff0ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53657884-92a9-4bfd-945f-0a19324970d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1ee5f3-3bd8-4e33-b771-be716567b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0176847-2f70-42a4-abc8-b9fed74fcc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84a6edf-7b09-4bad-ac85-cf7d9aa7abb7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6f28f6-3aa3-48c7-af21-a063dcb941be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596aa952-72f4-4699-b45e-04da102d9c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a93d5c-e874-48b5-8bdf-9b427781ef24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c9caca-dc28-4139-abaa-4f52322da354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4797380-4956-4665-b9c1-acfef3b9d2b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9bc362-c4a0-4ce6-bf68-9736777e61f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d57886-1017-4eca-9595-4ca07cf20a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0395932-41d2-4678-aae5-5edc547cbadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f15e61f-8926-4e8d-8cce-76469e0d1ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66aab67-a5dc-47ea-bd2d-ee7ec441213b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93bfec5-9af0-4bae-8014-b05cd4419c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708857d6-08d7-4dcc-baf4-269d70608500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39136968-16da-49d8-b793-79f2b5897e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8b2bbb-1286-4d49-a3da-2f9cf2913495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b02f33-c939-4b70-b3a1-ae44eed4b369",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05de1809-4d0d-4dbb-a8fc-7d2eebedbec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0c99a2-4a2b-4d90-9344-20963f73138f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b63413d-a317-4514-822a-22eaffec4527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "917a6fa9-8194-4bd6-98e1-a66b5cca071b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f87634d-d876-4f0e-97cf-af2f0b1b14c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beaef8c-3759-49b1-b49a-fa6e30f3bf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb52cdf-485f-4d2f-ac54-04f77a0e062f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3502ee85-5442-450a-84cb-5a5dad9ae628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "963f20aa-c0ab-4e0a-ba3a-36f48699de80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2d3870-177d-42ef-b807-b6f5c1cf2420",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a9cfc8-165f-4ece-9b13-4c3c63fc601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8798968-38d3-439d-a474-05aeb191e028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6aa706-cc2a-4be6-a5ab-f63942a1eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "63913fc5-37f6-4022-85e5-b7736b2ce035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5febb900-5dc6-448e-b8ae-f969a80a0fe0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9d6701-bce1-469f-a10f-b334213f8f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe4b1b8-7db1-48f1-9a86-4c9b6d719466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e37ece-8b69-4e21-b907-efd1b0bf9cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a12642-e01c-41b4-b8eb-ceb195124702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9e1b08-3cf2-470d-a798-d576a1e912d7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ea0717-850e-47f0-8692-cb88b52056fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8ae10d-1fe0-42cd-8dd4-d6f2da572a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfd6a73-59eb-4e3d-ad25-cb4e72b57ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6881e2c6-b3c9-47a0-86e3-8e9bcb90adab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3487ddeb-c8d0-4f07-91ef-e80e29aff101",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e6a7cc-12bf-4c6b-8198-42523d0b8368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e7497c-7039-43f4-b81f-556cae7c45c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ca0354-65c7-43af-8a29-ba431af572c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51cd7e7-ece9-4eb7-90cb-f9c6054687f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2be448-0674-4868-bced-215cdb5810f0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7479f830-fb04-4a48-9d2f-d4f5d2237045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207722d1-e178-4260-9ea9-fb59f77e9a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e1f1e3-31ec-4920-a7f2-c85ed47bcac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3ac81d-0e67-4543-a09b-855173104ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a256460c-e162-4faa-a825-72c8967c0e98",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa58de50-d35d-4f5a-ac47-80c0a039b5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84226ca2-a4c7-4d8a-8593-990fdfe595ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fb0b40-0d6e-4aae-9d2d-6657b8e3e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f2355d22-54a0-4dee-b3d4-031cc47107ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011566d0-ff17-40ca-abc5-da57bcc59cd1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e5eb37-f180-4d28-81fa-726fc9d3a590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba5f19e3-e6cc-4679-91af-a5ba316e9ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b7e530-79fb-4b74-9b65-a03422b87ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb994d3-e263-40f0-b868-990baad2558b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01490250-c764-459a-9daf-8f18a7450783",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc7c2fb-27f9-4194-b641-e7e557071e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9273e0a-c7fa-4843-8661-4342d5e51704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081ece01-6131-4147-98fb-963ece9863ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9192e0-738d-461c-946b-8b490612d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8237c2f-1435-4804-adde-aa512c2b0487",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb0d43-3bf2-4ee9-93ea-ae5aadb08faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78f34a0-4f7f-4747-aef9-883dc54bc528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9986852-0f8a-4dcb-a5dc-afaac4093fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "edaf57fd-eb12-4648-b7a5-7e031d574558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0b512c-60a1-4dae-8d04-6c3f3a971c39",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffc7c54-9a74-42c2-8e82-aaa548e227e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0717e7-701a-4770-826a-4fe2c6e5e59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106ca98d-78d2-436d-b407-1ea880615a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76da7105-df02-41cd-b1c8-bdd35c9a6d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6bb199-7cc5-4ee6-b230-ff1967ba5629",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5041a037-57c4-48dc-8255-3a7fd1177eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa418fbc-0200-41ee-a3f5-b8c084289596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fa9599-48db-4a59-91c8-177e6bd27305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4fd171-75a0-4bec-9f0f-091e2f097c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bb97f1-3cf9-47d7-916f-4e36072809a6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd0b0ee-6dfc-4201-9287-328a4915d2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5899fad4-787f-4c88-aeb8-8a9ec4794091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def398e8-fa94-42a5-b5ce-3e12fa09e656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b75e320-7161-42d0-a750-7bb4fddf4eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5396d9-9b26-4a59-a74a-bfdde5eeb48c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1e42c5-ee27-4d5a-b57a-605d337a3735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afc7aff-9c94-473e-a266-a83dbf660458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a8c777-6a1e-44e6-9f2a-2fb1390623aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc4b674-b4fe-481b-8468-4789bf65cc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3591f9ce-d582-4886-a427-605150369f85",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f2c68e-545d-4195-82e4-d4ff1f3a8136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5700cd6a-c806-45b4-8e9f-ca092de69819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dd86b4-6f8f-45f8-85cd-1f80df4a1c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "27871e92-9bc8-449b-b850-7a7bf300c711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba68611-7761-4d58-b706-dc2a19bc3afb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835f2845-b53f-4298-abca-a055080cbe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45119ecd-ab4d-4c06-b433-f5db2649be58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08b8aa0-bd95-4f46-8400-119a5237cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0eff8f3-c331-462c-8ab4-da853055a774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e045e241-00df-42af-8ea5-8c4e4ac0e711",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfb1203-761d-4d0a-900b-195e97127916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64df1efd-23ab-4fdf-be8a-c7b635f49651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f36f934-8997-46b3-b3c7-f48de5a4971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec559db-8070-4917-b94a-4fe11d72f42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bdb481-ba2a-4083-bc42-ddc5fa79c0c0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4afd6c-8f4a-4715-ad53-cce8797cce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e45f642-4e03-4c6d-8fce-8c74eb06083c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a99db37-632c-4304-b7a9-35751fc3d5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff21b27-6d9c-4487-8946-02d558f52140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9135e4d-5a7f-4ed2-a234-8603e28598fc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13023bca-43e0-4524-a967-52ee2d477107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ccac1f-4fbd-4e0c-acd2-7198be126528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b328e5ef-343e-4ef4-b593-a3410d9f3d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13676974-a174-4f0a-8928-87ceaa4d1b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b5c2b2-7b26-4ba8-ad02-f96f3435096c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb0750e-33ea-4175-8ec9-5b485a8e68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a8ca43-e8ae-4ee2-afb5-19a66fc409c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff7cb0-1871-4b12-9f22-2278bc4b0d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87d6b95-86c7-48f6-a9f9-336a6f53efe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb553cda-fbc9-41be-b557-878f3c985227",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68beb603-e33b-46f4-ac81-fbbfe7929aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe87c80e-cb65-4eb4-a6c2-3bcb6b38fc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7a08a0-be11-463e-87d9-cc3c51e2c568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2a8c6f-398e-4f19-bc74-e0b06eea9f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e64cf0-1bf2-413a-8d55-1168cf374de9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce34e333-b617-476a-bf95-1355191ac6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99475d8-98d0-4a63-8c41-4cb962dfcb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ed562f-ba1b-403a-b2a8-4f5896c3d985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80611a80-130c-4c17-99f6-66f4d471ccd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a372c641-51d3-4129-a378-1235fa1e1208",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12223490-8d84-4965-9b41-1d23e2b8c12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64612261-4848-4c19-b66d-beb00e84d239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63a9421-d448-46fd-b145-a4c44b4e8a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de315a6-d777-4940-a91f-b767eb8567fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3f340d-30e5-4abe-8f8c-43aaee31558b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302e25aa-0a4a-4472-b7d5-c505646a5a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d854d059-72f4-48b3-98c6-cbff2cce7221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec865f2f-1113-4da7-a27e-878e387cf3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef162cf-dcd2-4171-8455-c01bb69909aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205fa3d9-d3ce-4111-b4f9-b207c4a34ee9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74b1782-f33a-4942-bb50-57de5b3d6d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31eb5dae-caa9-41bb-a2ab-9ae9a6180b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb254de-62f1-48c8-9a8e-aabdac9ccf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0064054d-39c0-4444-83c8-45c74b4f6c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91500390-9d10-4f23-a51b-417a9f897e7e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e8d4b6-8fef-450e-b38c-a7ad720170b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2667996-9da4-43d9-bcf8-5fb314294944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0451fe2-3cb5-420e-a98c-cd05ecb63ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "071ec2ae-b2c2-4491-911c-e0a8ccaed41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a107e1d-6add-4f60-bdca-655bf64cd2c6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c5e776-f342-47f1-ae1c-6c0f1219a929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c376396f-4be9-48ce-bd31-43f8dbfd36eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4446ea10-e6d9-4624-a68a-773ec3085bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19da82f-96a1-427e-ac92-aeaf8448f0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8a7009-3602-46c0-ab60-dd0c7391badc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3732ba7f-1c2b-4e16-a106-fdc6a036dbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a33509-cf78-4a9b-83e3-ae7a4033a2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6d895b-05ec-48b7-8306-f6c25c002562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2b59f4e0-f453-470b-8606-a0257c23f9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420bf3e5-b2c6-4689-9788-01c15709a4c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7844e342-cfd7-4000-83a9-b81330ee1133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba972edc-c5b3-4a19-bb77-3d0837c24d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af358e7-3fbd-4cb6-97a5-eca8fce8a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1b3ddd-23df-40cc-b2bd-765f9788a6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54487655-edeb-46b7-a5fd-02af17d7048b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd221a1-3497-4f31-b4c4-a3623af91667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2087fa-720b-45f6-83f1-ba745d9178bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfed5ad-cb6e-4d30-a374-1da771424bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72edc5d-a5fd-4d93-bd03-88db5516272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9751e1-6d10-42b8-a3d1-29e18c3e45ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e9349e-9c46-46c1-ace3-4032f24f76e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344dc9b5-ee2c-42d0-a1fa-c2b8cccbcf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f712f62-d75e-4c74-b86f-7f5145b40c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dde74618-b66f-42d3-8afe-7dba9337a94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8368f838-17b7-4465-8402-61530cb2106f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80e910e-fcc5-4125-aea2-406e37d0dfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73c775c-e8bb-4b5d-b7c8-4115608f4b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb01c891-4b6c-4fe5-8bc9-a9ca8fe49473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "deb40b7b-e146-4544-a92c-da4862377321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e27670-1642-47a0-b4b0-f7f1242d9f57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e02f674-86bb-409a-bedd-0b6def22184c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd456112-7173-4bfa-a4fc-54dfdc65e67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922db5be-7342-4b13-9813-2b91e75c1488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e108160-c3f4-4791-8078-f1c5852eac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60139ab3-2421-437f-ad6a-605de0044f54",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ee5657-26eb-4dce-ac4a-899568f46c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4c8526-fdbc-45c5-958c-22dc91cc786f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848f2514-9c09-4579-9bdd-7f2f634b4437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac1a8bd-bf50-4eba-89d3-0910ff12d5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e64af0-dbeb-43cf-9a57-dac62342b246",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1f16d1-62b2-445d-966a-c68da172ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0f5b3a-7632-4f3b-a2d6-fe8761d9213e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e28da-6541-4aef-ad9e-ac9dffe99717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb1bb88-713a-4cb7-b3cd-719d3c4032f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b9975e-2adb-4764-838c-a6981ed7e7d4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c35f69-8d63-42d5-8ac3-838a94c735ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ff71b6-14e3-44f0-a213-525b1e918785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e0e55e-a82e-4b99-95d9-4e162d5a1c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9829cb-7b77-40cf-8851-a6a8af0e8fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161d5907-9a2e-44a1-94b1-4c801320fba9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c125b1-087e-4e20-be83-2daf889dcdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8370ff6a-ab23-44ea-bfb0-e08fb0a36a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db6aa2-3345-4a89-a266-61a0d83e76f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f314b6-e8f8-4e05-8ba9-638396d183d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12ad598-06cc-4062-baa5-dd1927e72386",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91779096-b96d-4576-b2c1-4fe661a07319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bec6fe4-09ff-45bf-8fb2-935ba5d08676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e41f8c8-a568-47fb-b603-e0850094cdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4daa336-1616-4ce1-a216-23549e962079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9daedd4-f52a-4c29-9298-c3c4f7adf2b2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8451542-8606-4781-920b-504b315f128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59070ad0-811c-443e-9c7b-851e595caa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd2be56-a87d-45b9-b0e3-d75191047851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bc580b-3297-4e67-9d13-e327d27884e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651f921e-1748-4dc3-adef-bd1ff4ed1f59",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ede66c-c6f7-4bce-a1c0-b5df9764fe75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28d0f49-0462-4525-b23b-7f6bdf6e8caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf488bb8-80d9-4b3b-8d28-9244021d3ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2869ad-e37e-4043-8445-333b0ad2be92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b80585-9e86-453d-afbb-698701a3e63b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e37aab6-b471-44c1-9039-88f62043e83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0929012f-d04f-48c8-959f-1b94576a704f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43322b60-64c5-44ac-ae8a-05aa5ed8b0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac88ca8-f70a-4330-89eb-eec9e5d4f79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb49e20-8b12-400a-bb62-618296be6073",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ffaa77-66ea-4e90-9fd8-73314e4cdac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295c180b-e0eb-4a3f-878f-54e938e27e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0169528-d22d-4fc5-89d3-5cfd10068618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38730095-bbcb-4231-affe-eb66c303aba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fbb33c-8d97-473d-b398-173d75b8de43",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b57f2dd-ae6a-4773-8022-34c745f7bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c466537e-7d0b-4f14-bdb8-4e81d7764411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0965ee0a-6d5d-43b9-ac42-73779083cdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2846fbba-dec3-4455-8360-1a5508557ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a4ea24-897c-4ffd-8a29-239fc51d5101",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a5851a-04b3-422c-89d4-52c4f278dd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf395f0-fc71-4e81-bab9-ec4ff95b7949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce50cf3-6866-4e67-8c01-79ff4b43bbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "532d029f-4a4a-4637-ac22-4963c53ddbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edffd3fc-b076-4a7a-99fc-4a4839723a94",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4bc725-86d7-492b-9eb6-0da7ed1af3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41def3aa-1e20-469e-9e28-e5d77ee16e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6e0ca2-5c04-4d2c-a6e2-5c5da56f6191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a76575a2-e294-4d1f-9a9d-65ff916ef1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3b3ca7-460f-436b-8698-a042c6d8e496",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44e3f3a-0029-448a-975c-4868c49457ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120cb621-1ec6-4962-ae4e-997dd18b3dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59fa5c7-af6b-4114-9176-217655cec69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a452516-d88d-4dff-8605-6e52ce4ccc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d14c033-e375-4609-8fa4-71ec7bed5fc5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1c80d1-413c-42c3-a067-f1005f108554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d51c1f-ef1a-44aa-a551-fa6a7f228da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ca60db-7554-433f-b784-5fac9e06a08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c4b140-f8f2-4329-b5d7-fe7ca750f4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd1e0bd-62bc-4697-aa13-2b223e0d7979",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba80628-0997-4e9a-9cef-96243981ddab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce053e4-e1c0-47af-889e-9317c2a4dfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c474e3-c72b-467a-a29b-8cea6c0c64a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9cc27f-6861-426a-b0fc-9af1f1f52480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb64105-18b0-4d69-9cb3-b3777b29c120",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a6cb8-5233-42b1-b184-0ce3fe25b3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28b84dd-6992-45da-8cd0-92483498cfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fc4606-7d3d-424f-90b7-4a44068e74fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "968413c7-bf73-4fa7-a97e-0a420781080d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50da225-97cb-403c-9630-b073f8ac3914",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadcf6c0-de0f-4c63-81c0-0f1df24f017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6671255-35e2-49a9-a7c3-1428c05b31d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9a6273-51d1-4368-a210-ab5b4be36c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb761e44-7599-4559-9fcf-97d13c9ac1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6716d4b4-8158-44e2-9068-63e150f30c0b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3107ffb6-d0d7-4daf-ad2f-a0634534a828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f208e02-bf2a-409d-be00-081ca4a5f9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7015d00-3c32-4218-a302-63a119ab3d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "063b97a4-7a24-4bca-a81f-a1198c8e2deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f116bff-05a0-4c3d-907a-72be4f18acbd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd6da6d-b3e6-4731-af35-321102dae639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e41dcbb-ee2f-44b4-8cc8-6f5d396236c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9ce091-064a-4bf1-8bb6-81d0b267ade3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca19dd87-5f1d-4c01-9b98-d55a136d3474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332cc6c9-5efb-409d-a8cf-7c043635f48c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38f7ec1-adcb-4a61-8366-c34ffbef9673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2546928-b241-4450-8477-093a418a5393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bb51ce-96c5-4cb9-a960-f1c4c60063e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc58c943-9bb4-4cf4-bbed-0025c7531b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292760c7-034a-42e5-999a-67ee9c520ea7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c27f54a-5bea-4d9f-b553-a700fb5b5f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bd085b-28cb-4932-8c14-f8874bbfabd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fd66d1-c42d-4d5e-935f-bc9c638efa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cad659-e5ca-4f7d-a3b9-4d6c1c2adc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a2e549-91a1-4e58-bef2-591d92a7e767",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc13f6b1-fa11-4000-8170-6be5b0ee1888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0848d5-9796-4f42-ba1d-7da4f338be14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e714db8-fbdd-47ac-b7a8-0517b6c09197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbf09a6-31a4-476f-9161-dab92615205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12f3157-8e8a-436d-9f6e-eca96b47b31a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cea14b8-c50a-44c0-9ee5-a42dda867671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ac9364-4baf-4fd3-b6af-8da3b83ce2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683e1b62-2bce-4add-a14f-9200a36c112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccee6d9-3a75-48f7-aaa9-383f0455662c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2fd2ea-d262-4ef5-b6bc-742cc1a4c039",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c651b73d-6b46-4156-b679-9483c82eb55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce0ca0d-1468-4e23-9a79-059f61d5fffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f2c20a-cd22-43d2-81be-3b83d2db0ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b497a942-01f2-4e6e-9c4d-189a1c6dcc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d5c152-f4aa-4e55-bd4b-ab56f9808917",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d40f317-98bf-4f8b-99ce-d7c084e5192a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5b0933-3eec-4032-9e16-34dfefc80573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09ec311-a2db-44e4-9804-a4002938fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2521407f-76bf-40a9-bfa0-c3ff1c49f223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef178715-0a60-45b9-95b0-8d4300b5f77a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56538dc-b6d4-487a-97b3-856ad0fed920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ad8591-a2ff-443e-a135-208a4065b2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cc701e-a767-4e72-a54e-8aee06b27f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88c2b6a8-c6e5-473d-9359-985c38c41336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46379ccb-e23b-477f-8d5d-70f0b3d84137",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff5f36-8124-462e-9edf-f2191924ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cfdc58-d2e8-4bfc-805f-a30556b1e64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a0f78e-922c-4685-bb29-11df83d13601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbb2f8b-f453-4deb-b794-5cbd231b7eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c511ffc4-dd60-40d2-95d7-3eed0482e785",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809446f5-89d5-41d4-a226-493ad4d295dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9897d3-4032-4598-a933-a5f764d78fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f5833f-72af-40e3-85d8-e3f537bfa217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f20ddaa2-4d81-480b-bbea-9a22a3680b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcabf19a-3ba8-4b26-8609-e506d7805263",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31948871-d43c-4808-bcc6-9cdc7b91a23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9570ce33-773a-4bc1-93d1-1cf98777a1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479d89d0-2a4a-4778-8458-2265c3aea220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "567ee08f-c2d4-4333-b33c-439e52de5e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5435ea79-2961-4d68-b600-91017e70e87e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce251bf-eb65-43bf-8a7f-27bb6e365886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9063c713-cc78-4f6d-92d2-c7f329447508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8808f016-c485-4511-8eb4-50e6696ec97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "94f7775a-6d99-4c92-91b6-a4fec61052de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e4fea5-9d23-47ea-a262-c26a1940f35d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ac70d8-ab75-4f20-bc31-91a275d48fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b0efe390-72a6-440f-a4f6-fa028727fe0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e54c680-e5d9-491e-a4ed-b203fe243cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60702e2d-9a3b-4f5c-9f09-5c4b5bbbe494"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6598fcae-898d-48df-a713-1cf7a2e0bee0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7968bc2b-5b69-4577-b000-c284de9bce08",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b5b711-dc17-49b8-8402-c7c4be9f53fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f1c6cf7-a400-4028-aadc-eb6b27976286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e27099-937d-448b-b379-0d297ec83705",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97151817-d9df-4385-8eed-bdbbebe123ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aec6fd1f-20c2-4a24-85d6-eb29bc2652ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52978954-59a1-4b3e-8927-e18562e6cdc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5be6b02-9027-422e-a868-8bd100318381",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f70794-34b7-42e4-8ac1-4d13b5950956"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "adee154f-d0e2-41ea-920f-f5bf1fd153de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd56f0f5-724e-4fcf-ac8f-b41e4ef48ef8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2bf281f-9dad-4edd-9221-aaea8828ae07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cddc3871-b008-421d-bc19-b6586b9f6eb6"
                }
              }
            ]
          },
          {
            "id": "476a90de-5a71-4035-a848-b6599b76fb32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1985222c-c852-451a-846e-1d547f829e44",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0900be4f-53d1-41ff-8bc2-7747c52c236e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b403c07c-aa6e-468d-9753-5c7f794f91ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7bc6bebf-fcd9-4227-8a97-01adff1a84e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c14419a-9b22-4bfc-9fe8-6fe755927828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639019b9-3139-43da-bcce-fcb0b7e00aa6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da34bfde-a04f-4180-aaab-9dc48af8068c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8dfbe15-3fc6-4367-890b-53fc40ed6db5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f66e5093-2a11-4f09-b012-f75b648454d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "034fdfe5-ed42-4602-8800-66f1de6aae3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b17777e-a3ee-48c5-916d-d80513fe485e"
                    }
                  }
                ]
              },
              {
                "id": "dade3288-cb1b-42d9-b45b-0b7c22210a77",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a407b8ac-0158-41d9-9bb4-de3621b991aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1da5c54b-f20a-402c-b504-fc6916b66f2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac320878-9f13-488e-ac3f-6b09fb8942fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd18922e-c181-4128-9635-7206d45f79af"
                    }
                  }
                ]
              },
              {
                "id": "2c69e031-6b7a-4ff2-bc07-c1579e721a57",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eb4e34f-f59a-4223-bdfe-5a281303f3f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca6b8fff-095e-44b2-afaa-16d796093d93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67103168-091c-4029-9d6a-585a0c5d42ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4d0e01c-3a9b-4329-95c2-583d9091deb5"
                    }
                  }
                ]
              },
              {
                "id": "321b664f-5839-4b1b-bb4d-39f8eeb14273",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acf21e41-9d3c-4139-9d91-bf73a817e76a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc8dc75c-3295-43cb-80ee-9ad6349a1afd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03e6a3b3-543b-4028-9627-72cbe24858e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dfd82a8c-29b1-4f77-95ca-fb74e11806e6"
                    }
                  }
                ]
              },
              {
                "id": "2c4fe7f6-be87-46c2-902b-e6dfe4bb3c9d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf5eaee1-6085-444f-bfaf-79d6023e8a5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "978d58b4-9f80-4ff7-842e-8afad5769639"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca3f8e33-9544-4f8c-a6bb-f0fbca8b1cd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "50dbf171-b2c4-4ab8-aa6a-c8451bd7f18f"
                    }
                  }
                ]
              },
              {
                "id": "37802a6f-99ea-4c5c-91d0-2d0a747a6748",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65055e1c-db16-4baa-9d36-6b28d83dd4f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5972fb9e-1817-4fd1-9a05-e9194f220d0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "865104d4-215c-439b-a87e-700b7335a4d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cdf1eed2-be79-4bfb-9116-9a58dba669d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73f979ea-34bc-4f1a-866e-35fcbd31e2d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c95dadac-913b-45fb-ba42-3b86a2120eb4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d7bf2f3-b303-479f-bf50-b11172eab8c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f7df158-d334-41fe-ad0f-b1963a162cd3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e77c687d-486f-42bf-8609-9821f6a083ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f9e23081-e927-480c-a245-d11b5315aec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf1ce638-b99f-44a2-955f-b84a84f9875b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0aa2c17c-ed8d-49f3-a653-9a1156b5599a"
            }
          }
        ]
      },
      {
        "id": "8ea1036c-b015-48ef-9f83-a32e29e500d1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "744bd228-c6bd-441a-9b60-c36765c44133",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78a67ff2-0a65-44cf-ae4e-ff6f100ba67e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68930d6d-6b8e-4d99-b59b-087e5e514af3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54d9e97-d111-432c-aeb7-728b73378b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28403faf-3e23-479e-9bfb-0ff009e19149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ae2af4-d821-4ccb-b04f-f159bd70623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0233692b-a826-4eeb-b93d-8de26dac0e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20846ea7-1ff4-4e2e-89ac-9417dacac1bd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a5d311-7078-4cf0-9a59-bd102d19591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50455f2c-d7d9-43ee-a131-4bd612f62e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22f8466-5e3e-4066-b806-ebac56f35ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0b1d4e-6006-4c23-aabf-992469fbac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cbb766-e632-47b1-b50f-61954014bcd3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a3df24-483a-428a-9df6-7bfb721dab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba51ecbc-1880-41c9-9fb3-d889db3fae92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f4fc48-641a-4baf-96c3-37a7f371afac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1101e7a-8b90-4568-90ca-2628e2cacbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6bf9b5-eb12-41b5-9feb-449d9dcee5d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7842006b-1592-4565-bdad-073311074148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d901b7-295c-43dd-afe5-531c985b97f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bb88a8-cc3b-4a9c-9090-1092b758c541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1657b8-6ce3-4e94-bde8-bddb324b4a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a657f2f7-696c-4cb8-a245-b7ab0bf8428b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b096a81f-4646-43ef-aec1-ee7a07b66470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e19b080-edeb-44b7-8cf3-a8f0f735a7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9b80c4-3dd7-4ccb-9b8b-9254d041cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5904a8-6e60-4b45-b260-c1a87fb9f547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f2642a-09d4-4d77-a97c-df94f31a0094",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d225e47-2229-4255-a813-42bf27cfda00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb0bb6a-ef75-4310-bd0e-7e5e32b77578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ff29e4-bfe0-4f6b-b8a0-c5f32334c24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48593aea-a0ff-44ad-9370-1e78897f92a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3de525-108a-41ce-920f-69e3a3acb890",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d22b3f3-3c79-442e-a3fb-3a37434fd243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12962234-b1d8-454d-a582-a238c7e2a566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c132cee2-f234-4b06-82d9-51e781db8fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d768c963-fdc7-4ac8-a6e2-27ec4b984ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28065fad-01d4-44f9-b97f-5f3f190ece7d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaacc11-1329-471f-b02e-f2a6fa5d3ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822d002b-da0f-42e7-a819-882ad00afbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2df16c8-e6bc-4a5e-943e-33f9e8d12fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d324de-e498-41fd-b803-248a00940cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9251ebc-10a9-46b7-820e-639aac47ed57",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3937d80c-1e7f-482c-8b56-3ff00460c7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b18e0ac-a983-4371-af05-00d2705abdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7d36f6-778e-4e9e-9bb1-edd7559b8d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c1150e-9b7d-4221-beee-e24df26adc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b4a7ca-cae6-4589-8ff3-de88f7628af5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cf7542-0ce3-4d78-8b71-99a1ad4e7b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc1060a-07ba-4f21-a05e-c43b084c9452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81413881-dd45-4eab-a1cd-2a091d66ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e37ed6b-5007-4669-9489-3f9765cee3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a088c45d-0ca5-412e-be90-5995c3c2b290",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310bb9aa-6a47-4571-a91c-cf3dd1f21b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabb76fc-4729-4be6-9641-eebe210abf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2feec2-09fc-4044-b181-5fe7779a247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "654c4d3e-9571-4a38-9d67-d62834249a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d89f8-6d72-491e-a675-1401a8f5ba73",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209c42e6-15ef-4581-b2f0-8453c2dc37e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce88267-1249-4616-86bb-e5d353098012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f990231-6f27-414d-8032-878f6a3b888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfade52-9aac-4741-9040-11d9c2832fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22bb9ae-a409-49a9-bfe7-f4b3f70078dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1823a31a-fea9-439b-9c64-f6a1673aae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27f9948-039a-4671-8a49-229a0b376ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd01f6d-215c-47e2-a4cc-977476ccef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbc925f-e9e1-4abc-9331-4cd2ea651717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424f44be-bb90-4196-9e42-2dc4e0c9804d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0d49e3-0ca1-4b7e-a49e-ed37fa063a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7723af-d051-47c6-b545-44efc3dae8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c7887e-43a5-401c-8560-ceed01bf788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1bc237-0b44-452f-9587-0baa488707a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5242a3-0e4a-4b93-9204-fca8496b7863",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86714248-0a11-4e5c-a84f-bfe96eaa103a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f00cd65-0b39-4378-ac0c-5a270def647b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510b70b1-f89b-4e16-9220-4dac47f3c72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c64a1d-9a17-4df6-bc53-61f8d4cdc334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c7c8bd-0925-4778-8c70-ce94b8373d74",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50122812-f659-412c-8252-bad77b59c9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acee856-e798-4217-a488-25a43c08d2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d2221e-b705-4923-a5ac-596c575f7b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bea56b2-36ba-4903-a210-115cfb9c88ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8783a2-18f4-4d56-8e54-1ef23cac4599",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a41fd9-281f-4288-bdf7-f26744eced2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a634fc94-ce43-4847-b59f-f5f0111cb9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f986c3ae-b649-43cd-906e-9114c2dd946e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d805b41-dbf9-4285-9ab3-47fa93a20835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cad020-f71b-4b1d-9e9c-41ce23e42718",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b360a6bb-2192-465b-a6ad-4b689f1ddfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204abb82-b954-472d-b9a4-e68d862b6561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2156df6-e5cf-4e7a-be05-c1a3e187e054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f29c86d-783f-4cf0-a90e-25a9c9143477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a4415-6dde-4afa-9e03-cd579e2000e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03de54e2-d639-4c6a-910a-5aff00d8a3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2cdc78-3498-4948-86d7-69104bbce8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d65864-0724-4b1f-aa81-e6174fca3ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d7a9f1-1fb6-405f-aa71-992b45c47c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba996c0-21d7-44b0-989b-251d161ee795",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f92cad8-2bab-4cd3-9471-0d03e6913ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428268be-a519-4d88-a2e7-035fc1eb8703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f6c1d7-ba23-4533-80e9-f7f3c2cc59d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c3553c-1aa6-49bc-bed1-8c6a5971719f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5d2171-b192-40dc-9aac-700a33f3ff9d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca24c3c3-1a7b-4f02-9fcb-f61a83e5c05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a31b7d1-65f4-43a2-81fa-9c9650a8ee49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd960f78-0f43-4515-bf38-20c6a3a0b62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "962f5626-45e6-4189-93f9-8d1c21b0f49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d417aee-aa7c-4350-8005-2b6d6cc4423f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a25a19-3adb-485c-8bac-54250f646108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86186dc7-0ff0-4f95-aa6e-eaf216853100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872c0357-84ba-43fe-9a26-ff048fdd2dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a7defa-a147-40b3-b2db-bd055235898a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320e82f8-f920-44cb-bf47-ac89179fc65a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdfe1a9-cb73-4008-9d23-739fc3d2d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3192431d-fe48-4405-8231-52195de53abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4bbe80-21e4-462b-9a1b-9acf1bac98a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44201ac-80f6-44e7-b36d-cfc30ae84d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18b8f4-9f88-46e0-b013-5f4f59ffe160",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f85d10-5427-4871-82e6-7c5515b232a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba4cd02-3922-43fb-a6b7-d6693adb6de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97dd112-ee13-499c-8ec2-7119f4e679e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b78090a-01ce-41f3-8aa7-7e8a6e487ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19044c4f-527e-4de0-b603-c1349cd7639f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a67a5a-c661-4bbd-91d3-c1a505a8c1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebf352c-8ae0-4698-8b9a-8a8e77e43821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9357d5-75ed-42fe-8ad2-62cc143ec8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2380b8-c75c-4d98-8234-29bab80f80d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c59674-732d-4dbe-bbb0-52880dd85815",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91324e1-d355-4659-8298-c771f12495e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a405e0e-2868-4614-baef-6938d1b5781c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e4fc36-0ce0-44ad-ab6d-b4366663a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e473d501-9797-4816-9e24-1c981747117d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6697e47-36c1-443e-a159-5b3b6e2cabb7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4517cff-e02e-4186-a25a-b4868b808a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a81a315-9f65-4496-bf3f-6b8a80bb5861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2b1993-ae62-49d2-87c0-c4b96d4c3f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a0fb10-3ece-4418-bd0e-690c651528f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae380072-3b3f-40f9-8b01-5a40efd56703",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e848510e-126f-4f4f-8555-7117e90eecd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3725e3da-f492-4c16-889b-3278930e40cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4d97d7-e1c0-4996-99d2-a1cb2fc0ce22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d578490-81be-4f1a-88ad-b7cac7c77b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc3155d-7fb2-42c6-aadd-368774c9dc5c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53092f-3fd3-48e4-b038-f831722dfc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc2ca66-53af-40bc-a8ef-513bf0591da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87265680-c322-42d6-a88a-04516ba122ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fe036e-9380-49f9-9897-2fe8fda427be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a19f17-57c8-4eef-b429-4c4eabb52160",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23145a61-88d0-45ee-94d1-1e030852808c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e2c67d-e067-4c36-a8f0-e999c1d51828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452da0c4-1bb9-448b-9002-47022e6aee7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee54acc7-6449-4f32-9d98-d39b4c598c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063e4aa9-e5da-4896-96d8-c5aea18ec273",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6784ec1d-d541-4af0-9736-81ae2449cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec6d83a-edff-4b6c-8935-f8721222b429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264c954d-2238-4737-b3d8-dc033b785b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14082b04-2b12-44af-9160-dbc7eae858d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db16edbb-9e5a-4c08-a06a-b9308b23d3fd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1491093-bdf2-4ff5-86e1-b6fd28c5368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936a8d99-6b08-4464-969f-c42112a80919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517e258f-453c-43ab-9747-6f38a13f7275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "362838cc-b84f-4ff3-9550-018b9f3da81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c6c43b-24d1-49f1-93f0-946ed247e2d9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26df729-48f4-4a80-9462-ad5a9998831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756cd50d-07be-428c-9a74-76c002661379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb86e33-feb5-48a9-bb0c-6fe5a85ec646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a65bd3e-4f1c-46c1-b3ee-827eef041696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60869816-68a2-49f0-85af-68dc25e0b65f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f674b0-a609-43cc-9e11-52e3897517ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3e7b89-b9da-4d3f-95c1-47fd37fc6392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10b71c3-4ea7-4fd3-8a2b-41a17c359d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f358cb-af55-4b35-88a7-237eb1a47e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e10d4c-60fc-41ba-8ed0-6a2c4f9f7c47",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa6ddf0-76f5-493f-a912-c94fa5840a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5c15af-1cff-4f2f-9150-1a2bc23cae43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0027661-d521-4c03-a770-3c3115c50ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac20796d-bc2d-4a48-bb3d-306c381b5571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92636bd-e327-49b5-80da-8694e297a94a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2614e3f5-99cd-44ef-8315-55291f5b2d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2964ff9f-d4b2-406d-839b-7e4549bb1ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1826e516-9532-4001-8278-dcacad208f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3057be0-be33-4035-ba68-5248c103da60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb42cfb-20f2-4bfc-8960-264c70c42702",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f1d51-b5d6-47c1-9979-e7b5c28a8782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de42bda-6007-4e29-a9ab-d3d2ad6f907b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdda9a0-2d49-4e32-814d-8d3300e200d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e28b2a-da04-40d2-b05a-469370b00930"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12261884-c01f-4182-b65c-d268170db1d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "015197db-c66c-4b8d-b075-44bc5a00ae12",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88b52c3-e88a-4b41-9fd9-d3db3705d8d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1ac3df-4f44-443d-9ee4-3e7ac40165ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896fa606-6227-42c4-9f00-906122d6c0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2d34a69-a032-479f-bd11-ad45ba0a5cb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3602c2b4-505f-405a-8560-38142624a378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f13cc569-42bf-4484-b774-edea84324a8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b44fcca3-6c8a-4f87-8719-9203429a793c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7932b0df-f822-438f-be69-5ac7e0b7cd71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da4d8be8-8885-4b6a-bb19-b4d59fd9a664",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5120f9c7-95e2-4a22-8d13-bfe0ff5e9be5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88ebe82f-bdfa-4a6c-9261-b6939ae46b26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc39cdc7-665d-4b25-b1fe-0dd45ef949b4"
            }
          }
        ]
      },
      {
        "id": "d7dd3a2d-b210-4a31-a843-4b82e188d880",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "236c4b57-f3ef-469d-a008-1ce2e71424d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "593ee475-97a8-4bdf-aaf2-2d16898b3303",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d9da811-3325-483a-973f-93cce54ef08b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161d1f1b-840f-4016-a414-084e68ca9a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa792bb2-4bfd-477c-860b-996b56f94268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7672362c-1db3-4a25-90d6-3b435bd34a50",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c428c2-2b3a-4cb7-88e8-7ad87b1a3d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69dbab0-1d6f-43bb-8427-918c90181946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfd25ea-524a-4063-b0b9-e25f58c1108d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba3ab30-a1c9-4b6b-8b8d-2e727d41ad4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28975b58-b82c-4bb2-a081-1be2e4fadc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909c851b-4ee0-47ce-89ef-f87d36329857",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31127a11-fc06-4aa4-9a58-ef1b0d3d3d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7f1696-8639-4427-885e-89b69217b15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ae8ea-a6b7-47bc-8508-0e5563b7e567",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fe4014-2873-41ad-9cd9-73d3b97138c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6627967a-e06a-4277-b215-ebf997ffe48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997aa67b-8d28-4d84-9581-0b98a8a74b4b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf261b7-bf44-4627-92e0-2943f2500bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8c23e5-2b16-4e44-9f9d-41e8180ad29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15708dc4-aa66-4c79-a7d1-c26606b551da",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44a6677-6bd9-4f54-a301-b9520df69dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edca8a6-009a-4488-be59-7fb813dd9d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ea0c50-6287-4557-8050-601165eadae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7bc1cb-16fa-4eee-b869-3b25135c7722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb54471-0440-4656-b093-3f5c26380491",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c3c3c5-5046-4375-9c40-8d8ae7a6f903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305459d3-d978-408d-9b2c-61151a1e5a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8634d25b-3833-4cb7-9f51-a8861942bcb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf553609-2da3-4be2-9130-2cf076f7f609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf2737b-262c-4af7-a74d-62c3faf014c8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795fa85a-5b5d-47c6-ad69-b1331a8a210e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c62603f-b125-40e3-8858-0335b2083b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a00b84f-7d76-4d67-b4d7-53caa22c382e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4294c8a2-7cba-4b4d-a5cf-856e72e24274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87deeafd-030e-4e32-94e3-cef5dae9707d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80d44d-e684-4599-b098-161a2b3a538c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88dce814-14e0-4814-a973-f3819966fd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a458fc21-40b6-4f20-83a5-a578662f859b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f736fb-0e10-4554-acd0-371ab780bd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0be2c1-7f80-4d1f-8c4f-dcf387605512",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc6bbaf-6a31-4b4b-885d-b7afc3869290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93e4a01-038b-46c0-a878-cf40e724b910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df130c59-5ca8-422f-bbf2-c081d9b2654d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a76ae8-be44-4c25-b44d-d51a10d2ebc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4552c9-db37-40a0-acdc-e17b907d9dff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbd59c8-b6d0-4b17-ba3f-c121cce7808f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d220c2-fbc0-4edc-a7b8-3b25d6be4cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c076f3ca-b83b-4de0-8e6a-5ae816699e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f96ca3c-b0f5-456f-a96c-eb65528f27ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0462d66d-5465-4a29-abf0-b176c77af8a4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6961197-49e7-4e29-a38e-45171b050774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5be2ed-01fb-4ab1-b716-dca3341667b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e82164-5164-41b6-b024-bf6fd9b7b60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2708a8-dc06-4c30-84da-70995abfb05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5622049e-3f89-46e7-9d11-a4ab6ef844c2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0169a79e-ff0b-4606-97ee-d4ba03432c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0edbe97-23b4-470f-a56b-fc9ab81c8ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a03f9d-09de-4869-b9a2-ddaf7fbe07f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2281ccd-58ff-4d43-9430-45f0cac9390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bae119-1e86-49fa-8bbb-2e5633200bbe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878dce61-51da-4be9-b0a6-f91aaf5808c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc25684-4c06-42b7-b85c-bee909764123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f4314-0a5b-403a-a1ff-da22a169a997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2183e21-81c1-4b6a-9ba4-81edc45ac2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c54155-adcc-4e0a-9068-68f8d57b6477",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f549333f-f0d7-4aed-b7fa-d8da461e1165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "498d7386-fcbe-47d6-964f-b9b2bfe6d9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61fc0f3-276e-421c-8985-75c53749ec59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7bba51-f67d-4195-bbd2-12983c0707eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0e7899-05d7-45e6-915e-fca54a11fdf8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b53543a-5db4-41f4-a1c5-96f4dd3dfd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611725a8-d71e-461a-9050-c4071f6542d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70025144-b09f-472e-925c-cd41e7234e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05be6bbf-e000-4fe1-91ba-7f10e9cd9e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd013b06-a7f4-4cb7-95d9-ab9266bf8e50",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c12fed-92d9-4203-9f37-7aaa8118751c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3469fdb8-8f8a-476e-9535-4e64e416ea83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9248863b-5276-41ed-bdf6-d3f964a1a93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4dd641e-5bc1-4e57-80f5-3886fb1f5c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6a6c68-3766-45e1-83ec-48ef27e32e16",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43c31c6-5c9f-43c2-b688-6221614ef59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042731df-2759-4bbd-a296-611e5d2783f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646589ae-9cd9-4bb4-9428-f2d1f0467b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d945e4-1698-46b6-b707-d123d5c2899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8134a8-6dc9-464a-89e2-4956cd69ab5b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fcf2db-c8c8-4ab2-9bbf-b5a9215f0711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b944ef40-1477-4dfd-96b4-90b3335b995a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c12fca-c9d7-4037-ae88-dfeffd9033e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d591789b-4041-4032-ba24-6da3be5b4b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff04545-6ed2-445e-b0eb-a4f9b884f00b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0709a850-2c5d-49a2-9b9c-e75f36b2cf2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e445a052-d3ef-4c51-9b77-77cbcde61ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088790c3-2507-45f7-a8d6-613c69db243a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e505ec4-0ec4-4d3b-bfc4-f45b4419d7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730100e1-4b9a-41da-add8-d66a846ccde8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf091c4-270f-4cf9-89b0-7e32d5d5282f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888a9fb6-76b0-4012-8404-0a2714a82a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d1fb3b-3054-4c8b-91cd-20cd24300c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b24e099-3398-45b6-be0f-a0ee0d837c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f467eba-7845-42ca-8b44-8fb03924cde7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa2640f-b96f-4612-9fae-3e750fdb4ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac651a7-587e-4293-b055-9fed5d4bd4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400497e9-c0f9-449a-b784-7bf0679eb211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad791731-020b-4c5f-88cc-0d22cecd0b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef7818b-6c6a-478d-8535-5aaf41039b34",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3ea8e-d7b3-4c37-bf6d-edf51bebfdc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4080d8c1-db75-47e0-aae1-aba6e5818c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2df2997-bc0c-4a3b-bcec-7e5f358917c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56e98e0-c6c3-4399-8a22-ab02fc416401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b959494b-2b1c-499e-a756-3f3c87dd971a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46097fd2-8986-4733-ac57-82082a34fc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75197bb2-6dec-4022-bb56-06dc502c3b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081f6f83-0e57-474a-af6d-bb383772b33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420ffbc6-c0fa-408b-b4b2-6d9dc102d7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b59c351-eac1-4d3b-882b-41477753376d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dec391-5f73-4012-997b-b972f82a7f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e381dc0-ae03-4298-a76a-08e6b2bf9e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3137853-8c50-4dbb-bfbe-ae3d2587bb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acb1923-9a07-4e99-b527-a8947130c1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6788a2c8-5b5a-4602-9750-2a4a9e6a68b8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add7f256-4a24-4ea2-92f1-aa7e425e9782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb23a84d-2899-421c-bb61-53743e21ad89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a67fc-52e0-47cd-8949-8fd0c9d4049b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3504b3-418e-4ab9-bd4c-9b6a69a917f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bdd32a-f5a7-4ff2-bbca-03bdac348057",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e14407-adb2-4fb6-878f-8b9dc0710953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77006718-8384-4af4-95fd-7bfc142bbc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78967985-3ad4-45e7-86f3-84ead5b02992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb308886-a8bb-4719-8c1b-f5bba2fc441b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ec3785-eb24-4d1b-b663-e4ac3b8745d1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fae51a-44a9-43cf-8660-44a6221223fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99780a04-8d20-4b4b-9ee5-91f78badb392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e4a16b-177f-4791-a772-f980398537ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b280c86-84b9-46fd-ad3a-ebd088285ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded6f031-94e9-46ba-b0b9-560156b5eee0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b63e06c-76b0-4f29-8c70-f3a0582efe48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db06ba54-7cc4-49b4-abfc-8f2f0cda0e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8aab2b-f202-4041-ba77-9c6ef8e383af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e950082-4109-4283-8e91-3bf2eb1d0253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f7aa48-eae2-4933-84c7-a30f12a633c0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8b6a03-97c1-498d-aa51-445c66cb585a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919a9f7e-8f60-455c-98cb-86e1212c2939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064167ce-84c1-4783-b6a5-d5f9c51df630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e2d266-f96c-4204-9452-1ec281d71b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e43bf11-13b2-433a-8b45-6b8fab36afcc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0550af-469b-4bad-9981-86c09db4c5de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc8c708-eb67-44fe-8ada-ae3ae8fa0a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75475c15-6d68-4d94-865d-531c3dc4c327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2c96a1-b104-4529-9d4b-5458c62d685e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa361b93-6926-42ae-ad6a-ebfc4c4ce81b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82b1010-f2d9-44cf-b5f9-14618f464d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d54157-8605-4bb0-acc4-a32fe1e2d1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3fb684-158f-4a74-b268-73349d7a65f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e17884-a351-4841-8e77-ae90faea1274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddf0108-9dc6-4e66-b838-0981975cb9fb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153bc294-4986-49f3-88e0-986be0759a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ada8f10-faa7-4dec-a08a-62859cd3f78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fe038d-8c8c-40e3-9436-7552c330daeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c510d86a-adc8-4525-8ab2-6f81a00e14cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d984912-175e-4d25-a914-5a88e44c3789",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe7fb1e-caa7-4731-8c5d-74d2f0de8146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a760a9-d823-4e17-bd9c-1fa2408b61cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e53f4ec-a3ff-4a12-a188-174260c6a97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cec95e-3b4a-4cb5-a0bd-31573b03fb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb15fc7-4a3e-4836-b81f-a30faef4bd40",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bb8fc1-7fe5-44ff-901c-acec2f8222bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d779e861-81b1-40dc-9cb0-90135deef5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84d271a-4ff9-4c3b-8818-0f8c44afed66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8933c8ed-e0bb-4027-a0e5-2bec6a73cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3d04c8-909a-4d6c-98fa-d889d802042b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b59c3a-92e9-41f0-b0f1-35f6cecb51c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259c6338-8b8e-4ed5-872c-d176876ec5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37b4240-1782-4648-937f-3d0f941b128a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7459fef-1c8f-4d8a-aae1-e1fe63c42817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ce1f45-b413-41a4-89d9-dc74c155c535",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ed2c8c-dcc0-4716-9f4b-40d2d68fe821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b80db45-381e-4db1-b648-3f66263d1895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e15e331-d71e-477e-8a5f-7e96870f7979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8a8095-f376-4d55-b8c1-48730fc1651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ca9196-a4aa-4906-8fa6-50f9e146ea41",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c43630-cd03-4407-9e11-331f0c240013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d63e9d-c2af-4b25-b2ad-f41f4d6b5a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77026f65-998a-412a-84e8-1098873c8d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0479542-5929-4039-bce2-9cac399e0c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be2bb7e-cd2f-4c52-a378-7d2c204d9283",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12a42a3-c25e-4ec2-98df-e0576741e856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32af4a2a-6076-487e-970b-5a1b8606fa68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f4584b-e434-4cef-8e19-46b7101f0ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4155a73-e7a4-4395-a568-a8ff2819fd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83ab644-2824-4954-b395-86ccaa877c54",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8529d91-6075-43d8-b228-8649e4d0a8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a505c3ea-bbe3-4cb8-a77a-11c3b22e77e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b19f1-781c-44cf-a79b-8f846b48eb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670aa926-bac1-4e19-9427-13daf4214ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99926aca-a94a-4afe-9901-6e1f4b076843",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1bdafd-6b50-477c-b53b-6a1fd30e71de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2b9827-1535-49dc-b53e-7ca25eb6e07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57564f96-a6cb-450d-b093-bb7284112c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a0522b-a246-4db7-92e6-c606723317e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b47f841-bd5d-4d7d-a65c-f4c7f53f09e8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc16e05-eea6-4f01-8ec2-29a90a41793c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecfc9d4-d256-4e72-bbf5-33fe810e524b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aec5f25-1f77-4cb2-95d1-fc62c7ec9aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1ee2a3-0198-4b4a-a02b-1e5fff3a4860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f31a90-ddec-4508-984e-231e9ccc079e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f1b752-981f-48ea-9c86-536f4a22025e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdcdb26-07f7-4293-90f8-4db574813ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0347f0-e272-41a6-b5bd-4365957d33d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4007581d-260b-4571-bf60-c9dd762b576f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41d516a-4908-471d-82d4-ee5a6bfa5c75",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b1283d-b266-46d4-bd36-9b8708007a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9de1c7-a1fe-449c-abc4-87a46081c66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dd4ca5-5b98-4222-a53e-267fb2b20dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5983abcb-c06c-4ef2-be69-24d8a0f81fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e8dc32-7db3-4b3f-9c67-6a546b130458",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d2b9ed-c0cb-45f4-978a-a7a393201a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32977d5-d5ed-4ff0-9859-976f6334d6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2ba661-7811-49e6-9de5-2eece3afd5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed3557a-dabc-45d7-a35a-7d2a229d0170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3720d1b8-df41-4469-81ef-977e87b71daa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33f8ebc-2e5d-4599-9ad3-8d29bbefa22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c83d3bd-ed86-42ab-bc8a-1a251752338b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff746835-beab-450c-900f-84565b18e91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641ac0af-2935-4c1e-a346-281c8ea23331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11090635-b211-4376-912f-6e093710c127",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5540f070-daeb-42ba-a074-e142dfa3eac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ce76b5-d8e3-42c2-864f-565306faa558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2be6705-dcd1-417e-bd16-c937686dd2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0ec416-f456-4528-90f7-0f5231154d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33506aa1-9ee4-4c05-9a84-bba3a15484d3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ddf0d7-0455-4983-871f-cfe97fe834ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b393d7-8fb8-43d4-990f-553c5c5fa68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f8c57e-4862-4f3d-8b6b-9c78e10920ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80857528-2d7f-495c-95a5-365f21a36d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50110e34-4aef-4b33-8969-ddc5e268fbae",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef8d510-f3d4-41d7-8d6d-a74f9eaffb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9452932-ca0a-4ae4-abf3-83857e3b7ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae4bd3f-64ed-450b-bde8-097315ae0ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de669d1c-7ff1-49fd-bf53-8946e2aa7c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8677c9b5-4f47-4e7d-8ed3-2f5e361fc3e2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70f7a56-1e26-4a17-9e44-3c2cb7573361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e12a46-6799-4577-b7ed-d410c50fc99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dc4ca8-9e20-42f4-b5bd-d99aa9b06121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d564028-5751-48e1-a78f-2fbadfea7cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2a16f4-5a54-47ca-821f-9652004ceeb2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91b7b1f-c553-420b-8a51-16f902d1a46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecc1af9-ddfa-4973-a873-2dc3d539ec70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dfd6ee-46f7-44d1-81c5-7ad08a1d8e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df077a8e-fd77-40b8-aa6a-bcf8e1e3650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c6fdb8-74a5-4907-aafb-01e839d2f6b8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe7017-c072-49ef-aa06-669b544bf5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd02dba-9ee1-44c3-961d-5e95732f7bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5765fb76-1be1-463e-979b-76c560ab06c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ebc145-a6aa-4678-9c3b-e6eddf103b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023d679a-76db-4bdd-954f-ebf1bec93cd2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32b8b25-7fbc-4f0a-85f0-6b88aa6d4b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c96ef3-e30a-4d4c-aca5-51cc474a8708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71134aa-c6bd-467e-9cdc-5326b7ad54a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a749b6-cc82-4c09-afd3-bf707cb8c058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf25375-150b-496a-b48a-e5544a6d3fdb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0d9c0f-d07f-40cf-b504-99edcb05cf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad470b8-05aa-40e3-af61-caa1fc10388f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a09fe4-8d9a-4500-8be8-63dbd41b223e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ed6555-70d5-4f5e-a292-37aa850c1a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e8824-0fb0-42dc-8e00-613c134be7ec",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac7cdbe-97e6-4688-af9d-7b52109ec260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3eafe88-23c2-4c2a-b114-3b79712464b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e5889d-b73f-45fc-83cd-e08c19af1fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac422d1b-c4a7-4f32-b9bc-9b6866cd5012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843a798a-acd9-4848-9b58-c01ecebdbe40",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c47793-07c6-452b-80d8-aec6dac1ea88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89818c1f-086f-4468-bf71-388dd028720d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744f68ad-679c-400d-a6c3-06582a47f1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214fecc5-3c58-4e8b-b5bb-6bfeb03259d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd872f-8246-4d69-ada7-d56bc743d0ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52470bac-9adb-4135-83ad-d7a440a9dc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66edf653-559a-4a2f-8650-7d3d877f3fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3652c0-329f-45ad-ab87-fb715d99f55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6070e95-e578-425b-9193-70872274bd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd402c4-47f9-4c3a-b4e0-57b6cd2c401a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440c630a-e8b2-406c-888c-99708b204e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deba5c2a-93d4-401f-8470-91f3a98dfb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e217bee6-3f7b-492a-9461-869f61b45a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fac7d5-7abc-458d-9e57-6e467c9f89b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0cadbd-e2c6-4b80-bb8d-ef0ce7f9dcfa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855d8e76-5375-44b8-a499-04fdd5200907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ab73bc-0b91-4d6e-8340-02b2f4e3bc6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daebe67a-774d-4574-b59c-ba60fa9d4eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff15fcb7-53e8-4bfc-93cd-f2b1b24f5889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd2737a-7481-4de5-8bf9-0e7d6389da1d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c958cbfb-176d-4930-a8ef-4274bfa25008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051cdd3b-b630-46dc-9f7b-57758ee12631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3592e9d7-a9b8-4a03-ada4-5de1ce6b789e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c45c5b-7933-48f4-9b53-34a47f822af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e565a970-abbd-49b2-8339-97b4abf93912",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece5ec15-b027-4ab0-a6e3-49b78e82e2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb83ba4-8631-4a5a-90c5-b2056a8a5ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645210bd-ef50-4f8d-bea3-92afc41d18ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56798c62-1270-4938-bb8b-71bfc6e8ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ae179a-8d2c-41c8-b295-5d3bb873d7c7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36dddfe-f285-49eb-be67-14d249c44233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73ed62b-c2bf-44ef-94fa-9faecfde0f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980372ed-9c3e-422f-bbcb-f951b6b7a2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f443d93f-0427-4c96-baa5-d0d822c15b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b006b2de-2184-4444-a72e-e3778c2c7212",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b5cabd-6472-4152-bc1f-a249cc37404b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6788ed-97cc-49cb-b302-8b4d0e66d302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6e8197-788d-492b-bef6-ce9be48bef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846c8238-c0f0-47c8-8b85-48a371b345d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35855f8e-6df3-4660-b918-841fdbb4e901",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7872c273-20e1-4d26-9578-426b2565a652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce07dcf9-d647-4abf-8be1-a5fcf74f4d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a172ed7-68c2-499a-a648-8c545ba94f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cd4aca-bd51-4fe8-9857-f74a039fca70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a283107a-417c-43f7-9e8d-2a4e43bc5360",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c751b25-a4b9-49ec-b64b-c56ba399e844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c31d25-ff9a-4a20-b8f5-11ace2b3d062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4a29da-7400-4ade-8905-f655a73f8d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8907bef0-e3b8-4031-bcfc-126cc62028ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1d9336-b75c-4bf7-bf81-323fea1a0963",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c8c8d1-3fb1-4400-9dd0-b7324211fee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106b586f-a97e-4d10-aeea-3fe0983dc255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa45a9f-cdcc-4ef8-b652-29c46852b1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49104061-5d9f-4368-829a-62ab7ebce80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e43aa2-fafa-4af4-99db-aa937ee6662d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c40ec85-6e0e-452b-b71d-201ee2f4dc9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64eff569-9be4-4654-9092-993cfb5ee042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dcba5b-ba82-48d6-86c0-7b94ab7e8663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abec3f0d-cf4b-42cb-bca2-e7c73199f597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eac21d-7021-4140-8e06-6477629487c3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e3ef09-984d-4378-957a-8293e73ad0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8b80c3f-1b2a-4ed7-8949-4af7a356237d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cf65ed-f8c7-431f-949a-85d76e4f9973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922375f7-9744-4e89-a4c4-e6df2c3b5846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687d4d9c-9d46-440c-a725-730404e1e9bd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92beb75-be6e-449d-832a-3c29a2125632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f22a250-4409-4075-9502-05cc534aef3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df23dfdd-4866-4cb1-8544-a57027380920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76af6f3-37a9-438c-a959-9e66999ea739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8148dfd-82f8-4ad6-907d-baef4ddfe68a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b411f4b6-baf4-44b9-a7c7-cc662981fb38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f92c2bc-41b5-42eb-af3b-d19084d09a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab52b4ed-db26-4d38-9709-7d8652d25cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d541190-1865-4dcb-bc2d-78e93d7c23b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1008bcaf-0ac4-482f-a8a4-5434a23636ea",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68ab462-e999-4abe-a43e-2a2ac25adf76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8044fa-efca-4aad-81fb-193ed383988b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a846b6-11eb-4250-85a9-154fd0378b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7511c25b-543c-4fb6-8c53-6eb1bb669dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262b8cf1-2f27-4456-a349-fb2ef73d63cf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da50dae-009f-41a0-8b5a-9e214c9e7174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7fa4424-59a3-4c0d-a9fe-7a180f421ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161d79da-5e27-4457-bd39-4fbf238b2a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5559cfdd-e8a4-4601-a3e4-3702d5daf1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcc806a-a73b-421e-ab09-536b70adcace",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bac03c-a5a2-4a84-9c2e-d8dcf8dea144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "980abeea-b6fa-4581-84b1-df11a4481859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54be9a18-85a5-4d89-a88c-ac34d4f40d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd1168-a1a4-4b84-bc43-b6eaaa342bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c06495-7e58-4281-915f-f79b57ff5aeb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab191338-bb7a-4939-91db-308613b3f262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc2019d9-336a-4a35-8263-6aaab69a1b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1aa302-ad4f-43fb-b1a9-904b47737404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b31cbc-4499-4545-a2bf-d62b01795df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf914d96-04a1-4cfd-a748-72b6f8915a9b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b43c771-035a-4d5b-9f77-b55bb6bee7be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab3eec1-0d3d-4725-b542-ac635db91b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f09f553-ec4e-41bf-aefe-cb9ce76b0a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978daab0-8903-4295-97f1-2cbfac71ed88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d926d1a9-65fb-43ce-8501-cc1a260893a5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ce7918-7757-4764-838b-e5ce7ac35d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77e157d-518c-457d-a368-08bd329b908e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271e4282-f6c5-49c7-93aa-f36ba73f2743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589b3971-ac36-4f81-a981-111b1b0dbbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a9190e-46f3-4288-b601-06f1563948b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b38c82-e1c2-499d-a317-50e3e35b2c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fedaba2b-6665-4130-9926-f19a2357f348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d3968-ec13-4474-9248-75f3b171f6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696e3051-168f-4716-ad22-5d31f0ea9088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039646fb-9eee-4981-8f70-ea79e4db52c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf988fa-0c41-42ea-949f-8b83f8f2ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075bf3cb-3cbe-4f81-8b70-1ea4baa64248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9f232e-139d-4517-b265-1d86b33962f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16d7937-e89d-4f6e-9af2-d4c2e3c16731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734ab093-54ed-4b78-a0ee-d35bb8ffa24d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4cd479-cfec-4d45-bac9-a1cbac4de4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba790e1f-a4d1-49b4-8100-11f0d15affd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd38858f-c8a1-4030-9035-e5cdee1640b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75b0d18-bd3e-40a7-8a84-324a76f5ec38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd018ec-78a8-465c-baec-02356efd466e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac1832c-818b-4d34-bf5b-87d7d1fefd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22792ff1-4e5b-4d65-bd7f-82a09a9e5c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0adaee8-151b-4334-906f-3a665bd11919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afd79bd-222c-44c9-b985-ea3acae86504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f53592-7386-40e6-ac36-6380d82ae0f0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a9c332-394e-414b-a0e0-33dd26528c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ca7d2d-63f0-4b7a-83b9-448830c9f3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2f367d-99c0-4d07-b1ec-07d3946150e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98c87e6-4a78-432a-8b8a-c1f4063ec0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e436b2-d2a5-431d-a783-5c60c67521b0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55db4509-9d33-4ac3-94da-b5e38b2f7591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70926f1-ed69-4a1c-8ca9-09f235d616a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d5b3e2-84e1-440d-8915-f91b9bb89ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ae6241-0998-4e36-b2eb-43b2aeede4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b473523-3249-4ef9-bc74-51fdf8e6c46a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57092843-488d-45b5-9b05-0063a220dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a882140-a705-4a78-b6d4-21ce50ff85de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f6aa90-3cb4-47f8-be21-9c6f33182cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c11347-8140-41bf-94bd-dfad13ed181e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69adcd3a-3aa8-4826-b8b4-f638f71cdf44",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fa2fff-1be7-4ba0-a848-26f6933ca295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad518c3a-a206-40a2-b885-fec4c78796ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe06653-4afe-43da-8ad5-c69e0b222684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ba7513-ace5-422c-b670-5cf486317420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aac6b1c-0a5f-4ef6-8ddf-c9c6562c392f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8622ae-e216-4028-82de-05222092ce93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3411b51d-d6f1-4428-b099-2c592089fc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b41a241-caf1-4344-8400-e3aab47dfbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05837047-928a-492d-aadf-1d31f80ab240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3accd227-85d1-4098-8489-439e670a114b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0242b1f4-ad3f-4d68-a050-6abec44c92f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d84124-4793-432a-8d6b-146e24ac63b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab7f461-8780-4e1a-b05c-ba4fe15d7ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8602c2d0-75a8-4b1f-b328-365cb1b290e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8b7227-3e91-42d5-94a1-fc1ef28c46b2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c591a3d-c809-4d25-8217-a9e22943551d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba5d0bc-7cfd-428a-8d48-a17b316001a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a44e56-4939-4b33-9988-91683e656e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6925d1d2-488e-476d-8e14-c85ff0547023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2657f2c8-b0f8-4e9a-a4a8-9ba28efba707",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7332ef1a-cdf6-424e-95eb-a0890052f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc7c6ad-da33-4e8c-a5a9-9fe68205cbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219e138e-fa39-4787-95f8-b010ab8fcb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53720483-6a8b-44fc-b915-e7b3d1872ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6337173-f931-4512-9ea4-8e49179fba75",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fda1ee-5204-45f3-a256-3cef9b0c9b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b6a506-9db3-42de-a9e0-d1a6e3e9b823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71942e5c-24b1-4849-8add-2be31368193d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afc7278-f5c9-483b-a38f-6c4ba4abb369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ccf3bb-a2c7-48e8-99e5-ef06e6850224",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d16d1b7-26b2-422a-8844-ba55dceda575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9064640-2239-4564-aa65-48ee23774dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c687651a-7fe1-458c-bb20-6d80a84bb585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb215ca-1e6e-4bc7-a418-a1e624e70f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c82ef0c-a8e4-40a2-b0b0-3c3200d389a6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9602f11-65cf-452e-8c92-4be7e66c0bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52dce41-cfab-4622-af7f-615b840a30e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b193e6a-989e-4e41-8ba7-1cb7b885ce21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11b767d-f42d-42f0-9f0f-00f640c2db75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08858be-a9ee-463a-9d11-0768890820e8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2735e6b-aff3-4a32-8a23-72037d757672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee13c49-6e47-4bf6-995b-acdd23a9e858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e97bc0b-e0e1-42e2-9e6a-17b089fd92a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48df1ecb-8517-4239-b194-26dd8083f7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3470ea-6b89-4774-aa50-e5e74b4d07d6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b551191f-14ab-4168-89e6-9774545917ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6cc3b92-8cfe-4250-8e1b-991c1681c39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6bdcaf-caa6-42c7-8ba0-39d8aa1b2b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc4718e-cfea-4e42-9b70-c4b7edab01a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c9bbb8-ed3c-4dd8-9ff9-30805dae2194",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1284b467-a5e5-4699-b279-b3fdbfa907ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d036cb4-c2a0-444f-a71b-6490a0b44c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c13d6c9-b170-4eb7-b231-d6e3132b8beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f550e3-27c6-49fd-b4af-58bf574157e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68682b17-134b-40dd-8818-df22bcca9d50",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebe57d7-1041-4515-9551-9fa68c563171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58561c09-4f39-495c-ae3a-dc2b636736bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93205be2-a1da-409f-a975-5d4f94c1a107",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a447a0a-7c78-4842-95c2-7c7803edade6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9d3043-9b8c-4ab5-b8aa-4fb9af0167c2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02c979f-5c85-40a2-9899-7dd1058ae81f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178604e6-14ba-4bef-8971-6d41913dddae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1c546f-00bc-4fe9-8e49-00b9b6f795d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fab3cc-73f9-4d87-bd45-774c839f99ee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da0c8e01-cdce-478c-8134-b4dd89a1b961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11080dfa-2787-47a3-a504-0ca77e0853ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4246c77-a690-4623-b218-97880845369b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d4f44df-1eec-47a3-852f-d4a1363d00d9"
                    }
                  }
                ]
              },
              {
                "id": "66715b88-56fa-4387-8a38-936d82b42c16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc4b6c4a-e65f-4961-9432-e5bd44c55f98",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c5651a-4bec-4f86-9bb9-4915112355fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b8f5c1da-c03c-424c-93bf-cb915fbb23f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340be40-7c7e-4963-8e6f-99d773b2995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b431be97-c045-4aee-abee-c9a41e8a8001"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c743c1e5-8317-44cf-bddb-92fcbdb6818d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcfe4299-ea2b-4095-bf7a-5f3d43041171"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "040f3747-b7c6-4f0a-8e7d-5130e90ef07c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c7ae5b4-b218-43e3-884a-2281d01a92dc"
                    }
                  }
                ]
              },
              {
                "id": "d8d9ee4d-7dff-40f2-a6f3-ff524003787e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a858a409-f5f9-4ba8-9611-3d19119d43ed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e016969-4a07-4a45-b0f7-b80f48d07698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "db621a58-3d24-4bc4-be33-f0d0764d1e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4b8245-e02b-422b-a1c6-fc6e5255b4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20af4d9a-327f-4cdb-8904-afb785f66574"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c597f733-8300-4d67-93d9-e664c9a7c7aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8fdffd7-9005-4330-9234-2d588204f728",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7962becc-4d16-4dcd-9a11-0e183ae5b934",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a8d68796-1295-4ffe-a43c-4e580b04309a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c922c39f-a7f6-47fb-bdf1-ce9084ee5b84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31c78b2f-a1f9-4a0c-991e-4c3b297d47f7"
                    }
                  }
                ]
              },
              {
                "id": "f309628e-bdfb-45cb-a6a4-f67e49befa22",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc7b1540-12fd-446d-ab3e-46faca17da73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b73cf63b-196c-45ef-9dc3-1058ac0b0441"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e58b64ce-52c2-468a-92a6-2813311bfa41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af713162-b7d2-4559-a46a-6065c44109f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d97fed1c-2ba8-4a26-bfd8-af626d44f8ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a7af6a4-a16c-4a2c-a734-ea796e9186f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9bc0be0-746d-42f0-8038-8438f1528dfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1f4471e-e16b-481a-b076-c102938eaa07"
            }
          }
        ]
      },
      {
        "id": "f1125733-101b-42a7-bf7f-390756aa6695",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9edb8605-ec0d-4d0e-a761-179a25fb8ab4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6cd64a5-e377-43a7-a16f-6b186e0c3fe2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7353500-0be1-4147-9be3-1b7f58c66811",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34863fe2-0359-4721-aca0-f014f0ffa671",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fcc6a4d0-6603-4be2-bfaa-017523cce352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd4a274-d540-45e8-a3bd-3a86d11a600d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cd86438-3985-401e-bcf6-f1a0dac7d152"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c611730-1404-4abc-9096-6bd041543691",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50d3e009-18fe-49c7-8c73-15d5703ae8fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "113e5b92-6ebf-4884-b35f-e8337c96a08d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39d84e3c-2496-408a-aace-d449bed24c98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "696ea980-0190-441c-abfd-2a0e1e2e7324",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e07cf1fa-450a-4470-a68a-4e04158efee5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ba71620-60a8-4255-9cdd-d8d1db91bfc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e91fd35-60ec-4188-9683-a82255385b61"
            }
          }
        ]
      },
      {
        "id": "27e9529c-b570-4a42-aee3-45721907bf4e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a9aabfeb-1ac6-43ae-91ad-419e3195923c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37d062bb-cf75-4136-a90e-fa2111860b68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a747419-7398-4d2f-a559-10bffb297692",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d49b57-bb27-4ca2-aa97-124c1f98ec89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d7f16eb-50d3-4a4c-9274-fb276546f880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82c1790-ab25-4615-9d2f-20f73bd3fa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "228ccc07-8d7c-4daf-aae9-61a7d4c00c35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "797a95c8-4239-4a2d-8aaa-ca1ae35c96ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5305d4b-c501-4ce2-8928-cdb10bd5c024"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31c69cfc-2f81-4ef8-9598-b96d311b4de8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b44c7102-e339-4a81-bab6-c8be9916ef2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "446738a0-4131-4420-99af-f6373853dd05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0dfc3b3a-ac36-4a96-945d-f52c9f9b7117"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34ecb0a5-6a8b-48d0-b521-9c5c79eaea1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f85043f5-db28-438f-a5d3-f04c4225cab2"
            }
          }
        ]
      },
      {
        "id": "d2914d87-63b4-42b9-a66b-00e87f04e4ee",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "01322442-281a-4b54-bf6a-b7f680a71061",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7bd1814-784a-41da-aa51-29c2575bc9af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a02cba0-e52f-402a-ae8f-ec1ca15d242e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6271ac-bb1b-44c4-826d-ac45aea37319",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f4ee662-b73a-4cb0-8f43-db6ddbc1121b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76079041-9f08-4915-ac4c-f90dd8132bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daea7ae1-a13d-482a-88b9-b94bfcc20b7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38988ab8-cbde-4bec-99dc-375db2b73228",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f87ddda8-9292-4ce4-90ba-6155815d4665"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1916fd11-d778-4cf9-8882-303159abbd10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c19ebf75-f3ef-4238-9b43-0aee224b50d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc32e4d2-eb77-42c7-8f2b-804ca4e1b8db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd5b13b7-0b45-44c7-a156-123b539aa6d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8647385c-03e5-48c2-a157-124114c24697",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72cb2d83-2a94-4fc1-b19b-8028af3f0fd3"
            }
          }
        ]
      },
      {
        "id": "078a81f4-f153-4ea1-8360-22557309d241",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3c4d485-9b8c-4acb-afb8-1113b7a2fcf7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "387d4038-1130-4145-aa2d-09b6d7a42fd9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d34a1b62-6475-40f2-a4cb-6267175c16e2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "390f16b2-75d0-4f8b-be92-bf4919549fb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6defdfc0-321d-41d0-be31-373999127d40",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 139.78571428571422,
      "responseMin": 21,
      "responseMax": 10891,
      "responseSd": 717.0542928143852,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716597352961,
      "completed": 1716597396507
    },
    "executions": [
      {
        "id": "f7bcff4e-cfd2-427e-9776-95dceb64a0fb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7298ceba-e458-4b88-b4d3-bfdd8c9b796d",
          "httpRequestId": "d2a24f0a-2e21-4368-9e7c-a85cfd456f1a"
        },
        "item": {
          "id": "f7bcff4e-cfd2-427e-9776-95dceb64a0fb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9770af27-404d-4be9-96fd-d68d83a518e5",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "f3dd0794-7fd9-4c8c-a5c8-8b1b9a2ea8bb",
        "cursor": {
          "ref": "a6f26531-8398-41b9-9aac-a924256ba695",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "69036840-91b2-469e-b7af-914768ef8fba"
        },
        "item": {
          "id": "f3dd0794-7fd9-4c8c-a5c8-8b1b9a2ea8bb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c4b29c57-9b4b-43a4-b125-09498fa6b4bf",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "343dcb82-0138-4873-b0dd-b0eef11189d3",
        "cursor": {
          "ref": "327e9aed-e28e-4747-93ac-3e4f3b0eaa71",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fb30b167-bb6c-4d9d-99e5-066080c4dda5"
        },
        "item": {
          "id": "343dcb82-0138-4873-b0dd-b0eef11189d3",
          "name": "did_json"
        },
        "response": {
          "id": "4d01620b-093a-45b5-816c-ccd40a30479c",
          "status": "OK",
          "code": 200,
          "responseTime": 350,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaa28fe-4354-4b27-9b37-edda397dc4a8",
        "cursor": {
          "ref": "c0115d57-4c2d-4b5e-8215-25bae1cf07a0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cda9b691-0b12-46fe-b8a0-d0180420aebe"
        },
        "item": {
          "id": "adaa28fe-4354-4b27-9b37-edda397dc4a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "620250b2-6b7a-4af5-b1c5-9e97ccf100ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 456,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaa28fe-4354-4b27-9b37-edda397dc4a8",
        "cursor": {
          "ref": "c0115d57-4c2d-4b5e-8215-25bae1cf07a0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cda9b691-0b12-46fe-b8a0-d0180420aebe"
        },
        "item": {
          "id": "adaa28fe-4354-4b27-9b37-edda397dc4a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "620250b2-6b7a-4af5-b1c5-9e97ccf100ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 456,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bccc25-acdd-4108-82cc-533283395163",
        "cursor": {
          "ref": "d1189ed6-dbb9-4254-8d8c-4ad965aa91fd",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2a4f0d9d-7263-4781-b284-45f71a18ca10"
        },
        "item": {
          "id": "b1bccc25-acdd-4108-82cc-533283395163",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "edac7885-91c2-41e4-860b-e0c16090127e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3380d469-c1d2-43ef-aae5-49d493c70f19",
        "cursor": {
          "ref": "a9f607e6-3e5f-4455-90c1-5047283cc1f8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71d221f0-16ca-443e-971b-66e283215440"
        },
        "item": {
          "id": "3380d469-c1d2-43ef-aae5-49d493c70f19",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ba43566c-aac1-41d0-a715-a166df63a0da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 140,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad146d6-3e20-4c86-acf6-28c20c7911bc",
        "cursor": {
          "ref": "0574dbec-a24d-4740-b125-b3c325190e1a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0178adfe-1b15-4a9f-8e3b-0113a975f3d5"
        },
        "item": {
          "id": "7ad146d6-3e20-4c86-acf6-28c20c7911bc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ec6b1c7c-f95d-4297-8b5d-25d1d37f7b07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfb9346-b3d4-4526-a31f-509738894221",
        "cursor": {
          "ref": "6238690b-56c7-439c-abdf-6aaf2e6a2a41",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0122efa-4d10-4744-8ef3-83480527c6c2"
        },
        "item": {
          "id": "8bfb9346-b3d4-4526-a31f-509738894221",
          "name": "identifiers"
        },
        "response": {
          "id": "702d430a-be8c-44c8-8c46-d13cec4d189d",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4e7d25-71cf-4d9d-bdb1-9500cb9054d0",
        "cursor": {
          "ref": "d29713eb-fed8-4395-872e-ea7f0591f6e5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "040b6f75-4025-4865-96bc-23cea2a54079"
        },
        "item": {
          "id": "0d4e7d25-71cf-4d9d-bdb1-9500cb9054d0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1ad3d54c-cdf3-4977-9642-7d6de8ab79f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4afa647-ae3c-4f9a-a763-be1a913ae7f6",
        "cursor": {
          "ref": "9c1ed3a4-301f-4185-be66-1421ff64f482",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "31ea75de-feab-4ea5-9be4-85ed9460c23b"
        },
        "item": {
          "id": "b4afa647-ae3c-4f9a-a763-be1a913ae7f6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2ed2bd6-0f02-4445-ad29-6c9f2fe3b241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da89447-1429-4a64-a175-f04d5499636d",
        "cursor": {
          "ref": "db81ee97-f9b3-4a07-b4ba-17970ef9bf55",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "32c26eac-6cd6-419c-95e8-d0030cfe3cd3"
        },
        "item": {
          "id": "7da89447-1429-4a64-a175-f04d5499636d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "18acd0b2-9aa6-4853-99d5-33099de35b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdf03be-ff2c-4f4d-9cac-09e7bc0a4925",
        "cursor": {
          "ref": "16776e96-6b79-4a0f-9bf0-c7c6883ce471",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "625e50c1-3543-4281-93b9-3551a7d1d3fb"
        },
        "item": {
          "id": "4bdf03be-ff2c-4f4d-9cac-09e7bc0a4925",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f875b3e1-b68c-4b18-a9c1-998506ab2eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd935fcd-df6d-433f-ba1b-9154b3452674",
        "cursor": {
          "ref": "98dbf4f6-b7bb-4b16-9265-16bb3fc117f1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cd665011-c93e-47de-92f1-22fab44d3b8c"
        },
        "item": {
          "id": "cd935fcd-df6d-433f-ba1b-9154b3452674",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b42310fc-a742-43f2-86e9-4f15dc02460b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f288528-1ef8-49ba-893b-13ae9890c3be",
        "cursor": {
          "ref": "3e9c6eba-4090-4b90-b5f5-31e1bc051d80",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "26ded268-e112-427e-948b-6c8414ced625"
        },
        "item": {
          "id": "2f288528-1ef8-49ba-893b-13ae9890c3be",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "24e415b3-cbd8-4ae1-9aa8-33637ba89477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055f8492-38b0-42ac-8eae-aecc7e066f48",
        "cursor": {
          "ref": "316c57f0-caf2-4ad3-af55-a7387b828236",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d2e6c2db-a089-4e54-8daf-56d97dc26a1a"
        },
        "item": {
          "id": "055f8492-38b0-42ac-8eae-aecc7e066f48",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c424781b-a7fe-419b-a0ce-c0e4d9d40f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a4ddf6-a503-4215-b680-1295dc0e4683",
        "cursor": {
          "ref": "51439da7-6797-43e0-bd4d-12763c28140f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a7603794-70e0-4220-9ef2-8d079630119c"
        },
        "item": {
          "id": "72a4ddf6-a503-4215-b680-1295dc0e4683",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b508cfa8-2e5a-4ada-804f-b164dabc2a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13f79eb-67e3-4970-9c26-7b3c541b026f",
        "cursor": {
          "ref": "58a93cde-dff4-4636-bd7d-1a4a61a04781",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bb3bde90-adff-415f-864d-a470418012b7"
        },
        "item": {
          "id": "d13f79eb-67e3-4970-9c26-7b3c541b026f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "406b8772-5741-488c-bcd7-4b9538fac046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf3b940-090e-4096-9113-a956470df6cd",
        "cursor": {
          "ref": "47f41c33-cf5a-480e-bcdb-fa277b3bfa46",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7f872ac6-1cb5-43b5-a915-cefe8c213bdb"
        },
        "item": {
          "id": "9bf3b940-090e-4096-9113-a956470df6cd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3bfb4b77-6d82-480a-9369-f4a2e037b9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7810c8-f75b-4d66-a5c4-0d0722bc93ac",
        "cursor": {
          "ref": "1c464859-0600-4aed-b174-ef72c17f7bd7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "afaba3a7-bdcb-4ef0-be46-498239cc3c00"
        },
        "item": {
          "id": "6e7810c8-f75b-4d66-a5c4-0d0722bc93ac",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5f02c141-4049-46e2-825d-4a871278d5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb31e054-d332-4b1b-9255-4835df65e847",
        "cursor": {
          "ref": "f624d286-0698-46f5-9b94-2bf97aae004e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ade8fd45-92bc-45ad-9c98-1ad6c5c9925e"
        },
        "item": {
          "id": "fb31e054-d332-4b1b-9255-4835df65e847",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3cd8212e-9f75-4fd3-a773-0769c07294cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfb5728-4a8a-4cc7-b205-e6fd1f01fc7e",
        "cursor": {
          "ref": "5cf41890-9092-4dac-8ace-a36714211837",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e3d6b05f-5eef-4359-b159-7ea01cb4b388"
        },
        "item": {
          "id": "bbfb5728-4a8a-4cc7-b205-e6fd1f01fc7e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "85ef870c-1426-427c-be3f-98394b3685bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ebcd09-f411-46c4-9123-2a5bcef2f11a",
        "cursor": {
          "ref": "4e528039-9d8a-4c62-af89-53039ea6bf70",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eec9a50e-eadc-4077-b1d1-84962b91fc1f"
        },
        "item": {
          "id": "97ebcd09-f411-46c4-9123-2a5bcef2f11a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d368e421-003e-4de2-829f-94450a65caae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a70dfa-0767-4ec4-8f60-30adda5ffcb0",
        "cursor": {
          "ref": "9c07937f-3612-4917-acbb-0a483e57905e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5d582d3c-4fb4-48e1-b8d1-624a37dcabe9"
        },
        "item": {
          "id": "76a70dfa-0767-4ec4-8f60-30adda5ffcb0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3b2786a8-33ed-4dfc-a2ec-021a7810e1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3d2bcf-fe43-4059-965d-a1256735179b",
        "cursor": {
          "ref": "09f256bb-89b9-449e-8d1b-f5a884fd033f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "332810ff-efc8-4c75-8a9b-9890f7a2d0df"
        },
        "item": {
          "id": "ed3d2bcf-fe43-4059-965d-a1256735179b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d56ecfe6-0cfe-480d-a63e-45190d1769e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9cb6ff-c8bd-4128-b068-fa40d4b732e5",
        "cursor": {
          "ref": "3ebe1250-25e2-453a-a349-978385ff6d62",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3bf5c3aa-4018-438d-804d-fc735be87e2e"
        },
        "item": {
          "id": "4f9cb6ff-c8bd-4128-b068-fa40d4b732e5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7d3a7b81-dd5c-47d3-8049-06050cf38768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8a3b24-f1ba-4ff4-aae0-1b44aec61cb6",
        "cursor": {
          "ref": "e7dce364-41ac-4877-bd67-1bb73a2c3fb7",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "37004434-8aae-46ae-958e-f1a68eb63226"
        },
        "item": {
          "id": "3c8a3b24-f1ba-4ff4-aae0-1b44aec61cb6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6b540458-fbaa-423b-a98e-dbc763dfb173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8f614c-3a42-4944-8466-d39cc0a956bc",
        "cursor": {
          "ref": "0240ca6f-f852-4d66-acfb-447ab80427e5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f0c599da-5ce7-4be6-a432-615b45dd4255"
        },
        "item": {
          "id": "fe8f614c-3a42-4944-8466-d39cc0a956bc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1188c44b-1df3-49c0-91a2-9301229d8f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413bfd8a-903f-47bd-b940-cad6ea408816",
        "cursor": {
          "ref": "863dd51c-c918-42f4-9981-5751b91339e9",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b38d8100-571f-44df-ad21-96f8f93a013e"
        },
        "item": {
          "id": "413bfd8a-903f-47bd-b940-cad6ea408816",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a1ab7e72-f177-49be-87e8-54e56730db34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8b1422-d83d-4b54-b9b7-722004ad4c0b",
        "cursor": {
          "ref": "2d231690-3d04-4f4a-b7ad-d97f9c2b79b0",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fecc5db5-a831-4927-ade6-f9c87a791656"
        },
        "item": {
          "id": "7d8b1422-d83d-4b54-b9b7-722004ad4c0b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fd296bec-1c62-4225-83a1-d30a09b83811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0ef3ea-ba18-42e8-baf1-10f7b10f738c",
        "cursor": {
          "ref": "76d880af-0b80-4b36-85a4-0ff9001297a6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ca714f1-b668-4cce-83a1-c193fe318801"
        },
        "item": {
          "id": "4d0ef3ea-ba18-42e8-baf1-10f7b10f738c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "af5b9c22-323a-4956-972b-ef23e2ab0880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f93a0d9-baf9-4c20-b7b0-293ec6034c7d",
        "cursor": {
          "ref": "c9267a57-1a00-4269-8a5a-8ad5268c5e04",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f4b37c27-2b18-4ce4-91c0-28cbd589b7ac"
        },
        "item": {
          "id": "9f93a0d9-baf9-4c20-b7b0-293ec6034c7d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b47de427-60fc-46be-a0c2-ddf253ce06ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2104d3d8-66c7-4aa8-aa6f-301d14edef6d",
        "cursor": {
          "ref": "90e29667-bbe1-4a63-af68-673b10a099b5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e9625d53-d73c-4193-818f-d0c90993fabf"
        },
        "item": {
          "id": "2104d3d8-66c7-4aa8-aa6f-301d14edef6d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6d3f291c-55eb-43d0-953c-5413409f74e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84a6edf-7b09-4bad-ac85-cf7d9aa7abb7",
        "cursor": {
          "ref": "1415d488-737f-4850-a522-4e9d8dffcb95",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8fc54f6f-fa9c-480c-8a40-b9892e97e13c"
        },
        "item": {
          "id": "a84a6edf-7b09-4bad-ac85-cf7d9aa7abb7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "de80cc4c-7687-4441-8e62-39c078158285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4797380-4956-4665-b9c1-acfef3b9d2b5",
        "cursor": {
          "ref": "efb1e265-c052-48f8-b916-a0b08d5e634a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "81cda0c7-318d-414b-8e50-29bb4f45e2b9"
        },
        "item": {
          "id": "e4797380-4956-4665-b9c1-acfef3b9d2b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "140bfc2a-aeb1-465b-90d4-50485afb7e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66aab67-a5dc-47ea-bd2d-ee7ec441213b",
        "cursor": {
          "ref": "6c16816e-dd9a-4eee-ba22-990f0b0dc82c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "41b8a57f-2532-4ae9-aeb6-d676c08289c7"
        },
        "item": {
          "id": "a66aab67-a5dc-47ea-bd2d-ee7ec441213b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6ed77bdd-6217-40f0-ba69-0b169d3c35a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b02f33-c939-4b70-b3a1-ae44eed4b369",
        "cursor": {
          "ref": "b65f25a3-af86-4195-8f65-b2e75be63139",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bfc8944f-18c1-4413-a33e-4ca348b99cfb"
        },
        "item": {
          "id": "99b02f33-c939-4b70-b3a1-ae44eed4b369",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "22ae21fb-2fd0-4084-836b-38bb6d5c76c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f87634d-d876-4f0e-97cf-af2f0b1b14c5",
        "cursor": {
          "ref": "4f886993-fa92-40a4-b304-7a5751f5f78b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c45fab04-2542-499e-bfe5-34fa01d1723c"
        },
        "item": {
          "id": "3f87634d-d876-4f0e-97cf-af2f0b1b14c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "988b1c4c-a5a7-434f-974d-2427d50e5b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2d3870-177d-42ef-b807-b6f5c1cf2420",
        "cursor": {
          "ref": "96969829-f8c2-4b11-abf3-82543885f06a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "90be6f71-8109-4ae1-b75a-a42de4a372df"
        },
        "item": {
          "id": "2f2d3870-177d-42ef-b807-b6f5c1cf2420",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ae72277a-18b4-494f-ba85-0a8535bda138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5febb900-5dc6-448e-b8ae-f969a80a0fe0",
        "cursor": {
          "ref": "0ce47f6e-ab41-4e11-8efb-21d79da28bb3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6a6809d9-9a76-4b5a-b2aa-ddc422725b6e"
        },
        "item": {
          "id": "5febb900-5dc6-448e-b8ae-f969a80a0fe0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ae8dbef0-0a08-46b6-ba65-e932b723723c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9e1b08-3cf2-470d-a798-d576a1e912d7",
        "cursor": {
          "ref": "53ee9e34-73e4-4d07-8581-6fd1b9c456ba",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "54e4c8ab-97ec-45ee-a763-08b9b6fc7510"
        },
        "item": {
          "id": "7e9e1b08-3cf2-470d-a798-d576a1e912d7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "548eee41-6fbb-4ffc-9566-9ba4f5672468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3487ddeb-c8d0-4f07-91ef-e80e29aff101",
        "cursor": {
          "ref": "a84e1fea-e63d-4648-928f-537fa8e6e683",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6b4d72f8-d8be-4337-a431-e590e738807d"
        },
        "item": {
          "id": "3487ddeb-c8d0-4f07-91ef-e80e29aff101",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a80f1bbc-8668-4b8d-8873-817c47fce5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2be448-0674-4868-bced-215cdb5810f0",
        "cursor": {
          "ref": "58603f53-4995-42c8-8fe7-5b15619d238b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d1934269-04a7-4100-8d07-a8025fc898fa"
        },
        "item": {
          "id": "aa2be448-0674-4868-bced-215cdb5810f0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a28b4b9f-765f-4998-94d4-e0341f16c84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a256460c-e162-4faa-a825-72c8967c0e98",
        "cursor": {
          "ref": "2e3162ae-0257-46d0-93a9-814dfdc0885e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ff515495-d1d5-4ce7-b6e3-a96e53baf06b"
        },
        "item": {
          "id": "a256460c-e162-4faa-a825-72c8967c0e98",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b71e59e0-7f49-448c-a5f3-31307715696f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011566d0-ff17-40ca-abc5-da57bcc59cd1",
        "cursor": {
          "ref": "1132fcc3-f6cd-4b72-a451-5428068813c1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c343d135-d83e-4755-9490-7f370ff714fb"
        },
        "item": {
          "id": "011566d0-ff17-40ca-abc5-da57bcc59cd1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "38941f2a-36f6-4e3c-b347-00d2bf8d883b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01490250-c764-459a-9daf-8f18a7450783",
        "cursor": {
          "ref": "ebb14bce-a6b4-42cd-9857-e9bf178a4e92",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9a12aa4-fdb3-412e-ab9d-1b63c3212174"
        },
        "item": {
          "id": "01490250-c764-459a-9daf-8f18a7450783",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d3acd88c-cabb-478a-9b6d-a6bdf10ce506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8237c2f-1435-4804-adde-aa512c2b0487",
        "cursor": {
          "ref": "5276378d-2d7c-4dcc-97db-138c85da6092",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7c82c20d-5744-4db1-85b4-cd4592e05713"
        },
        "item": {
          "id": "b8237c2f-1435-4804-adde-aa512c2b0487",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "74b4bbbc-8c22-4335-8f70-a2d8ca2fda0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0b512c-60a1-4dae-8d04-6c3f3a971c39",
        "cursor": {
          "ref": "71d3da89-bd63-47b3-b7f1-3a0bf715dd37",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7a6e6dde-7c4a-49b6-b6ba-50524a503132"
        },
        "item": {
          "id": "da0b512c-60a1-4dae-8d04-6c3f3a971c39",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "55eb2721-85d2-472a-9357-e03779438e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6bb199-7cc5-4ee6-b230-ff1967ba5629",
        "cursor": {
          "ref": "367675dd-9eb5-4032-b0c3-0c0341738529",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c8560b6a-5f3f-464f-a95c-8321650257ed"
        },
        "item": {
          "id": "ae6bb199-7cc5-4ee6-b230-ff1967ba5629",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0263b34f-6386-49fb-a565-d0cbd7035a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bb97f1-3cf9-47d7-916f-4e36072809a6",
        "cursor": {
          "ref": "4d560e68-22c7-4ca4-8926-dc3406803261",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "af0846a9-e833-43f3-8a84-05c3dad1970b"
        },
        "item": {
          "id": "c7bb97f1-3cf9-47d7-916f-4e36072809a6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "97816f8d-3dce-4718-9f6f-70b9f9df7920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5396d9-9b26-4a59-a74a-bfdde5eeb48c",
        "cursor": {
          "ref": "ff437cba-3ef2-4bf9-ae82-e433fc0e2df6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7df7f4e9-c4a3-444f-a782-e739e016147f"
        },
        "item": {
          "id": "2d5396d9-9b26-4a59-a74a-bfdde5eeb48c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "84e28dbf-f104-4573-8965-730f180fde3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3591f9ce-d582-4886-a427-605150369f85",
        "cursor": {
          "ref": "94310cbf-f181-4442-a278-a9582220114a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "84fa1f15-c62c-497c-8191-ede0f3bd2e2f"
        },
        "item": {
          "id": "3591f9ce-d582-4886-a427-605150369f85",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bbe1858e-5820-4b78-a339-06b33422cdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba68611-7761-4d58-b706-dc2a19bc3afb",
        "cursor": {
          "ref": "c2a446af-9887-44e3-acfe-e192490f1dee",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f5409b3c-6934-43ca-ad43-67ec80927319"
        },
        "item": {
          "id": "aba68611-7761-4d58-b706-dc2a19bc3afb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0451c972-5572-42d3-81e9-25289c6544ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e045e241-00df-42af-8ea5-8c4e4ac0e711",
        "cursor": {
          "ref": "759efeca-4038-4168-8199-08798e26d9ff",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e8728921-a3ea-4109-a17f-364a80031880"
        },
        "item": {
          "id": "e045e241-00df-42af-8ea5-8c4e4ac0e711",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0c4f7ce1-1e8f-48e5-ab06-b0168b8fc247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bdb481-ba2a-4083-bc42-ddc5fa79c0c0",
        "cursor": {
          "ref": "5414fbe8-8a9f-465e-b78b-be8019e63685",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a98001d4-6059-425d-a0db-699b7f823832"
        },
        "item": {
          "id": "60bdb481-ba2a-4083-bc42-ddc5fa79c0c0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "07873157-e9fb-43ff-9a85-1239ee11d799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9135e4d-5a7f-4ed2-a234-8603e28598fc",
        "cursor": {
          "ref": "85fb4760-0e43-48f2-b57a-2bd040480490",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b1159a08-b733-426f-b373-0dd828627cd1"
        },
        "item": {
          "id": "b9135e4d-5a7f-4ed2-a234-8603e28598fc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f02f37a8-7932-4dd0-aeee-b62762a179a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b5c2b2-7b26-4ba8-ad02-f96f3435096c",
        "cursor": {
          "ref": "a9dc658d-588d-4862-ac25-25dc9fa7c9bf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "23d8c312-ce22-4ae2-8a6c-0a2ec37132e3"
        },
        "item": {
          "id": "18b5c2b2-7b26-4ba8-ad02-f96f3435096c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fd6f66a9-6a29-40af-8b0f-46e60d18de9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb553cda-fbc9-41be-b557-878f3c985227",
        "cursor": {
          "ref": "91cc1bd8-f50b-4c40-8447-0bd8337fed18",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f353b69b-d775-4bfe-bab7-3d9e3e23689a"
        },
        "item": {
          "id": "eb553cda-fbc9-41be-b557-878f3c985227",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f56356d5-e58a-42c5-8021-b0a22b45c04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e64cf0-1bf2-413a-8d55-1168cf374de9",
        "cursor": {
          "ref": "39276542-d90b-4cb1-b7cd-ef6df256ad01",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aaad29d9-7735-47fe-af14-5fd76adcd200"
        },
        "item": {
          "id": "99e64cf0-1bf2-413a-8d55-1168cf374de9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "86178cd3-5aaa-4886-af55-29336a84f554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a372c641-51d3-4129-a378-1235fa1e1208",
        "cursor": {
          "ref": "e5dc8373-3e2f-4963-a82d-638e586d607f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "410c8a91-e1f7-4f38-8306-282a192afcbf"
        },
        "item": {
          "id": "a372c641-51d3-4129-a378-1235fa1e1208",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "96033bc9-75ad-4b85-afe1-2e281b65e5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3f340d-30e5-4abe-8f8c-43aaee31558b",
        "cursor": {
          "ref": "7177241c-4a22-48a9-8f53-cb46acf48cfd",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e781f5fe-1cbc-4005-a343-115add7a942a"
        },
        "item": {
          "id": "4a3f340d-30e5-4abe-8f8c-43aaee31558b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b6759994-fbfb-4278-b134-e84493d5dde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205fa3d9-d3ce-4111-b4f9-b207c4a34ee9",
        "cursor": {
          "ref": "99db057a-c698-4264-b775-1e8165858d9e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cba74038-10a7-4a86-9dd9-fc697d01b762"
        },
        "item": {
          "id": "205fa3d9-d3ce-4111-b4f9-b207c4a34ee9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c2f24593-0f35-4084-84ef-082dee92860a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91500390-9d10-4f23-a51b-417a9f897e7e",
        "cursor": {
          "ref": "1bdbde2b-413b-498a-9628-f3bcf8775ec6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "40b4a7be-0d3f-478f-8b14-bb0781f4a9b3"
        },
        "item": {
          "id": "91500390-9d10-4f23-a51b-417a9f897e7e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1a697615-3d29-4234-9ed0-13c64e1b9d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a107e1d-6add-4f60-bdca-655bf64cd2c6",
        "cursor": {
          "ref": "18f048e4-f91d-402c-b400-2dbd069b099a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "57ff6011-5704-43bc-b0ab-0ca100a2405a"
        },
        "item": {
          "id": "0a107e1d-6add-4f60-bdca-655bf64cd2c6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "22af9c7c-df73-4558-a550-58ec72828ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8a7009-3602-46c0-ab60-dd0c7391badc",
        "cursor": {
          "ref": "62369e04-fe9a-4037-99fb-cdabc4ebcd91",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e9dcab14-2843-4fc1-9228-91e5e4dd9139"
        },
        "item": {
          "id": "ef8a7009-3602-46c0-ab60-dd0c7391badc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6514caf8-3c12-438a-9996-cb8b240a9856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420bf3e5-b2c6-4689-9788-01c15709a4c5",
        "cursor": {
          "ref": "e4c78ae0-564c-49af-9fc3-ffa7033247da",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9805c4cd-0957-4a0b-a049-098e31bd98ae"
        },
        "item": {
          "id": "420bf3e5-b2c6-4689-9788-01c15709a4c5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "29d261d8-8eaf-4093-8318-ecc42ba5a359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54487655-edeb-46b7-a5fd-02af17d7048b",
        "cursor": {
          "ref": "217930a7-a27c-4326-a308-c0bff798b25b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fb1b5c49-6415-4ec7-98de-4cd03c4c7ffc"
        },
        "item": {
          "id": "54487655-edeb-46b7-a5fd-02af17d7048b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7af76a5d-76ef-4549-a5b1-8687be099461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9751e1-6d10-42b8-a3d1-29e18c3e45ca",
        "cursor": {
          "ref": "1e4d6829-9435-4ab1-a24e-eb4bd3506c46",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0e569b96-8756-40a0-a7ff-e54877a42679"
        },
        "item": {
          "id": "1c9751e1-6d10-42b8-a3d1-29e18c3e45ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7863d270-688a-4dc4-87c4-661967e72bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8368f838-17b7-4465-8402-61530cb2106f",
        "cursor": {
          "ref": "b735c8fd-b799-4dd9-8e66-20141ec99bde",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16ad90d9-cf45-46f8-8474-357526f1d7ad"
        },
        "item": {
          "id": "8368f838-17b7-4465-8402-61530cb2106f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "24c8fdd8-c249-4ca4-89f5-312592db6be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e27670-1642-47a0-b4b0-f7f1242d9f57",
        "cursor": {
          "ref": "2d5005e4-61c0-41c1-8997-933dc04c1a39",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "20cbd3b7-d493-4fef-8f65-6fc036ea2691"
        },
        "item": {
          "id": "e5e27670-1642-47a0-b4b0-f7f1242d9f57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "00efeda9-1c09-4652-b6ea-eb34a3dedf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60139ab3-2421-437f-ad6a-605de0044f54",
        "cursor": {
          "ref": "e5470348-bfb0-4cbc-b815-d22868611bfc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b8a3e535-ce82-4a82-b756-1ef5f84c62c3"
        },
        "item": {
          "id": "60139ab3-2421-437f-ad6a-605de0044f54",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "beae8c94-371f-4c53-89eb-db08dc7d39cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e64af0-dbeb-43cf-9a57-dac62342b246",
        "cursor": {
          "ref": "ecebb8a5-34f7-4b62-abcb-b912606a9e81",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2f60fb6f-0b40-4093-94da-f12c9c62f4d4"
        },
        "item": {
          "id": "59e64af0-dbeb-43cf-9a57-dac62342b246",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4c65030c-3ced-4964-a742-40a88d517fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b9975e-2adb-4764-838c-a6981ed7e7d4",
        "cursor": {
          "ref": "61619d52-f385-49d4-9379-6a9b82572369",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "029c0658-d450-45d1-9d48-f3f3713e70b6"
        },
        "item": {
          "id": "b8b9975e-2adb-4764-838c-a6981ed7e7d4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e821b9cc-612f-43ac-9718-769ea231bed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161d5907-9a2e-44a1-94b1-4c801320fba9",
        "cursor": {
          "ref": "e9e1a674-31d4-4925-8e2b-fd4cd11cfb73",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e3bb8539-75ad-450e-82bf-9cb82d3dc920"
        },
        "item": {
          "id": "161d5907-9a2e-44a1-94b1-4c801320fba9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "87c552df-f999-4398-a6dd-2fca8819feba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12ad598-06cc-4062-baa5-dd1927e72386",
        "cursor": {
          "ref": "eeecb4fb-2d3f-43be-85f8-c33af48a219e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4a977b9e-bf9c-46e9-b575-3e9914f23a83"
        },
        "item": {
          "id": "c12ad598-06cc-4062-baa5-dd1927e72386",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "50f15743-7fd1-4799-aa2e-eded26148eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9daedd4-f52a-4c29-9298-c3c4f7adf2b2",
        "cursor": {
          "ref": "20f2e6c8-c201-4608-a7e4-e5d5a3811e84",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "52005777-d4f1-4519-8046-5ebbd145a199"
        },
        "item": {
          "id": "c9daedd4-f52a-4c29-9298-c3c4f7adf2b2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5fe7d0ac-c0ed-4fd0-860e-a3aae6cad66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651f921e-1748-4dc3-adef-bd1ff4ed1f59",
        "cursor": {
          "ref": "24dad13f-0406-4f78-9f9f-a87ef5ab6e74",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "58e1c989-982f-48a6-b0fa-ecbab4aa607b"
        },
        "item": {
          "id": "651f921e-1748-4dc3-adef-bd1ff4ed1f59",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f1ff3f4b-39b1-4579-94dd-bae3b245ad0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b80585-9e86-453d-afbb-698701a3e63b",
        "cursor": {
          "ref": "57bd71d8-b954-44ca-b593-ea3ae5757a8a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "38c3ecca-28ba-4b8e-bcaf-faf8c67e09ca"
        },
        "item": {
          "id": "43b80585-9e86-453d-afbb-698701a3e63b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "78710861-c8fb-4aef-ab97-33235fce33f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb49e20-8b12-400a-bb62-618296be6073",
        "cursor": {
          "ref": "6aba882e-80a7-4ae9-9eaf-7946ab7d0829",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ea4ef9f8-9fb5-402f-a7b8-fc380a406381"
        },
        "item": {
          "id": "feb49e20-8b12-400a-bb62-618296be6073",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f4aef23c-e2e4-46a7-b7ea-f9b3f69a7aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fbb33c-8d97-473d-b398-173d75b8de43",
        "cursor": {
          "ref": "c13072c5-33a3-4ab9-8fb1-eb92718538f8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d6f1adbd-4260-41d0-9bf8-e0503313b64f"
        },
        "item": {
          "id": "39fbb33c-8d97-473d-b398-173d75b8de43",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c060508a-7f5b-4068-934a-e3e010106797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a4ea24-897c-4ffd-8a29-239fc51d5101",
        "cursor": {
          "ref": "95f6c4d0-d7ed-4b60-8753-453a4aa53655",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c3eba162-2a41-4516-aeea-c01f2a9a1f49"
        },
        "item": {
          "id": "d4a4ea24-897c-4ffd-8a29-239fc51d5101",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d237dccb-3797-4613-92d3-4b2aaf6cca30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edffd3fc-b076-4a7a-99fc-4a4839723a94",
        "cursor": {
          "ref": "51874fbb-d456-44af-8663-d6248adaf384",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1d60d7f5-b3ea-436b-910f-89f3347754db"
        },
        "item": {
          "id": "edffd3fc-b076-4a7a-99fc-4a4839723a94",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e9c1f3e0-4ac6-40b5-8254-b37568e82857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3b3ca7-460f-436b-8698-a042c6d8e496",
        "cursor": {
          "ref": "180bcafe-75e8-42d5-954c-f0031e7e7589",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dc3ef008-58b1-448c-b581-c6c25db05f2f"
        },
        "item": {
          "id": "8c3b3ca7-460f-436b-8698-a042c6d8e496",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "23a6512e-a854-4d61-a191-312b68222286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d14c033-e375-4609-8fa4-71ec7bed5fc5",
        "cursor": {
          "ref": "114146f5-0be0-4658-b737-fe83eb685544",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ac06c1d8-a954-4b30-a858-060095262c70"
        },
        "item": {
          "id": "7d14c033-e375-4609-8fa4-71ec7bed5fc5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c6833974-ac5c-403b-8e93-edd7a92b5689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd1e0bd-62bc-4697-aa13-2b223e0d7979",
        "cursor": {
          "ref": "85c1c403-4c4d-406c-8b93-6ee0b9f921bc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1c7c9962-688d-4683-9c36-b024cbf05245"
        },
        "item": {
          "id": "3cd1e0bd-62bc-4697-aa13-2b223e0d7979",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "48f633d0-a0ae-4cf4-9e5f-ef1285f184f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb64105-18b0-4d69-9cb3-b3777b29c120",
        "cursor": {
          "ref": "d8ce9df6-8a71-474a-8124-260675be959d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "690cc1de-052d-45e9-8623-b82a79749ecb"
        },
        "item": {
          "id": "deb64105-18b0-4d69-9cb3-b3777b29c120",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cc7f539d-db56-4d84-acef-be361c698ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50da225-97cb-403c-9630-b073f8ac3914",
        "cursor": {
          "ref": "786fe480-6659-4562-a23f-bbc47e8a8c03",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "39099693-3e6c-44ee-8134-37265f918b3f"
        },
        "item": {
          "id": "a50da225-97cb-403c-9630-b073f8ac3914",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3544ca1e-5728-4524-bd88-d0d143a105d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6716d4b4-8158-44e2-9068-63e150f30c0b",
        "cursor": {
          "ref": "fe2d2bdf-9a73-4a50-ac2c-38fc1d4ffbb1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5107cc0a-e582-45fa-a288-32f01f8aa338"
        },
        "item": {
          "id": "6716d4b4-8158-44e2-9068-63e150f30c0b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "39488418-9fde-4899-9f84-f4ff0ec68c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f116bff-05a0-4c3d-907a-72be4f18acbd",
        "cursor": {
          "ref": "3b175a1e-2595-4afb-bb3d-55bb84a7894d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "039c286c-bf7f-498c-8592-ad4e9b3004d3"
        },
        "item": {
          "id": "2f116bff-05a0-4c3d-907a-72be4f18acbd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "15c06afe-2404-4b36-bb16-27fa104a727c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332cc6c9-5efb-409d-a8cf-7c043635f48c",
        "cursor": {
          "ref": "5ad407a1-78d0-47a8-956b-ca9f9e937e41",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "16ce7474-e083-4ce8-80dd-9d3b16f72fc2"
        },
        "item": {
          "id": "332cc6c9-5efb-409d-a8cf-7c043635f48c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e89858ea-871c-43ad-b6d3-805d2d206066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292760c7-034a-42e5-999a-67ee9c520ea7",
        "cursor": {
          "ref": "66801d25-e30e-4623-b7ef-9490fc34dd40",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "94dd6928-3c5d-4f08-b6ca-4f6aa737e5ba"
        },
        "item": {
          "id": "292760c7-034a-42e5-999a-67ee9c520ea7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4f5f45b4-1a14-4d9e-b2aa-569ce3faa6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a2e549-91a1-4e58-bef2-591d92a7e767",
        "cursor": {
          "ref": "ab22f255-4880-476b-abab-d05c6a0a56f2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "45a93b17-3bf3-461f-bd10-407cec6ac42f"
        },
        "item": {
          "id": "71a2e549-91a1-4e58-bef2-591d92a7e767",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "81c4b2a6-87eb-462e-aef9-9444e7a69887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12f3157-8e8a-436d-9f6e-eca96b47b31a",
        "cursor": {
          "ref": "270c550b-4d9c-4764-a5d9-9b85b0e5c677",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "30152ae3-6429-415b-b053-a97d4c120143"
        },
        "item": {
          "id": "d12f3157-8e8a-436d-9f6e-eca96b47b31a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2bdee948-ee6e-4e08-854e-471cc8445372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2fd2ea-d262-4ef5-b6bc-742cc1a4c039",
        "cursor": {
          "ref": "2471859d-703a-4c7d-90e8-d647ba187393",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "30168227-5e8d-4243-a6ef-cf06524ae19e"
        },
        "item": {
          "id": "ab2fd2ea-d262-4ef5-b6bc-742cc1a4c039",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ae919774-5cd0-4cb1-ae1d-fd6349622327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d5c152-f4aa-4e55-bd4b-ab56f9808917",
        "cursor": {
          "ref": "7a0f65e1-e085-4196-a353-111a48f940fd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "48531c48-36be-4d6a-ad01-9b3103ca8531"
        },
        "item": {
          "id": "79d5c152-f4aa-4e55-bd4b-ab56f9808917",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "98c37f6f-440a-4798-bf0a-c65c6fc07036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef178715-0a60-45b9-95b0-8d4300b5f77a",
        "cursor": {
          "ref": "68edcb78-82a0-4636-850c-c556c051bef1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2f5a4467-72f9-4c21-8f4f-4b7af0eb8b79"
        },
        "item": {
          "id": "ef178715-0a60-45b9-95b0-8d4300b5f77a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "91d30228-70eb-4d34-8e2d-450e97f3fc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46379ccb-e23b-477f-8d5d-70f0b3d84137",
        "cursor": {
          "ref": "163c3202-121d-48ee-8de7-43d7ae4d66f3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dc3d67db-5b1b-461c-8f0c-52f6dcbfbc64"
        },
        "item": {
          "id": "46379ccb-e23b-477f-8d5d-70f0b3d84137",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c47dbb6d-e415-4c8d-b52f-e873830e3dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511ffc4-dd60-40d2-95d7-3eed0482e785",
        "cursor": {
          "ref": "c8404321-7cf8-42c3-a730-2808dc1da039",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d9461aeb-8f96-49ff-953a-d264cab5d93b"
        },
        "item": {
          "id": "c511ffc4-dd60-40d2-95d7-3eed0482e785",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "670ca5e7-2fb9-4abf-9921-72f1ea18cdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcabf19a-3ba8-4b26-8609-e506d7805263",
        "cursor": {
          "ref": "f6d4989c-aff7-4e86-915d-d24715f6dc7e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "309977ed-9d7a-49da-8c92-90e77b16799f"
        },
        "item": {
          "id": "dcabf19a-3ba8-4b26-8609-e506d7805263",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a989af0f-eb51-407f-bfb9-033fde275eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5435ea79-2961-4d68-b600-91017e70e87e",
        "cursor": {
          "ref": "787bbea0-d0ba-4536-b50d-953922f32cc9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6e5cb275-a959-420c-b29f-e1a39b93f68e"
        },
        "item": {
          "id": "5435ea79-2961-4d68-b600-91017e70e87e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b01d27b2-6442-41a4-8dcf-772cc4f8aa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e4fea5-9d23-47ea-a262-c26a1940f35d",
        "cursor": {
          "ref": "cd935ac0-d19e-4f66-843a-ec2c4a82d665",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "22d1f050-ae94-41df-834b-0a1aaf99c760"
        },
        "item": {
          "id": "a0e4fea5-9d23-47ea-a262-c26a1940f35d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e7351f6a-d5c8-40e2-a16b-c6b533b7e467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7968bc2b-5b69-4577-b000-c284de9bce08",
        "cursor": {
          "ref": "6dc25da4-16f5-40f8-a572-d1f1472f1f79",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "67015eee-910b-4789-982a-05d9b908dba9"
        },
        "item": {
          "id": "7968bc2b-5b69-4577-b000-c284de9bce08",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aa069351-f91d-4aa1-a862-102d54aa2fcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0900be4f-53d1-41ff-8bc2-7747c52c236e",
        "cursor": {
          "ref": "4edf67f3-d96a-4491-8a0e-68dc3d02bdd0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1cf4e02c-b82a-4b54-962d-75b8450d9910"
        },
        "item": {
          "id": "0900be4f-53d1-41ff-8bc2-7747c52c236e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "998f39b8-07ea-4f7a-8744-6b06f045f0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "da34bfde-a04f-4180-aaab-9dc48af8068c",
        "cursor": {
          "ref": "332b9fe7-5f8f-4e08-a920-d3beeaaf2fff",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4a8dd768-4790-4797-bde0-6420616804f5"
        },
        "item": {
          "id": "da34bfde-a04f-4180-aaab-9dc48af8068c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2398ed0b-c182-408e-93c5-8c099a245073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dade3288-cb1b-42d9-b45b-0b7c22210a77",
        "cursor": {
          "ref": "b401412c-8b01-4e2c-90be-826b0ecef969",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a0cd6d06-c0aa-48ee-a2bc-505b3bd9a97e"
        },
        "item": {
          "id": "dade3288-cb1b-42d9-b45b-0b7c22210a77",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5e6bbaa6-028b-43c0-a8e8-57166061508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2c69e031-6b7a-4ff2-bc07-c1579e721a57",
        "cursor": {
          "ref": "42e7f14c-0d39-4c43-8ae9-32a1f87a11e8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d125a144-885c-4eed-8f04-13295389e4ff"
        },
        "item": {
          "id": "2c69e031-6b7a-4ff2-bc07-c1579e721a57",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "360943e1-cdc2-4943-8cde-7a83c9687d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "321b664f-5839-4b1b-bb4d-39f8eeb14273",
        "cursor": {
          "ref": "58d98028-cf5c-4197-9bc4-133b4fa4e365",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dffeef19-4a01-48c0-a202-f6401fbede1d"
        },
        "item": {
          "id": "321b664f-5839-4b1b-bb4d-39f8eeb14273",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6aafe700-2614-4d73-a706-61f98d2fc438",
          "status": "Created",
          "code": 201,
          "responseTime": 10891,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4fe7f6-be87-46c2-902b-e6dfe4bb3c9d",
        "cursor": {
          "ref": "60cc59e8-b4c4-479c-8a16-85e01ed7f2e6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c8284398-01b4-4134-afd5-7317a4023135"
        },
        "item": {
          "id": "2c4fe7f6-be87-46c2-902b-e6dfe4bb3c9d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "068284f0-3a02-4ee7-8d7b-7c5a70e7042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "37802a6f-99ea-4c5c-91d0-2d0a747a6748",
        "cursor": {
          "ref": "96122a27-3583-4fe8-a94c-6708d4ab98a8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0446a630-339d-4c9e-95ee-6d2f28a3944b"
        },
        "item": {
          "id": "37802a6f-99ea-4c5c-91d0-2d0a747a6748",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ed67622c-c93e-4c19-b207-fd218dd4ecb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "68930d6d-6b8e-4d99-b59b-087e5e514af3",
        "cursor": {
          "ref": "bfe264a9-70a2-4ce0-9021-711efcee5b17",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "428e1193-71f7-46c9-873f-3dd2c6a7ee7a"
        },
        "item": {
          "id": "68930d6d-6b8e-4d99-b59b-087e5e514af3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1e70c64b-b929-4b1c-83f2-d86e5bdff812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20846ea7-1ff4-4e2e-89ac-9417dacac1bd",
        "cursor": {
          "ref": "da9ba3c5-b7c0-4084-9a5f-b2e388179040",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1dd5901c-7adb-4257-b920-ed9ad3715df5"
        },
        "item": {
          "id": "20846ea7-1ff4-4e2e-89ac-9417dacac1bd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8a3589e6-af38-4f17-a80b-c7954dc5ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cbb766-e632-47b1-b50f-61954014bcd3",
        "cursor": {
          "ref": "82c39f80-d14a-4364-a4e5-a9390bf56cd3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9b6d2758-f988-44d7-8c33-6432dcec2aba"
        },
        "item": {
          "id": "91cbb766-e632-47b1-b50f-61954014bcd3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bdb9a7ad-8483-4d02-8be3-2d97dece43cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6bf9b5-eb12-41b5-9feb-449d9dcee5d4",
        "cursor": {
          "ref": "7a325cf5-477f-47f6-bd1c-4f31c2db1981",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "881261b9-1a93-41f9-9d97-95c74f097b67"
        },
        "item": {
          "id": "7a6bf9b5-eb12-41b5-9feb-449d9dcee5d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "119bcc7c-fedb-4b41-9090-3f4a1a40fd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a657f2f7-696c-4cb8-a245-b7ab0bf8428b",
        "cursor": {
          "ref": "809ec1f6-3224-4f30-9297-3bc7b203d642",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a65316a1-58b0-4a9a-96b8-69ca00d6dc35"
        },
        "item": {
          "id": "a657f2f7-696c-4cb8-a245-b7ab0bf8428b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bed4bef2-203a-47b4-8741-2af599e0a6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f2642a-09d4-4d77-a97c-df94f31a0094",
        "cursor": {
          "ref": "cad30108-8f39-4d97-bc6d-5acc061453ef",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6ae5e921-3c6d-4b0d-95b8-2790fabb7710"
        },
        "item": {
          "id": "02f2642a-09d4-4d77-a97c-df94f31a0094",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "849621d1-fd92-4929-8f27-2dedc2edf844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3de525-108a-41ce-920f-69e3a3acb890",
        "cursor": {
          "ref": "4bbcd76e-de3b-4eba-ba63-7a8277695578",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b4effef3-0aa5-433e-9244-4312727bc06c"
        },
        "item": {
          "id": "4c3de525-108a-41ce-920f-69e3a3acb890",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8c6ca808-6a0d-456a-972d-6041fcc24dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28065fad-01d4-44f9-b97f-5f3f190ece7d",
        "cursor": {
          "ref": "e423b13a-8e22-46e3-9cac-6c555dcc452d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cb4aca33-7ae5-408d-9810-5c2f198c3aef"
        },
        "item": {
          "id": "28065fad-01d4-44f9-b97f-5f3f190ece7d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dbd1dc49-4770-4092-a167-25a84477aaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9251ebc-10a9-46b7-820e-639aac47ed57",
        "cursor": {
          "ref": "ea896ee8-f025-4ddf-8af7-a1b5411de167",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f556d646-b500-4ef5-83ef-53357fdacd39"
        },
        "item": {
          "id": "b9251ebc-10a9-46b7-820e-639aac47ed57",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "763092d8-7583-48df-a5c8-af4a834d6e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b4a7ca-cae6-4589-8ff3-de88f7628af5",
        "cursor": {
          "ref": "c06bb2be-0db5-4ef3-9ab5-1bb1dec7da8b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "31ca8489-448f-4bb1-a5a6-c455872dd82a"
        },
        "item": {
          "id": "f8b4a7ca-cae6-4589-8ff3-de88f7628af5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5a5da3ce-d79b-4ad9-a73a-8dea9b4e8ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a088c45d-0ca5-412e-be90-5995c3c2b290",
        "cursor": {
          "ref": "46e45db6-d534-4a61-8295-e04958edf17b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b84bd9c3-45a6-475e-9b2c-dff889bf183e"
        },
        "item": {
          "id": "a088c45d-0ca5-412e-be90-5995c3c2b290",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "baf2cf1d-1c30-4fcc-892e-2aff007dfe5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d89f8-6d72-491e-a675-1401a8f5ba73",
        "cursor": {
          "ref": "9b240fb0-252d-426e-8da7-fa959e29713b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a89d391a-5051-45fb-aef0-20dae3a069fe"
        },
        "item": {
          "id": "9b0d89f8-6d72-491e-a675-1401a8f5ba73",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "91e54088-dd87-4f7a-8c6d-783fafbdff9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22bb9ae-a409-49a9-bfe7-f4b3f70078dc",
        "cursor": {
          "ref": "22bf53b0-392f-4364-9a9e-33927bd9093a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "536784f9-2dfb-4310-b106-ab588b905dea"
        },
        "item": {
          "id": "e22bb9ae-a409-49a9-bfe7-f4b3f70078dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5c23a788-a397-4ac0-a720-f2fec4f6e776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424f44be-bb90-4196-9e42-2dc4e0c9804d",
        "cursor": {
          "ref": "f7ceb7b9-5453-4ea3-803c-ae8d1350850a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9d616975-a497-40b3-beaa-e927b1132e63"
        },
        "item": {
          "id": "424f44be-bb90-4196-9e42-2dc4e0c9804d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d7cc435c-d319-4264-9c99-e6c82886d8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5242a3-0e4a-4b93-9204-fca8496b7863",
        "cursor": {
          "ref": "4becf03f-ff4a-4ac2-a7a4-f0c147701c3a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fa5dff7d-82da-4328-a02d-759160dbe085"
        },
        "item": {
          "id": "ef5242a3-0e4a-4b93-9204-fca8496b7863",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "84bc061a-e2c5-4ee3-876c-e4e4274c5a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c7c8bd-0925-4778-8c70-ce94b8373d74",
        "cursor": {
          "ref": "4d65f386-bf23-44cf-9434-4751a3eaaa82",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6c9b8185-2f74-48ba-93d5-04518eacadc0"
        },
        "item": {
          "id": "d2c7c8bd-0925-4778-8c70-ce94b8373d74",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "570c9f8a-2e12-4546-ae91-c28957320135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8783a2-18f4-4d56-8e54-1ef23cac4599",
        "cursor": {
          "ref": "cb572071-a1e5-48f1-83f3-2dc813c2773e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4843edfa-3e97-4300-967e-18cea3774739"
        },
        "item": {
          "id": "da8783a2-18f4-4d56-8e54-1ef23cac4599",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fa900917-e1ca-4b9d-8ca2-cb679c0be497",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "94cad020-f71b-4b1d-9e9c-41ce23e42718",
        "cursor": {
          "ref": "138f9a27-dca2-4515-b1fe-4dcaf059de29",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b422165d-a7ab-4fdb-9d1a-b3b43c148404"
        },
        "item": {
          "id": "94cad020-f71b-4b1d-9e9c-41ce23e42718",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "63399c11-40ca-4e25-b7e1-c0c2e6b9b27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a4415-6dde-4afa-9e03-cd579e2000e1",
        "cursor": {
          "ref": "2bae4eba-b638-443b-a491-5c3e544ba720",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "90f01947-c3a6-4a7d-a6b1-3207c2bca44b"
        },
        "item": {
          "id": "a37a4415-6dde-4afa-9e03-cd579e2000e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a7b6b77-5296-4b18-9e50-b7f35d1335cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba996c0-21d7-44b0-989b-251d161ee795",
        "cursor": {
          "ref": "a8acc706-6515-4b2f-a149-7417ea191b46",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dd614448-0d4b-498d-96df-72518048d998"
        },
        "item": {
          "id": "5ba996c0-21d7-44b0-989b-251d161ee795",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c20a9176-0167-4ada-9d28-c4dbc15cb1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5d2171-b192-40dc-9aac-700a33f3ff9d",
        "cursor": {
          "ref": "021d40af-fae1-4510-9100-0a7ecc7cec60",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9e9b8adc-a56f-48ca-85ca-4216f0caab6e"
        },
        "item": {
          "id": "2f5d2171-b192-40dc-9aac-700a33f3ff9d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "40d4e99e-8355-4cde-bea2-2b01825fa3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d417aee-aa7c-4350-8005-2b6d6cc4423f",
        "cursor": {
          "ref": "309829f2-11d6-4e6c-a669-2c12117d5ef7",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5d60f74e-4755-4729-a357-167f5f736f36"
        },
        "item": {
          "id": "0d417aee-aa7c-4350-8005-2b6d6cc4423f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0f2ff18b-2a61-4d44-875c-cbed3e191499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320e82f8-f920-44cb-bf47-ac89179fc65a",
        "cursor": {
          "ref": "04558108-fbd9-47c1-976f-6512a68b2a9f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "829e8c32-d78a-46ef-a2a8-4e47a129410f"
        },
        "item": {
          "id": "320e82f8-f920-44cb-bf47-ac89179fc65a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1b6615aa-6af0-42e1-a581-0c6323cccd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18b8f4-9f88-46e0-b013-5f4f59ffe160",
        "cursor": {
          "ref": "67fa16f9-2112-4654-b807-7c4ed436d99c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3a8df243-c131-4145-9b56-4b7d673c1369"
        },
        "item": {
          "id": "ca18b8f4-9f88-46e0-b013-5f4f59ffe160",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "70dc073e-e210-4879-8c8f-bec031a774e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19044c4f-527e-4de0-b603-c1349cd7639f",
        "cursor": {
          "ref": "5f29521e-8882-42af-85ce-1569adadd824",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ed0ec407-782f-4aea-bc29-406870b72796"
        },
        "item": {
          "id": "19044c4f-527e-4de0-b603-c1349cd7639f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b24873be-043f-4ba6-a362-38af468e9ec9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a4c59674-732d-4dbe-bbb0-52880dd85815",
        "cursor": {
          "ref": "d7b31592-9841-456c-986a-b7c52d6171de",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "064cccd8-335c-4b06-9f8e-5e8b163cbd54"
        },
        "item": {
          "id": "a4c59674-732d-4dbe-bbb0-52880dd85815",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0f5d0f9-ad83-400c-b4d3-d6720d8e22a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6697e47-36c1-443e-a159-5b3b6e2cabb7",
        "cursor": {
          "ref": "6e11612f-1e3f-49cc-b616-18e82d7d33ac",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f82361ae-f791-4f8e-bb3d-6ee55d5d1172"
        },
        "item": {
          "id": "f6697e47-36c1-443e-a159-5b3b6e2cabb7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1c904a66-f4c6-407a-abf7-03860c69aae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae380072-3b3f-40f9-8b01-5a40efd56703",
        "cursor": {
          "ref": "a4e89685-7ec7-49e2-879f-7b9bac3600df",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "09daf244-b02d-49d9-a1f5-04721390056e"
        },
        "item": {
          "id": "ae380072-3b3f-40f9-8b01-5a40efd56703",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3e7dc7eb-b943-41fb-aff5-88265376d23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc3155d-7fb2-42c6-aadd-368774c9dc5c",
        "cursor": {
          "ref": "31445c8d-cd04-4c83-a58e-02bc18bd7933",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "678d2371-39a5-43e5-92c3-30aa9d662d5a"
        },
        "item": {
          "id": "4bc3155d-7fb2-42c6-aadd-368774c9dc5c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "db7b2f56-e0c7-467b-8dea-a27f2b51b4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a19f17-57c8-4eef-b429-4c4eabb52160",
        "cursor": {
          "ref": "79c0a979-d7e9-4ee6-971e-0fcf651b4e91",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8d14d054-a09d-4f3f-b653-1cdacd8d5117"
        },
        "item": {
          "id": "a4a19f17-57c8-4eef-b429-4c4eabb52160",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "374ec5a2-eeef-4aed-9f21-1e6f135ec55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063e4aa9-e5da-4896-96d8-c5aea18ec273",
        "cursor": {
          "ref": "1d30d736-620f-4c02-a940-d9ae2ad8bb25",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "66391d3b-0144-4315-b08c-18448f69ead5"
        },
        "item": {
          "id": "063e4aa9-e5da-4896-96d8-c5aea18ec273",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d68a81fe-d17c-49d4-9c3d-530f2d82d658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db16edbb-9e5a-4c08-a06a-b9308b23d3fd",
        "cursor": {
          "ref": "c9e7a0b5-e947-4bec-b286-0fb25ce8b660",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c08a0539-c559-4c13-89ee-91803f7c7203"
        },
        "item": {
          "id": "db16edbb-9e5a-4c08-a06a-b9308b23d3fd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "05ad7474-1ecb-4257-86f8-ce7a37f23e7c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "75c6c43b-24d1-49f1-93f0-946ed247e2d9",
        "cursor": {
          "ref": "c609b52f-fe64-4520-a507-c0e4566ad0ec",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "752b386c-c706-4611-b165-96984dd14d25"
        },
        "item": {
          "id": "75c6c43b-24d1-49f1-93f0-946ed247e2d9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f7f70d4d-f1c7-4b68-b293-8f28a67d944b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "60869816-68a2-49f0-85af-68dc25e0b65f",
        "cursor": {
          "ref": "bc1c4ee6-0107-4e91-bd5a-2c8a7bc0985d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6e618725-7de4-4798-87a9-c2a595f19bf0"
        },
        "item": {
          "id": "60869816-68a2-49f0-85af-68dc25e0b65f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d66464c4-e3d5-4489-93a2-836cd6b10810",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "81e10d4c-60fc-41ba-8ed0-6a2c4f9f7c47",
        "cursor": {
          "ref": "5e6b00d1-027b-4606-90ed-ded5964896df",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fa704070-6e1b-4a11-96b2-d309590a4f6d"
        },
        "item": {
          "id": "81e10d4c-60fc-41ba-8ed0-6a2c4f9f7c47",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1fa5683d-bbb6-4c4f-bc79-ce8e11bf8260",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "f92636bd-e327-49b5-80da-8694e297a94a",
        "cursor": {
          "ref": "adf2dc1a-effc-4180-bbd9-fc8db8640255",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d8023ff3-e3b5-443f-b005-e856203a6a48"
        },
        "item": {
          "id": "f92636bd-e327-49b5-80da-8694e297a94a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "19aac840-4fe1-4f43-a813-9d98b3679fa3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "fdb42cfb-20f2-4bfc-8960-264c70c42702",
        "cursor": {
          "ref": "e7005b48-1592-4461-a8ba-fbc6f0b48dca",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ba0a40c7-56d7-487e-8458-63f12a35945b"
        },
        "item": {
          "id": "fdb42cfb-20f2-4bfc-8960-264c70c42702",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8905f4ab-9f15-4152-be19-25af83f2b38c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "015197db-c66c-4b8d-b075-44bc5a00ae12",
        "cursor": {
          "ref": "6c38e83c-cfbd-4472-a2cc-3e9094d64baf",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5c8731ad-d5f1-49e9-a2ac-85f98f05b02f"
        },
        "item": {
          "id": "015197db-c66c-4b8d-b075-44bc5a00ae12",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "906a9944-a455-4675-acce-869b7d3c97e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9da811-3325-483a-973f-93cce54ef08b",
        "cursor": {
          "ref": "b858eb49-4128-48cf-b00d-fb37c9b0f54b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fedbbdcf-7769-4c3d-9120-9fd987fa6418"
        },
        "item": {
          "id": "1d9da811-3325-483a-973f-93cce54ef08b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "32db838c-39e6-4455-99c9-b75257144a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7672362c-1db3-4a25-90d6-3b435bd34a50",
        "cursor": {
          "ref": "c3f40d72-86b9-4a9f-a4cc-8a670b6175d4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9ca0a4a3-5e84-41fe-98e8-956ad6c0b238"
        },
        "item": {
          "id": "7672362c-1db3-4a25-90d6-3b435bd34a50",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "033382b0-8047-4634-880f-e116bb1831fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfd25ea-524a-4063-b0b9-e25f58c1108d",
        "cursor": {
          "ref": "f12300b1-efd4-4820-beb1-51d22179bf22",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0a1ae2ec-1249-4371-8608-18974de12e33"
        },
        "item": {
          "id": "8bfd25ea-524a-4063-b0b9-e25f58c1108d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "42e1ddf7-b5e2-4dab-878f-21f075da5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909c851b-4ee0-47ce-89ef-f87d36329857",
        "cursor": {
          "ref": "3dc3942f-1291-4b12-8b8e-e893be6b711c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "902d2192-f631-4670-8ab7-3c51bdc0e548"
        },
        "item": {
          "id": "909c851b-4ee0-47ce-89ef-f87d36329857",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "75ae4123-8c1d-439a-9f01-c577dc9bbf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ae8ea-a6b7-47bc-8508-0e5563b7e567",
        "cursor": {
          "ref": "a0199aba-b64d-41c9-83b1-1325a3871159",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "26a1b658-ded5-4eee-ad8d-bc29b610158d"
        },
        "item": {
          "id": "934ae8ea-a6b7-47bc-8508-0e5563b7e567",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5eb3d6d0-ea26-4f29-b842-804af4476310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997aa67b-8d28-4d84-9581-0b98a8a74b4b",
        "cursor": {
          "ref": "41f656ce-53fb-4359-9b05-9c6a0d0fc624",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6783abfc-9daa-4429-b4b9-24931b81b3b8"
        },
        "item": {
          "id": "997aa67b-8d28-4d84-9581-0b98a8a74b4b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cabf8ab7-60c2-45c9-8f7e-49064c2454fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15708dc4-aa66-4c79-a7d1-c26606b551da",
        "cursor": {
          "ref": "d1c772d6-69db-463b-9cce-669f30bd63d8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "deb015f8-e278-4a44-9b19-65f225d55db9"
        },
        "item": {
          "id": "15708dc4-aa66-4c79-a7d1-c26606b551da",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "22f4154b-ebff-4041-9962-eea439074d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb54471-0440-4656-b093-3f5c26380491",
        "cursor": {
          "ref": "64bb3c0c-3650-464c-9cb9-8aa7c6b51006",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9156272c-9121-40d8-9bf8-4f5b049a5ada"
        },
        "item": {
          "id": "9bb54471-0440-4656-b093-3f5c26380491",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "84009a8d-237a-4961-af1a-f442653677af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf2737b-262c-4af7-a74d-62c3faf014c8",
        "cursor": {
          "ref": "e3bb862c-1c3e-4499-a6ba-3c7a85eca282",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "800bbfb4-a30c-4f4c-bf2c-9d1468d71dc3"
        },
        "item": {
          "id": "9bf2737b-262c-4af7-a74d-62c3faf014c8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00aee38a-7d5c-4b41-8f11-409e1c100d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87deeafd-030e-4e32-94e3-cef5dae9707d",
        "cursor": {
          "ref": "a6faf8eb-4eb3-41f5-9871-e99b319dd4fa",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16239be6-1650-4366-9cb1-7479d6bb4e4e"
        },
        "item": {
          "id": "87deeafd-030e-4e32-94e3-cef5dae9707d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "98b51945-1d8d-45b3-b76a-72876cf1207b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0be2c1-7f80-4d1f-8c4f-dcf387605512",
        "cursor": {
          "ref": "a69eb82f-e7e5-4766-9494-b3a497c63f9a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fc216a9f-4b2d-45ce-8ddc-e8798db06a26"
        },
        "item": {
          "id": "1f0be2c1-7f80-4d1f-8c4f-dcf387605512",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b6acc1f7-0239-4edc-9b9c-d734f4d60d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4552c9-db37-40a0-acdc-e17b907d9dff",
        "cursor": {
          "ref": "08cde5cb-ad28-42d6-85c7-67fb18a32673",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2fe2bf3e-47c8-4613-9dc8-88aa8d38c3fd"
        },
        "item": {
          "id": "1c4552c9-db37-40a0-acdc-e17b907d9dff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "acf6a96a-cf3e-42c5-a408-3fba722d1e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0462d66d-5465-4a29-abf0-b176c77af8a4",
        "cursor": {
          "ref": "4e381a57-f667-414d-9688-4e7f4deea246",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9dc2b790-6aea-4d9e-8e62-7a2aaa4b8fdc"
        },
        "item": {
          "id": "0462d66d-5465-4a29-abf0-b176c77af8a4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ed6be4ab-8acb-4f29-ae1b-a7e12250b101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5622049e-3f89-46e7-9d11-a4ab6ef844c2",
        "cursor": {
          "ref": "4b1dff87-4da3-410a-bbfc-5f611120d60b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eaf225c9-c330-4869-a83b-38ba422ddf89"
        },
        "item": {
          "id": "5622049e-3f89-46e7-9d11-a4ab6ef844c2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f4109de8-c952-48f6-83ca-8e272020df0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bae119-1e86-49fa-8bbb-2e5633200bbe",
        "cursor": {
          "ref": "3ab04f65-cada-489b-8268-421a1b079c90",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c4f19d00-91da-4680-aa45-501daaa68f4b"
        },
        "item": {
          "id": "60bae119-1e86-49fa-8bbb-2e5633200bbe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d5909063-1bfb-4e5a-a505-280087da8e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c54155-adcc-4e0a-9068-68f8d57b6477",
        "cursor": {
          "ref": "3c4a8959-0ae4-438f-967a-84cf06192f5b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b500cbab-9690-4113-beb9-b3c54965e8d6"
        },
        "item": {
          "id": "d1c54155-adcc-4e0a-9068-68f8d57b6477",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7934b897-0a26-486d-aae9-25aafe6adac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0e7899-05d7-45e6-915e-fca54a11fdf8",
        "cursor": {
          "ref": "a6bc3010-f481-4b18-ba53-9be089d3ce06",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3aaa944-6b28-4070-bb36-4335faf36975"
        },
        "item": {
          "id": "ed0e7899-05d7-45e6-915e-fca54a11fdf8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1a2d777a-ad96-467c-ba47-9c0d5c72b23f",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "cd013b06-a7f4-4cb7-95d9-ab9266bf8e50",
        "cursor": {
          "ref": "6d2c4140-cdf3-426d-8f99-768acebfb885",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "93f78034-6e6f-4150-b7aa-2f02dfeb22b5"
        },
        "item": {
          "id": "cd013b06-a7f4-4cb7-95d9-ab9266bf8e50",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "91d88095-3840-4f56-80ec-430f146bf94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6a6c68-3766-45e1-83ec-48ef27e32e16",
        "cursor": {
          "ref": "f731c051-53cf-4a1b-a466-06c152c5cd2b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bee7915d-c570-44b8-a42d-9fd91e1d0417"
        },
        "item": {
          "id": "7c6a6c68-3766-45e1-83ec-48ef27e32e16",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2cd75c74-e0bb-424c-b824-b4044ae82e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8134a8-6dc9-464a-89e2-4956cd69ab5b",
        "cursor": {
          "ref": "a24bdf21-2474-4f89-8a6f-4e54cabe9506",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "002e7083-8406-4bb4-9fd2-ded2df1d62ab"
        },
        "item": {
          "id": "9e8134a8-6dc9-464a-89e2-4956cd69ab5b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fe93cc12-f6e8-4227-ba70-bbe48f7f75ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff04545-6ed2-445e-b0eb-a4f9b884f00b",
        "cursor": {
          "ref": "0ec1feed-27d0-49af-9e59-326f35f83e6d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5a2d0c9b-8178-4f59-8ac4-a07bc78f17e7"
        },
        "item": {
          "id": "3ff04545-6ed2-445e-b0eb-a4f9b884f00b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7aee8160-d5f9-40af-b416-b29856142d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730100e1-4b9a-41da-add8-d66a846ccde8",
        "cursor": {
          "ref": "6da24941-aa6b-411d-bbcc-2ce7a677c79a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "75277ee3-9edb-400a-81c4-550ea069871a"
        },
        "item": {
          "id": "730100e1-4b9a-41da-add8-d66a846ccde8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ce57779f-bd04-4ae5-b110-2796a33d04ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f467eba-7845-42ca-8b44-8fb03924cde7",
        "cursor": {
          "ref": "6409f8ad-8e56-4459-96f0-a6f60ad899fc",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2c94f631-9646-421c-ac6c-1ebf97964adb"
        },
        "item": {
          "id": "6f467eba-7845-42ca-8b44-8fb03924cde7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f261d849-7e1b-4c4c-9e96-a1ba765cba2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef7818b-6c6a-478d-8535-5aaf41039b34",
        "cursor": {
          "ref": "68ce9ab9-aad7-4baf-894f-e417fd9d75b5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "69bc5b61-b1c6-4cbf-824e-b0dd45a06cf3"
        },
        "item": {
          "id": "cef7818b-6c6a-478d-8535-5aaf41039b34",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8537e5a0-44f2-46f2-ae0a-fddff5a7eb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b959494b-2b1c-499e-a756-3f3c87dd971a",
        "cursor": {
          "ref": "f6772dbf-7611-49b1-97ed-6f428fed6a78",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8196205d-1f8f-431a-b13b-c63be6e5047c"
        },
        "item": {
          "id": "b959494b-2b1c-499e-a756-3f3c87dd971a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8dbe494e-97c5-47fb-9d52-cf7e2036728b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b59c351-eac1-4d3b-882b-41477753376d",
        "cursor": {
          "ref": "4af4c568-e45a-4833-8b51-b7dd0f66be11",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bb5bf824-1189-41c0-bd57-956252e3cc20"
        },
        "item": {
          "id": "8b59c351-eac1-4d3b-882b-41477753376d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9958e570-2439-4bb0-b53a-c569ec8338ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6788a2c8-5b5a-4602-9750-2a4a9e6a68b8",
        "cursor": {
          "ref": "841920e5-b7ce-4f8b-ab92-f0ab39f6a1cc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "75e5efe5-f0fc-44a9-ab5f-39905e4f39f9"
        },
        "item": {
          "id": "6788a2c8-5b5a-4602-9750-2a4a9e6a68b8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "31cdc6b4-1723-4704-9c40-8537b9de8a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bdd32a-f5a7-4ff2-bbca-03bdac348057",
        "cursor": {
          "ref": "673ca395-8e3a-4bad-8ad2-be7e06f76114",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cb270561-c5d3-400a-821c-eecd9a80306f"
        },
        "item": {
          "id": "f1bdd32a-f5a7-4ff2-bbca-03bdac348057",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9ac70b46-ecd7-4990-8fba-0880c1ed85d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ec3785-eb24-4d1b-b663-e4ac3b8745d1",
        "cursor": {
          "ref": "388f83d8-ffc1-42c4-8290-d41651f6d6f5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5a728615-a388-4c99-930d-fb7dc30a66cd"
        },
        "item": {
          "id": "b1ec3785-eb24-4d1b-b663-e4ac3b8745d1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "454a79b1-7676-48ee-8b31-8a2efc4b3b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded6f031-94e9-46ba-b0b9-560156b5eee0",
        "cursor": {
          "ref": "bc3b4daa-44c6-44a1-9433-5dd77ac16dce",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c6765ad8-9368-4993-8af4-e0c8969fed44"
        },
        "item": {
          "id": "ded6f031-94e9-46ba-b0b9-560156b5eee0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cc33dfa7-d087-465d-bb20-a154d66fe83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f7aa48-eae2-4933-84c7-a30f12a633c0",
        "cursor": {
          "ref": "b537e7e3-50ed-4548-8506-28b9315d40c7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "50c79495-38c8-4876-a30d-d52ad4f8a015"
        },
        "item": {
          "id": "48f7aa48-eae2-4933-84c7-a30f12a633c0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "04f04952-204c-4b55-9604-4d3ec4f51420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e43bf11-13b2-433a-8b45-6b8fab36afcc",
        "cursor": {
          "ref": "08fa4853-15ad-41ed-8414-01b8fa1b374c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c00d12ef-a663-4b76-a58b-e8a3fe7d4b11"
        },
        "item": {
          "id": "9e43bf11-13b2-433a-8b45-6b8fab36afcc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e00baff1-98fb-4402-98f2-57940806d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa361b93-6926-42ae-ad6a-ebfc4c4ce81b",
        "cursor": {
          "ref": "ae2bbcb9-3e54-4082-9809-96b4050d0dba",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7a2a4e4b-4a3c-4b31-afd1-5edbbdfc98f9"
        },
        "item": {
          "id": "aa361b93-6926-42ae-ad6a-ebfc4c4ce81b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "72722269-c4f2-4efb-b866-641d355624e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddf0108-9dc6-4e66-b838-0981975cb9fb",
        "cursor": {
          "ref": "150283b4-f5a4-4df7-95a0-a36eded02b4b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e3c27861-c37c-4af4-870b-680ef3716a31"
        },
        "item": {
          "id": "cddf0108-9dc6-4e66-b838-0981975cb9fb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "96d85452-c4d3-4a82-b664-90e43910ce52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d984912-175e-4d25-a914-5a88e44c3789",
        "cursor": {
          "ref": "c68edb43-0a2e-47b4-8317-96dbad8c2373",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bb0f31d5-a67d-4a37-9281-dc89df543a17"
        },
        "item": {
          "id": "8d984912-175e-4d25-a914-5a88e44c3789",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7c1eec0f-21dd-4d56-b81d-69ac5cf20923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb15fc7-4a3e-4836-b81f-a30faef4bd40",
        "cursor": {
          "ref": "82b8805e-a53b-4f6e-914b-ae982ff0584d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5ef4e236-7cdb-4b67-a19d-3613e403ac1d"
        },
        "item": {
          "id": "0cb15fc7-4a3e-4836-b81f-a30faef4bd40",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5b8727e7-dd0d-45cb-9c27-6393fcf2f21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3d04c8-909a-4d6c-98fa-d889d802042b",
        "cursor": {
          "ref": "9882a214-2558-4b73-847f-365cb045f9f2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a968584a-d455-4c47-97d3-d66bb963e1bb"
        },
        "item": {
          "id": "ce3d04c8-909a-4d6c-98fa-d889d802042b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b08d1399-fe36-4b33-ae0b-934f1ff650b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ce1f45-b413-41a4-89d9-dc74c155c535",
        "cursor": {
          "ref": "65755bc8-5902-4bde-9d33-c8779cf308a2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "15a29062-fc29-41ed-a251-40cc0b28cbb4"
        },
        "item": {
          "id": "23ce1f45-b413-41a4-89d9-dc74c155c535",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fd34f1fe-36a4-4918-84a0-5125583f775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca9196-a4aa-4906-8fa6-50f9e146ea41",
        "cursor": {
          "ref": "de8b2e4c-2746-4bd4-a654-7e579d56b94c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fcba935e-753d-48a7-a03f-5bfde7c27dfb"
        },
        "item": {
          "id": "a2ca9196-a4aa-4906-8fa6-50f9e146ea41",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "14f37bcf-b470-422c-814d-8f1a9bc00344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be2bb7e-cd2f-4c52-a378-7d2c204d9283",
        "cursor": {
          "ref": "d0fcfaa1-1bcb-4c62-9ac7-d3d4ddf992a5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ca087e8-0d28-45bb-8a3e-1dc1d67fc661"
        },
        "item": {
          "id": "1be2bb7e-cd2f-4c52-a378-7d2c204d9283",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1e5a0a6d-3226-49e2-8bf2-74a71bd93504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83ab644-2824-4954-b395-86ccaa877c54",
        "cursor": {
          "ref": "98297064-1126-4e9d-a31b-028a24e71fe0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c77a3ac0-1116-4ccb-b554-6bff680e457d"
        },
        "item": {
          "id": "f83ab644-2824-4954-b395-86ccaa877c54",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b884da28-f077-4833-83ad-a72daa3f09a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99926aca-a94a-4afe-9901-6e1f4b076843",
        "cursor": {
          "ref": "2e176cae-6f6b-4da5-8665-3d8a9e929a18",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "13d302e4-a9cc-4355-a67c-946cd82b055c"
        },
        "item": {
          "id": "99926aca-a94a-4afe-9901-6e1f4b076843",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a89e513f-bcf0-4ce8-8a18-b5202d2140f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b47f841-bd5d-4d7d-a65c-f4c7f53f09e8",
        "cursor": {
          "ref": "68c56527-1dba-4c13-ad33-66257085db6e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "acf83c4d-d22b-404f-9e41-b58ad5be32ca"
        },
        "item": {
          "id": "6b47f841-bd5d-4d7d-a65c-f4c7f53f09e8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "acbb51b0-f181-4531-b6dc-69505a7c03bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f31a90-ddec-4508-984e-231e9ccc079e",
        "cursor": {
          "ref": "7c024d23-881b-40c4-bf88-6a0924fa620e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4c1dca7c-b79a-4947-b3e5-6aa21707dd9d"
        },
        "item": {
          "id": "a2f31a90-ddec-4508-984e-231e9ccc079e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c11d3dcb-675f-40e9-86b4-f0c8b23b5ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d516a-4908-471d-82d4-ee5a6bfa5c75",
        "cursor": {
          "ref": "7279439b-da82-4b3b-83ce-e5e9922357bd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c26d6b4e-8b6e-4717-8be0-1541c27b2ce7"
        },
        "item": {
          "id": "a41d516a-4908-471d-82d4-ee5a6bfa5c75",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a1fbadd1-bdb1-4545-905f-0cc7aea14b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e8dc32-7db3-4b3f-9c67-6a546b130458",
        "cursor": {
          "ref": "2a49a7e0-28f7-4226-85fc-488987ad6e1d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d409e337-9c6d-4d31-a7cb-c13e38199b7a"
        },
        "item": {
          "id": "35e8dc32-7db3-4b3f-9c67-6a546b130458",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b3556c4d-bfc4-496f-a1b8-976597d8ab2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3720d1b8-df41-4469-81ef-977e87b71daa",
        "cursor": {
          "ref": "7c8303fb-df87-4207-847a-fa9034591cc6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "93aa54cf-717d-45f7-9d36-89f018bdf472"
        },
        "item": {
          "id": "3720d1b8-df41-4469-81ef-977e87b71daa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8a4b9b1f-f099-4ed0-a61a-15fde5cece83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11090635-b211-4376-912f-6e093710c127",
        "cursor": {
          "ref": "a3e0ef86-fedc-4c95-95ca-b06238c22b41",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "836a22d3-505e-43b3-aaff-d88a2244061a"
        },
        "item": {
          "id": "11090635-b211-4376-912f-6e093710c127",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a38de9bd-6acc-4a9d-ae0b-15436001b2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33506aa1-9ee4-4c05-9a84-bba3a15484d3",
        "cursor": {
          "ref": "424092a5-7ca9-4b06-87dd-64990067f331",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9a473a42-2008-46d7-b018-49392215e978"
        },
        "item": {
          "id": "33506aa1-9ee4-4c05-9a84-bba3a15484d3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4a7740e4-1a17-42d5-9ba9-4ad4aad5628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50110e34-4aef-4b33-8969-ddc5e268fbae",
        "cursor": {
          "ref": "1d4ff56a-0342-4d0c-87d2-13d8cf011cc5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dfeeb60e-4510-4523-8687-bd8e168356e5"
        },
        "item": {
          "id": "50110e34-4aef-4b33-8969-ddc5e268fbae",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7795c422-6cf6-429e-814c-3a1336b148b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8677c9b5-4f47-4e7d-8ed3-2f5e361fc3e2",
        "cursor": {
          "ref": "7436b2c0-11ab-477c-ad21-122f0778b519",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "30b9f393-bbb2-40f4-bc0a-84e0ea4f752f"
        },
        "item": {
          "id": "8677c9b5-4f47-4e7d-8ed3-2f5e361fc3e2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1f31024d-ada1-4aca-8e9e-f94483df3406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2a16f4-5a54-47ca-821f-9652004ceeb2",
        "cursor": {
          "ref": "33769260-0126-4ab8-b460-d9d57e1842d1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da3e1ba2-df34-4d7b-a81f-d618047f0c11"
        },
        "item": {
          "id": "bf2a16f4-5a54-47ca-821f-9652004ceeb2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0f27c7bf-c332-47e9-980d-d9362fcb2aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c6fdb8-74a5-4907-aafb-01e839d2f6b8",
        "cursor": {
          "ref": "095f91a9-de8e-4c10-8509-377c7bf610b9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "07618b39-b2e1-47de-bcaf-8b253e29d7dd"
        },
        "item": {
          "id": "d1c6fdb8-74a5-4907-aafb-01e839d2f6b8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d3cfd161-59d4-4328-b5b4-4f4d78f541cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023d679a-76db-4bdd-954f-ebf1bec93cd2",
        "cursor": {
          "ref": "0db63918-ae9c-4594-987c-2a2c27dc6faf",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7b5c80a3-c361-4410-80d2-dd6f53538d10"
        },
        "item": {
          "id": "023d679a-76db-4bdd-954f-ebf1bec93cd2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d975e68-4261-436d-bf17-db848f73ca14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf25375-150b-496a-b48a-e5544a6d3fdb",
        "cursor": {
          "ref": "5bbc8f77-a12a-4b05-be45-c00cf1373e19",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "447355b7-4c89-4c3b-8f76-0641f8d83572"
        },
        "item": {
          "id": "edf25375-150b-496a-b48a-e5544a6d3fdb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a67eb8ae-c149-4dec-a6db-8b3d061275f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e8824-0fb0-42dc-8e00-613c134be7ec",
        "cursor": {
          "ref": "8e76e276-fcec-452a-b526-6a35a4313fb7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "30f434eb-9a8f-43bb-b54d-4da2f2bf8686"
        },
        "item": {
          "id": "924e8824-0fb0-42dc-8e00-613c134be7ec",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dd3bf9a4-552f-469f-814b-8fcb43b552e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843a798a-acd9-4848-9b58-c01ecebdbe40",
        "cursor": {
          "ref": "615cd85c-0ffe-4e36-9d9b-26d7a4adbeba",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ead2a8c8-7ecd-480a-8680-6357d09daca6"
        },
        "item": {
          "id": "843a798a-acd9-4848-9b58-c01ecebdbe40",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5009d6fa-7fcc-40dc-9462-b1e7092628b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd872f-8246-4d69-ada7-d56bc743d0ac",
        "cursor": {
          "ref": "68a08ae7-625e-4090-9485-4e87b4f460e3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f22183f0-53ca-46f6-8980-32f9a9b0fe18"
        },
        "item": {
          "id": "4fbd872f-8246-4d69-ada7-d56bc743d0ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d74a60f3-ee0a-40ef-83fe-f0aa2c342601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd402c4-47f9-4c3a-b4e0-57b6cd2c401a",
        "cursor": {
          "ref": "ae857c12-eaf0-4114-b5d2-1799e65d22d8",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c405edeb-8aa1-4537-b03c-282c44afea05"
        },
        "item": {
          "id": "2dd402c4-47f9-4c3a-b4e0-57b6cd2c401a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8f843c52-d803-4977-8bf2-39416455f33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0cadbd-e2c6-4b80-bb8d-ef0ce7f9dcfa",
        "cursor": {
          "ref": "320e0c02-a5d8-44c9-a166-77e29a368ad0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f710667d-4fcb-4766-b7ab-fff3ab52c8c3"
        },
        "item": {
          "id": "1f0cadbd-e2c6-4b80-bb8d-ef0ce7f9dcfa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "19123963-4316-462f-85d1-bbc14cc7e278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd2737a-7481-4de5-8bf9-0e7d6389da1d",
        "cursor": {
          "ref": "865ffacb-1c88-458a-9f88-2be57811bff4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0f6aeba1-e96b-4bba-b450-a79d8af4710a"
        },
        "item": {
          "id": "8fd2737a-7481-4de5-8bf9-0e7d6389da1d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a813574b-b14c-4856-a328-6b320915d9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e565a970-abbd-49b2-8339-97b4abf93912",
        "cursor": {
          "ref": "a8e37dd9-4f57-4314-bcd2-c924b3217fdc",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "da523508-0c75-4719-8c4c-2f079eaf44f9"
        },
        "item": {
          "id": "e565a970-abbd-49b2-8339-97b4abf93912",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f25a629b-aa32-41d5-addb-dcbe855e1b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ae179a-8d2c-41c8-b295-5d3bb873d7c7",
        "cursor": {
          "ref": "fc8d325d-b1a7-441f-b751-848101eff017",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f7984eb9-3d44-4729-9dca-b42ef52c4edb"
        },
        "item": {
          "id": "45ae179a-8d2c-41c8-b295-5d3bb873d7c7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "281c2995-7525-433a-910b-9cf8320dc88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b006b2de-2184-4444-a72e-e3778c2c7212",
        "cursor": {
          "ref": "2908eb2f-cc43-4698-8d47-b6271eb943e3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "154d0d35-3e67-4b41-8839-bf0cb0c367e7"
        },
        "item": {
          "id": "b006b2de-2184-4444-a72e-e3778c2c7212",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "791866e2-5f52-4775-8b38-40fc0b5c2424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35855f8e-6df3-4660-b918-841fdbb4e901",
        "cursor": {
          "ref": "67f2dfda-573c-409c-9de7-6cd07c32336d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8ac18a08-d897-464f-bd20-a3f8a672461b"
        },
        "item": {
          "id": "35855f8e-6df3-4660-b918-841fdbb4e901",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f4fe55fc-87d9-461c-85fe-21c35c10976e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a283107a-417c-43f7-9e8d-2a4e43bc5360",
        "cursor": {
          "ref": "f4f775db-68e1-4f4c-b3b8-00c6e8cf86ef",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "411f16e6-53f2-4ab8-8415-4392442ee1a3"
        },
        "item": {
          "id": "a283107a-417c-43f7-9e8d-2a4e43bc5360",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "857f9716-d68c-43fe-a9c4-b83e9b5e7f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1d9336-b75c-4bf7-bf81-323fea1a0963",
        "cursor": {
          "ref": "7cdc64c7-749c-465a-8f3b-d7cc91b0718d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43dcbbd3-fb90-4b55-9a8f-d32526d325d0"
        },
        "item": {
          "id": "bb1d9336-b75c-4bf7-bf81-323fea1a0963",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "414850f2-f251-4abe-aa1a-90c2fbfebd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e43aa2-fafa-4af4-99db-aa937ee6662d",
        "cursor": {
          "ref": "0e600a8e-9312-4f05-83a4-92336f9f50e8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dad93c4e-0cb9-485d-974f-4be16a6998c2"
        },
        "item": {
          "id": "f1e43aa2-fafa-4af4-99db-aa937ee6662d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "057696a5-bd77-4e4c-8f70-43ef5498ed57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eac21d-7021-4140-8e06-6477629487c3",
        "cursor": {
          "ref": "0a97fa31-4de6-448c-bd21-57177c400fe1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e60691bc-b70d-4257-b9df-d207a88312a7"
        },
        "item": {
          "id": "23eac21d-7021-4140-8e06-6477629487c3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5b264d8b-8330-4254-a5a3-a70f148374db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687d4d9c-9d46-440c-a725-730404e1e9bd",
        "cursor": {
          "ref": "b8d20c83-a21b-4969-9c47-9be428f6ab99",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a097942c-a35b-4774-8fce-bbc489264e76"
        },
        "item": {
          "id": "687d4d9c-9d46-440c-a725-730404e1e9bd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0373ac9d-da9e-4e28-adb7-dc42005175a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8148dfd-82f8-4ad6-907d-baef4ddfe68a",
        "cursor": {
          "ref": "09855d81-efac-45d3-aaed-dd48558b1018",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ed3a83ba-a034-444f-994d-34aefddaca99"
        },
        "item": {
          "id": "c8148dfd-82f8-4ad6-907d-baef4ddfe68a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4bc129e4-fc4e-437b-bfe9-351b8c11dc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1008bcaf-0ac4-482f-a8a4-5434a23636ea",
        "cursor": {
          "ref": "2e7e1941-67d3-4a46-9734-052fdcd5f6c5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "89e58415-953e-4410-b5fe-794fbfb8135f"
        },
        "item": {
          "id": "1008bcaf-0ac4-482f-a8a4-5434a23636ea",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7c6b04a4-9e56-4c1f-bbb8-bcfae6e93874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262b8cf1-2f27-4456-a349-fb2ef73d63cf",
        "cursor": {
          "ref": "7568976d-db72-4288-9a26-d46a12b65e16",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3a00cce2-e795-4e7b-820d-3e281179ce82"
        },
        "item": {
          "id": "262b8cf1-2f27-4456-a349-fb2ef73d63cf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a16a1177-3b95-478d-a080-7aa9f7f1a349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcc806a-a73b-421e-ab09-536b70adcace",
        "cursor": {
          "ref": "65288e15-681e-441b-9525-66625b2eab1a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a91e1b8b-8a3a-4601-a471-bb28fed9a0e8"
        },
        "item": {
          "id": "cbcc806a-a73b-421e-ab09-536b70adcace",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2c3a03b5-5e10-47b7-b623-dbe6cb33106e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c06495-7e58-4281-915f-f79b57ff5aeb",
        "cursor": {
          "ref": "ed7bdbe0-27c6-4578-b5c5-6f5297459e72",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "52216c87-4b2d-4c14-848e-ded3acbec18d"
        },
        "item": {
          "id": "24c06495-7e58-4281-915f-f79b57ff5aeb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "68cfdfa1-720e-45b5-a63d-75f8f5b3b367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf914d96-04a1-4cfd-a748-72b6f8915a9b",
        "cursor": {
          "ref": "1a1d0e13-425e-4f1a-af0f-e724b1f4c2b8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c1599598-e762-40e2-8eb8-22806ef24c22"
        },
        "item": {
          "id": "cf914d96-04a1-4cfd-a748-72b6f8915a9b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc06fb41-afd1-489a-aa49-2d4e197c82e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d926d1a9-65fb-43ce-8501-cc1a260893a5",
        "cursor": {
          "ref": "7ab0d76e-a823-4cca-82c7-1486602a3627",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bde10ca9-29d0-4ef0-809e-0e08b1ce4c56"
        },
        "item": {
          "id": "d926d1a9-65fb-43ce-8501-cc1a260893a5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a8c3c1be-9ee5-42d2-b054-ca250964bc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a9190e-46f3-4288-b601-06f1563948b2",
        "cursor": {
          "ref": "ebeaf69f-7610-49de-86bb-8b8e4cf4b884",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "07db8125-ecd8-4176-84a7-b8a721e4a290"
        },
        "item": {
          "id": "11a9190e-46f3-4288-b601-06f1563948b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5760b731-36b7-494f-bc7f-9ff091883234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039646fb-9eee-4981-8f70-ea79e4db52c1",
        "cursor": {
          "ref": "df6e44ff-dd9a-4641-8a6a-efd7bcccc694",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6578b3d7-92b1-4245-aa10-fec76e57ecde"
        },
        "item": {
          "id": "039646fb-9eee-4981-8f70-ea79e4db52c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1ba87ffc-054d-42a2-9fbf-5356689f0fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734ab093-54ed-4b78-a0ee-d35bb8ffa24d",
        "cursor": {
          "ref": "8de196d4-a502-46d1-a920-5350e88936f5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9414b0c0-20c0-4faf-acd2-c54e167a79c2"
        },
        "item": {
          "id": "734ab093-54ed-4b78-a0ee-d35bb8ffa24d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "84fb6726-5fe5-498c-abe8-64f0e08cfb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd018ec-78a8-465c-baec-02356efd466e",
        "cursor": {
          "ref": "f38ec0c1-d2f7-4169-86c4-8accf1b44cd1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "365e35e5-7231-4436-89e1-b06998690b4b"
        },
        "item": {
          "id": "8bd018ec-78a8-465c-baec-02356efd466e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d2a41be-2855-4bc4-91c4-477b559e0591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f53592-7386-40e6-ac36-6380d82ae0f0",
        "cursor": {
          "ref": "89f7b441-fab3-4962-9690-b59474937e75",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "24cad7e6-9b6a-4ead-abc8-6bfd13bf6268"
        },
        "item": {
          "id": "c6f53592-7386-40e6-ac36-6380d82ae0f0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d94e47ea-a93b-40aa-807b-28202b55f90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e436b2-d2a5-431d-a783-5c60c67521b0",
        "cursor": {
          "ref": "878dc56a-d9b5-47ba-aa6b-2929e0c2232c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "082759f5-37ca-4f61-bc04-f378039741b5"
        },
        "item": {
          "id": "08e436b2-d2a5-431d-a783-5c60c67521b0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5b0de4af-221c-4976-b125-bc0b04b56df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b473523-3249-4ef9-bc74-51fdf8e6c46a",
        "cursor": {
          "ref": "4605906f-de0a-4e74-a970-fc916b9bbdac",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fd976fd0-f003-415b-b7c0-ca17a7e39413"
        },
        "item": {
          "id": "3b473523-3249-4ef9-bc74-51fdf8e6c46a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b4d266eb-05a4-4a60-bc6b-b7231587cff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69adcd3a-3aa8-4826-b8b4-f638f71cdf44",
        "cursor": {
          "ref": "9912616e-104a-4b35-b8cb-663a6545a391",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c466f404-a3bf-4df1-ae46-4db756a1d4d8"
        },
        "item": {
          "id": "69adcd3a-3aa8-4826-b8b4-f638f71cdf44",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3f731703-e1ee-46ed-bf7f-cc12959d49b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aac6b1c-0a5f-4ef6-8ddf-c9c6562c392f",
        "cursor": {
          "ref": "3be46978-9108-4ae0-b2fd-0fae207a2588",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3dc4d161-093c-4d75-a64f-62d9adb13f6b"
        },
        "item": {
          "id": "4aac6b1c-0a5f-4ef6-8ddf-c9c6562c392f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2c3e85b4-bdd8-4058-88e6-50e27ccaec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3accd227-85d1-4098-8489-439e670a114b",
        "cursor": {
          "ref": "87676014-b0d8-4f67-ad3c-ca5c133c78a0",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "993c0347-4f3c-47c7-ba0a-2490880bcef7"
        },
        "item": {
          "id": "3accd227-85d1-4098-8489-439e670a114b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1025b370-1c49-4b18-aaba-6fc36f4ed91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8b7227-3e91-42d5-94a1-fc1ef28c46b2",
        "cursor": {
          "ref": "376fd3e0-d3c5-48ea-a2fd-397e3818f92f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0e21dc50-363b-4f3f-861a-faf25748d726"
        },
        "item": {
          "id": "4a8b7227-3e91-42d5-94a1-fc1ef28c46b2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "522ea677-f401-49d0-9d37-6df10547eee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2657f2c8-b0f8-4e9a-a4a8-9ba28efba707",
        "cursor": {
          "ref": "0bf98b37-3069-4aef-b317-5dc1d77835ae",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e54a53fa-d5c4-42a7-bd47-4ab406c2c33e"
        },
        "item": {
          "id": "2657f2c8-b0f8-4e9a-a4a8-9ba28efba707",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "101c506f-34d2-4b41-887e-efd229550539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6337173-f931-4512-9ea4-8e49179fba75",
        "cursor": {
          "ref": "17e5ed6b-52b6-470e-bd57-7a2ff280e67c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "39bb0aa6-6643-4233-8f30-1416aabca508"
        },
        "item": {
          "id": "e6337173-f931-4512-9ea4-8e49179fba75",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "081a1de0-dc74-4ee6-86ce-b48d937c2b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ccf3bb-a2c7-48e8-99e5-ef06e6850224",
        "cursor": {
          "ref": "ac02aeea-68f5-4342-a097-28943b8b46c5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eff8bcb2-b532-4feb-a9f6-f87a91bb2e37"
        },
        "item": {
          "id": "05ccf3bb-a2c7-48e8-99e5-ef06e6850224",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9a33e989-122c-4963-bde0-f9e4ec73349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c82ef0c-a8e4-40a2-b0b0-3c3200d389a6",
        "cursor": {
          "ref": "52cac73b-9b75-4e8b-8a0f-99aa395a6f95",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "69b3eb75-1df1-401f-be20-44d2de593e45"
        },
        "item": {
          "id": "4c82ef0c-a8e4-40a2-b0b0-3c3200d389a6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "27a864b0-f71e-4383-903b-4c7d1a83a419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08858be-a9ee-463a-9d11-0768890820e8",
        "cursor": {
          "ref": "7c35f2d0-2630-484c-9dfa-8aef77bda025",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b798b0e1-e83d-4138-9388-1caab558fa52"
        },
        "item": {
          "id": "a08858be-a9ee-463a-9d11-0768890820e8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "968b77bd-dd4a-42d4-a9cc-140a750ab3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3470ea-6b89-4774-aa50-e5e74b4d07d6",
        "cursor": {
          "ref": "a13b5aed-4ede-4d21-b2f4-5260d5a11c33",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3defca8c-bcdb-4eeb-8d3b-c584c537afb1"
        },
        "item": {
          "id": "ea3470ea-6b89-4774-aa50-e5e74b4d07d6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "09009941-ed7b-44a2-92ab-da16966e6dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c9bbb8-ed3c-4dd8-9ff9-30805dae2194",
        "cursor": {
          "ref": "87e2c2a9-aa68-413c-9937-00e441ca4ef5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3d4a772f-d794-482b-8d3e-92a293e0afa5"
        },
        "item": {
          "id": "04c9bbb8-ed3c-4dd8-9ff9-30805dae2194",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "187d2748-5d3d-48af-8db0-2e8933a68709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68682b17-134b-40dd-8818-df22bcca9d50",
        "cursor": {
          "ref": "c30aa374-7eba-4a8b-92ee-c5e62c587921",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0745080b-fabc-4444-b078-25081721f7b4"
        },
        "item": {
          "id": "68682b17-134b-40dd-8818-df22bcca9d50",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2e0b253a-ab77-4730-abb4-c75a8c610c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9d3043-9b8c-4ab5-b8aa-4fb9af0167c2",
        "cursor": {
          "ref": "f6deaf04-3109-499e-a509-4ec82732c068",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5b19c17d-fa56-4053-bcfc-1b4b693db8e9"
        },
        "item": {
          "id": "ed9d3043-9b8c-4ab5-b8aa-4fb9af0167c2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2066b7bf-cbc4-4acd-bbb9-a5c275e0a852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4b6c4a-e65f-4961-9432-e5bd44c55f98",
        "cursor": {
          "ref": "babcc567-19a3-4e01-bd68-8ab61129a707",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "633ae653-de37-438d-932f-a3d68f93312a"
        },
        "item": {
          "id": "cc4b6c4a-e65f-4961-9432-e5bd44c55f98",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bfc0551e-7bb8-4714-9fcb-5d4fc697df03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a858a409-f5f9-4ba8-9611-3d19119d43ed",
        "cursor": {
          "ref": "58594d11-6fc1-4b04-b000-63a6aa90ab1a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8407c286-4d76-4f50-8d2e-ba0fb959e6c8"
        },
        "item": {
          "id": "a858a409-f5f9-4ba8-9611-3d19119d43ed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "06be1387-cce7-4457-bbbe-749483682f35",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fdffd7-9005-4330-9234-2d588204f728",
        "cursor": {
          "ref": "f243c384-88eb-487d-a8f3-d314ce8cd2c7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "31cd4026-f08c-49b7-8f39-7d71cfb0a74d"
        },
        "item": {
          "id": "d8fdffd7-9005-4330-9234-2d588204f728",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3815c3c-3346-453d-b08d-c37645f5fa14",
          "status": "OK",
          "code": 200,
          "responseTime": 2611,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f309628e-bdfb-45cb-a6a4-f67e49befa22",
        "cursor": {
          "ref": "67bd19cf-92f3-4cb2-8985-fbd703a5313e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ac59515a-0190-4911-a15f-b124da58ab31"
        },
        "item": {
          "id": "f309628e-bdfb-45cb-a6a4-f67e49befa22",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e3f15864-eb4e-4aae-8dd4-d8f67a7f877a",
          "status": "OK",
          "code": 200,
          "responseTime": 2384,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7353500-0be1-4147-9be3-1b7f58c66811",
        "cursor": {
          "ref": "981d6f37-73d1-4416-ad40-1af38c14515a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7e9b4f5-490a-4b98-8d9b-96aa63860845"
        },
        "item": {
          "id": "d7353500-0be1-4147-9be3-1b7f58c66811",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "216cfdd8-cf32-4805-8eba-2b67ae79c95a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7353500-0be1-4147-9be3-1b7f58c66811",
        "cursor": {
          "ref": "981d6f37-73d1-4416-ad40-1af38c14515a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7e9b4f5-490a-4b98-8d9b-96aa63860845"
        },
        "item": {
          "id": "d7353500-0be1-4147-9be3-1b7f58c66811",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "216cfdd8-cf32-4805-8eba-2b67ae79c95a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a747419-7398-4d2f-a559-10bffb297692",
        "cursor": {
          "ref": "9188e26b-b709-40a3-99c5-e208768f0ecc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cdd23bd9-c591-413c-8878-dd9f180e8b6a"
        },
        "item": {
          "id": "0a747419-7398-4d2f-a559-10bffb297692",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1f242447-1504-4ccb-ad5b-d2d1e1ce5f65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a02cba0-e52f-402a-ae8f-ec1ca15d242e",
        "cursor": {
          "ref": "aa6a1e73-f6cc-414d-bffa-b8ea070a08bd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ba3c1c7b-64ef-403f-8a56-cd5164a73625"
        },
        "item": {
          "id": "2a02cba0-e52f-402a-ae8f-ec1ca15d242e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "afc5aacd-7b1d-4a5a-90ea-39c891922458",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}