{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "968dd590-1c07-4d9f-bff6-44890b1e4153",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0be54d9b-bc64-4835-a6ba-2ad65dbf53c7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7aa80c9b-313f-40d7-afce-e2780e6d737e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1320cc5f-3276-4c81-8180-7232383c649d"
                }
              }
            ]
          },
          {
            "id": "9d36badd-3cc5-47b8-ae12-c2349f30fd70",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40c96c15-1778-4d78-b2ac-6dd7383fd7a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a6f249e9-aa17-4579-b703-987e26e8822b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "64327da8-fb08-43b0-81d5-e48d272d3188",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f27faa4b-b4ea-4cfb-903d-a9f9e9869791",
            "name": "Positive Testing",
            "item": [
              {
                "id": "312262f8-bcb3-4bad-a2b8-e9dd1baf0148",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4577ba1-2dc9-4875-8ef5-86f2f1cdbe83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a994193-7c33-4efa-a551-04eb6b278fe3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72062b22-87fb-4e93-b00c-6f82641f6af6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09502f27-8404-46c2-9719-045c7890e966"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b649a7c-93da-4943-9308-0148cba1bf0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11d8ca76-444b-4d0e-9540-f84067b86e3d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8dab070-90a7-4ed9-a27b-30e4a03ff8fb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "452430e4-beb0-439c-b871-7919ad9000c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea29c1c-8f7c-4190-92a8-b5fb27453e7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a620654-6eba-4f79-b30b-efdd80d0e2fe"
            }
          }
        ]
      },
      {
        "id": "a3b945a7-33a5-4c84-87d8-0c13187f4221",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "95be72eb-30a1-48fc-b0e3-82b0504547df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e9b519c-c76a-429f-b521-0e2460a663c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d0aa2d8-7887-4fed-8d1e-5a99f7104024",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2936f06-87fc-44b0-90e3-0bdb0688f9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc902a4e-4877-49dc-a525-8045c97fc9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9f4c23-ea11-41de-9d29-2b8dc05cb877",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b5b75b-8d11-40a5-a818-9b39db658f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35389093-86f0-4b40-8358-ec57e0d8bf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b0b861-dbeb-4533-a59f-8454f42e3a6c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5472bc-56cf-42d5-93d6-a183b6badfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a45950d0-5ce8-4cad-92e1-8a6ab69b44b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17981327-45c7-4c36-bb97-ffa33111f189",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39147393-7073-4500-b83d-2e0b877a140a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74387f27-ab73-48e9-b146-9c2910d84a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9cfe755-3736-46e5-b5ea-eb23cb0dc7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611a2cd7-1292-4acf-8e23-29ccd50fd660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbbbc1b-003d-4509-8323-d69c35e4c1cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9b25f523-871e-4140-9f4c-ce24ff479100",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67b4324e-abaa-4ec9-b7d7-a98b7cdc010e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16108c47-5181-4365-a83b-5128943f5cd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "560542c1-c567-4722-aafb-e7a2c5d55ea9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68072d70-a11b-4323-ac45-c0bbe9f90e07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "06277079-f3ba-4d73-a46f-4005164bcf9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24e3d3d1-8517-451a-b255-39dbfd169056",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79a884e4-0bf0-4fe7-822e-cb4eb86c71fe"
            }
          }
        ]
      },
      {
        "id": "a77b3e0b-0200-425c-add9-594386edc9bd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d755e548-447a-4500-a3af-f2187fb8087b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3cfd9799-50b6-4342-92e3-3bdb94633522",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cafe488a-d5e8-4378-890c-e0ab8ce43486",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9288534f-3120-4f1a-bf54-ee79b65486db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df29bd12-f7ab-41da-8070-10d6cd2e1a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1300dca3-43d1-4442-a6ad-0d9bb8e95a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45b0e9ab-bde0-494b-bc65-cd31498fa613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84a5e00-1c04-421f-a20b-cc98f6824fb7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b73fe3-dbc1-49aa-9b11-8d641d33bc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6caafe11-2de5-4915-9d6d-fc83a5359474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbabcde-12e2-4174-a0cc-ab2c86d3687b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac8a8184-dfc6-4c43-9c28-a5f6ecc07b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd5f7cb-1362-4904-bd22-214e40a95d87",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b59198-e48d-4970-b895-e3dea01a975a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce8439f-8856-4bee-8008-e2de8f580309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04306af-bea5-434f-b4d0-c336c5f11d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aceb56e-49ab-44b4-b44f-c0ed03295e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b214d6-6400-437b-9517-3838ac493b5b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dedf54a-bb9b-402e-a0f9-0d8e54f1a401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b331fe-22bc-44b1-a16c-3f7aac12ac35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887c0238-484c-4807-9a05-1102cd8ea220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d904515f-d79c-4d80-948e-f9b581b20c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6143fbf5-b00f-4b98-af8c-c937d6c94fcc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bb5802-d340-4e7c-89d7-716a6fc73282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd73b013-505b-44d9-be5d-55cb0f8b5060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fecd12-b0d6-4146-a0fb-aa0f6090af82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21c39a92-a268-4a4d-a37c-d71fbbf273c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ad5fb6-de64-4bf5-abfa-3de7b9a759df",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135e93ef-4952-491f-879b-622f9e0e70f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb00a60-70d4-45ed-9604-305048771bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed415715-8a66-4151-8f52-f2cfed20236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d3ab098-9177-4835-867a-a1aaca4d9b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9b47d1-c45c-4fda-80fc-d4368cff26df",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef41ff7-334c-4e7d-b291-3eb0aaeb527f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365571ff-24ef-48ee-a48b-c776cd84c996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c71a0-c9a2-4455-81db-59986758d7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "782deb15-66ee-4ea7-b85f-a08265adf1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9733dd2d-adc1-4dce-8561-8e8c5627a215",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5a0a0b-7cba-4115-a705-9fe4f50f2c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcbb5fa-643b-40b3-897e-9e8f7327a0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0649f319-337d-4851-9d0e-5e3868087d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "114fe06c-49b8-4461-bf89-d6431e04c152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9149b2-5fe0-45a6-b9a1-f551eeb9f020",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bc0e54-5ea6-468a-8aa1-9bf42004d87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508a3a69-8f03-438b-8d6b-9ba5bcd2b274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53787ccf-c5ae-4466-830e-218f0d46a472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7560702-d7fd-48ef-a8b1-b75125c36071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5202bc-822e-43ee-8502-71c20df83b7a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b07b8e-0399-4253-a43a-9be78ad78407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d46435-98a8-4401-8e10-5653aac7d727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c8c645-1621-4922-99a3-ec9978493a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d71f147-6fe1-48e6-9ced-ceda8f7170fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312c9d00-bf59-4274-ab82-0464ded2b5ca",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31331ee-11cf-4fce-a69b-d431d573b52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7593d093-26a8-45e8-b2ce-8db2ddd18841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d006558a-5321-4813-a710-5e2aaeffe859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d089ebce-8b15-4c9e-94bc-ab238d6d6889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602a760c-e6b4-4c30-b03e-d2ea6c89d52b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b83b11-bab7-4641-a4c6-e66f5b6111b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548e2e47-cab3-4455-beef-51a0a34fca5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df63b6e-8f73-4776-8898-5e24404ecf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74aff140-8513-4cb8-bc76-04e7a98e9afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b9d31c-b53e-42ba-90cf-38505cd7f623",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feba9bf-e33b-40f0-9f67-5118862bd3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4a6714-4b4d-4b23-b5f3-8852612e162d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22095349-be79-4dd4-81c3-2d07f21c9024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcaa709f-6493-4c57-9995-ae9d4dfc6486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8994f4e-a84d-49a2-8088-5305a5c01e75",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fddebc0-7ab0-49d3-82e3-32b5b5f20cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5c8848-ece3-4fd0-84fd-01a3d3ac63d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bd2592-90f9-4d83-b736-05913838f929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d69325af-06b0-4904-b3a6-741195b9b544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b370604-9366-42af-b023-1ed4672ed774",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d21a4b9-9735-433d-b6ec-672a80473a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6644d928-3b88-46dc-88fd-dc83ca6d5acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7103dc6-6430-42b4-b730-061462969c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d85bdbec-9601-4362-94d8-e6ff53ef42e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdc38e7-13c0-43b0-bf09-a300d3d470f9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9080fd68-eb81-4264-947c-a5b3ec764d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c9dd78-8acb-45c1-a9fa-4982356738ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1490d9-fc26-4159-ac08-cc006751c148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be6ca763-be9f-454c-8ec1-13b3a8b45fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69515545-d24a-42bd-8f5e-dbb06fe293ac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ca844-9229-4683-adf6-926c4fcc2fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d6ae28-a123-470e-98f2-7a171a897e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7525336e-e3d5-40b4-b813-1227d2d3e615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9230b4cd-f9c2-41dd-a833-fd1925f87fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1db7cc3-3fc1-4815-9d38-e3727ff13fc2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e590e8b-97b1-4348-b0e4-d7628c395549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017cf2fd-f5c3-4923-a1dd-5a21a696e0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7c6dce-312c-47bd-a1d8-a13605f23f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8e9f1b-7f73-46de-9f42-dfecaa070b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da119ac9-3aa9-40f8-8d33-63f7d755852f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f509ca4-7fe4-493e-b79c-36d87c362817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b204553-ebdc-4eb5-85cc-679f9e2931f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e27d925-2c0e-44ce-9b30-cd9e514dad54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "101c3063-ad18-44ba-9a1b-6d0031f1d355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3073be52-88b3-4bea-b2eb-1d214ce402be",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4a9aff-efed-46e8-8fa9-d5ddc15d9037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b026e596-9e30-48f3-952c-eef2f1db6222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493fb2cd-bd49-4f75-989d-80428faf9723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef69860e-eb29-4c9f-98b3-33fe0fed7450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca09de6d-df75-4b0d-bc00-cbd5f7b22ae5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab380b3-3dde-48ff-9677-68030e65ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b47f1ef-67a5-4b0f-a810-95a1b3d7a6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d544ac8-69af-461c-a76f-64723ca6fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4626e6a0-0d62-43d3-9ba1-85b8e7d0e38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9913bfec-d2ce-4046-a5ef-51fb125d538e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944daa07-1161-4b94-97c6-bd8d6901a94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3211c4ab-72b7-4c35-8e4a-e832256cbd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98251716-3663-4a5b-b3e4-67fa74b587c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02297689-896e-441b-a15f-c6119b138c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51b6b07-fccc-46f6-9bb8-156b068335b9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f71ee-b861-4348-8422-fe89e4db5f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019b405f-ba9d-420b-b3fa-f805544794f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f838e-f953-4584-85c9-41979a913c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdd0e8a-4b99-49ee-9218-35c4e8535085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660a9bca-d22c-4638-8a8f-5ba5a44b276f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1763ae34-1845-4bf7-8983-55f37c0ff8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35b8bb9-49cd-4cdf-a93a-60655a9e2fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5f3619-a7c7-4d86-a349-49e73e91067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "681a7023-1409-4af5-8cda-2fab6750f0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362c4b9f-a5af-4ffc-92fd-5412b9b8de34",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294281e4-2d40-4bfe-ac4d-d406bee03533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49252e0-48e8-4ec2-b4a3-2d8b3f451ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fe480a-0ae6-463e-9839-bd3f7b2e76c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45eae69e-b822-4058-a85a-5f371dac3a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73c4013-1073-4536-9739-8cd0e32d4c14",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83444e0f-0d9b-41d7-b62e-34ac36bc525e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801fb583-500b-4828-903b-2f8d5ca32ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8eb886-072e-4d1b-a1bf-3d3beb9266b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f3beb1-888d-4793-a9a1-cc728d08be7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e77ff5f-364e-4601-955a-282301aa0216",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35edee60-3280-4a61-9be6-f1fb97639c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319ef0eb-c61a-47ce-b317-2310eafcac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33301433-0fe3-4841-947e-78c2f0ad0347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39cbf276-76ed-44dc-9a4d-d8b3669fa6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd21379c-9a56-4412-8a81-9d1373154888",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5c1849-05cb-4756-8478-53535302544f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5899d7fe-d126-44e8-a64f-4a09e9184e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c587a782-608a-4878-a912-36c16efbaf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef07c7e7-e0a2-493a-96e0-b5d4c7ac3a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2a345b-7054-4334-a06d-66136668f95c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edc1878-136b-4305-b912-7bd917d3b348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89093f65-14de-4a2c-a766-bcf2d6fbbec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611e87af-2cd5-42d8-93be-0cbbf599b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dbce52-3406-4eec-9251-02fde2dd6f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a741a2-f66f-4e45-a396-420e97b7dd96",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca21077a-477e-454a-a7c6-8e5a4f366261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595a9622-a784-4046-8238-d7463f92aacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bee23b-adef-49ce-be8a-8e76cff71a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c10f06c-22c0-4191-b973-df597880f599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713472ff-1c8d-4134-a2ea-0e56839079a9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe9d4d3-19ac-447f-89ce-6cfe3894f259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a341379-68c6-4894-b59c-2058d28ac587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d6af1c-eecb-4e17-a317-3848f956974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdf070e-9ab7-47bd-a5a9-67441fa78810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4153e0-0d4d-4dea-b7fc-9fbf4334cf6a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d7231e-9a75-4016-84fa-5362f151732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f444fa-9efe-4c66-9e62-af3ad4bfad2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b83ad57-bc03-489f-bc04-47b944c72c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ed3c9c-01c1-4e23-a446-a875d42af5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e979d867-4fe7-4712-92c1-5a8621573cbb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5232ec-2954-414f-abfd-e72178460d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de902ca-f37a-4162-823e-9e5f375d9c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9946660b-e193-4a7d-a653-b3d0bf46581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab4f2c4-fd64-460b-885e-71dfd63a9e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ad3c66-a677-4441-9f8a-0b93411ff457",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e584dc0-c2e9-4cbb-b514-dac82b45a049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9da8f75-2d15-41c6-ac4c-29fa04f6646b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5e85a6-c8c2-4f59-93f4-e508825e9e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5234ef06-69e4-4a8f-ae36-e2d8b798d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6438631-6db3-4168-8892-e8d42ffeb599",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c353453e-c7e6-4a27-b058-65d33fa54647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6573aa80-bb21-4356-8cc8-17ff5e828c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e32c16a-47f6-4be6-85ec-1214cdd18e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc0b444-b149-40a6-847f-addeb961a15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ad1c00-a122-49ab-881b-8d77b87c1ab7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53416575-7f55-4fe9-8d27-d5896b766dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2d739e5-1ef2-47fb-b4ff-0a8bc4578b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6c662b-bcfb-48c1-b383-95f5a3ac07f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2930b34-c4a3-4c19-b215-d33d84d11efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c967d2-b728-48b2-b832-1175228560fa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434f3ad1-2064-43d5-9ee1-b8288561f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5946e47a-099b-43da-a9f6-72c43a07dac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7a6f9c-8bfd-4899-94b7-4352675009d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae672fd-3c94-474b-9ceb-7612817c4686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8766744-e377-44ea-808e-b56246e3b21c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9879ab-15b1-4c0b-9e65-991c2e0beb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3f6c74-ea84-4bc3-a85a-9f5f01c3de4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39362794-832a-49bc-800d-d87b00fe65f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "249d8537-1843-47fb-b98e-e2482f8f907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e34b161-856a-4b38-9b90-98020cc94d07",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3325b25-11f8-4039-a9f6-4179d04d7b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbedc20-ffca-4e51-8680-52cf3a9cc56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9728a0-e245-4d10-8422-b48c283bb4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1beb2c3e-08b8-478d-84ad-511f6f313175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfaf4f6-b5f5-4de5-a3b9-830431badeda",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4172d862-b4ba-4f45-9c2d-daa50231de34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fe0302-86b6-4ccf-84dd-989cd2876aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cf904e-42f4-40ca-b670-2efe21225c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "557d98b8-5754-476f-b978-1ce693fb7d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bed6c57-5702-4890-b396-123c532bbbdf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601ac2d-6a24-4e58-a937-838bd32abd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fccd48-07fb-469e-9bc2-cbad59633710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbbeda2-4ab0-4b60-ae54-cfc7ef5b3611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "092800ae-ea29-4939-be75-e86c29f4c7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de610565-e5d4-4abc-9baf-deb48b3a3ad7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a6d62b-6258-4d2f-bad4-e9b72713fef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef81a3e6-ad63-4266-b6ff-8272a7d75b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480f6a38-c9e3-4ade-a1ad-c7b317142790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "71ab97d9-759a-4f46-946c-5bbe0589cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d63a96-14f9-41f1-bafe-17ddd1fbb473",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26990808-0d35-432e-99bb-cba9b7745ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb65e988-6a60-4ef8-862a-acf5d111d6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4783c4b9-7ebb-4407-8e98-15b0be203c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4030125b-e7fa-4330-8f5a-8b53b9fb50ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f293218-3f99-4ffc-b00e-c385708012bf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b12443a-0168-4dab-8f0d-fc7aade6c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53955181-b673-44ce-b46c-7f3ed0aa5801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988f8b29-1e87-4360-8e21-aea851cff1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db0d01d-5acd-4270-8bb7-2d4f3d431a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308c3aa9-f6ad-45e5-9a88-2d14d96255a6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79a5b74-a5a8-4092-8a9a-1d86a714204b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f3e7a2-21b7-4e28-9494-e1b6b8658ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d132f8-7594-4ba1-9cba-18e7b1621b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaab2b20-cba9-41ef-b5c3-7c240dc0e430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d3d961-6be9-45c3-b6d6-5705c1485423",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4d37ee-946f-443f-818d-4aaedb92b8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fbffd1-1205-4b3b-841a-42bc2bed1ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335b05bc-c8d2-49ee-bbbe-cd78d447e2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ca58d2-33c8-41ac-aabb-3cb821d80a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36242956-6e88-466b-880c-af4bbee4fe4b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a58240-0c75-45e5-8698-6ccb6522113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6c2daa-43d8-4a9e-9f79-8c2098180184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f58889-e535-4c33-a3ad-54def0215353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1d4ab2-aa39-4c12-9987-b70e0f49ba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02f542a-3761-4107-8897-2eda03954ae8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743fcf4c-6558-4a01-bb2c-3c03680aa588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8594ce7-afc4-46ea-8489-2600cd4fff66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6925b72a-eede-493a-92ea-99792af422bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "173cbacc-072b-46f5-9ad3-6077bc1c9037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991ecb07-1b87-4f9b-9151-fdd889e09b8d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9e8e3d-9ebf-49d8-8a99-1624329bde63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a857eb-dc5d-4ac0-a5db-68f0aa52f18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8fa031-3160-40d5-937e-51fe6e8c82b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "130fa759-7ba2-4b86-95cd-0cd83a6a0151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeed920d-6321-4ddd-ae70-dc8d8d6805dd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce5426-c800-4e70-9a6b-cdadee609646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1b959e-404d-4047-98f2-1fa405a0f526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d05a341-d35b-44f8-b65b-ac807dc794a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccff83db-6a66-4714-8598-7e711cf7d2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8d30c4-65ec-4a5c-bce5-55f3e7e325a8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9939592-490e-4479-9cfa-9288046200dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3350fad0-1d27-4aa2-81f6-adbcbe258bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ede03c-1625-47fd-b464-5093aa73ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1922186-c20e-42b0-a637-3774a8e24479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e8809c-7026-4565-acf1-4eb982dd3dd1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c61f39-af5a-4bd3-b5b2-efdede1edb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510d10f2-3237-4f17-9522-408b30223282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be08cca-e0f1-49ba-9d7b-f7dbf9dfa076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b92ab2-3db1-42ea-ab8c-bd125f118812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2245da-249b-400a-8858-ed2b5b5e4f93",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0afbb1-54c1-4b0a-ac29-dec0888eed6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a26460-75a9-4649-a965-f66ba9f05aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa82b8d-e94e-4ce6-8913-01326363442a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba15fdf-c2fb-4353-b74c-3114e2ad2068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf7a8fc-a9b6-40c6-a460-ac9666d277d9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f204090b-56b1-429e-b578-f1fede526b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e63492-bdf6-4af2-b211-a8db1582ba36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db976463-feb1-4ed9-895b-88150e2243a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd61757-32c1-4b26-a8de-a91432a1a353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46238d5-a006-4d91-b679-71fc356dcd11",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910f7c21-9a15-4518-88e4-bca291bfee5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534dc7ce-0dde-4b45-bc38-0965d909f776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15be8683-c4c9-414a-a454-71b573cde4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf10a7b-0355-4365-a1e9-e9e2ee6956a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065e5ecb-a958-4fa3-b08b-96ee2a4587a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dd4583-cb5d-4879-9a15-f36c540fd34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c8eab2-5602-4032-9657-49cc938fd8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8de6697-3b2f-404b-97e4-519c96f456f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8268f4-bb62-47a3-8b83-4d43a911bc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54789f6f-a264-4797-ae04-363a8c31c459",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f0787-a953-4eb6-81b4-51112d449320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70582b25-95cf-43b8-b3af-5762ad9f61a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f58a703-57c6-4795-b5fa-39b80073df35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "396fe017-2f47-4c2b-9866-ffd1b413b99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714dfbad-d662-4c13-a80d-b5a2a05ba359",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc06660-bda7-4ee2-a0ae-faa0f84d9c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b564880-d4c1-456f-b283-475323031bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c46eb8-491f-4ae8-a8b5-d002975b2589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "72338558-4e6b-4a7d-b653-b099e95e24f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dabc3cb-ed02-4214-837b-4987358d4202",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d73380-b9b1-4759-a727-399f1249d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0235a204-7c87-47d0-8f0f-45177cfdb750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba87461c-743f-45ee-b344-dfae208f1cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f675d7-990d-4965-94a1-c59800f83715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f957330-3260-4caa-953c-a46d00358f6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf738504-0954-4e5a-9656-8415317b9869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7d4e8c-f071-400c-afce-de0f32c8507a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3490dc60-a790-4411-affe-47b5c0e27d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a505b019-f796-40cf-a1a7-7db71a2b18b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153c15f2-b77c-43cb-9dc5-9f176e83458b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e78aa2-4589-44bd-aaa5-e85ac6614477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e246bc6-7b1a-4012-9101-94086388b512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa5f999-6537-4d34-83c7-914fe39d4e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "695f4b04-7e00-4911-977a-91c1e2476822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d65582-1e3d-49ba-b2bb-267ad9e81177",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab10ed2d-9d84-46e3-a739-047406a7b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d610df-dc27-4659-b2d3-ea90255a129d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39964610-cbaa-41c3-b74d-f2a1bb83fb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a852d8d4-d721-46c8-ba26-29a29592ae76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4bc745-3e56-4ac6-9295-4e5b1600b14b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e1a6eb-575c-4900-85d1-dcc3bd641c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34cd0fd-e309-4839-88b6-d74617b1fd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3453883e-f174-4607-aeb1-714fd18fe3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "11aee9f9-f0b8-49d6-b78e-ec9c828cf2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87595aa5-daba-4a61-bb43-6316c6dcec4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f39ff5a-48ae-45f5-ba2f-bce260cbb9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15424d38-5983-457e-ae55-083ada720a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa65bce-b79c-4a79-b721-0441d454691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf26dea-1c29-4fab-92a6-1dbe7df305c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215f1024-d0c2-4fa3-8a08-82a9414ef2a5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414b5ec-1ddd-4700-82d1-a0c721ed0904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be572608-5db6-45cc-8189-10cddfe6ff80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5d987e-3654-4208-8f46-ddc5a9f12570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44fdd8f1-46ba-4d3a-b969-d1e28e2fcc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5456527-3fe5-4bce-ac58-4c0f3dfd3490",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32e8cd1-a48d-4cfc-a203-e82fd0162701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9a26b1-d925-425e-953f-6c33c8d64763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651cf135-5abd-4866-b1ff-7995e1cca101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "528c0494-bd74-4648-8ea7-139d8d974ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eb9a2d-4a4b-46fe-815f-c16cd6103024",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8110f1-152c-44fa-a8a1-74a6ae233745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c34df32-cddb-45f3-a7eb-1c71a567f1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740ffd8b-af2d-44c7-b654-257b89a90d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd91f00-8da7-4b1c-a08f-d009ffa7efd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fe993f-ea80-4673-beb6-c3e1faafbe61",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f0186b-1463-4b16-9ef2-dbcfe46c3b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4adc96-7d1e-49d5-8cb4-6be09b0b7df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08f6e4f-2e6d-47e7-badd-df7059227438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ae2c37-7124-4e2d-b62a-904880c89872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c100eca0-ea0b-4e30-a6e5-c41f8b2f510a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70bdf23-7b10-4d53-8bd2-a768b4412741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8718399-ccf4-427e-9876-60eb5c44d9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e799e9d8-5997-4b8e-bc49-f4c55d90c20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b067cb-c265-47d9-a504-e46e3f97f727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341ac347-83fd-40de-80b9-0ef8194e0792",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab536f3e-f13c-4a66-8fb7-b9a4b845661c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03625ae-5ce9-4d43-a302-df0fd31e1ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc96de9-6651-41f2-8904-a99e25b6ca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdf8dcd-6de5-4035-ab60-e927296135b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b8399a-aa98-4840-98c9-95478089bdff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffa5e61-a1a4-4505-b090-3c6c75921555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58230432-e666-4eb4-af74-26e3a18bca51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892ad931-172d-4330-b9c3-29411e4a8d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f54ceba-fc8f-4137-a4c0-00b7634a1599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd90cf48-e62b-4830-8f69-4f2757da9122",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83830b4-cbc3-4f75-876c-a6f390fc3d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73530a79-f3dc-4f68-b47b-b7056d2e8e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c933256f-7726-4e7c-89a3-03cc8410c9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ded074-b7cf-4768-b35f-36d7c8a4c952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa0febd-191f-4fc3-92a8-dead0f802994",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521dc94a-bc92-42d5-8241-8eca17d8b4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9dc311-613e-4367-831e-d4ed09e5bdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e159309f-ef78-4893-bbd3-f1edbd3e0465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1804f36c-8b5f-4f8f-8efe-eb04d5baeb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c546f6-3c88-4bc9-a855-256a5010eeac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d5d2e3-72ac-471d-8485-bce920a671d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bc4f5f-f47c-477d-a27b-ff10cbc968d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3e04ea-64b8-4b09-a9ca-25bfa8fe62c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6836dbc-1d1a-45c9-a384-c2b7e36ba76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e2c97c-e46b-47fc-95ae-3205cc430604",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aede27-0231-4cbf-9792-55a47827cc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89041f43-fa89-41cc-8296-4f68f4a47287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ed8a6d-59be-4589-bcfd-0b3ab453477e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2129a691-e40f-4b0a-8f01-b507f91e1b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705876c5-ca91-4766-9df1-39d16ef890c5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dac4390-a6c1-4882-84c6-7e370116129b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2f1a48-9843-4e8a-8550-a0adc1942b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20975f1-1915-401d-916d-481a31861744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "481fdd80-be45-4357-abc8-d1c53ed1291e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2f4ae0-ce65-4aa5-a79c-5ca96649ef7d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd31a2e-38f2-4e18-9698-f24e290c0678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d1dce4-c2f8-47ae-a277-4a51cf2328d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d30998-a445-48f0-a4e8-6c24198fb033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3952e7c3-b63f-408d-8a8c-f8a5a7956ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b5e9c1-0e45-4cc3-bc9d-2a999cbdb865",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f171a34-5cb8-4ac4-a646-d1b5cb3bdf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882bf3fc-6576-47d2-a7ee-2cf8d976876d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0269bb6b-84e6-4be9-94f1-4ece3983c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "675ddf92-6655-4569-8c74-7005add3ad26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea1d86f-cf4a-4dc8-8c74-47ce96b360fd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3664ebd0-62bc-4bef-aeee-9a9d17d4ce7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68696a9c-b598-445d-add5-592ab63e4ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe02d2fa-09be-4fb6-8121-7cb66be31451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc626dd-124e-42e4-9e42-341503b61b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43440b4e-5f0c-4a97-9cac-04008f3c7f2b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c831322e-e697-4f07-83b2-07e79a19c07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b251c03-682a-436c-adb2-4ed26bcfdbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4514b803-a98d-4510-bb15-f24a1e93f9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70d67aee-cfc5-4dbc-bd37-0465837a1889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0589ef88-c05b-4c65-aa22-8c1cb7aa15f2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa7c4d9-c388-40da-9e65-77614468bbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f53a243-806a-4aa0-a51f-e7282f58f07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c048cf-e04b-49df-b961-92d95df1507a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96bdd20-2f34-4d54-9c29-4c071d98334e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c4d2b7-6306-4c7c-a0ca-471bbf9071cf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0621790-595a-4034-a619-f2c4c4033de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130eb776-cfec-4757-8c9c-cecc47d36438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e93981-c3aa-49ba-9759-a7c55da4a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "789731a7-0da0-487a-8dcb-eeef5b327036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d23cfa0-62f1-409d-b77e-b4d43ec01cb9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b44c9f8-3239-44b7-a925-ebce057b6e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0285f5-1980-495b-9079-8188638ead0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a472c5f5-38bb-4fdb-8978-82ed574641a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "239cf347-949b-4027-8473-3868e27d0850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf0bab-ab43-4a3e-bf9f-f95037300fc8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b50579-8017-4bcf-b4aa-5b6e564f539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad5b5d5-5634-468f-80e4-fe4209bf741c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971d3374-2d2e-4363-bc70-0e83c302e32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d8fb65-6e87-4a1b-b7f9-85e49d7c594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293ddd2f-0bd5-4ef3-97a2-0f6d622330ae",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb907722-53ed-481c-b962-28205915dd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f93981f-1e31-4ac8-b00d-4c222ea1cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dca8d9d-0891-41c8-ae05-8579468d44f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "844337e8-b794-4c35-97e6-ff62896dfd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e616b7-a7cc-4d63-956b-1fe87d289ec0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269a5d15-f37b-48f0-9051-6ff58f8afd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034ae4ce-e598-4fbe-8367-5a362b1579da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccb8531-c480-4a96-9c88-fed647bb0176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c3f813-9749-485b-b0e9-fe4672ea4a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eff7bf-860d-4ed2-9524-026d5fe328dd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a61ca8-1015-414f-a0a6-4177330c49ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4b2103-b824-4da7-bf1b-c2c60265e8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69f812c-50a7-4dfd-9adc-51887497916d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13053106-db8f-4a73-83c5-d4ef5013cb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2d8ec5-4402-4c2e-bd8a-514a48d18633",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c55a653-7ca9-4eec-815c-b4adb8b7067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b680f55a-7c39-44a0-9e4b-08c7ec110c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5243a17b-3a50-4c3f-99ea-3105c919eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e640ea1c-c92f-494e-b160-3be7398ca9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bc4041-094e-4001-85ee-b738d72a6bdb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24f3dfb-b333-4bb9-af66-8af8b6c5284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92912779-4c93-4cf6-b96f-462bc6677ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32d2432-811f-45c7-8f05-09735452cf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32759d77-492a-416c-9b23-6344cfc6a176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59076327-55d2-4783-b1e5-1d27d6f93909",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94098222-d00b-4c0b-8c5c-c9c23c0b0c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cb8fe2-aae2-40e0-98ee-c784108cca7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af200e6e-804d-48d6-8190-bde8d934e27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b059ba50-ea7c-4dff-998c-5e765b93ff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bc5f45-7bdf-4750-abc8-789264166003",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c3a7a4-eccd-4a5c-a013-72fbe1ecd93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6629c147-32ed-4857-9c69-7e8fc4334390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2f5c60-ec4d-4b5e-8895-fd017ed33f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe2e32f-a8c1-4389-a210-b396a3000eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aaf3a5-ac4c-4ebf-a7f0-6e272e787dda",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76855273-8078-40ea-a0bc-6bfe793b6eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ebbcd483-0af7-4a98-a662-d51138dc5f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c89f682-de85-488e-afd7-7abd0a7c6b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "378b0848-d885-4fe6-8960-36863743718b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56055c81-3a9c-4d2e-834c-c9c9ef78c329",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3761eb0a-764e-412b-a891-9bbebcc81831",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a53bda-e48b-41cb-9265-6bf4ac729cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37ce50df-8d68-4fa9-b24f-293970a28d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dddb34b-ba2c-4e2d-9173-31d0250de4ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c262746-9b8a-422b-94d8-7c59bacfc096"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51fa068e-458f-404a-a219-4162fd687ef4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ef612d-548e-44c2-80f1-52fee523b44f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc83342c-25f6-4988-8ec6-a4ee81a1de4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6463b5a5-0b8d-4919-a146-1e3dcaf5cb6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecf6a47c-7e01-4003-9936-d9a1715647b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84a23279-7408-4c9d-afba-fdb6970f0676"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7541a875-d27d-4001-9081-522a41923cc1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e0bac56-da13-4251-aac6-17a8f19a5b9c"
                }
              }
            ]
          },
          {
            "id": "502d976a-9a0e-434f-acd7-72ec4fb920dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a46ae5d-bae4-46b6-bd50-54e1c8050cbe",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8bf4ec14-d702-47e9-86b7-cf2ccb1be473",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45ce951-346e-4f15-8247-11698d19a117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "779029cf-427c-4ef1-a434-7fc781d632cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950b13dc-5fc3-4a32-b695-9aaa4439d3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0842972f-e42f-454b-84dd-dd01bb5d149f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "379f7d41-4298-4e13-8f93-f247bb14a7ec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "982ff808-75c0-45f8-835b-6cc3b5180c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f0c6781-8c81-462f-96a5-15e20cc26511"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08c185ef-6b64-4160-a102-832487002b1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "314f6019-1f85-4104-9f4f-191b18decec8"
                    }
                  }
                ]
              },
              {
                "id": "890ace86-d2bc-45e1-ad7e-83d79296a25d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25e917a7-29e7-47d4-8fcb-2886feb59cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "481500c7-d62e-4b49-8c7d-b06f3bc380fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5423eb1-2c33-49c8-abc5-b00908459cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "322ef99a-3688-4ea8-b8b3-729476a285e4"
                    }
                  }
                ]
              },
              {
                "id": "3dc92b68-4355-4669-8fb2-3d42d3144333",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37b0c171-7b7d-4bdc-9232-1b07f49a00f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "957cea11-8bae-4398-bcd2-2702208345d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b6d7923-b8d6-42de-ba8c-578f9f819f3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "abab9966-445f-4ae9-bad5-331a445dfd1d"
                    }
                  }
                ]
              },
              {
                "id": "55d6fad7-5528-47a1-8b80-14cf1d2bec91",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0549bb10-4a0a-4236-beb4-5b34146cf67c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2ee60a9-0758-4c5c-8314-523f2df36957"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7590841d-47a7-4da8-80a1-d8402221455c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "87e1eee2-8aa9-42d8-afc1-c7aea799d7d7"
                    }
                  }
                ]
              },
              {
                "id": "223b8f01-2569-4e9f-9d43-f433ad9833d0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c0add4-ba74-4014-b4b9-ab5f67e0ec40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd7efaba-3190-4507-a6e2-212184cf0436"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e082acf3-bd63-4899-b4ae-5777eb1ba79a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b3863b8c-8e6b-4a80-936a-61b8f767b412"
                    }
                  }
                ]
              },
              {
                "id": "eeb47013-b900-49f5-bcae-8d6a02c718a3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c76c4ca1-87ff-43bf-860a-b08062f13d4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "240a5825-4249-4ffb-9135-5a5da8c216ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "149adb3b-6537-4a8d-9747-a9e41b7605f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "effc2a4e-690c-451c-96d0-b6f8b13df1df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "462d168e-5139-48e1-9f93-2249260ee1f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd17e2ea-57be-4468-bc48-d3f9e6490f88"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86c9cae3-c971-41a3-a748-8e28e4cac88e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5bbd066e-8825-4815-8b4b-4f69ef4ca550"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26ced8c9-7a15-4c81-b8c6-8cd39dd112d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7a29b40f-06cf-4bcc-a6d3-ad9e7f612145"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5efa76e0-7b32-49d4-bec5-fc27d494db72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "deb9c9cc-6c89-45d8-989c-a4ca5893d45d"
            }
          }
        ]
      },
      {
        "id": "9bf5a664-e79a-46e4-b00d-b4cb5ad26208",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "32299ab5-4daf-4176-974f-dd114183eefa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a10dbb2-f269-4e45-ac6a-4e5524981113",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ef088fa-d227-4a57-a3ba-3fd6ace66c95",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705b7fb9-e115-4972-af76-47961c19f0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b549a398-20cc-40fe-8b72-621deb6449a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595da049-6657-4af9-aa9a-17855c6037f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2298df-9d79-4887-a8d1-d642f8c74196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f826ee4-baba-47d9-82ee-d6eecc0e2144",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d39e3d0-5a9a-4628-b5bf-2aa6a597b06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec7d48b-395f-4cf7-8b2a-62cc650673a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6bf37a-e13a-4bf2-af60-2cd529105712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb71dc69-25e9-4f14-aa1e-70303ae0cf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9fddfb-6ea4-4ecd-8b7b-01e5a300dc7a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c90b75-5903-4571-846b-ffb7a313fde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64d6bae-654d-4ae9-b580-9688cd9d970d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080275b9-7d42-4b2f-b686-882f443ee2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6185a9bc-c4a1-4c4f-869b-abceb08661fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c2ecd4-8423-416c-b85a-63518a857599",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed473e0c-f6aa-4186-ad6b-95114e53df22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7ac9c9-00ad-47d3-9307-d9211a81c665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe41e3a-8aa7-4873-b6c1-20ff8add8801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb6363d-8b32-4321-b51b-4754375bf2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20e67ac-6896-4fb9-867b-2664d7e6f552",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2db8360-cae7-4da9-88fb-62a29f742ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24838e9f-31f0-48e4-8a92-52eab8d3eb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cffcba-95ea-4f73-9eb8-4538c796d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddee25a-d992-4ac1-ae3c-4efd113cd84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8041355e-867a-425e-9a08-1822d236b5b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153f7c60-4878-4e48-98a4-8f9018623b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f251f16-5aca-4b99-93fe-131bbe6bbc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e833e63f-f0a5-46ff-895f-49e1902506cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71abfac1-f903-4194-a035-8a2fbdf7fd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d766f632-559c-410e-9568-3f87c84da8db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3299a0b-1785-42db-bced-0acaac33667d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc38c9f-9744-4a8b-87cb-67d453d37c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd83a6e0-416b-4d4c-b646-4579c9438c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25a095d-7f47-4838-a277-66b5293d77dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401a0e16-b199-4ae9-989a-c886d83e8a36",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7c966d-09f2-460e-b020-b73add803d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748e9485-9510-4b25-9bae-fad9d67746d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59a3abd-f04a-449b-84fe-c9a25c58b60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36714a65-51d9-484b-aeac-25b8426cc1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f539c1b-83dc-4314-bc37-0de127294ea5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b0397-65c7-4ce7-b1bd-dc214feac8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083edd6b-03ba-41cc-818c-6d708f224659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743dded2-676f-4548-b7ec-83a7e0c4cf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48dfd2a4-803b-435f-9d34-96563aa80d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d559b5-0eab-4835-b803-1417f1e9c72b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c0dedb-34f2-4585-9636-57a186034599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8955b3ff-6c48-4446-8576-9015b9bd2bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cc172a-ea81-483d-b62b-55804a43b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "053032c2-de86-4bee-93c8-a6d6de950184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aac6ee-b0d8-4487-8f7f-27ebccb66a57",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa7e2da-d8c5-4684-865b-07d9f1773c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a7c963-83ea-4a40-af6b-0cb4a3236a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dccbfc-25a9-4dec-949e-62052459ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0182e315-f81d-4f2a-babc-29a317af7efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9f40ac-ca78-4ae5-8567-7451ad784ab7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5009891-108b-4a08-b069-b100a99cbc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7100f17-b8ff-482f-ac61-a54189e1d740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28ac914-8d5a-4f94-8a7a-614a659adcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99cccb0c-80ef-431f-b783-7e8daf8cdb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fcde42-2bb4-4298-b110-1d41cff62185",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6135088b-be44-48fd-b1f4-735333f625d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d877a1e5-d824-4cbc-95f1-90da1c77d6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac150ca-0e59-4df0-a2e8-4826b2e8504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6641fcda-48cc-47d4-9bda-4193ec626c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383a2a61-1354-410c-9158-e453a688732d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8598e8f-0665-474d-8d08-be7dc7bc904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5e00ae-f573-4d8e-879d-2e3963950473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd566b4-9328-4918-814b-107bd6d4185e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a06524-2b45-477b-a77e-b5383092b96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a32fa4a-1a5c-4c93-81ce-81664ae0c933",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1646b5c-f87b-4a85-aba4-1a78868d636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df85aee-041e-4595-98ad-9edd4a65c5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c485838a-36c4-415a-9130-a0ae37640345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "507846d5-af9f-4823-8efb-4abf53ad764b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631959f3-f2a5-4c09-8215-0486db8e605a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c69fcd-ef9f-4815-991f-25cd10c6e6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29834ca3-6ce0-43a7-b398-50a4d469edad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d64eae9-88a2-4d3c-bfa0-8915a6f872e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d06b1b5-1eea-4e7d-84e1-0d2bcdb47309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38620ed2-88ee-4360-92a5-f9b9aa7cc92e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573c7867-22b6-4b62-a8ab-3947597954f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a818a9cd-33b3-4eb4-99e3-6c5e17b4e34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb16d0d-b0f9-45cf-b6cf-c69c7a82de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5135786-4461-4337-aded-720a90282139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c6dc42-e244-48ce-9f23-0399e34f3e76",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf592f2-677a-4d69-b34d-5a7dc0578238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afab132d-50de-4336-b3d3-782818e6a684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a943e6-9b15-420d-8ab4-562b0727a59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ca718b-189f-4d04-9879-65a106023155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744a520f-4f00-49a5-b81a-65548d73f955",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbdc72d-e925-4880-a681-a4e6cd472fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140fedec-db94-41bd-bca8-2ccf32edaca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60af150c-37d6-4b9d-880f-0002c1479bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7968c01c-3e6b-4d6c-960c-dc228b5a70e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4add9fbe-822f-4281-a8f5-e5c5ae59130b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ecb136-5808-4ab5-b50d-c70e14000eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb396a6-f739-41ae-ad1f-861cc24ce986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9eff63-0e2f-4020-8bc5-4905347a806b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe0b5f1-45f7-4393-a6dd-e87b11d0e4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e442a964-f71d-4aed-b28e-a6fc90be91b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f8902d-8791-43eb-be00-afd9ce07e0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65937cc-7e16-433f-85d1-7e40c58b1e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d14598-89c6-4042-949c-e9e7fcb2f165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b55af98-30ff-461a-b103-261cf3c17ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01180131-8b8c-4dbc-b80f-b1fa036aabb3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0163106d-4262-46a2-adfa-5b233ffd89c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c648cd50-c349-4cbd-b57d-ccf1ac9888ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af279db-24f7-4755-b02b-34e64cbc0ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3da516-62d2-4235-bed4-d6237336ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6a23f7-e60b-4a74-bb38-81cc7ef38642",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a7be6d-41fc-4095-8517-dbfa8235922f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574c27b9-c3b7-4bd9-a963-f4d0833f785c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813105af-c244-4d45-aa9f-b3412ba7c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4896d4ea-7c8a-483e-8c18-14780892be36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397f03f9-40bb-498b-8487-83d866f7a9d1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8b2d12-852f-4d38-a19d-a7ab93c21acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f7bddd-2bd1-4401-a1a2-c100e9970be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bdefce-0035-4b8a-b5cc-57ec743d87f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c152c9ea-56ed-4a9c-bbb6-7e7b18c7e5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bfd022-4413-43ed-ba77-d2a783fe891d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6c206a-22f0-42ae-961c-97ea49867f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f74c3a-28e6-46e4-a3f5-4d66446b7bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011c9e96-a40c-43e9-8241-b2bacce2494e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8a10e8-d434-4522-aea7-9466913ca396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c74a3d-22a0-4d46-82c9-265a0ae3bd9e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d53e74-3228-4c40-a730-4956154a432b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50b9680-9617-4869-af2f-b48ce42be3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdcf62f-8799-4474-8d8d-f08bfadf5d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f978fc6-aa59-4bbf-938e-ed2a0e5f3441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c9fe62-e0dd-4bc3-9e40-74388508fc37",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c67a330-fa76-4b78-9f32-f0284caae66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a301814b-d07e-40f6-8499-bcd6f1a7603b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ed38e5-ec3b-49c3-9868-7ab107971174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23d89e7d-7e5d-4111-b902-52ba68370dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352fdeae-2588-46b7-bce7-76821c48de5c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668350a-6895-4eac-bd3d-cb5f1a45d9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b221f01-c16c-41de-9a22-628c36023e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3238ad1-1c2d-4e87-8d48-f080691ec5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191aa291-8c8d-430a-8dd8-2fece6b8a46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ab4f7c-9012-49e8-8994-7a09e7e8c5e8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c19466c-33cf-4142-9706-74c6060c49ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860864d1-8489-4efd-93d8-99c6698d7fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7b1d3d-5b90-4c36-9bbf-0b333dc78a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f36948b-d455-41b1-a0a4-e8378bbb9b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4663b39b-3600-4c78-8fba-d3a423d317c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddfe10b-f4cf-4654-bcff-1b1b4c416665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1976e0b0-e1f4-46e7-a0e6-2eeac38418cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fc2b5a-5fd7-46e4-9d79-a554338e5681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "250160a3-e6d6-433d-a4f9-779eab8dde00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dbff4a-37d2-4e2b-ac3b-1c4b5592e622",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e160f883-67c0-4bb3-b0dc-1ecd0bd550ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac792cd8-5612-4ae1-8f5a-665cebb8d5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d1716f-7414-4edc-b545-6847f6821572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ed47a0-174d-47b8-b016-5495fc3a61f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7447bc7-dda2-401c-b646-447d1c080738",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6700d152-5e4c-415a-9f30-ac1a1dbfe510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3381d17b-846a-48c4-be1e-20bf1158f7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d70f9cf-ea16-4945-b6b0-fdd9c03f4539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a6e18d-c9f0-4328-adda-b930818d9e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a92ba-8deb-40a4-8b83-0734f7817b59",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c453b-96e2-45dd-8dc7-58219a09f8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5a9b4a-cbb9-42bf-9105-f5bfcdbabdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8444db7-82f7-4f0e-adfa-2aaec5e00ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "262bc318-7414-4405-88aa-b72533e0f6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e66090-dfe5-4d95-ba26-a2e9dac9049e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84d3a81-b5f8-4dcf-8fd1-81c4eb59a615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e157a7-f790-4eaf-8a91-bd0e4d6b3ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66056601-a988-430c-a43f-cb0a7ae0d3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2af2cd-f056-49bf-b142-2f92664465a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd1ab2-ffc9-4671-835d-bd9b635cf36d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04866d0-dc26-4cc2-b4d1-6e156d0ca3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea2af09-ec49-46ec-8205-2c95f6e7f133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f5b36d-b903-4f96-bd41-5b2ef65d51a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "091fdebb-2a8f-4ff3-b35d-08012aa94855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67648340-eaee-45a8-b852-464fdc4319ff",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30446f3d-c0f5-4a47-91a1-9287a6629a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9446ae2d-7fb9-4cb7-ba27-ca589bb8ed78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81343b43-c16d-4325-8a99-06204af9832f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a77225-5fd2-480d-8f30-97468257eeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729aba73-2924-49ed-8d22-09015d016a24",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b53810-0e4b-4913-b312-add73804b1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a300b5d1-7dd0-424b-a0f2-5587c110d0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8250f3-b240-41f1-a23c-e34ae928856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "453358ed-d3c1-44ee-b86d-1bc34d09a3d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55ee0416-0df8-4225-ab76-ecf55eeb79ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac2dfca7-a61d-47cf-a576-dbb94d11d835",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069bf292-a501-4919-b3c7-bc6d65f1d6c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5884ca85-d818-400b-863c-e88e07c98a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efceec63-6d79-4ee6-9f66-e3995ded31c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39b0f338-e1ef-4e16-a2e1-9353e49fe369"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e92c029a-3906-47ce-abbe-60e316f7e634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c3b23e5-78c2-4734-a50d-f89e271cc062"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f13a1417-9cee-4cfc-a523-b2b0518c1aab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46b37c01-7db8-4db2-9ed4-403af1b9b376"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26edad2b-bf58-499e-9059-5531c3494088",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0700dbbc-d282-4303-a6a9-a0e85ea8e3b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9308d6dc-b5f0-4f61-96bb-9d42ee390312",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7d38a85-1cb2-46a1-aebb-2df7c0f14029"
            }
          }
        ]
      },
      {
        "id": "8552f5f7-9f93-4d1a-af4a-1153874c7bc3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "62ea65df-2a7a-492a-b06c-b0e97901cc01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "749341e5-4066-4731-b414-c9617cdedbb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf3b9595-511f-421c-b71f-0d6c2740a2bd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19222177-881f-4b0b-a596-36e1180fa027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1355c179-770b-4a83-9af7-b59e9c27dd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ff0521-2a02-4b45-a5db-b45adc3d108b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b647c4e5-aca3-4ac4-adc6-2d093ba659c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a127c9fc-6ac3-4d75-972f-4aa7f3fd18bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6238bdab-3e5f-4824-93f9-bdf48f028b13",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbceead-09a1-4248-a63e-b61a8390681a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a24035a-42e2-4885-985f-b3eb36fe5166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbf590a-0797-4846-8c45-40fe856fd93a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1273f2d8-1d83-41e9-9f38-2d1ac1a3f400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ea7ee5-84bb-428b-8b38-aa3ca4e2d2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bace3627-faf9-4bca-9178-51b73adaae9e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58a3a40-70fe-4f9f-bb48-537c9e64e6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e683f8-2c07-44f0-a6b1-c2ebe70d5a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50c3d0f-a363-470e-9d36-6355fa90bc69",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e933340c-ec5a-4153-9096-08501e704ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f08b1f-c159-4804-a9ab-3f086d491e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0192fb0-0389-480b-9304-4a7a5d7e9236",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59a1ef3-db84-4849-97c7-425b4aae671c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23544b31-2896-4f38-89f3-a6e0dd311ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed4f7ab-e47b-4643-91a6-a58cc46b7c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54b8cd1-86c0-4783-a5e6-f8db5a8eb40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad19aec-1c3e-417d-b95c-02b3338fef4b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9013ff-9c11-4ac4-a4af-d984c8186071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a68f5d-79ae-4778-85bf-46ca113122e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4132c5ea-d19d-41b8-9d01-0f51eb53b06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c006336-b2f3-4ce6-995a-b76675889f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c5f893-625b-4b4d-8481-42c0a6c87f52",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92605a9-2007-4e55-b6d6-45cd4b1c032a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c8a9aa-e4f5-4498-b800-7e3d2615dd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28490d2-d33f-4c73-b186-f3c93d425f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521c1243-eb63-41e8-ac1a-042060a671b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e30b23c-86b4-485b-bdaa-d37b8dfd1827",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2233f54-6c77-425c-8c17-aedc69e77f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d1e47e-c0d2-4c28-b6c8-e8a47d106e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf6873e-f140-4c57-917b-90c9d3dca89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297959ed-bfe5-4746-9539-2d439c6925d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33e1ac1-54a0-4ac4-8697-7651b4379abe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03827b7-a16e-438a-9bb8-6202b1a763d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8aa27b-847a-4bfc-84b0-978934bb2618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac7d29c-e9db-4004-bcc5-c81952644d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57523b7-9ebe-404e-8aa0-7286727f8b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a0a268-59b2-4601-89a0-13b9719f1b27",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0cc1d-d1a9-445f-a842-00d92d138f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157edf3f-c4cf-4324-ad02-96e4ab60832a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1822c0aa-f3ef-4477-99e8-4e6171a48f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0b40d4-60a4-4c21-9070-753ce4775e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22471404-a067-4473-ac7b-b8b52cb9a88e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55f37e1-c90f-49aa-a3b7-34a28a563a1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6daa616-dc87-40b2-a19a-e0fcadf880fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8180eb-7086-47b1-96b1-c4fbb6a6d0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8820ec-0d38-46fb-bd5b-7484ddc91e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce43fbc-d33e-4384-b9d8-fcc528e1ec2c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e3b4fa-e18d-48f3-998a-d0a13a186e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f754c38-ccc4-4e23-8edf-1ff362d464bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d052c4-1779-4d8c-a8e8-d4003e41ebfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e3f01a-0bd5-4404-bc09-7a7b186ae621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3315b9d4-0aff-4f85-8c70-a5843892d521",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0067ee08-2bd3-4dd8-b906-3cc9570bb363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae851da3-e401-449b-b911-185529de8662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d016c2-09d3-4128-92d2-542728c479cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e59e91e-9798-4910-bf9c-c035b5172f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4645cb-2e01-408e-bc9f-bcc81c966d4c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281596fa-6573-4bd0-9051-920075926a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e1c092-c846-44bd-aeb4-5e965aed6b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a736d3ea-e9d0-40ce-8c2d-459e562f29ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55730369-98bd-4d9b-bc40-efc4fd7f0eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128febbb-2cee-4d78-bdb6-9610a93afc0a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b046f200-c9ad-4357-a42d-f9d597e90b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b60b517-ba38-4a41-a82a-f394db4984ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e774a474-7456-4856-bd47-edf465830842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92437edf-6b3b-4208-9b71-5db06433e888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a92d25a-4942-4022-a0d8-097dae076a58",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea4a056-20fc-4f3f-8a6f-9d8221b06a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c533b6-4fee-487b-a7fc-aca479e40cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01173bce-fe42-40fd-b214-4ef0f57266f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c2473c-3cb6-4140-acaf-05018068125a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b38bae8-841c-4449-a4ed-662a2d040d19",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f548d05d-2b96-441c-b797-cda981a72f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96464cf1-fa6a-4775-a833-f1cf1261b252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53d0bb0-923a-4eec-991f-22ba73bf924e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2a3137-a4f2-4930-b041-62d29fc61693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21513e2c-c6ee-420d-b603-416788f7d270",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f134d89-3c95-4a09-a820-f43b38664c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5da78a-09ae-48ae-91f3-6c846b325902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcfc829-bbeb-48eb-8f6b-20061bdb6caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eb8f00-c8a5-44bc-93ba-16c34ffc197d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8f2812-867c-4f21-9c6f-2abb6b9aee8a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3e8394-585c-455c-a12d-5fa5475bf66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0469f3d-f5a9-46f2-9a5d-74e6d0e51fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d255db16-3bfe-4d16-a0d3-2d3b4d7362ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f53256-c6f0-4509-a2be-e4a4fa62750d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791d1689-f407-4cdb-a148-a69300bd8493",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60730be9-2edc-4b2f-badc-356cd0eca5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c769e014-d1de-4116-a313-0ae2c5a1727c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e48322e-8aa4-468f-8edc-8c763777a695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1f2049-5a1b-4af8-94da-129c8493995e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895f17b7-3dad-4f02-80ec-9c0894416a7a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654956e9-f848-4b44-89f0-90ffff309622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801c6016-25ed-4187-9316-eb8f06a247f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3ac2dc-3d6a-447e-a76d-a70ae7ae70f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1854c4-14f8-4124-b9dd-bb6d1616e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f89d7f-01bd-4fe8-816b-795bfc7fe0d2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa88d2-cea1-499d-bf2c-f0f718ccaa15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8de139-a864-45d6-9db0-a3bd731870b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c372a7-bc72-470b-ac3e-b4a7fa0783a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b8aac5-76a8-429a-a685-1ac4c35e93ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91f19c9-2a62-4ae1-8814-942c278b7877",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a221760b-1270-4362-91c2-d319daaecaec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f992e8-3975-4f0e-886e-9d9fd022f0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10f217c-0452-4624-991f-748b1d519d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315b87c2-9d60-44d3-aa4a-1925c06bb970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c032b4-9583-47bc-963e-5af06732d9bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82882342-3a0e-4f37-b937-2224e465b9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3caa1c-30a8-4b3a-a533-51f90aa232a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209ee742-53e4-4243-a85f-feaed52c5d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db165bf-c9c5-48b8-b5ff-3a205396d3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d463cdfa-da7e-4c4a-a1ce-d8b9c92fc1b0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8340cfd-7471-4543-b166-e852780bb1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb13d00-adca-4f03-9670-a09b8558c650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c638513-912c-4bda-9bb3-e6173d62cfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177a282e-86bd-40d6-8558-47bf62f1d4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f965f44-ef3f-4376-863e-f6fc993dcf97",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e72a4e-f321-48e4-9b8b-9f472c97a6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4a5005-3927-4b8b-9402-97f979fa4f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894824b8-ef77-4660-a750-2a730ff02a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ced1df-7657-40ad-9bd7-a3b2759ec726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e174349-83ad-40d9-8335-671829b426ec",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642e6aba-0ba8-4991-9809-dc7f88b274aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ab55a0-4b85-4f4c-a61d-003cb9560038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cad898a-0bb5-41a5-8ce1-990767f52eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229c7aec-8edd-4996-8f23-7436bcdbf46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623042df-c0a7-4599-a404-0e2a76df8be6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2d718a-6c72-4044-94b1-04a9ec20ba8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e39b4d-9783-499e-846c-6132f274dd41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe0776b-00a1-474d-8a79-b0bf26b2aede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7147438-50e0-43fd-b9a9-3bf606313330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e6c894-58b7-4817-8684-d9cd5bf202ae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b882b1-564a-4dff-b17b-92d18ab7cf8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496f0195-6cd9-4a85-97c2-160e58f22ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ee54ae-15e1-4d4a-886c-0387955d4fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69207c3c-f07b-4fe5-b279-47385cc57e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b883db-dfe8-4634-b751-c1423348c806",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2ddc33-b710-4592-8e6a-240355cda903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5daf678c-3b11-416e-81b7-49c7353084d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bea2b4-5c0b-42d1-b74e-1b8dd8430960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e4e32c-449b-4c1f-804d-357cac9dea01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79a6fc1-6d49-43cf-a10f-d408621d8805",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfefdd60-5349-4e7e-878a-5b911ab0d8ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89eeef8-f3d3-43ca-b73f-9aca453d298a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f725fe31-ed9a-462b-b1ce-965f823fd91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38cbf90-9fe7-4cc7-b266-bc5045da6975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7140d5c-4d3d-43e7-9888-03e0c27a6049",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af61b0a-830f-4838-966e-c00e942f0d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430153f3-c393-4610-9ea7-441923bdf6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a74bb5c-cbae-4449-aaa5-1853639ef736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b7771b-e368-4ff3-9b5d-df224875dea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b73fc3b-0ca8-41b7-a712-72d3e564b51a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8415c1-1597-46ca-8f6b-aac4b8e5b268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee2cd2a-68d3-4b86-a767-4b778b78f708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de70b75-b7bc-4854-917f-d5985d269c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e1380d-9f52-48fd-a9ad-b50d5b1ab0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e59b4f9-c2b1-45e3-af7c-e3e9c4960a8b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf8b6b8-e783-42e4-98ff-2a5dfae56683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6190e5-5127-4394-b14d-b9c78da64347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f396c4-5092-442c-abb4-cdcb95f2ec98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f60a29-fb3b-493f-86b9-58090fad9499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26922a8c-0f48-4331-b289-55d797429e46",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088c5599-423d-4a34-917c-579e0ed51be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab34d778-5eee-45b5-81f1-7409530bc28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d90c8b1-39a4-4dd7-82c2-430f12be388f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdc58ac-160d-476f-adee-9a7babed00c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f9406a-8ecb-4a59-b1df-4455dfa784ff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d389ea63-e89f-4392-9818-ece72d9bedf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc668c2-7e68-49ff-af06-3d25d48bee13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd6c43-50c3-40f9-8b62-1543724f696d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8b4bfe-1ee4-4208-9e47-60a1c9ffdc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006f3290-ce14-4cba-9628-6762a6021a21",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d2ee7a-e0de-467e-a244-90ef45e58740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf5c7a5-f9a9-4e33-8b96-a26c28329913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a7312-9137-41f7-9949-042e25050f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f0fc7c-6725-4893-a7ca-e96cace02c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b753887-fbec-436c-9d3c-b3146a612b4a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c50ffb-2d1a-4b47-8cbf-6bbe570cacf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613eb34f-c432-463a-bda3-b1044c7c4b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bdd462-b2bc-4c8f-bab6-68400cf189c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacd574f-5123-4ebc-89d4-64b32de42e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7869ae5-bf62-4d4c-95f0-ab93704c8508",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a280c39b-06c1-4e19-b138-2358d58625de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b34e006-a013-4f12-b657-5862bce93840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49924318-5f4b-48ad-a5b2-8ea306ebe039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8922141-bf2b-4775-a596-22a297099bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea56561-4349-4ff0-ab68-2e0b1d70bae4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e3ec36-5b94-4c7e-90fb-235830b249cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574a153e-7d51-4729-9fd6-d14632303794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9711c87-a283-4d4b-b1a3-104ba38c5a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0abc6a-b066-4509-ae16-346eda7526c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf9c25e-66d5-4c19-8eba-a636340c06cb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7b2ba4-ec9a-4771-8cd0-8f97f98ff37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3e0b41-e3e8-4f9b-a3b6-4cdf7dc795d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1bc09b-2f8b-4534-aef4-7b6b3da6eab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cad36a-cb66-466d-a27f-85988b30512c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386276ef-cf59-475c-b6d4-aa45900f67b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eaebeb-8955-4373-a1c1-d4cb81bd3961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c06466-43cc-40a1-8bff-233b0ed86ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6457fb-f81c-4821-b303-76512a65f606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843326fb-adaf-465c-8aae-9c6d84242bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f769851a-7977-47f6-8006-caaa3f181dd0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee573736-5f82-4f05-900d-0defcee95b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc035d0-45c1-41e6-92a0-1d0f0b7eba05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce304e0-abd2-49a1-a489-b853ef7c5c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8da97e-95bf-4913-91ee-12db13981cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b173df3-e434-415e-a96c-b4e80cdae97c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687dcdda-3f5d-49c4-acd9-a7dc1c98ee18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f763ff2c-70b2-4576-a291-6a0b87567a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bf92ef-3a7f-490f-ae99-7ac2876f0670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88f56b0-e67b-470c-bc9f-6a0e32aea6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987313a8-0cd0-4a31-ad08-04ea94fecbc6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756de56f-b904-4cfe-8794-dc84db0ea40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2330a3ca-938f-4062-ac23-bd2278e01d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0715df27-e476-4a37-b889-6f122c5a4e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552a0827-692a-4148-b417-2cdef857d739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ef6692-3c6b-45a1-9474-337616769cc1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "face2c5a-f6ab-4e9e-b096-1e0223f0fde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe3b890-d491-4ebb-b799-5b62119da73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37769af-54a6-4a81-9683-54926ab7a66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8b11bb-12fd-480c-a566-420e3ce04f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46aea5f5-44c9-4f4a-80bf-25e72535601f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523d0d06-4ebc-413b-8321-569f970adc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516d9faa-c231-4705-819b-f36fff26b077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c51de2-dd0e-44bf-a681-6eb5d8385b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28adbf8-c0b4-4929-838a-78fb2b8f7282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90749036-fb23-483a-9155-22b88eaf2ebc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd06635b-fa4e-421c-adba-ddb3790316cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ecd656-2531-410d-aabf-b075996629b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5c6137-8e9b-41d0-be91-79d4310220f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094d4130-01d5-42c1-a721-0fd7c3731418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cb5de0-3b8b-48d3-b287-6a92c2aa51bf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d750f4a9-976c-4649-afb3-1bd90200d5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58d6e10-6a20-49d7-aac5-4d072d5ede67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50703bfd-493d-43b7-88a2-6f7ced3a7e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a6f1dd-f77c-4d87-a8ec-15015eb66af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f4981-dde5-454b-80ba-00ab713967c6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf04499-dbc1-4b86-bdbf-f99faab5046f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a572e78e-2d5b-4a41-b902-d3a3d02e4210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feba538-d1c7-46f7-86d4-c3d60ccc1387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21f3dca-4950-4dbc-9520-21adfc7c213e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b959789-1f1a-4748-b9ff-a9539962e354",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b28d3e9-1cb1-4c9d-91a4-4488df8adfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7cb646-4b00-4c26-9b19-c9a97b38fd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866c7dec-019c-4b26-96ea-1528c2508bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3647eae4-b235-4679-a5e2-0d537a609576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e48e2df-78a7-4d0e-b93f-8cd57c8a9ddf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60af2846-d9e0-41f4-93fa-c98e75768119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da62d3f-4a16-4e8c-b9cb-8572edddc95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6419f0a-06e6-48a1-9776-435c77425e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcbb525-a40d-4c31-9a40-e145f5b8e2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75a16e6-75c3-4cb0-805f-8575754898da",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fbf422-d1e7-4ed9-b937-4fc9cea03cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5a649e-6209-4f77-a5a2-daaeedc64f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b11bcf-912d-4e0b-8add-5eff2ee8347b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15335af-8294-45f5-9d01-a70fb981b8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e45346e-17cc-4c6f-a4cf-de665e6ad00d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848edd1c-a4d6-4a6a-9cc8-8d817539b04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4036440-2e55-41b7-9f25-63e683aa81ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fdde4a-81fd-4979-a24a-7f021332621b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dff74f-737a-4ab8-bf1e-4a3d0eb1008c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ebeb62-2357-4924-ad21-2ff0e683f78d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b287c562-250d-4464-818d-63f98c42d189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc77dbc-9406-4b27-b16c-72d70e2c79e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836a6fd5-0955-4985-9931-bbdfe4eea5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eaced07-5d11-4aad-95d2-7e05369bc7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5f0207-9386-43cc-891c-cbf3a1f40439",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56fd279-5f9f-46e8-bb5c-5b6de7349b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54cf989-e26d-4b0a-be94-408a1677479b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4325d802-1e39-4a72-9a58-26570391f188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a6b1a9-6ef3-4348-8f5c-194d8bbeea4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4448d56d-473f-4404-8837-dabfa146c321",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc6598a-9438-4059-99e9-43671d714341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6c449a-913b-4376-b5ca-1dd5475955ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b6357e-1d30-4744-be25-eeba44f4fb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9a24ae-556e-4db3-9581-dd61b433c58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1fd265-ad22-4ced-9730-fff71b5a0ffa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d148a990-14dd-448f-a864-3cb9f658ee6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0844461-be6f-45fa-b775-f2d865364d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b3b6be-e269-4749-a4c4-49f1a190e118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5386ee6-9143-4f29-a328-67231611a832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c680659-22d9-4ce6-84a9-27f39ca2baf6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4830f72b-fc54-403c-8c52-5f76c125989e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d99f00a-a0ca-48a4-9d94-41a34f2daafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54c43e2-c510-4d5a-b028-bceaac2bae15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a921628-1201-4f2e-9864-612d0fa5d786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a3fe6c-7033-4d05-a361-45da5c3364ac",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02534ba-0c0a-44c4-b4a9-f01347e99098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf60714-f54b-4329-ba38-8d508ea4fd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27a9c2c-e81d-4e21-a920-cfbe216c814c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54271a8e-da76-4888-a638-1f15f553db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe864a85-9999-40af-8958-7912b7a0839e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdf1a94-5e7c-4cda-8019-186223c42fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd40147-7408-4744-9fb8-5334b3aa3432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c39b6d-b81b-4488-93bc-6dac3cf9074f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b71d314-7e61-47a2-946e-23ff3612e55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff99692a-6b9e-4ad8-ba98-a9aeb02ab647",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31920b0-e48e-4d22-9af3-6742b5b07dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79434626-aee0-41dd-8b33-fd8f4c7ec245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2c1d05-72b9-430f-9c7f-026b77ff3ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b43f3fe-fe18-400d-b4c0-9da4b9ad7dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca2b947-48d7-4fbb-aff2-634e34c8e6e8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e13bef-a76b-401d-8d36-d9ec7d404cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2675fe74-6329-4f14-8462-831379136deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6834bbe-e4a8-49f9-bf70-38fed755f17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362de824-0b03-43b2-8978-52129dd23a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274935a7-596f-434c-87dc-020a0c4c7082",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc53914-b01d-4999-8404-410289a5019a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98f7092-b32e-4396-9252-7951e13b57be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c721dc-06d7-4841-ae45-ebd266f17a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4accfc7-d979-46e7-8efe-59d09847f050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1a0226-6c95-4117-9255-7d247d4ebf08",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea374741-5dc5-477b-bf9d-578d5a24dd77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce7c62b-32cc-4528-b7d3-b22b93ea392d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6a60b3-a094-46be-ba2a-1e0541975bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93356ab5-d07c-4386-a11f-965feaa47ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3bfa97-254f-4b3e-8f55-dcd7f32e68bf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caca3c2-7011-429f-8253-811884d81abc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be15a29f-749d-4ab2-b461-e562bbbc02f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0047a49-ee07-44e7-b7bf-b684f139d04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84107e9-c4b9-4280-94ca-a6771a41ac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9b3d39-dd12-4954-a435-c5fd0ca45f65",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd2b776-f69a-49ac-9d07-55080e5012a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b6a7332-f431-466c-b0d2-be71ceadc32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92720992-e5fe-44ea-8f30-6e24c2e8ca24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14f453d-0b0f-4f84-9d74-29783dee17b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59346c4-6170-4238-b4f8-17a7cd700940",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dc4978-4198-496d-8b8a-283785ffc36c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e382503a-e0af-40c2-8f4c-ad48d186260c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912efc67-74d7-4e68-89e7-f2e20af95e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d4f750-3eb9-4e89-a46c-82f9e88a6941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ae4d71-efff-4a99-a167-d24bcc7bf961",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee591d5f-142c-4471-bd23-6841fd7cb4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4657f147-0a74-46b5-871a-582996188131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2ec59a-4880-4aee-92c0-818ecd9434ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50213b8d-6b14-4d3b-a5c8-1b6dda7ad820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421394cc-e007-4748-b838-c88d2a09d866",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9758ff03-b0a6-4798-9788-ba8e87610ebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55cbe30c-c47c-43fe-8773-3678a5bb466d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdac608-110d-4592-aa2f-205a81eac358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fafe5ca-fe80-42a9-adc4-2e398571763c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a2be68-71fc-429c-8920-2c2530d88fea",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6c7ac5-465f-4966-8f4e-b81ed5bb60cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac9626a-5369-4b4c-8365-6e382d18c010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280bb686-3c28-4361-ba3f-f636550649d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69ef72f-cfdf-4244-ae06-422deb35d77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f549d76-48e9-4998-b837-69f47262236d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbf7e30-0073-48cc-a514-f5b057f7c73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafb0a2c-5b87-4439-a9c1-a247e75699a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6b7322-6754-482e-bdd6-3ab9aad6ea9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c51c8f-cc88-4336-ace6-9dd3fd28a288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254ee601-4831-467f-86e7-0fc58dca5c58",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18767e19-32c4-411e-8803-340bb8e66a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e776a7-464d-4b4c-a116-465f902dfdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361bf5ca-0214-445d-b3b0-f8de7e2b2aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19427408-504d-4184-8e0a-d35745c497df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f90452-3ba0-44cb-8eba-d79b2182ab51",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e94ea-c1d6-4629-9e28-a71d38f50760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7a0bb3-83cd-4834-b991-e81e07989aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d2ed2c-b651-4661-9a1c-a231401bd711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961bebc4-1685-4b3c-8318-b4bd03356f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5260d0d8-e04d-4f88-bf23-4f60812eb82d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab8e1b0-1d2c-4540-82be-f2bb8509b1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746075df-72fa-45f3-be59-17c5d48cecc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4910e270-6c73-4cd0-9f4a-79d8a7f4192b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd5db90-74e7-486c-b848-72c71279b9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f70775-c625-475d-9085-19eb7588ada2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee067c39-6efb-4f22-8d8e-ad51aef45e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552ae7a1-5d04-482f-a6db-c09d9e86b956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ec09fe-0dc1-465e-b35d-127984f76c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53fd597-28c0-4db9-ab9f-d03696bf8c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a2dc90-8bfd-4ba9-8904-9729c386a04a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162a8054-81dd-46d7-ba83-95fefd526400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8024a821-4ef5-457a-9cd6-95138a2b2118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed8fda9-7b7e-4569-bc73-14cdd7c2cad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d439380-108d-4600-ba52-25221c438ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cbfb1d-40fa-470e-9531-a7fc79ec6bff",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51abc966-9a86-447f-abc2-51499ab4648d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d2485b4-53dc-4b72-af56-c78533cf8d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e29a03a-b8ad-4203-bd9a-21c516a2fff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb66fec-4bee-4959-a67d-bc54226922b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ae4a97-911e-4b0f-aa3d-be4f86f06660",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f578d07f-7f40-4dc6-ad72-631bb31cbab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8973e732-c6d0-4c89-a3a2-58bc57d913f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4342f4-6830-43c0-b3c0-5ff28accabd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1f498d-a688-4fe8-a40c-bc3c5661ce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fddc0ed-e102-4117-ae5a-4591954442ba",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faccaf88-bce2-44da-80f2-d529cff4b571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062019bd-f122-4352-b208-3c7b8b269267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97a63ad-7ba4-452b-acb6-bb82f163163a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeba2aa-af92-4108-9535-a26babb07731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bf8f40-ebd0-4227-97c7-0629b597166a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283da53d-88d1-4c07-b9eb-0fb87f3df3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21e0182-22fa-47f1-a1a3-c1991b8e39c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0379b5-b3ee-4ec7-a197-0eb6aa334ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7276c706-510b-4d3f-a232-8c33f250f7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b73f3b2-751e-4dda-8c76-bcb47e6b2a84",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98745d7c-d9d5-451b-9284-dc5fe3ee8a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bf8537-f001-4f41-b395-d12c54a8cfb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86473bff-1b03-4fe6-80d9-bb774bc6b1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3db0bfd-2ff0-4f58-bc05-d2f16e350837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a52c55-b09e-446d-b10d-92741fc6a342",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5528af-0c52-47e4-a923-f1461a47ae5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459fa9fb-4b83-4a74-b933-9ec874665100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f768a81c-054a-44bd-9246-4dc881dfc461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db967f52-0dec-4f93-828c-bc53dee1fe86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b6dbc5-11b4-42a5-a52e-b2abf2bebd51",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845019d7-a5ba-4083-a0e8-62285b52de0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d1c983-0cc6-4d1d-89c6-563f24c0916a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b39962c-9994-453d-b855-4a300281e641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8892183-b3a5-4c02-b2ef-f3513a2d5740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c60094c-958b-4ee6-a444-212f2c1963e9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb91433-cdde-49aa-87d4-957e937b5ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d045e17-e917-4e97-965f-dcd843163085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092bda69-3031-4e91-96bc-10dd18fc8b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f48203-8df6-4fc5-99fc-a79a66e8a387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e7be53-3f7a-40cb-bc9d-ac183ea15ad1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6d5d55-959b-459a-b604-6f9c5d76d61f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b50918-fcb6-45f5-81e6-095bfc7f2af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9649c711-2af5-42c3-a53d-43a85f4df298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2338736-b7d5-47e3-ad09-b5b26d518040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81927611-fa19-42ee-af5c-91c6973acf29",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd7bf5f-7807-421f-bbfa-78e11987c365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba20b527-38a2-46c5-bbde-a6187f34a76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81b1b00-82bb-4ed4-ad9a-2fa6e247bae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac347aba-a851-4e71-ad68-c8c68a6541bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6537ad90-50d0-43c4-98f0-1bfaa6e6fcff",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9959c5e-2912-4ce0-bac7-200bdfee4143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0051a032-428c-4bf0-86c9-e5f749e94d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f916494-887a-4bc4-9cf9-9b1d4f2d6c63",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4534a359-3ff8-4e2c-a84f-8920d3d18bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e03ef9b-6998-4571-b974-007ef51a3365",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88e9a63-a9f9-4bfc-afa0-1b538711413a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5405636c-e8fa-4228-9a32-64ade705b763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60e8e0b-c531-4e4c-9354-09ba7b6a34a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55253912-64eb-4599-9694-2f66feb664a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b5aef8-58a6-4c87-9854-1096408ffac2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891600d9-512e-43a3-a05c-55e869a7e884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304ef414-4d63-4154-945d-5948b27fa888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05408a4f-3850-4607-a7f8-a192ae1aafdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32358b80-2cd8-4de8-85b1-b913425d1a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78f47fb-c759-47a1-9deb-d6ee109d14aa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8716f7fb-b18b-4f2f-9d68-bec7ff487fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a92040-019a-4c6b-926a-51e2d795a6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5563caf8-9547-40c4-a60f-0d1f42735dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b852c0-c49e-4634-b816-afc1255a7606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01831eb1-b724-41f3-bcd0-8374442539e9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf3e62a-7bf5-436c-8abe-09e5be0f1fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ef33ac-ffc9-499d-ba82-39e995d2c56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94e558d-6837-41c7-bc94-191a177e0715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68720e24-87dd-4645-b5a8-53c50799ba1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd801761-1eba-43f4-9384-27abf40ff290",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed82dd6-b4d9-46c5-af97-8d3ee11f0a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda1d9b1-6640-4e23-aa71-e6170a878be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdddddb-55af-45d6-af24-c953054470bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d61c46-ff75-4ca9-974d-39167a782185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b2f489-53ca-4220-adc3-75053e024ddd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d74fc17-4111-4772-a112-24ee2217be38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34258b4a-8703-4546-b2dc-f733c9d57a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8e2b49-c984-4e1b-8a07-624d56f79a42",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85547478-7e83-4925-9c85-6a6298c877d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687f1119-ee83-44c8-ab08-c891ab726051",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bcc692-d314-4eb8-aae6-4f8423ab3b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b210d24-2fd0-4785-93b6-21a639a069f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1307e7-1bdf-4966-b5bb-48ed3ebe45b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8967560a-79f4-4660-beda-fb625bf40e3f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4449684e-fa76-4e5e-b02a-1c1819a63e15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39702965-243d-4d18-9fe1-98391a5465a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a2d58d3-f2e4-47e3-805c-2043cabc93d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e7253e8-c055-4010-a7b3-ad8df0ba7f8e"
                    }
                  }
                ]
              },
              {
                "id": "ffba6f75-1274-4c83-8e3d-9193e83f0fc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a395ed79-289a-402a-b1a7-743049d5b7e5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663da2a7-cd43-4665-8f0f-314fe1671be8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d34d1c9-36a7-4912-a6d5-8f1a91c85863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2ca048-df88-4d27-b950-68e1dfb871ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c385693-5f5d-4dc6-a834-84fc30996f01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4b5d812-537c-4738-8ad1-c40022760341",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ea6b553-7403-403c-8fd2-6e9ce8acde72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbd2db5d-5b3f-4d9b-bdbf-bbe9d8dd3c70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56fcd47d-a694-406f-838f-3ba5f7795057"
                    }
                  }
                ]
              },
              {
                "id": "0d4b8ece-6bf1-4919-b8f8-7d045e017d44",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7adb137e-53ab-4e5e-bd2d-f9d9f91e076a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a95087-c3bb-4e2a-9ab6-e2be3494d13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3034a975-76a5-47d8-b9f8-29991cde13a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d011576-8cbc-498d-a6e7-3e857502e386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8366c465-f3f7-48cd-903f-3ffdee0d23f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e833e652-cbd5-4c1f-93c3-c1b5ca037b8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba23ab35-ed1e-4d95-b13b-0e7c1e8a0432",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "998094a8-ad1b-4f3f-847a-e70e7ee7f443",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f9264e0a-7bb2-43b6-8490-a334c7bcb826"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57819c70-a8e4-4a4e-9fe0-3b152d4f498e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e79e719f-0de4-429b-96d7-4898bcd2e87f"
                    }
                  }
                ]
              },
              {
                "id": "cdf1401d-36de-41cf-a361-fee33617728c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c651fe0-9214-4a80-946f-a5d581b31ee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "15186982-1eb9-45a1-be45-001e02b557cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a2c6743-71a7-433b-b569-840e8104e88e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93bdda79-fb8a-4304-a88c-1128671b7f4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d343f9d-a12c-49b2-8e08-ba890ae3eb9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "02db53e6-380e-4526-87b2-69ca65602d0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be83d93d-0f06-4d33-bea1-50361a45e653",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "031f1e3d-b13f-49da-8b53-15817d741d49"
            }
          }
        ]
      },
      {
        "id": "239e23f3-7705-4829-99d3-805e499d9587",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "decf13f0-71f7-4478-bdef-dfd14fb20b37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f729e31b-19a8-4755-932c-e0a21ebba60e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1506ad50-cb10-4346-8dc3-c0911d3af0b5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1ac13d-5591-4ff7-8024-a19360345f48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f287897a-52e6-4ee6-b36a-0da773d0156a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f404a866-ba33-4b4d-ba2f-5d3d06355325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4295cbc1-5741-4857-ab85-28b025b62f04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26826521-ff7a-4107-b846-a0a6ef208900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d633248e-bdb1-45c4-8efe-a049e719aab0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc5474be-c5d7-4eee-9d27-c7b6a7b1e1a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a8ab54-8d80-4da5-9ccc-9a0b7e89996c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdba027e-8904-4e38-b8e3-b3155a9a37d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "035c0e30-4f08-49d4-aa9b-25a2ad341979"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a79134df-ac0f-4e9c-9353-be77f0b0ed22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5fb8353-6e35-4895-b2cd-6dbab72ba7bf"
            }
          }
        ]
      },
      {
        "id": "f78e219a-03b6-4392-94dc-4754aa51eaac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "15a815f9-4a94-4fc7-b91d-3347e993151a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0576127-1767-4926-8723-beb46b430080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95318986-3e0d-4b95-abd2-bcbcd6cd3087",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12797244-e106-406a-9ef9-8a01200a97fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d898567-5711-4977-bdee-6f5ab8278ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af1abb9-6e38-4be6-bef0-59f355a7d435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3f6cee7-30a5-417d-ba6b-66437b1c2b24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d38a1073-0cc6-4033-ac25-a2bc57b8bd8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d60e9982-cd21-4703-b5db-51c2a5c7a8a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f4a83d4-96cf-4519-bfed-0dbfc32dc889",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46988350-ab52-4552-af55-1eaf703371b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4431a8b3-3f82-4082-9fd3-ea71341c5d1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef551584-f122-4b93-8373-37db60af14af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78b278f2-f8e0-4a34-bc92-3f0e13163b32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27c6abfe-4b37-4a5b-bbb0-6b264aaa0633"
            }
          }
        ]
      },
      {
        "id": "17a8b0bd-03f1-4750-84b8-def4b5de3b96",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "669fc358-f39c-4f14-b2eb-d582db62788d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f93233b-95df-4492-bf63-862f92251424",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20b0c806-2fa0-4060-abd7-64579d4d0c8b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2e897b-87ba-4cb3-9a01-1c86b01c3992",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92989df4-317d-4bfc-8683-f8dcb556310a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ebb5c8-0f47-426e-9dc3-28aae1bb2235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ff9c959-df22-4899-88ae-11f8bf7e8fba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22f8d6a0-2ab9-4323-858f-6b729b3d4e32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0bcb03b-12b6-4a9a-9952-4c67b835469b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45d0e213-523e-41df-856e-195e86cc3db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bafa013-eadb-453b-a752-75605f5f615b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baec8ca9-781a-41c4-9f10-ecc68e9b2dab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8231f5ec-4e3e-4ea2-a0ad-e0e46b2ac286"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efb5a68c-19d6-4b8d-a12e-3e7ba8ec618a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4fbf63a-93c6-4e9f-8672-cce71f06eee1"
            }
          }
        ]
      },
      {
        "id": "e64e5e4c-3f19-464f-a1c4-e6363bebdae5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5022a6b5-c5ea-4850-bea5-bab6ee033148",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3cd94ea-1712-4f9c-b6e3-c92ef42501ae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e32bf3fa-6ef8-4444-bb75-f73b731556d0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f578285-2626-483a-8ccb-786f57843795",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "293b70e8-6a68-4630-90c7-e069f57d062b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 248.43253968253987,
      "responseMin": 9,
      "responseMax": 4941,
      "responseSd": 765.3755480651898,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716597349628,
      "completed": 1716597420610
    },
    "executions": [
      {
        "id": "0be54d9b-bc64-4835-a6ba-2ad65dbf53c7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cb921562-35e6-485e-bd2c-e1328504448b",
          "httpRequestId": "27657df0-d147-4af8-b1bd-79308efb9b60"
        },
        "item": {
          "id": "0be54d9b-bc64-4835-a6ba-2ad65dbf53c7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "460e9cc4-8ed5-489d-b2cb-b521d9585a92",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "9d36badd-3cc5-47b8-ae12-c2349f30fd70",
        "cursor": {
          "ref": "dff0a55b-cf06-466f-89e9-c89e3ef226a7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c8b10f16-7301-4895-b58b-ad68c9836293"
        },
        "item": {
          "id": "9d36badd-3cc5-47b8-ae12-c2349f30fd70",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bb5c0fe9-42e6-43d1-b499-81006d8ee9da",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "312262f8-bcb3-4bad-a2b8-e9dd1baf0148",
        "cursor": {
          "ref": "9e4a965e-9d7c-41a2-b6ee-96bc30ba52d4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bd77405e-96cd-4bcf-aba2-f7f8b894c28f"
        },
        "item": {
          "id": "312262f8-bcb3-4bad-a2b8-e9dd1baf0148",
          "name": "did_json"
        },
        "response": {
          "id": "b0a18450-6cfd-41ed-a780-d07a3a31396c",
          "status": "OK",
          "code": 200,
          "responseTime": 399,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0aa2d8-7887-4fed-8d1e-5a99f7104024",
        "cursor": {
          "ref": "71df19bf-0531-4f23-91d4-44b284aefa38",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "13fb1d04-b44d-4e3d-a601-59af28774be8"
        },
        "item": {
          "id": "5d0aa2d8-7887-4fed-8d1e-5a99f7104024",
          "name": "did:invalid"
        },
        "response": {
          "id": "3445a99c-61eb-4df0-adc5-48084a1fa1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2332,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0aa2d8-7887-4fed-8d1e-5a99f7104024",
        "cursor": {
          "ref": "71df19bf-0531-4f23-91d4-44b284aefa38",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "13fb1d04-b44d-4e3d-a601-59af28774be8"
        },
        "item": {
          "id": "5d0aa2d8-7887-4fed-8d1e-5a99f7104024",
          "name": "did:invalid"
        },
        "response": {
          "id": "3445a99c-61eb-4df0-adc5-48084a1fa1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2332,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9f4c23-ea11-41de-9d29-2b8dc05cb877",
        "cursor": {
          "ref": "f26564a2-44e0-4bf4-83ef-5bdaa03cf0ea",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "674dd753-c900-4e50-a9a6-bd16cf5efc9a"
        },
        "item": {
          "id": "ae9f4c23-ea11-41de-9d29-2b8dc05cb877",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f17ed3ed-be8f-4fd1-8899-3eb3fb19e19e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2489,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b0b861-dbeb-4533-a59f-8454f42e3a6c",
        "cursor": {
          "ref": "25bc4551-98f5-46fa-8c6a-321f8d5277b7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8efc5d89-a26c-4fc9-839f-7be412c6fff6"
        },
        "item": {
          "id": "02b0b861-dbeb-4533-a59f-8454f42e3a6c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5dcab7df-f0cb-4d1e-ac8a-e08d4842cfa2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2314,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39147393-7073-4500-b83d-2e0b877a140a",
        "cursor": {
          "ref": "c167b20e-e171-415b-9e40-175db09c9420",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03182af2-015b-4dd2-81a6-e826c8f818e2"
        },
        "item": {
          "id": "39147393-7073-4500-b83d-2e0b877a140a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3e746ed7-a150-4d9c-b573-9c8ae8f927dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b4324e-abaa-4ec9-b7d7-a98b7cdc010e",
        "cursor": {
          "ref": "2a977bd4-2585-4541-86b1-85a91696eddb",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c748bc3e-8fe4-4198-9efd-463f99d3222a"
        },
        "item": {
          "id": "67b4324e-abaa-4ec9-b7d7-a98b7cdc010e",
          "name": "identifiers"
        },
        "response": {
          "id": "fb0960b5-6fc5-41dc-9d55-d042907172cb",
          "status": "OK",
          "code": 200,
          "responseTime": 2094,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafe488a-d5e8-4378-890c-e0ab8ce43486",
        "cursor": {
          "ref": "a2694606-8ce7-41df-8a57-421f5b03937a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "784a0348-9215-4a72-aa72-7c70f3af9592"
        },
        "item": {
          "id": "cafe488a-d5e8-4378-890c-e0ab8ce43486",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a3d7539a-81fb-482c-b7dc-0a10f25f6093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84a5e00-1c04-421f-a20b-cc98f6824fb7",
        "cursor": {
          "ref": "c83dfd73-40b2-4478-8460-1aa34978af61",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a6dc3081-70ab-45e6-878e-9553f35317e3"
        },
        "item": {
          "id": "a84a5e00-1c04-421f-a20b-cc98f6824fb7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "249f03a8-e165-4543-8820-588c16e0e7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd5f7cb-1362-4904-bd22-214e40a95d87",
        "cursor": {
          "ref": "a74570c1-b583-4d36-89fc-c06adf2e24a8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dd89a955-8134-411f-9ebd-f2195048cc90"
        },
        "item": {
          "id": "abd5f7cb-1362-4904-bd22-214e40a95d87",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cb7ff63f-df2f-4c76-b9ba-f63493dccd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b214d6-6400-437b-9517-3838ac493b5b",
        "cursor": {
          "ref": "933bbdc4-b22e-4e61-bf27-431c686ec464",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "20182e89-d30c-410b-b262-1af10da69071"
        },
        "item": {
          "id": "75b214d6-6400-437b-9517-3838ac493b5b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "db711204-fcee-4e84-97d1-93411938d29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6143fbf5-b00f-4b98-af8c-c937d6c94fcc",
        "cursor": {
          "ref": "d947393e-6bc6-42f7-8635-3f7f902f860c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "54b32017-d308-44a8-8a5c-e3d442641d58"
        },
        "item": {
          "id": "6143fbf5-b00f-4b98-af8c-c937d6c94fcc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5e56bfc5-c64b-4576-b187-f47b6cb0cc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ad5fb6-de64-4bf5-abfa-3de7b9a759df",
        "cursor": {
          "ref": "6d30f191-9ce1-4423-a877-035d1735373f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cdf7d397-67d2-4194-b0c4-ae8e0b42df60"
        },
        "item": {
          "id": "11ad5fb6-de64-4bf5-abfa-3de7b9a759df",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "516b9f6f-abb7-47df-8533-d55692edc752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b47d1-c45c-4fda-80fc-d4368cff26df",
        "cursor": {
          "ref": "8edd06f6-36a8-4e7d-9516-fa35cc518023",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "85019751-3158-4920-8ed8-e35a53647a6f"
        },
        "item": {
          "id": "bc9b47d1-c45c-4fda-80fc-d4368cff26df",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8889e18a-0f49-45cd-afc4-b8f4992bd190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9733dd2d-adc1-4dce-8561-8e8c5627a215",
        "cursor": {
          "ref": "fad2b777-6ab0-42db-936b-71b6fff2eabc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7d53de45-dcb6-4871-83ef-679cf4e39b13"
        },
        "item": {
          "id": "9733dd2d-adc1-4dce-8561-8e8c5627a215",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b641f15c-0578-49d0-b0d2-090d88f2f6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9149b2-5fe0-45a6-b9a1-f551eeb9f020",
        "cursor": {
          "ref": "467be349-23ba-4794-8278-2573947ecf68",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "80e1730f-122f-40c7-8184-76a04a27614d"
        },
        "item": {
          "id": "aa9149b2-5fe0-45a6-b9a1-f551eeb9f020",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc6945d9-0e13-42c5-bee7-a37c8bc49bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5202bc-822e-43ee-8502-71c20df83b7a",
        "cursor": {
          "ref": "0db1971b-7dfc-46f5-86ae-dd3362c8c472",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "49aa58ef-8122-4680-a744-7e0c5ad1c064"
        },
        "item": {
          "id": "ce5202bc-822e-43ee-8502-71c20df83b7a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0946cb37-6b79-4b9a-8400-32934ab76cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312c9d00-bf59-4274-ab82-0464ded2b5ca",
        "cursor": {
          "ref": "40d6f5be-9d4e-4f8b-9a33-cecb5a838360",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "44008921-4fbb-4cf5-95d4-e66ce2e3a868"
        },
        "item": {
          "id": "312c9d00-bf59-4274-ab82-0464ded2b5ca",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d390de51-4a22-4bb7-bea9-c864e7ac70cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602a760c-e6b4-4c30-b03e-d2ea6c89d52b",
        "cursor": {
          "ref": "a36329c6-0ec0-461a-88ec-caa05e337459",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "42cc9622-0276-4a0f-9229-9b78ceb546d5"
        },
        "item": {
          "id": "602a760c-e6b4-4c30-b03e-d2ea6c89d52b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0ffc802d-19fd-49cc-ac7c-f1846dd469c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b9d31c-b53e-42ba-90cf-38505cd7f623",
        "cursor": {
          "ref": "b4e44773-ca58-4812-a91b-45292b97bdc2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5e36dac7-309d-4ce9-a744-0344c7660b4a"
        },
        "item": {
          "id": "90b9d31c-b53e-42ba-90cf-38505cd7f623",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5e147894-130b-4462-b9f2-ffb749cfcea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8994f4e-a84d-49a2-8088-5305a5c01e75",
        "cursor": {
          "ref": "ec0ac095-5ccb-4c40-a322-03b54cce04fb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ec76ea88-55f2-4ef3-9d49-1d4bb90cdbab"
        },
        "item": {
          "id": "f8994f4e-a84d-49a2-8088-5305a5c01e75",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fdf9cb3b-7589-4f42-b25f-5af8ebf9bda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b370604-9366-42af-b023-1ed4672ed774",
        "cursor": {
          "ref": "c360264b-4d8d-4cca-914c-90787f71e698",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "127ace25-ce3b-441b-b2b7-6f6ff3570231"
        },
        "item": {
          "id": "1b370604-9366-42af-b023-1ed4672ed774",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "88859d21-ccff-41ff-8753-65388f1627a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdc38e7-13c0-43b0-bf09-a300d3d470f9",
        "cursor": {
          "ref": "1d7bcb60-0c96-43e1-b1f2-cd3d41e2938e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2b3a5ff8-b6a8-494a-a9f5-e39a4dfeb37b"
        },
        "item": {
          "id": "2cdc38e7-13c0-43b0-bf09-a300d3d470f9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "50d69aa2-8b87-48f9-bd63-ece17e11ce39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69515545-d24a-42bd-8f5e-dbb06fe293ac",
        "cursor": {
          "ref": "41ba326f-7301-4cf4-80a6-fc11aae74518",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3091d426-89aa-4662-b4cb-9eea8188cfe2"
        },
        "item": {
          "id": "69515545-d24a-42bd-8f5e-dbb06fe293ac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "40d7a505-a525-4bb7-9201-f3a1785a42f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1db7cc3-3fc1-4815-9d38-e3727ff13fc2",
        "cursor": {
          "ref": "39d25202-a478-412c-af32-9fd9c9bf86b4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "35c4638c-b30f-4814-a780-a93ef4d34a51"
        },
        "item": {
          "id": "e1db7cc3-3fc1-4815-9d38-e3727ff13fc2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63abceef-48cb-46e5-9bdc-c39813ff4cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da119ac9-3aa9-40f8-8d33-63f7d755852f",
        "cursor": {
          "ref": "96dbb425-7c35-4c6b-af50-a0821730263b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b32a37df-32ac-4bac-a39e-d4bf350d7df8"
        },
        "item": {
          "id": "da119ac9-3aa9-40f8-8d33-63f7d755852f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5ff86ed2-82d8-4419-9f9c-73b2ca78489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3073be52-88b3-4bea-b2eb-1d214ce402be",
        "cursor": {
          "ref": "b0bd838f-3731-4bf0-8a7c-331ecb7855f1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e51b0a9d-4010-4a5b-8d91-edaf02ef711b"
        },
        "item": {
          "id": "3073be52-88b3-4bea-b2eb-1d214ce402be",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "56281d26-2218-499b-b46e-6c299b1c74d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca09de6d-df75-4b0d-bc00-cbd5f7b22ae5",
        "cursor": {
          "ref": "03bddd6e-12e4-4b8c-816a-76406ef27768",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1bf533fe-16e8-401e-a98e-0ece403ad223"
        },
        "item": {
          "id": "ca09de6d-df75-4b0d-bc00-cbd5f7b22ae5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "68286555-e9d1-4a3e-b5d2-c377df78ce41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9913bfec-d2ce-4046-a5ef-51fb125d538e",
        "cursor": {
          "ref": "7430a776-18e6-45c4-b26a-9f6064903068",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "91f6582d-e1c1-4e02-aaf5-3cb7ed821696"
        },
        "item": {
          "id": "9913bfec-d2ce-4046-a5ef-51fb125d538e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aa981a5f-3466-45dd-9bdd-54d44c7cc9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51b6b07-fccc-46f6-9bb8-156b068335b9",
        "cursor": {
          "ref": "d15bb6d1-d052-4016-9528-826fed7d150d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "38210293-4aa1-4177-a170-3413c1a938d0"
        },
        "item": {
          "id": "d51b6b07-fccc-46f6-9bb8-156b068335b9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e2f9a0c4-4396-49e2-a484-28c2104cb4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660a9bca-d22c-4638-8a8f-5ba5a44b276f",
        "cursor": {
          "ref": "a450fddb-38f7-4936-8911-26a0c63bcaa5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b2ba3ebf-ee2c-4d6b-8afe-bc9ff0c5f278"
        },
        "item": {
          "id": "660a9bca-d22c-4638-8a8f-5ba5a44b276f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6ca15aca-a6a0-433b-966a-c032378696ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362c4b9f-a5af-4ffc-92fd-5412b9b8de34",
        "cursor": {
          "ref": "f7d617d8-bc9d-4704-b1b7-954f2607b5be",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ca9fd3db-c767-4f10-b1cf-55cf6b013599"
        },
        "item": {
          "id": "362c4b9f-a5af-4ffc-92fd-5412b9b8de34",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7720ec6b-1dfd-400c-ae70-2301a7798496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73c4013-1073-4536-9739-8cd0e32d4c14",
        "cursor": {
          "ref": "2f5c0006-6c5f-4e9d-85a9-36fe17e1a843",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a0372f24-2a44-45e3-bd1a-1bfcf5f4c802"
        },
        "item": {
          "id": "e73c4013-1073-4536-9739-8cd0e32d4c14",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "df89c57c-aa46-4d92-8ebd-2a2f659a4e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e77ff5f-364e-4601-955a-282301aa0216",
        "cursor": {
          "ref": "6fe29c8f-bc2f-4a6d-a60d-e9568d47c7b5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "69f8ceeb-57f1-485b-965c-32ec674583c7"
        },
        "item": {
          "id": "0e77ff5f-364e-4601-955a-282301aa0216",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bbf7859b-cb2e-4551-ba32-5ae34a0a715a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd21379c-9a56-4412-8a81-9d1373154888",
        "cursor": {
          "ref": "1d3baf38-423a-4136-b5ad-46f1615da094",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3a2e5741-80fc-493e-96cb-4aef51435545"
        },
        "item": {
          "id": "cd21379c-9a56-4412-8a81-9d1373154888",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9ca017b5-05e6-49fc-9c4c-38cd66453e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2a345b-7054-4334-a06d-66136668f95c",
        "cursor": {
          "ref": "f2a3abd4-2bd6-49b8-986d-cd07827f2a36",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7a8e5e93-80cb-45f2-bc65-5afce1d1e963"
        },
        "item": {
          "id": "8e2a345b-7054-4334-a06d-66136668f95c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6fc75835-f609-4b03-9b8d-217ace923933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a741a2-f66f-4e45-a396-420e97b7dd96",
        "cursor": {
          "ref": "f6d7f160-b221-42bc-ab03-d84a6b28de84",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bcf74385-234a-4bdb-a353-4bcfc5971dde"
        },
        "item": {
          "id": "50a741a2-f66f-4e45-a396-420e97b7dd96",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "931d6f46-4574-4cef-88a7-1318bc113d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713472ff-1c8d-4134-a2ea-0e56839079a9",
        "cursor": {
          "ref": "21c52821-6de2-42dc-8967-7ba13654bb90",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a988a654-81f9-4cae-8a0a-04973597f608"
        },
        "item": {
          "id": "713472ff-1c8d-4134-a2ea-0e56839079a9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bd68820c-70bb-4b7c-b241-7182fce775a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4153e0-0d4d-4dea-b7fc-9fbf4334cf6a",
        "cursor": {
          "ref": "0f63b785-d6b9-4902-a433-130f1cb203db",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42401315-0dcf-4d7b-8a2e-0d0a733c2569"
        },
        "item": {
          "id": "0d4153e0-0d4d-4dea-b7fc-9fbf4334cf6a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1c4cb307-9e52-444d-9068-f1ca6231acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e979d867-4fe7-4712-92c1-5a8621573cbb",
        "cursor": {
          "ref": "52889c3b-ca1f-46cf-ba4c-6d9c40704d59",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "907c7585-fa14-497f-a9fb-0f565b742c77"
        },
        "item": {
          "id": "e979d867-4fe7-4712-92c1-5a8621573cbb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0a2b8df9-f753-4e97-a88b-e8fb34db40de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad3c66-a677-4441-9f8a-0b93411ff457",
        "cursor": {
          "ref": "d3797b0e-e458-475a-872f-5fbee2596dc9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7a558bcf-8508-473d-8d4d-bc3837107d83"
        },
        "item": {
          "id": "42ad3c66-a677-4441-9f8a-0b93411ff457",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de63e916-e6a3-427e-b447-3fbf8417d42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6438631-6db3-4168-8892-e8d42ffeb599",
        "cursor": {
          "ref": "956f4816-06b0-439f-9387-514a0557d0d4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bd77d24b-0b89-4615-8071-469eb294efdc"
        },
        "item": {
          "id": "e6438631-6db3-4168-8892-e8d42ffeb599",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ef981b40-384e-4db9-a4f6-094068044c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ad1c00-a122-49ab-881b-8d77b87c1ab7",
        "cursor": {
          "ref": "7b86e45f-4ee4-4452-949c-a3c63a25f7aa",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "acb6a0ea-5ad7-40b9-ad46-12c625039c78"
        },
        "item": {
          "id": "43ad1c00-a122-49ab-881b-8d77b87c1ab7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0cf45ca8-7ac3-4d19-97f7-aafe52e369cb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c967d2-b728-48b2-b832-1175228560fa",
        "cursor": {
          "ref": "a73b3091-0848-492c-9f62-1bed72f09f97",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "32b1b78a-e6a5-47b5-93df-8d6d340259c7"
        },
        "item": {
          "id": "d0c967d2-b728-48b2-b832-1175228560fa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9815926f-cc92-4504-8784-9795045b1a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8766744-e377-44ea-808e-b56246e3b21c",
        "cursor": {
          "ref": "57f807dc-8c37-4eec-b0ba-657ec7be7111",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "92124615-05cf-4472-85c8-d1738daf4495"
        },
        "item": {
          "id": "a8766744-e377-44ea-808e-b56246e3b21c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e654d485-5b76-4748-97e4-949778749ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e34b161-856a-4b38-9b90-98020cc94d07",
        "cursor": {
          "ref": "e56b28be-a72c-487e-b6c5-2f9283d0f563",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5bfe0b9f-d103-431e-8b1d-fab48024b76b"
        },
        "item": {
          "id": "3e34b161-856a-4b38-9b90-98020cc94d07",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c4f8dbea-a572-45a8-a11b-31fa3640c9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfaf4f6-b5f5-4de5-a3b9-830431badeda",
        "cursor": {
          "ref": "0a2c3b8b-b529-4e75-a22f-eb146f4fe930",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eee2dc39-71bd-4ad1-ad25-ff4005513feb"
        },
        "item": {
          "id": "ebfaf4f6-b5f5-4de5-a3b9-830431badeda",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6787aa60-17ed-4f12-9522-b95943b1aa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bed6c57-5702-4890-b396-123c532bbbdf",
        "cursor": {
          "ref": "00a09154-9b14-49fc-b348-81e7c16d072d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "967ffc8d-18ac-4415-9446-591ff8a7a61c"
        },
        "item": {
          "id": "9bed6c57-5702-4890-b396-123c532bbbdf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7ef7aae2-491e-46bd-95cc-17f73e0de6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de610565-e5d4-4abc-9baf-deb48b3a3ad7",
        "cursor": {
          "ref": "b694df09-e45c-4bf8-b026-52a7f58715b2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "299e4d00-d820-4382-8d27-c9d9328a0c1d"
        },
        "item": {
          "id": "de610565-e5d4-4abc-9baf-deb48b3a3ad7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "93adc4b8-6b72-499c-be17-5dd6a8bd44ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d63a96-14f9-41f1-bafe-17ddd1fbb473",
        "cursor": {
          "ref": "ef96638f-dba1-494d-a096-f437137ec880",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "57b11013-4c46-45e5-a15e-4d287ed14924"
        },
        "item": {
          "id": "50d63a96-14f9-41f1-bafe-17ddd1fbb473",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9f38045b-dd13-44e8-8b50-d7b558a3de7f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f293218-3f99-4ffc-b00e-c385708012bf",
        "cursor": {
          "ref": "70862f8b-0eb9-4d22-86b3-28521ebd55de",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1c202892-65d8-4058-88a2-7b6c8b65dc5e"
        },
        "item": {
          "id": "6f293218-3f99-4ffc-b00e-c385708012bf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4eeeceff-f366-4edc-a5f0-7e3c327e025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308c3aa9-f6ad-45e5-9a88-2d14d96255a6",
        "cursor": {
          "ref": "1aa506dc-74af-4d8e-9e5e-270e05c35354",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b87c76f7-a614-4996-8858-119ab8e3e576"
        },
        "item": {
          "id": "308c3aa9-f6ad-45e5-9a88-2d14d96255a6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f5a34a35-222f-4188-9d85-33a42fac947e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d3d961-6be9-45c3-b6d6-5705c1485423",
        "cursor": {
          "ref": "e5ec252b-0ffd-400f-b897-bf7ebbd10ff3",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1c59d333-e374-4bd3-a740-5e5815918b4b"
        },
        "item": {
          "id": "c1d3d961-6be9-45c3-b6d6-5705c1485423",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bfa3bd2d-4790-4b3e-8b75-afa4ff80ebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36242956-6e88-466b-880c-af4bbee4fe4b",
        "cursor": {
          "ref": "ec21cd8e-ccf0-404b-98cd-93862132c4e7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1c8d811c-e964-4467-a75b-20916e3d873f"
        },
        "item": {
          "id": "36242956-6e88-466b-880c-af4bbee4fe4b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "50ca0c4c-ae9a-4b7f-98c2-30d031192f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02f542a-3761-4107-8897-2eda03954ae8",
        "cursor": {
          "ref": "8e5d3c29-d7ff-4822-9a2c-3d8c5399a735",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "648bdfdb-fe25-4ed6-bccf-d1211aeefdf0"
        },
        "item": {
          "id": "c02f542a-3761-4107-8897-2eda03954ae8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d9e75d06-faa4-4cc2-baa1-879dde76c7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991ecb07-1b87-4f9b-9151-fdd889e09b8d",
        "cursor": {
          "ref": "d33aa443-6b92-4b60-ae66-7c0f4e142154",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "726e7fb9-8000-4ee6-a6ec-bce521495774"
        },
        "item": {
          "id": "991ecb07-1b87-4f9b-9151-fdd889e09b8d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "68d85c1f-544b-4d3c-b7e1-dec1042ace0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeed920d-6321-4ddd-ae70-dc8d8d6805dd",
        "cursor": {
          "ref": "85cbfdf0-ad01-497f-a7b5-017b3b31ccbc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c75a18c0-1ed7-4d8e-b689-883bd83c0cc4"
        },
        "item": {
          "id": "eeed920d-6321-4ddd-ae70-dc8d8d6805dd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a2fd248e-eb78-44c2-bbfc-6b091cfccd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8d30c4-65ec-4a5c-bce5-55f3e7e325a8",
        "cursor": {
          "ref": "7b8a1886-ffe5-4aa1-a44a-035043f20a59",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b81b01c3-8a69-457b-84f9-13e000d378ea"
        },
        "item": {
          "id": "cd8d30c4-65ec-4a5c-bce5-55f3e7e325a8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b690df0c-7fca-47c5-a4ec-39ac70b0ca94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e8809c-7026-4565-acf1-4eb982dd3dd1",
        "cursor": {
          "ref": "3610f925-e23c-4130-9738-8b435d37dad7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bd6959ec-bb57-4c75-bde6-d751de148c9a"
        },
        "item": {
          "id": "a0e8809c-7026-4565-acf1-4eb982dd3dd1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c709b263-2421-4a94-b6a8-70a42d2c5702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2245da-249b-400a-8858-ed2b5b5e4f93",
        "cursor": {
          "ref": "66544d6f-822d-4e11-aa83-68aae71f7591",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2b56be7f-72e5-49f4-abec-e29d6b26c7c1"
        },
        "item": {
          "id": "6a2245da-249b-400a-8858-ed2b5b5e4f93",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "51247faf-6772-4b25-88fe-f9b61d2dd737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf7a8fc-a9b6-40c6-a460-ac9666d277d9",
        "cursor": {
          "ref": "ef29c61e-8971-420b-9c53-5290b5c84571",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bba40e5c-c0c6-40b8-a096-3d03aad2ea76"
        },
        "item": {
          "id": "3bf7a8fc-a9b6-40c6-a460-ac9666d277d9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7ee11eed-67ff-4078-b228-4085d298b94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46238d5-a006-4d91-b679-71fc356dcd11",
        "cursor": {
          "ref": "ce09fa85-0096-40d9-ba5c-6250edb9d3ec",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "793920a3-b6a7-4c2d-8b1a-749637731214"
        },
        "item": {
          "id": "b46238d5-a006-4d91-b679-71fc356dcd11",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a83b1acf-8289-462b-9d31-0ea2fd160389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065e5ecb-a958-4fa3-b08b-96ee2a4587a7",
        "cursor": {
          "ref": "fcabd3e2-78c0-4b17-8ce8-e941d0cc4fcd",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "58c6cd63-9096-4cea-909e-927b793c9863"
        },
        "item": {
          "id": "065e5ecb-a958-4fa3-b08b-96ee2a4587a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1108a266-a525-422a-b89d-2e86a8a3bb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54789f6f-a264-4797-ae04-363a8c31c459",
        "cursor": {
          "ref": "973b3a5e-127c-4ac5-8d83-9390f1083c61",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6746cf0f-e06e-4d14-98d4-5af9d48a182d"
        },
        "item": {
          "id": "54789f6f-a264-4797-ae04-363a8c31c459",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5933320d-1517-4ebc-a902-36eb85e8abf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714dfbad-d662-4c13-a80d-b5a2a05ba359",
        "cursor": {
          "ref": "21be6541-28f1-43b4-bb57-f10767601599",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b22d0bd4-4e12-4ce6-b25c-e46c58410130"
        },
        "item": {
          "id": "714dfbad-d662-4c13-a80d-b5a2a05ba359",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f1d399ec-df6f-43ee-a818-f54200ecdc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dabc3cb-ed02-4214-837b-4987358d4202",
        "cursor": {
          "ref": "c74a1aaf-6318-401c-a380-3688f4c45d83",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6acc8ad5-0c68-4cc2-9ec4-90d95e7ac519"
        },
        "item": {
          "id": "7dabc3cb-ed02-4214-837b-4987358d4202",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bd648787-fddd-442d-8f64-3659243060bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f957330-3260-4caa-953c-a46d00358f6c",
        "cursor": {
          "ref": "94ca1f31-0c26-4cc1-930b-ab5c9fcb696a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e1592f0a-7623-4b7d-b696-65703cdcb3c2"
        },
        "item": {
          "id": "1f957330-3260-4caa-953c-a46d00358f6c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f0a37cc5-341e-4ba9-a9b4-c88cd4f75f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153c15f2-b77c-43cb-9dc5-9f176e83458b",
        "cursor": {
          "ref": "d90f1064-d897-49ff-821f-ed779abb0215",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "52d0b12d-7323-4154-a848-c01a12e59fad"
        },
        "item": {
          "id": "153c15f2-b77c-43cb-9dc5-9f176e83458b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dd899b8d-37db-4e68-a62e-ca032a6c53d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d65582-1e3d-49ba-b2bb-267ad9e81177",
        "cursor": {
          "ref": "de351b9c-e87d-4c64-bb2a-8703a5054db3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "38e968f8-b873-404f-8ee4-0bfbd542547f"
        },
        "item": {
          "id": "99d65582-1e3d-49ba-b2bb-267ad9e81177",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1244ef05-4550-4b35-8724-06129827f29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4bc745-3e56-4ac6-9295-4e5b1600b14b",
        "cursor": {
          "ref": "4b7f70f0-ccf0-4612-9a92-a95579f15d26",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "51dc707e-074d-4bf7-82fa-631e9985751e"
        },
        "item": {
          "id": "7f4bc745-3e56-4ac6-9295-4e5b1600b14b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "90865a1a-6427-4542-90b2-6657a04cd0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87595aa5-daba-4a61-bb43-6316c6dcec4b",
        "cursor": {
          "ref": "eb8a5b31-da09-4242-ade5-fe3310f2a12c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3f8653c2-bf4c-45b9-96ce-bb3c5680b4aa"
        },
        "item": {
          "id": "87595aa5-daba-4a61-bb43-6316c6dcec4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "02a86406-492e-4355-8da7-b69333455645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215f1024-d0c2-4fa3-8a08-82a9414ef2a5",
        "cursor": {
          "ref": "3f3f41d7-5834-49de-a17f-d95ea968b12c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c9f539b1-082f-48f1-84c7-5946c3cf8f28"
        },
        "item": {
          "id": "215f1024-d0c2-4fa3-8a08-82a9414ef2a5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f5895009-b508-412f-92d1-1176538d14fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5456527-3fe5-4bce-ac58-4c0f3dfd3490",
        "cursor": {
          "ref": "b50b7327-9ddf-4c31-90ef-09be8dc8c27b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aa38c036-d8bc-4a7a-8ca3-1fae745f0d84"
        },
        "item": {
          "id": "c5456527-3fe5-4bce-ac58-4c0f3dfd3490",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "680b544d-7832-413f-9b5a-ac16265a5234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eb9a2d-4a4b-46fe-815f-c16cd6103024",
        "cursor": {
          "ref": "e49751b8-e899-4f68-9e8d-6867681d66f1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6744b3c9-4b19-4670-b4d8-8543570f83a4"
        },
        "item": {
          "id": "28eb9a2d-4a4b-46fe-815f-c16cd6103024",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "30908527-351b-4e57-a8bf-ecaa89603b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fe993f-ea80-4673-beb6-c3e1faafbe61",
        "cursor": {
          "ref": "940e7e5a-ac21-4624-b4ed-5616c33eb148",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8527caf5-954f-4a8a-9d73-ced6cb863805"
        },
        "item": {
          "id": "96fe993f-ea80-4673-beb6-c3e1faafbe61",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "83be31d1-c7fc-4117-9251-b3d0aad6ae2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c100eca0-ea0b-4e30-a6e5-c41f8b2f510a",
        "cursor": {
          "ref": "47ac912a-3cb1-4fc3-af73-4b8fde3d7427",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea505e81-7a63-4a7f-9c86-ad88e0c868c9"
        },
        "item": {
          "id": "c100eca0-ea0b-4e30-a6e5-c41f8b2f510a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "295471c4-c1de-4ad3-8fa0-863d0eaf0d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341ac347-83fd-40de-80b9-0ef8194e0792",
        "cursor": {
          "ref": "4ab08664-1334-4652-b913-77655d65830c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bd7aed0c-07ed-412a-9b49-a61789440841"
        },
        "item": {
          "id": "341ac347-83fd-40de-80b9-0ef8194e0792",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "657e68cf-ab05-451d-a4c2-e6c2a701c8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b8399a-aa98-4840-98c9-95478089bdff",
        "cursor": {
          "ref": "5a3f2104-8464-4f9b-8d62-c408b4f856fe",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1b0717ea-e430-42ba-a193-0318d9fbe0e1"
        },
        "item": {
          "id": "c3b8399a-aa98-4840-98c9-95478089bdff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "46349e44-99eb-48cd-ae3b-34c104fe0866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd90cf48-e62b-4830-8f69-4f2757da9122",
        "cursor": {
          "ref": "edca6b16-06b7-438c-80d5-bd816a4cddfc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5b4a10a4-6633-4c46-8f4b-e25c49873e0b"
        },
        "item": {
          "id": "bd90cf48-e62b-4830-8f69-4f2757da9122",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a9d294b2-b7ba-4599-9894-d8cc2a7989da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa0febd-191f-4fc3-92a8-dead0f802994",
        "cursor": {
          "ref": "1e6ab4dd-803a-48b1-abda-aed6c6a532da",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d56bfe0-4b9b-40d9-9138-82b1749dd240"
        },
        "item": {
          "id": "3fa0febd-191f-4fc3-92a8-dead0f802994",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "05000eec-b1ea-4c76-aac4-3c30dd6e0151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c546f6-3c88-4bc9-a855-256a5010eeac",
        "cursor": {
          "ref": "dc368f0a-d8ce-49f1-b26c-1ec5b5afb9eb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "45799d67-67a3-47b9-a8af-9f0a4be48421"
        },
        "item": {
          "id": "72c546f6-3c88-4bc9-a855-256a5010eeac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2ecbc8dd-f5dc-4287-9c36-da2addb9af1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e2c97c-e46b-47fc-95ae-3205cc430604",
        "cursor": {
          "ref": "c4f7906b-d1ff-47b6-87e7-f2926fd9f57d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d45d45b8-0bf8-4b46-b36b-b37aa87711fc"
        },
        "item": {
          "id": "e0e2c97c-e46b-47fc-95ae-3205cc430604",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d3d91956-28c9-4d55-9f70-f01611409a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705876c5-ca91-4766-9df1-39d16ef890c5",
        "cursor": {
          "ref": "a35a70c1-e81c-46c8-a248-78fd22d940fc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8c106ef8-2f71-48f6-aec2-1f1775646b7f"
        },
        "item": {
          "id": "705876c5-ca91-4766-9df1-39d16ef890c5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "272d8b8e-303c-4fe5-a9ef-84679fde90ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2f4ae0-ce65-4aa5-a79c-5ca96649ef7d",
        "cursor": {
          "ref": "e73d657f-08a9-4689-84ac-5276c4ed40ae",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "075e44b2-b6bc-48eb-8838-2bc4691be1fe"
        },
        "item": {
          "id": "4b2f4ae0-ce65-4aa5-a79c-5ca96649ef7d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8ea3f1cf-b12a-4e8e-bd8f-ab8dc5037cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b5e9c1-0e45-4cc3-bc9d-2a999cbdb865",
        "cursor": {
          "ref": "d377c1b2-d896-42fd-9c1f-7564eb91b566",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "50b92c21-439b-471a-9f8a-114f2cec170a"
        },
        "item": {
          "id": "f6b5e9c1-0e45-4cc3-bc9d-2a999cbdb865",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "75cf0327-73cc-40f5-8d22-a90d4808bf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea1d86f-cf4a-4dc8-8c74-47ce96b360fd",
        "cursor": {
          "ref": "1d797861-0c14-4854-bad0-70a058124911",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9f0c0aaa-bf72-498f-b04a-374f9821091d"
        },
        "item": {
          "id": "aea1d86f-cf4a-4dc8-8c74-47ce96b360fd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2d3ef833-d18b-4830-a2b2-48796e5ce0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43440b4e-5f0c-4a97-9cac-04008f3c7f2b",
        "cursor": {
          "ref": "194b12a7-2584-4e3e-9bc4-7f353c9fdfcf",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5ee45def-dbe5-4f6d-a335-5727dc54f3af"
        },
        "item": {
          "id": "43440b4e-5f0c-4a97-9cac-04008f3c7f2b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dc663c7a-4e12-44a1-8d83-830ea7fd273d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0589ef88-c05b-4c65-aa22-8c1cb7aa15f2",
        "cursor": {
          "ref": "c37e11c9-967b-4efb-a4da-be2418bfa85f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b509d5bf-9c5f-4e3d-8bef-674817ed3c16"
        },
        "item": {
          "id": "0589ef88-c05b-4c65-aa22-8c1cb7aa15f2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2d158804-200d-4654-be86-710812d0f1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c4d2b7-6306-4c7c-a0ca-471bbf9071cf",
        "cursor": {
          "ref": "c1bb5bfe-02f4-4bf0-a79a-f8a85115719e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7c724164-f3f4-445f-8459-057ae0e27892"
        },
        "item": {
          "id": "c1c4d2b7-6306-4c7c-a0ca-471bbf9071cf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a0bc7e66-3a5d-4e38-b935-b582864c7410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d23cfa0-62f1-409d-b77e-b4d43ec01cb9",
        "cursor": {
          "ref": "fca47fb8-5724-44db-ac2d-fa2c73684724",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a06c9128-7905-4f0e-93af-420e7f49d253"
        },
        "item": {
          "id": "1d23cfa0-62f1-409d-b77e-b4d43ec01cb9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0a451578-a07d-496d-9da5-491e68b86623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf0bab-ab43-4a3e-bf9f-f95037300fc8",
        "cursor": {
          "ref": "8125a99e-4f2f-46f4-8203-813f770ef55c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "34747f80-0047-4ad0-b1f1-bb0db0dc24b2"
        },
        "item": {
          "id": "36cf0bab-ab43-4a3e-bf9f-f95037300fc8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c07fe2d9-4123-4ef8-ae14-85cf3f7030da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293ddd2f-0bd5-4ef3-97a2-0f6d622330ae",
        "cursor": {
          "ref": "244eaea7-17c8-49d1-915e-6f4dec2be25f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ef3cfb5f-922d-402d-8786-e41f0141f503"
        },
        "item": {
          "id": "293ddd2f-0bd5-4ef3-97a2-0f6d622330ae",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4b0e21ee-4ee9-44c9-96de-86ee6e2ed8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e616b7-a7cc-4d63-956b-1fe87d289ec0",
        "cursor": {
          "ref": "60950697-0d41-48c4-9db2-a1f0328cbd2b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "399c38a9-18c1-4bde-837f-e15233e0400c"
        },
        "item": {
          "id": "83e616b7-a7cc-4d63-956b-1fe87d289ec0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0e99d8d4-fc30-4273-9706-e58ecd42c15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eff7bf-860d-4ed2-9524-026d5fe328dd",
        "cursor": {
          "ref": "1aa69179-4778-405c-8113-2310a4a9e5d9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2916dcb4-eb62-4347-a72f-fcaec8d86309"
        },
        "item": {
          "id": "68eff7bf-860d-4ed2-9524-026d5fe328dd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "01cd484e-cbb2-4327-b86d-bbff1522ac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2d8ec5-4402-4c2e-bd8a-514a48d18633",
        "cursor": {
          "ref": "ffbd85da-170c-466d-ac44-279c6388d1d8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d93a7a3-84f7-4d59-9425-3c57a236d401"
        },
        "item": {
          "id": "2c2d8ec5-4402-4c2e-bd8a-514a48d18633",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2ce1ea90-6cf5-4101-a454-12f636d4c2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bc4041-094e-4001-85ee-b738d72a6bdb",
        "cursor": {
          "ref": "7fb69029-8c9e-4f78-871e-42f99986e0a6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0133a08c-3501-4a96-9ffe-9196911bb6c4"
        },
        "item": {
          "id": "41bc4041-094e-4001-85ee-b738d72a6bdb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "196e9869-76a5-4d55-b61e-0e58cbfa53c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59076327-55d2-4783-b1e5-1d27d6f93909",
        "cursor": {
          "ref": "82bfbd18-fa5f-4c16-bdf7-ab8eefaefd4e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fa389f6e-01a2-49fb-aca9-6bbf9890b797"
        },
        "item": {
          "id": "59076327-55d2-4783-b1e5-1d27d6f93909",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6a958cf3-400c-4ef5-a655-2f3f9b5ecec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc5f45-7bdf-4750-abc8-789264166003",
        "cursor": {
          "ref": "e06a49e1-d551-45fc-9aaf-1e2e0035cc70",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e7e9e362-ade2-42c5-a9de-14fb7a681d30"
        },
        "item": {
          "id": "72bc5f45-7bdf-4750-abc8-789264166003",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "896c6d60-a882-4b30-883e-9a9c8cefce5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aaf3a5-ac4c-4ebf-a7f0-6e272e787dda",
        "cursor": {
          "ref": "bedd3046-dcce-4312-99c9-a1813b7e1b6c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d91aaacc-3a86-4ed5-955f-03065439331f"
        },
        "item": {
          "id": "11aaf3a5-ac4c-4ebf-a7f0-6e272e787dda",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e517082f-1217-49c4-9491-01b57e0a56b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3761eb0a-764e-412b-a891-9bbebcc81831",
        "cursor": {
          "ref": "38a3e309-94d9-4aec-8ec1-63b9a5ad8008",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b55912f9-ca9d-4925-b30b-8d0d99d966ab"
        },
        "item": {
          "id": "3761eb0a-764e-412b-a891-9bbebcc81831",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f8b455ab-7a9e-4376-907a-7bc8ad8eff05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf4ec14-d702-47e9-86b7-cf2ccb1be473",
        "cursor": {
          "ref": "caed15cd-f33e-4895-8746-a699de8e928a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "43db6a10-f9a4-4aff-a0cb-bb1aa5ba57b7"
        },
        "item": {
          "id": "8bf4ec14-d702-47e9-86b7-cf2ccb1be473",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "60d8f861-4dd1-456f-a9bf-52b2bfa0184c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "379f7d41-4298-4e13-8f93-f247bb14a7ec",
        "cursor": {
          "ref": "5bfcebab-9e4c-456a-8c7c-c53057e382fc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e6561f06-d16b-496a-a460-2000a75c9349"
        },
        "item": {
          "id": "379f7d41-4298-4e13-8f93-f247bb14a7ec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b8833883-f41b-4cc2-a05e-600004b8fd46",
          "status": "Created",
          "code": 201,
          "responseTime": 4941,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "890ace86-d2bc-45e1-ad7e-83d79296a25d",
        "cursor": {
          "ref": "3ef405db-e37c-4471-9c5a-6a49567b3b6f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "91ec1c58-1ca4-4dc7-a1c6-465360ab17a8"
        },
        "item": {
          "id": "890ace86-d2bc-45e1-ad7e-83d79296a25d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3a2ea56a-530d-4a0d-87bf-64915d66bbf6",
          "status": "Created",
          "code": 201,
          "responseTime": 4725,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc92b68-4355-4669-8fb2-3d42d3144333",
        "cursor": {
          "ref": "789e553d-6905-44e2-80f3-b75636c009ea",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "759c07ec-45b1-42aa-9702-c5ced6e8998d"
        },
        "item": {
          "id": "3dc92b68-4355-4669-8fb2-3d42d3144333",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f77ad96e-3716-4705-b937-5bad24bd0f10",
          "status": "Created",
          "code": 201,
          "responseTime": 4621,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d6fad7-5528-47a1-8b80-14cf1d2bec91",
        "cursor": {
          "ref": "1b5d8813-3148-4717-9fcd-b8ca5782221d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6c505594-9bd2-4fc8-a022-dd6fc158e6e6"
        },
        "item": {
          "id": "55d6fad7-5528-47a1-8b80-14cf1d2bec91",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0779aca9-e11c-472a-be95-bf8419797b11",
          "status": "Created",
          "code": 201,
          "responseTime": 3831,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b8f01-2569-4e9f-9d43-f433ad9833d0",
        "cursor": {
          "ref": "8c0780b2-cc67-4ae4-a110-1a1ca3971ed3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d168e216-3d74-43f1-9d58-073b900736e9"
        },
        "item": {
          "id": "223b8f01-2569-4e9f-9d43-f433ad9833d0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bb900eda-9f23-4f7a-a8be-81765a752094",
          "status": "Created",
          "code": 201,
          "responseTime": 4456,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-25T00:36:32Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-25T00:36:32Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "eeb47013-b900-49f5-bcae-8d6a02c718a3",
        "cursor": {
          "ref": "3819102d-fbdc-4f5b-b986-abc1c2066acc",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a40f126e-fb8f-4cfc-946b-296729e4cd0b"
        },
        "item": {
          "id": "eeb47013-b900-49f5-bcae-8d6a02c718a3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9d9728e2-e8f8-42b1-9756-31086b16d443",
          "status": "Created",
          "code": 201,
          "responseTime": 4237,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef088fa-d227-4a57-a3ba-3fd6ace66c95",
        "cursor": {
          "ref": "3ad91a33-a823-483a-8d7a-e20c671dcaca",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6194c7a4-8f5a-4aea-8f23-049dd5e75443"
        },
        "item": {
          "id": "1ef088fa-d227-4a57-a3ba-3fd6ace66c95",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c52d0839-5dac-4f19-975f-3e07a14ee618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f826ee4-baba-47d9-82ee-d6eecc0e2144",
        "cursor": {
          "ref": "d4725080-833d-4334-86da-bc3f8a3d98b4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "28d48ce8-bbe8-456b-9524-04694eac9b48"
        },
        "item": {
          "id": "7f826ee4-baba-47d9-82ee-d6eecc0e2144",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db7aba4f-5b7d-4e1d-b511-f2b80d723917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9fddfb-6ea4-4ecd-8b7b-01e5a300dc7a",
        "cursor": {
          "ref": "df7e8211-7733-45cb-95ee-c423fce9bab4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "52f9abf8-1214-43c0-85e0-f87f0528c1b7"
        },
        "item": {
          "id": "0c9fddfb-6ea4-4ecd-8b7b-01e5a300dc7a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1f93e81f-c940-402e-b349-a88c72e8418a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c2ecd4-8423-416c-b85a-63518a857599",
        "cursor": {
          "ref": "35d9196e-5ee5-494b-804e-1db063236eaa",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6c1bb456-9011-44f3-ac7e-ab35e65030ee"
        },
        "item": {
          "id": "82c2ecd4-8423-416c-b85a-63518a857599",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5eca4bfb-fdc4-4727-8527-a6263c041d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20e67ac-6896-4fb9-867b-2664d7e6f552",
        "cursor": {
          "ref": "681e8bd0-9a34-41e3-82f1-e24875830027",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "345bd0cd-2cf2-4bd0-a105-f0acaae75d4f"
        },
        "item": {
          "id": "e20e67ac-6896-4fb9-867b-2664d7e6f552",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d4bf532c-988f-4657-bd25-9769da0791c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8041355e-867a-425e-9a08-1822d236b5b6",
        "cursor": {
          "ref": "496ce882-556d-4bc8-a417-9b4831a95c79",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "123c5e76-d70e-4db7-935a-c9e21b31e9fb"
        },
        "item": {
          "id": "8041355e-867a-425e-9a08-1822d236b5b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c6c4aac5-4aa8-4023-851d-3de2136c00d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d766f632-559c-410e-9568-3f87c84da8db",
        "cursor": {
          "ref": "de0077fc-02f3-45ef-a606-8a882dfcf8a9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c95189a3-f235-42cb-bc1e-9bd4672eed29"
        },
        "item": {
          "id": "d766f632-559c-410e-9568-3f87c84da8db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "78a0d02d-3fbf-4fe9-820f-7911da423c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401a0e16-b199-4ae9-989a-c886d83e8a36",
        "cursor": {
          "ref": "be53e38c-75b6-4dd3-bc7b-d878d378fb82",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3def4a0c-fc33-4db7-a642-4fc45ef5c5b5"
        },
        "item": {
          "id": "401a0e16-b199-4ae9-989a-c886d83e8a36",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4285b962-c47f-4509-a19d-f51456de61cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f539c1b-83dc-4314-bc37-0de127294ea5",
        "cursor": {
          "ref": "e62e69dd-c407-45ea-98d0-96a35c2abc66",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ca9889b1-9651-41cc-8f53-e64bc1717d2f"
        },
        "item": {
          "id": "0f539c1b-83dc-4314-bc37-0de127294ea5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d215257a-26e4-4502-a718-28a2bbb65fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d559b5-0eab-4835-b803-1417f1e9c72b",
        "cursor": {
          "ref": "02257ea0-f561-425f-b48d-ce8b88c3bc38",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "603162ea-dcc3-47d6-9f88-51630cf84acb"
        },
        "item": {
          "id": "11d559b5-0eab-4835-b803-1417f1e9c72b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2e1fd386-fc5c-4ffd-8006-2b415b3c9a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aac6ee-b0d8-4487-8f7f-27ebccb66a57",
        "cursor": {
          "ref": "3dc742bb-55c0-4b6b-a190-596c44481724",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2ec9c50b-002b-4faa-84c4-143ddb5672cf"
        },
        "item": {
          "id": "b6aac6ee-b0d8-4487-8f7f-27ebccb66a57",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f9cb6714-5ce2-4655-bf70-b37c8f275d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9f40ac-ca78-4ae5-8567-7451ad784ab7",
        "cursor": {
          "ref": "e19bee89-a2c4-4929-8545-3f928164ddad",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e75f1b10-eadd-42e4-a3e8-57cf5c9cb6e0"
        },
        "item": {
          "id": "9c9f40ac-ca78-4ae5-8567-7451ad784ab7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4bdb504-ab95-4bfa-bfdc-08b56a990c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fcde42-2bb4-4298-b110-1d41cff62185",
        "cursor": {
          "ref": "c190c861-56a8-4ac3-aafe-8d60de7c389e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "948ba771-8a17-48f1-b5c2-4e492a34aa02"
        },
        "item": {
          "id": "a4fcde42-2bb4-4298-b110-1d41cff62185",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff820a02-9cec-4665-afde-18c2b1099f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383a2a61-1354-410c-9158-e453a688732d",
        "cursor": {
          "ref": "56446785-220d-411a-a2f6-2d577fcba539",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "211b63ba-ad67-408b-bab8-be6a12e0309a"
        },
        "item": {
          "id": "383a2a61-1354-410c-9158-e453a688732d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bcfae562-d100-44c5-a78d-494629fd3b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a32fa4a-1a5c-4c93-81ce-81664ae0c933",
        "cursor": {
          "ref": "62920e57-e268-4318-a136-488bbfee8de0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1c0a1935-c2f6-44ae-951f-e478fa24f78f"
        },
        "item": {
          "id": "5a32fa4a-1a5c-4c93-81ce-81664ae0c933",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7fbd2147-d930-48e6-88d7-e7c4d3151ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631959f3-f2a5-4c09-8215-0486db8e605a",
        "cursor": {
          "ref": "155b1f44-01d5-488b-a0c9-2e56a9c88da4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0e479ef8-59dc-4e5d-8ea4-b5c29d0536cd"
        },
        "item": {
          "id": "631959f3-f2a5-4c09-8215-0486db8e605a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d30a61b7-768c-4a34-89cf-6ab34964f2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38620ed2-88ee-4360-92a5-f9b9aa7cc92e",
        "cursor": {
          "ref": "a420c291-5304-4bbd-b3ac-4bf164f7715f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ba6fbbf1-b8fe-47eb-b607-9f99fc5496f8"
        },
        "item": {
          "id": "38620ed2-88ee-4360-92a5-f9b9aa7cc92e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5be033ee-2b5b-4e2d-af1a-929b429d6e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c6dc42-e244-48ce-9f23-0399e34f3e76",
        "cursor": {
          "ref": "dad2204a-b45f-438b-b59f-a4e6c24717df",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "adef9e1a-e363-46fb-95f0-824fe582e2d7"
        },
        "item": {
          "id": "e1c6dc42-e244-48ce-9f23-0399e34f3e76",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a80cf7c8-9d58-4f2c-bbd3-8f72eb70913a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744a520f-4f00-49a5-b81a-65548d73f955",
        "cursor": {
          "ref": "9b5d8728-cc75-41ef-b115-d216f84a9856",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f05d8d88-1cfa-4434-a5a0-63e4b434ae77"
        },
        "item": {
          "id": "744a520f-4f00-49a5-b81a-65548d73f955",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aca32826-58aa-42c0-bb89-e68fb62de275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4add9fbe-822f-4281-a8f5-e5c5ae59130b",
        "cursor": {
          "ref": "85b93569-5d01-43a9-9883-ccfbd2432a71",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "75dd1ca8-5894-4935-8af4-1bf9d46a5d49"
        },
        "item": {
          "id": "4add9fbe-822f-4281-a8f5-e5c5ae59130b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b23e201d-a89b-4b01-89bb-671258c34e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e442a964-f71d-4aed-b28e-a6fc90be91b8",
        "cursor": {
          "ref": "d20ac378-69da-477c-9890-148c3aa9888b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "881344cf-b12c-429e-967c-931d8bd30ae5"
        },
        "item": {
          "id": "e442a964-f71d-4aed-b28e-a6fc90be91b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8231da95-9b7c-42ab-b7da-292f7160643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01180131-8b8c-4dbc-b80f-b1fa036aabb3",
        "cursor": {
          "ref": "52e5fb80-4f71-4638-bc84-5d20188f4833",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5dde0595-85a6-4f6b-b570-9312582b8348"
        },
        "item": {
          "id": "01180131-8b8c-4dbc-b80f-b1fa036aabb3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e11d3a35-43fb-4b9c-ae92-5d0856bb36c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a23f7-e60b-4a74-bb38-81cc7ef38642",
        "cursor": {
          "ref": "7ba091fb-ad27-4525-894a-c3ab1c511d9c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8eb19e68-a292-4fe1-a65b-ed8a7535e7ad"
        },
        "item": {
          "id": "5b6a23f7-e60b-4a74-bb38-81cc7ef38642",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "57677393-4cf5-43b0-9823-ac0802e66212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397f03f9-40bb-498b-8487-83d866f7a9d1",
        "cursor": {
          "ref": "d0da38e1-1c80-4b99-b022-c008bdd3ea6f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a6e1be5f-86eb-4a53-b7f9-56db96391127"
        },
        "item": {
          "id": "397f03f9-40bb-498b-8487-83d866f7a9d1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14c3a60d-6aa5-42c0-98bc-8f1c332c3999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bfd022-4413-43ed-ba77-d2a783fe891d",
        "cursor": {
          "ref": "6ae1c076-5e86-4dba-a852-1c76184b6acd",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c0e90caf-3527-4075-bb5d-daba1e30d308"
        },
        "item": {
          "id": "71bfd022-4413-43ed-ba77-d2a783fe891d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27acb606-2b3c-4a0f-afc8-75780a8460e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c74a3d-22a0-4d46-82c9-265a0ae3bd9e",
        "cursor": {
          "ref": "138f1e19-0a59-4570-b968-992a2250c961",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "60a2e7ee-44e7-4b50-b10e-c03e59cc3320"
        },
        "item": {
          "id": "96c74a3d-22a0-4d46-82c9-265a0ae3bd9e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c2c14a3-82ec-49a8-a809-9e9cb2374f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c9fe62-e0dd-4bc3-9e40-74388508fc37",
        "cursor": {
          "ref": "18daedde-417c-4b59-b58e-f65b9839e7eb",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3e94ace9-a822-497b-8639-69bc10ca6e22"
        },
        "item": {
          "id": "a1c9fe62-e0dd-4bc3-9e40-74388508fc37",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5cfc29c4-370e-421a-a9cb-aa78f29c349a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352fdeae-2588-46b7-bce7-76821c48de5c",
        "cursor": {
          "ref": "76cebb48-6468-4137-80ff-482cd61b7f7e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aab729e2-88c1-4010-9dc8-7ec4bb15b90e"
        },
        "item": {
          "id": "352fdeae-2588-46b7-bce7-76821c48de5c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37e4304c-5994-4c54-adb5-0119b6374251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ab4f7c-9012-49e8-8994-7a09e7e8c5e8",
        "cursor": {
          "ref": "3a890328-07a9-423b-922b-b9a559a9fa8b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "28297230-0d19-44e0-ac9d-89e7188bdbc0"
        },
        "item": {
          "id": "f4ab4f7c-9012-49e8-8994-7a09e7e8c5e8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1b62c331-2e28-40bd-93b9-af0b55c97231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4663b39b-3600-4c78-8fba-d3a423d317c8",
        "cursor": {
          "ref": "bdeec39a-92ea-4672-a436-49ec8d206e6e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fea5fc87-483e-465e-ba3a-6ce0a2d4b9aa"
        },
        "item": {
          "id": "4663b39b-3600-4c78-8fba-d3a423d317c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f598c6d-9a32-459c-a086-b2ce7cd23a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dbff4a-37d2-4e2b-ac3b-1c4b5592e622",
        "cursor": {
          "ref": "f2d11f98-11a8-47e7-a020-9bf1372a5c58",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "11cc456c-d3f3-44df-92ed-af0a39fef4b0"
        },
        "item": {
          "id": "e2dbff4a-37d2-4e2b-ac3b-1c4b5592e622",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "34b61499-996e-4753-9d33-cc71a404f4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7447bc7-dda2-401c-b646-447d1c080738",
        "cursor": {
          "ref": "dc58dc52-d3e6-4e1c-99f1-8de7b8c37153",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "19e045fc-e22c-4445-a9e3-358b44c821a7"
        },
        "item": {
          "id": "c7447bc7-dda2-401c-b646-447d1c080738",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c2bfd4c7-9474-4dd2-aa91-0a53c0974a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a92ba-8deb-40a4-8b83-0734f7817b59",
        "cursor": {
          "ref": "4f77baf7-e7e8-4543-89ba-5af0732c6f33",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f14fb902-c22b-47ea-919a-b8178b4305a1"
        },
        "item": {
          "id": "254a92ba-8deb-40a4-8b83-0734f7817b59",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cac75564-fb4f-493a-a584-fdb153be209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e66090-dfe5-4d95-ba26-a2e9dac9049e",
        "cursor": {
          "ref": "12049356-37e1-4f33-9855-13102be3dd7a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "12261bf6-f617-43e8-85f3-c87fcfa3462d"
        },
        "item": {
          "id": "47e66090-dfe5-4d95-ba26-a2e9dac9049e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bdd10c68-6ace-4e77-97fb-a3b0a93ca6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd1ab2-ffc9-4671-835d-bd9b635cf36d",
        "cursor": {
          "ref": "e83b7dd2-62df-4d4b-a88f-a67d4c446980",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "320a9e0a-7bae-4093-894d-ed921d4c18ac"
        },
        "item": {
          "id": "7bbd1ab2-ffc9-4671-835d-bd9b635cf36d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5d3b9afd-4ba8-4674-ba49-bc99a1767d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67648340-eaee-45a8-b852-464fdc4319ff",
        "cursor": {
          "ref": "2b7fc465-2dc8-4083-8006-a9f700bec26d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7afc9ba5-3a2e-4403-97ad-d7a7b0038ca5"
        },
        "item": {
          "id": "67648340-eaee-45a8-b852-464fdc4319ff",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0cf44067-dd45-45d6-b2fb-5bd8fa4b112d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729aba73-2924-49ed-8d22-09015d016a24",
        "cursor": {
          "ref": "0fe7563d-4312-4874-b888-9eb9e9cbc868",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c16e2663-0cb5-4d35-b4b8-65366d603e35"
        },
        "item": {
          "id": "729aba73-2924-49ed-8d22-09015d016a24",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f2c3cc7b-01ec-4498-8209-d7d805de8ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2dfca7-a61d-47cf-a576-dbb94d11d835",
        "cursor": {
          "ref": "eda6b33b-5218-47b3-996e-34aca227c71a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cbaf2302-1d5b-4cdd-ae40-d2e917024db7"
        },
        "item": {
          "id": "ac2dfca7-a61d-47cf-a576-dbb94d11d835",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6bd79ef5-ad92-4832-850e-b3ec78709f8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3b9595-511f-421c-b71f-0d6c2740a2bd",
        "cursor": {
          "ref": "11acd086-9d4b-48b5-8864-b77ab1294fe7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "da748dae-cf12-4346-b50c-f750089e83b7"
        },
        "item": {
          "id": "cf3b9595-511f-421c-b71f-0d6c2740a2bd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "75a84d19-857c-49c4-a109-e08179530295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ff0521-2a02-4b45-a5db-b45adc3d108b",
        "cursor": {
          "ref": "3eb08ee0-4b3d-4014-8d28-21c8917e4e34",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5920f542-68cf-45b5-a998-956b9e194b98"
        },
        "item": {
          "id": "d4ff0521-2a02-4b45-a5db-b45adc3d108b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ee08616d-ec35-46c4-bb8d-5bc3278fa222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6238bdab-3e5f-4824-93f9-bdf48f028b13",
        "cursor": {
          "ref": "624e462b-083e-40dd-969a-62a042f88afb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8b63c623-7dda-4899-b576-b670f2a7293e"
        },
        "item": {
          "id": "6238bdab-3e5f-4824-93f9-bdf48f028b13",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6f196d15-d312-4752-a66e-da508a38d25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbf590a-0797-4846-8c45-40fe856fd93a",
        "cursor": {
          "ref": "a0ed370b-47dc-422c-936e-b307c8a2978e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "08ea1d42-1fcc-4681-970a-e03e03cdcbc5"
        },
        "item": {
          "id": "3bbf590a-0797-4846-8c45-40fe856fd93a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8510ce25-a26a-46b7-bc5e-d9dbbe993a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bace3627-faf9-4bca-9178-51b73adaae9e",
        "cursor": {
          "ref": "0e456814-5c0a-47c3-ab37-8a20945f4fb8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dad9b498-f8fc-4fc0-8287-1f363e89652a"
        },
        "item": {
          "id": "bace3627-faf9-4bca-9178-51b73adaae9e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "743213b2-48c4-4f5e-81f5-be986d717f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50c3d0f-a363-470e-9d36-6355fa90bc69",
        "cursor": {
          "ref": "b2ffae52-664f-45ed-8746-724b6fc13f45",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "38c68897-d137-483c-af39-a091f194aafd"
        },
        "item": {
          "id": "c50c3d0f-a363-470e-9d36-6355fa90bc69",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1a4c29f4-3ec0-40df-8acb-8e79351082bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0192fb0-0389-480b-9304-4a7a5d7e9236",
        "cursor": {
          "ref": "7a850c1f-c749-4d5c-94a3-566d89f8c293",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2bc247c0-93f9-4cc4-86ec-829027961a1e"
        },
        "item": {
          "id": "b0192fb0-0389-480b-9304-4a7a5d7e9236",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9a0692d4-d76e-403c-b42c-4ea60a1501f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad19aec-1c3e-417d-b95c-02b3338fef4b",
        "cursor": {
          "ref": "1af570ac-4af4-4a77-a1b1-56cebb70486e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b116fe22-9bc2-4854-a30f-b4a5243463a3"
        },
        "item": {
          "id": "bad19aec-1c3e-417d-b95c-02b3338fef4b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0dc9db3c-8c78-49a4-a057-20361278a327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c5f893-625b-4b4d-8481-42c0a6c87f52",
        "cursor": {
          "ref": "6bf53c95-0eaa-42df-b8cc-ad320cecf362",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "91df556d-81b0-42b0-a8a5-e7fe0357dd51"
        },
        "item": {
          "id": "95c5f893-625b-4b4d-8481-42c0a6c87f52",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ae1c21f-352b-4f20-8126-fdf77acf9813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e30b23c-86b4-485b-bdaa-d37b8dfd1827",
        "cursor": {
          "ref": "fbd9db96-f40c-4d2b-94ed-0010bc8533d9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "958fbdf1-1bb8-44b1-b89e-70969bb6cf9e"
        },
        "item": {
          "id": "0e30b23c-86b4-485b-bdaa-d37b8dfd1827",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1636821c-6228-489f-8221-8d0517410642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33e1ac1-54a0-4ac4-8697-7651b4379abe",
        "cursor": {
          "ref": "d5470354-7cc0-46b7-9a4c-facf311f229e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5c70b4b3-bc75-464b-824c-4a7a9107255c"
        },
        "item": {
          "id": "a33e1ac1-54a0-4ac4-8697-7651b4379abe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f6c8df36-d33d-45dc-9700-6dd35dbb17fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a0a268-59b2-4601-89a0-13b9719f1b27",
        "cursor": {
          "ref": "f5aa90c0-521b-49a6-a7ae-51a94b072a09",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0e942ca8-f1f1-4286-aaa6-57ae23852c85"
        },
        "item": {
          "id": "35a0a268-59b2-4601-89a0-13b9719f1b27",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "17cfce81-0e99-41c1-8b56-5dc80e23438d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22471404-a067-4473-ac7b-b8b52cb9a88e",
        "cursor": {
          "ref": "2acb7329-1211-42f6-adb1-45e28b253713",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "161f2243-07ef-454b-869e-95783fc1426e"
        },
        "item": {
          "id": "22471404-a067-4473-ac7b-b8b52cb9a88e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "665ec254-e56c-4192-9500-e9314800fa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce43fbc-d33e-4384-b9d8-fcc528e1ec2c",
        "cursor": {
          "ref": "4cd87a44-d528-41b4-8313-b69fdc24a593",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "efeddae2-d099-44ee-8c65-7b7904ef320b"
        },
        "item": {
          "id": "9ce43fbc-d33e-4384-b9d8-fcc528e1ec2c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "88b75dc0-c31a-41b8-8b26-472b7ab2de81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3315b9d4-0aff-4f85-8c70-a5843892d521",
        "cursor": {
          "ref": "8e7f29c6-b5a3-4203-b107-0d87a9dbe618",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "099f4a90-2c53-4c28-b478-9a2eb5802039"
        },
        "item": {
          "id": "3315b9d4-0aff-4f85-8c70-a5843892d521",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9c06e41d-66be-4edb-9f97-a9a392cc39ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4645cb-2e01-408e-bc9f-bcc81c966d4c",
        "cursor": {
          "ref": "fba286af-0d57-4129-bd5a-923ebd2b44a8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eed53cb2-29e0-4af9-96f2-df97fa46af25"
        },
        "item": {
          "id": "3a4645cb-2e01-408e-bc9f-bcc81c966d4c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c826ab27-1db4-452d-9ac5-77192bb99e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128febbb-2cee-4d78-bdb6-9610a93afc0a",
        "cursor": {
          "ref": "3176b763-fb60-4f31-9d05-81981fd52c78",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9ce29ffd-189a-457f-ada3-2dfcda3bc129"
        },
        "item": {
          "id": "128febbb-2cee-4d78-bdb6-9610a93afc0a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "792c1219-0f79-42a8-bb3f-3fc3f3e6c0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92d25a-4942-4022-a0d8-097dae076a58",
        "cursor": {
          "ref": "03151d6d-7433-4d78-90aa-b668a2ccde4e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c9bb280c-f85a-4cf7-9092-604d1149fc37"
        },
        "item": {
          "id": "3a92d25a-4942-4022-a0d8-097dae076a58",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "87a0a4b7-06d7-4986-a13c-bc0e624a9e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b38bae8-841c-4449-a4ed-662a2d040d19",
        "cursor": {
          "ref": "2d9ba872-0c0e-41cc-89ce-fc42c19f4203",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4b7b155a-a749-4747-9d9a-858339c5c281"
        },
        "item": {
          "id": "8b38bae8-841c-4449-a4ed-662a2d040d19",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4d0c8988-ab12-4da3-ac9e-44ece69c7e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21513e2c-c6ee-420d-b603-416788f7d270",
        "cursor": {
          "ref": "01736f0a-0433-4a3e-8512-3ffb8524d431",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a2c7948a-01a2-4052-a336-3854a2ba4f88"
        },
        "item": {
          "id": "21513e2c-c6ee-420d-b603-416788f7d270",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "faa5a7af-3cbf-487b-89cd-757f1605e34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8f2812-867c-4f21-9c6f-2abb6b9aee8a",
        "cursor": {
          "ref": "9276176c-03c8-48a0-a2d0-05829d89028b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6fbaed01-77ec-4e5e-bb26-8c1013b13d64"
        },
        "item": {
          "id": "ae8f2812-867c-4f21-9c6f-2abb6b9aee8a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "762d2f46-4c68-4073-8d44-e688763177eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791d1689-f407-4cdb-a148-a69300bd8493",
        "cursor": {
          "ref": "8f826989-3228-46f4-a492-26533ba48303",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "96e85b98-2896-4792-9211-a2da1f3902f6"
        },
        "item": {
          "id": "791d1689-f407-4cdb-a148-a69300bd8493",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8f56b694-9a5c-4e72-845f-8f9773852d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895f17b7-3dad-4f02-80ec-9c0894416a7a",
        "cursor": {
          "ref": "2a5ec313-af49-46dd-9c5e-9ea0f51de9e4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f4d6d222-f903-40fc-896b-3381e2d1e4fa"
        },
        "item": {
          "id": "895f17b7-3dad-4f02-80ec-9c0894416a7a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a452852d-390e-48d9-837e-ab43a9327f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f89d7f-01bd-4fe8-816b-795bfc7fe0d2",
        "cursor": {
          "ref": "c7bf2ea6-a9ad-43e3-9a01-2581ab5dcd7a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a09cd962-1878-4279-9a9e-345b1b547378"
        },
        "item": {
          "id": "b8f89d7f-01bd-4fe8-816b-795bfc7fe0d2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7f0fc47a-3924-45b9-8e12-f3ec2f3ac8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91f19c9-2a62-4ae1-8814-942c278b7877",
        "cursor": {
          "ref": "a9f5060c-8f8c-4f82-9d50-293db5dd14fd",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1e2f75e7-d9c1-456e-849f-aeeb356050c2"
        },
        "item": {
          "id": "c91f19c9-2a62-4ae1-8814-942c278b7877",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6ef6763f-bb6b-4d9a-8a02-58c039857187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c032b4-9583-47bc-963e-5af06732d9bc",
        "cursor": {
          "ref": "b23d1d80-ac80-4b58-91ee-248167c2c693",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ebfcd411-45a7-41d7-a6b8-d294da9d73e5"
        },
        "item": {
          "id": "42c032b4-9583-47bc-963e-5af06732d9bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0c279140-2a8f-4cc3-a901-3aba5ee90732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d463cdfa-da7e-4c4a-a1ce-d8b9c92fc1b0",
        "cursor": {
          "ref": "1151296e-b59f-4cdd-aa00-917d41de330b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f6dfedd-88a8-4e2e-b22f-f4c66b5f4ca5"
        },
        "item": {
          "id": "d463cdfa-da7e-4c4a-a1ce-d8b9c92fc1b0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7991e002-c587-47db-91cd-3e9534d52942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f965f44-ef3f-4376-863e-f6fc993dcf97",
        "cursor": {
          "ref": "648106e8-914f-4725-9a60-375f08a9ca90",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1acaaa31-a110-4341-b934-f77995c11697"
        },
        "item": {
          "id": "9f965f44-ef3f-4376-863e-f6fc993dcf97",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "015391d0-4a2f-4282-a745-62f182705fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e174349-83ad-40d9-8335-671829b426ec",
        "cursor": {
          "ref": "e53e5f76-adbf-4872-b24b-868c66ca3a08",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5f4279f8-6be3-4936-a102-281315d02ce4"
        },
        "item": {
          "id": "0e174349-83ad-40d9-8335-671829b426ec",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5fbff7d1-57f0-49b4-ac7d-1e35df093901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623042df-c0a7-4599-a404-0e2a76df8be6",
        "cursor": {
          "ref": "9c09b501-c129-46ae-9877-775267728926",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d8283fdf-1be2-4d2c-bca7-bc73beb8061f"
        },
        "item": {
          "id": "623042df-c0a7-4599-a404-0e2a76df8be6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a7e32a0b-6922-4a70-a422-9f8ce54f460f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e6c894-58b7-4817-8684-d9cd5bf202ae",
        "cursor": {
          "ref": "6cbd29f0-2985-4a0e-a8e0-560555e6bff5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1ccca76f-1d4c-464b-b98b-9c9d11a91dc8"
        },
        "item": {
          "id": "68e6c894-58b7-4817-8684-d9cd5bf202ae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bdf7f07d-3522-4f99-8a07-cd6471cc6a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b883db-dfe8-4634-b751-c1423348c806",
        "cursor": {
          "ref": "a2355c7e-825c-425e-9251-5062fec7200f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a9c44046-c72e-4b8d-afa1-9b66af0cf5ce"
        },
        "item": {
          "id": "d4b883db-dfe8-4634-b751-c1423348c806",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5b3e4786-b8ac-4297-9614-02c0024d6f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79a6fc1-6d49-43cf-a10f-d408621d8805",
        "cursor": {
          "ref": "2bc2e163-9bc5-40db-8a7e-e101918f44bd",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "523c4f08-b860-4573-9624-1cf804a4312a"
        },
        "item": {
          "id": "c79a6fc1-6d49-43cf-a10f-d408621d8805",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "44666728-47b7-417f-b0d5-912a82510441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7140d5c-4d3d-43e7-9888-03e0c27a6049",
        "cursor": {
          "ref": "cbdcec2c-7263-438b-bb4f-0168b5b0d5a9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "53537ce7-e335-41f0-8b4e-cd0803f85ec6"
        },
        "item": {
          "id": "f7140d5c-4d3d-43e7-9888-03e0c27a6049",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "08b1ef6f-e616-48d1-a366-85998aa2f432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b73fc3b-0ca8-41b7-a712-72d3e564b51a",
        "cursor": {
          "ref": "c3d5693d-50ad-43d7-a2a0-d3bb970aea62",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "867ac9d1-2ca8-459a-8e18-3fe9c492e16f"
        },
        "item": {
          "id": "0b73fc3b-0ca8-41b7-a712-72d3e564b51a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d24a8db-7a07-4152-aeba-1908f723d316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e59b4f9-c2b1-45e3-af7c-e3e9c4960a8b",
        "cursor": {
          "ref": "57d80162-6d19-4316-9a78-c9f01605a803",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1dcfb304-dd25-42f5-acc6-4f952f9f8658"
        },
        "item": {
          "id": "9e59b4f9-c2b1-45e3-af7c-e3e9c4960a8b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d9820ec7-21e7-4a61-ac1d-e42a25d7eca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26922a8c-0f48-4331-b289-55d797429e46",
        "cursor": {
          "ref": "f22fee68-91ee-49d7-8fb7-5bdedc5303a0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4d4442ac-ebbc-4df9-8d2e-041443239830"
        },
        "item": {
          "id": "26922a8c-0f48-4331-b289-55d797429e46",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eef17d48-d4af-4f51-9f54-bd53584fba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f9406a-8ecb-4a59-b1df-4455dfa784ff",
        "cursor": {
          "ref": "9bc5209e-7b8a-482e-9f6f-204ce12f180d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1dac345b-6969-4d00-8a43-8efa7a394e47"
        },
        "item": {
          "id": "b6f9406a-8ecb-4a59-b1df-4455dfa784ff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2445aab8-e5c0-4855-9073-8c6467a52a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006f3290-ce14-4cba-9628-6762a6021a21",
        "cursor": {
          "ref": "7951ee51-8261-4c09-8330-2fcc9c271292",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a0ee2f7b-2a4d-4a77-8b4d-b67162082e47"
        },
        "item": {
          "id": "006f3290-ce14-4cba-9628-6762a6021a21",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "422c6f1a-2305-4fda-bfea-f562ad2176c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b753887-fbec-436c-9d3c-b3146a612b4a",
        "cursor": {
          "ref": "ccc73e34-67bc-4bc7-ac9c-6a73b2e5a55d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "25516c9e-997d-479e-981f-0563d9907eae"
        },
        "item": {
          "id": "4b753887-fbec-436c-9d3c-b3146a612b4a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4e06bb23-f786-43d1-8607-95ea02f4e136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7869ae5-bf62-4d4c-95f0-ab93704c8508",
        "cursor": {
          "ref": "b6adb284-792c-417e-b6b3-cc7d650d83f6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1e38d0b4-cf3f-4040-b439-50df3ed316e6"
        },
        "item": {
          "id": "f7869ae5-bf62-4d4c-95f0-ab93704c8508",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "74af477e-3a77-42d2-98f7-44d81a401f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea56561-4349-4ff0-ab68-2e0b1d70bae4",
        "cursor": {
          "ref": "79453ff7-4c2b-4246-af7e-c3cd89dfc9aa",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0fa91cca-5167-411b-b9e8-7f751ed80a67"
        },
        "item": {
          "id": "7ea56561-4349-4ff0-ab68-2e0b1d70bae4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "00dd241f-8e18-4daa-9805-ce21b4865b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf9c25e-66d5-4c19-8eba-a636340c06cb",
        "cursor": {
          "ref": "787784c8-3839-4f29-b535-0dc9982b0135",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "194242d5-f15b-4ea7-a823-ccd1c2461108"
        },
        "item": {
          "id": "adf9c25e-66d5-4c19-8eba-a636340c06cb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5f081c8a-2f90-410f-b4e8-b664e39d7f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386276ef-cf59-475c-b6d4-aa45900f67b6",
        "cursor": {
          "ref": "61a940bd-4091-475c-be4d-0c5a43c39a77",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b35abbff-a272-4288-8fb7-f0c46ddb8fc3"
        },
        "item": {
          "id": "386276ef-cf59-475c-b6d4-aa45900f67b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e34c8afa-57e5-4a6c-8bc3-0c600cd19681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f769851a-7977-47f6-8006-caaa3f181dd0",
        "cursor": {
          "ref": "415230dd-6ba2-488e-874f-c0e042136306",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "43983479-0e69-4cc6-ad7f-16e6d44d5096"
        },
        "item": {
          "id": "f769851a-7977-47f6-8006-caaa3f181dd0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "62aab879-c24f-4203-829f-e62822ace4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b173df3-e434-415e-a96c-b4e80cdae97c",
        "cursor": {
          "ref": "6c63e675-f1b1-479b-adec-6a86e5981da0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "be1bbfbb-f09d-4a26-aca0-1fe28da939e6"
        },
        "item": {
          "id": "0b173df3-e434-415e-a96c-b4e80cdae97c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c48a86e6-dddd-4cfd-ad72-38ae10737b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987313a8-0cd0-4a31-ad08-04ea94fecbc6",
        "cursor": {
          "ref": "4898ed1d-ec1a-418f-8dbf-c3c159011ea7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7c668e54-679c-4be8-ae4e-9b76d50a4427"
        },
        "item": {
          "id": "987313a8-0cd0-4a31-ad08-04ea94fecbc6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6c9ca160-2f8d-4b64-85d3-f476b2f09341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ef6692-3c6b-45a1-9474-337616769cc1",
        "cursor": {
          "ref": "e8d65055-aa23-446b-b019-460a48ad33a4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "073baaa9-b096-4c34-bee3-4f087f88dcfb"
        },
        "item": {
          "id": "90ef6692-3c6b-45a1-9474-337616769cc1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4417d779-d0c6-42c8-90bf-a15401854e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46aea5f5-44c9-4f4a-80bf-25e72535601f",
        "cursor": {
          "ref": "9476bc48-dd26-4139-91b6-c9fa58203d2a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7f8d207f-4292-447e-a018-e2b86923fb49"
        },
        "item": {
          "id": "46aea5f5-44c9-4f4a-80bf-25e72535601f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e9d43330-ed69-40d2-b5bf-96a35dc84ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90749036-fb23-483a-9155-22b88eaf2ebc",
        "cursor": {
          "ref": "1c6b0942-b144-4a8e-abd3-e16cbc729c05",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "17a0dacb-5f40-4c0b-a5d2-4f508f006095"
        },
        "item": {
          "id": "90749036-fb23-483a-9155-22b88eaf2ebc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6098f29b-60fa-4f13-8516-c45317ecefc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cb5de0-3b8b-48d3-b287-6a92c2aa51bf",
        "cursor": {
          "ref": "07b89dc7-430e-4c2d-aac0-5d1e9573a425",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6a8aa5b3-92a5-4cbf-968b-9dceb3bcbf6d"
        },
        "item": {
          "id": "16cb5de0-3b8b-48d3-b287-6a92c2aa51bf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4e012adf-2d9e-4ee0-b1d7-052f55f52eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f4981-dde5-454b-80ba-00ab713967c6",
        "cursor": {
          "ref": "115abd53-cf28-40fb-825d-23c0c1388fbf",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "51354ea6-1d1e-4aa1-a082-c5f3f9eebd2c"
        },
        "item": {
          "id": "2d8f4981-dde5-454b-80ba-00ab713967c6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dcba0cbe-9b2a-4934-b404-9dc7a8cfb8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b959789-1f1a-4748-b9ff-a9539962e354",
        "cursor": {
          "ref": "08988291-ea92-4316-a5bc-709d7cd3d818",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a9ba8a5f-bf71-4d9f-bc4f-e913d110ecb4"
        },
        "item": {
          "id": "4b959789-1f1a-4748-b9ff-a9539962e354",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "51a988b7-4bfd-4733-9165-0243e4e492e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e48e2df-78a7-4d0e-b93f-8cd57c8a9ddf",
        "cursor": {
          "ref": "129d79ee-5066-46ad-9913-4aa26d58fe61",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "adbb65f3-3899-46b3-8b05-3feb651d6a32"
        },
        "item": {
          "id": "0e48e2df-78a7-4d0e-b93f-8cd57c8a9ddf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8c89e776-8b8c-4129-bbcc-5c33a79d466c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75a16e6-75c3-4cb0-805f-8575754898da",
        "cursor": {
          "ref": "ba63d4e3-bf7d-42ac-bb99-f6fb2f53c676",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b0702250-cff2-464d-9d31-65059ec797de"
        },
        "item": {
          "id": "c75a16e6-75c3-4cb0-805f-8575754898da",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5350df31-afa8-4595-b28a-519e2a31fbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e45346e-17cc-4c6f-a4cf-de665e6ad00d",
        "cursor": {
          "ref": "f2ff5759-aaf2-47cf-b9a6-8cae75ff74aa",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4dd3cfea-22ea-4728-9721-a2eea75362f7"
        },
        "item": {
          "id": "3e45346e-17cc-4c6f-a4cf-de665e6ad00d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b2837124-6f21-4245-9fb6-adfeee88fef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ebeb62-2357-4924-ad21-2ff0e683f78d",
        "cursor": {
          "ref": "e5b19d09-e36d-4ab9-9b16-ed047ddfc393",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d4145d45-a512-463e-abbf-6a28c3eeee29"
        },
        "item": {
          "id": "16ebeb62-2357-4924-ad21-2ff0e683f78d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "78e4bef7-b15d-479c-ab27-ecc3cd531e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5f0207-9386-43cc-891c-cbf3a1f40439",
        "cursor": {
          "ref": "6f721a60-6f90-49e6-b391-eb21bc515577",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3768a1a6-0546-4129-8ead-f5d821360693"
        },
        "item": {
          "id": "4e5f0207-9386-43cc-891c-cbf3a1f40439",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "942e9074-36eb-4505-8fa9-976881181911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4448d56d-473f-4404-8837-dabfa146c321",
        "cursor": {
          "ref": "2fb52929-96b3-49a9-8224-ea94b46b9641",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ca9709d8-23eb-486e-957f-8274be370e5a"
        },
        "item": {
          "id": "4448d56d-473f-4404-8837-dabfa146c321",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb6fde0e-c7b4-4a9e-b841-36a01e3bce85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1fd265-ad22-4ced-9730-fff71b5a0ffa",
        "cursor": {
          "ref": "570aff64-3f53-4242-a734-7bb8a5e0f5a3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1b14f0e7-ca46-4f58-99a0-63883df42482"
        },
        "item": {
          "id": "dd1fd265-ad22-4ced-9730-fff71b5a0ffa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b20258f6-9bac-4673-a6f4-392f4f0eb9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c680659-22d9-4ce6-84a9-27f39ca2baf6",
        "cursor": {
          "ref": "6ab99cf4-092b-480b-8c1e-cf9b1b438b90",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a7b2be39-a640-4eb5-8e3c-2a3909f33085"
        },
        "item": {
          "id": "2c680659-22d9-4ce6-84a9-27f39ca2baf6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b5768e73-5fe9-45c9-807a-17a3e99ad1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a3fe6c-7033-4d05-a361-45da5c3364ac",
        "cursor": {
          "ref": "626d1409-7f2c-41e8-94f0-65f486da0038",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2a8e04b9-7297-4f40-bbd0-4811801c167a"
        },
        "item": {
          "id": "96a3fe6c-7033-4d05-a361-45da5c3364ac",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fc6fedca-6769-495a-867d-7e6418790e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe864a85-9999-40af-8958-7912b7a0839e",
        "cursor": {
          "ref": "3d3d624a-9b77-42cd-831a-86b2e78ea804",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8d555587-4f73-4b0c-95fd-762c0cc41eac"
        },
        "item": {
          "id": "fe864a85-9999-40af-8958-7912b7a0839e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a4df43f8-2dfb-4b0d-a862-664cbbaac34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff99692a-6b9e-4ad8-ba98-a9aeb02ab647",
        "cursor": {
          "ref": "cf163f82-b786-49b7-8c5c-9f29b235f599",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d11c7b10-8b52-463d-ab66-26f68ace1fe2"
        },
        "item": {
          "id": "ff99692a-6b9e-4ad8-ba98-a9aeb02ab647",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7163451d-c57a-40a2-b547-fbbaae3d416d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca2b947-48d7-4fbb-aff2-634e34c8e6e8",
        "cursor": {
          "ref": "0f39a868-33f1-4830-8f04-8d4274d27b17",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "97751519-45e4-48a9-9f7a-262764a75e7b"
        },
        "item": {
          "id": "aca2b947-48d7-4fbb-aff2-634e34c8e6e8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "75b4d041-a1e7-4a85-87d8-38f510d542e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274935a7-596f-434c-87dc-020a0c4c7082",
        "cursor": {
          "ref": "534a341c-186d-433c-a12a-79892e752a0a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4850ac5c-2ddd-4707-b25d-b2312adfc302"
        },
        "item": {
          "id": "274935a7-596f-434c-87dc-020a0c4c7082",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "53197fb6-ba81-4a32-8cbb-668b7acffc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1a0226-6c95-4117-9255-7d247d4ebf08",
        "cursor": {
          "ref": "d885b19c-f1a1-4eea-bf72-673d9d843d94",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b7bc75a3-2d7c-4adf-96b0-bc10a0313536"
        },
        "item": {
          "id": "7d1a0226-6c95-4117-9255-7d247d4ebf08",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5addc46d-2ab4-4e0c-a04b-bb926e592c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3bfa97-254f-4b3e-8f55-dcd7f32e68bf",
        "cursor": {
          "ref": "b723ac21-7c7b-4fc6-89b1-4434e1fa4b71",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a2a56338-ca9e-4ab0-a4b3-0399d7db264f"
        },
        "item": {
          "id": "0e3bfa97-254f-4b3e-8f55-dcd7f32e68bf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "336f3f90-d2a1-4df5-ad9d-44c0430d370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9b3d39-dd12-4954-a435-c5fd0ca45f65",
        "cursor": {
          "ref": "5dbf1867-6328-4fd5-8833-e6e122fe285b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eb4d461a-57bf-493a-b6c1-e18ea0c4034c"
        },
        "item": {
          "id": "9f9b3d39-dd12-4954-a435-c5fd0ca45f65",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "68054bb2-630b-43c6-919e-4e710fa6e6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59346c4-6170-4238-b4f8-17a7cd700940",
        "cursor": {
          "ref": "55f95b6d-1df2-4c1f-a8ff-536f24e592bd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "801ab605-8fa1-434f-9a4e-f34f017dfc3b"
        },
        "item": {
          "id": "c59346c4-6170-4238-b4f8-17a7cd700940",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ff7cf166-53a9-4ecf-8ef8-bc0c41f7b1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ae4d71-efff-4a99-a167-d24bcc7bf961",
        "cursor": {
          "ref": "82ec0d1e-d816-4fbc-a02d-b18ece1564e0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3b811ba9-6c05-42d8-b2a1-e5c62fbcff4e"
        },
        "item": {
          "id": "a8ae4d71-efff-4a99-a167-d24bcc7bf961",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f34f2686-087b-45f0-b8b0-75399d65757c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421394cc-e007-4748-b838-c88d2a09d866",
        "cursor": {
          "ref": "75a0bdbf-41cb-4dc2-ae59-432ddd8e0d85",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "70914c75-4c9e-4c29-930c-5b1b1c132212"
        },
        "item": {
          "id": "421394cc-e007-4748-b838-c88d2a09d866",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7238769a-5386-4fad-9ed5-1740ca961bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a2be68-71fc-429c-8920-2c2530d88fea",
        "cursor": {
          "ref": "94e3935b-86fd-4a48-a0e3-5750da1d63f1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "18a54e85-f81c-451f-8e25-abec433762fb"
        },
        "item": {
          "id": "d5a2be68-71fc-429c-8920-2c2530d88fea",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9950deca-d076-4306-bb19-74a611040c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f549d76-48e9-4998-b837-69f47262236d",
        "cursor": {
          "ref": "63a94de5-c01b-4982-ad6e-4894a728cad1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "648743b2-349e-4eb6-a5e8-d08f7034064e"
        },
        "item": {
          "id": "5f549d76-48e9-4998-b837-69f47262236d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "13ac1b2d-45c4-4a56-a16e-aabe79b9a98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254ee601-4831-467f-86e7-0fc58dca5c58",
        "cursor": {
          "ref": "b0b66a05-57d0-4b48-a76a-39f613a1d156",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fa7d4683-7b1f-4269-b710-073e54a32e69"
        },
        "item": {
          "id": "254ee601-4831-467f-86e7-0fc58dca5c58",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7c8661e0-85eb-4507-be4d-5635d96db40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f90452-3ba0-44cb-8eba-d79b2182ab51",
        "cursor": {
          "ref": "330e3ac1-6742-41fe-9691-e4d724e7ab7d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c5499226-05d1-463d-970b-6620c1f9aafb"
        },
        "item": {
          "id": "c5f90452-3ba0-44cb-8eba-d79b2182ab51",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b96df046-537d-4d0a-a18d-dd676c2af6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5260d0d8-e04d-4f88-bf23-4f60812eb82d",
        "cursor": {
          "ref": "34a7915f-18f7-458d-bd99-75245f09a100",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a85712fe-3e78-421c-81ed-e7fcb9074beb"
        },
        "item": {
          "id": "5260d0d8-e04d-4f88-bf23-4f60812eb82d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d76a0d90-3f81-405f-9474-7d9c6d241d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f70775-c625-475d-9085-19eb7588ada2",
        "cursor": {
          "ref": "f625aadb-cdb2-4743-962c-88a1c5533f75",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "63760c7e-3219-4345-b52d-fb82a255c44e"
        },
        "item": {
          "id": "07f70775-c625-475d-9085-19eb7588ada2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "56a6f99d-beb7-4f7c-b31a-1c9c8680b719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a2dc90-8bfd-4ba9-8904-9729c386a04a",
        "cursor": {
          "ref": "987cc52e-232e-4c72-a4f3-692dac37d4f4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4cc6a804-808c-4a8d-b3a0-eb6de3922c56"
        },
        "item": {
          "id": "21a2dc90-8bfd-4ba9-8904-9729c386a04a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9ff0cfc3-e707-43bf-9969-56c55f9cfa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cbfb1d-40fa-470e-9531-a7fc79ec6bff",
        "cursor": {
          "ref": "c7f7d9ec-0899-4bae-ba4b-cebb27268d4f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4696c3f8-78b9-4d69-861b-8d497d494710"
        },
        "item": {
          "id": "31cbfb1d-40fa-470e-9531-a7fc79ec6bff",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7e4a29f3-48a6-44d1-8f13-03f0d6d1d4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ae4a97-911e-4b0f-aa3d-be4f86f06660",
        "cursor": {
          "ref": "1ebe20f6-ae13-4720-a997-2024bcc64a74",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2adb0732-3c7d-4581-9bb9-13f4ada9a7bd"
        },
        "item": {
          "id": "91ae4a97-911e-4b0f-aa3d-be4f86f06660",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dea5ad55-7534-4f35-b9b2-9e83798fa08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fddc0ed-e102-4117-ae5a-4591954442ba",
        "cursor": {
          "ref": "6c363d8f-7365-4e33-a1c9-59e784dffdbe",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "52a5a0e7-ead3-478d-a599-2d24fb0f3c65"
        },
        "item": {
          "id": "9fddc0ed-e102-4117-ae5a-4591954442ba",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5ffcc551-ee70-47e2-b689-01e075feb64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bf8f40-ebd0-4227-97c7-0629b597166a",
        "cursor": {
          "ref": "802489fd-1669-4c4c-b0da-344643de123a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1fb21adb-01f3-471f-b12a-ca0ca09465eb"
        },
        "item": {
          "id": "92bf8f40-ebd0-4227-97c7-0629b597166a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bff1a127-aa4b-43f5-b33c-88b02a3003b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b73f3b2-751e-4dda-8c76-bcb47e6b2a84",
        "cursor": {
          "ref": "2f010b4f-81fc-4bda-bccf-c400c85f7b9e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9f8a14da-ac5f-4549-98a8-f0117a9e9925"
        },
        "item": {
          "id": "6b73f3b2-751e-4dda-8c76-bcb47e6b2a84",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "76f0421c-998b-47ef-ba52-019e383ea919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a52c55-b09e-446d-b10d-92741fc6a342",
        "cursor": {
          "ref": "f7e3a6cd-e9f2-4d77-a08c-c8add8732fe9",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a5986df6-5bb2-431f-8e6e-05aa3ad7d5f3"
        },
        "item": {
          "id": "78a52c55-b09e-446d-b10d-92741fc6a342",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b5589273-b940-4502-bfdd-28a9c59382c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b6dbc5-11b4-42a5-a52e-b2abf2bebd51",
        "cursor": {
          "ref": "634a21ff-623f-46a2-a31c-cc596b701d21",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bac8050d-7ace-47cc-b5f8-b2154d9fd7af"
        },
        "item": {
          "id": "72b6dbc5-11b4-42a5-a52e-b2abf2bebd51",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "46a0767b-779b-4771-825b-7311ec13bffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c60094c-958b-4ee6-a444-212f2c1963e9",
        "cursor": {
          "ref": "723623da-7675-4bee-9878-27ac93fbb1b0",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9e7653f9-4cb1-4d00-a431-dceeb96d5aff"
        },
        "item": {
          "id": "0c60094c-958b-4ee6-a444-212f2c1963e9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a46ae8e1-825b-43b5-bc90-c4fbcba71841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e7be53-3f7a-40cb-bc9d-ac183ea15ad1",
        "cursor": {
          "ref": "6bc4ce28-a877-41d5-8e6a-aaafca754c7c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bca5ae3b-4794-4892-9572-638a134e0bd2"
        },
        "item": {
          "id": "f8e7be53-3f7a-40cb-bc9d-ac183ea15ad1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "81f6adac-a1db-4be9-8783-0ad0bd37806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81927611-fa19-42ee-af5c-91c6973acf29",
        "cursor": {
          "ref": "79617d08-98a4-4699-ac8d-3e7a89389ac4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b6652ea5-7a2d-4caa-8138-2008c9d5a075"
        },
        "item": {
          "id": "81927611-fa19-42ee-af5c-91c6973acf29",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1efbe352-86a2-4724-a680-82d4f3e2e43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6537ad90-50d0-43c4-98f0-1bfaa6e6fcff",
        "cursor": {
          "ref": "bb517813-43c8-4ecc-9ccf-ee77f47fba07",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8a51409-7bad-467f-b79f-47322b194e9c"
        },
        "item": {
          "id": "6537ad90-50d0-43c4-98f0-1bfaa6e6fcff",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c981b2fd-f3f1-4f24-b74c-c593f33771b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e03ef9b-6998-4571-b974-007ef51a3365",
        "cursor": {
          "ref": "4b19f463-1c5b-4e3b-bcfa-2132a00eed0b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b6ff8042-7af8-4f0d-96fb-bf9f29133e77"
        },
        "item": {
          "id": "5e03ef9b-6998-4571-b974-007ef51a3365",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "22783fc6-94d6-4fe6-bae2-ab7dc0d3aba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b5aef8-58a6-4c87-9854-1096408ffac2",
        "cursor": {
          "ref": "64390153-0d4d-4fcd-b714-e4ab82a2aa95",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4570b087-f44a-4334-a59d-ca246037029f"
        },
        "item": {
          "id": "e1b5aef8-58a6-4c87-9854-1096408ffac2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "172f779f-0d6a-4dd9-8949-c71ba506cbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78f47fb-c759-47a1-9deb-d6ee109d14aa",
        "cursor": {
          "ref": "e12ed9e0-aa83-4bc4-a33f-887a05899e38",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2184b38f-aad7-4369-a498-efaedb3f9ced"
        },
        "item": {
          "id": "c78f47fb-c759-47a1-9deb-d6ee109d14aa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c08906d0-755f-463e-aa1b-7dae132f2ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01831eb1-b724-41f3-bcd0-8374442539e9",
        "cursor": {
          "ref": "4667b478-ab75-4aa5-b42b-3bf5e51a3ae0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f91312b5-9492-4412-bf25-f3f97887b8cf"
        },
        "item": {
          "id": "01831eb1-b724-41f3-bcd0-8374442539e9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8a2b2b7a-14ac-45bf-97be-15df9be4be7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd801761-1eba-43f4-9384-27abf40ff290",
        "cursor": {
          "ref": "3cc3c6c3-cf62-41a9-8324-b2d15f10ad61",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1c951e2d-af86-4278-9df4-b9726e78fed6"
        },
        "item": {
          "id": "bd801761-1eba-43f4-9384-27abf40ff290",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "378e2c71-cc34-4ff2-ac37-625764cb103e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b2f489-53ca-4220-adc3-75053e024ddd",
        "cursor": {
          "ref": "24593895-ed11-4800-b33f-43d579d2ee7c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "55bc8bbf-4b5b-4f83-b145-5b56eb13e87c"
        },
        "item": {
          "id": "e4b2f489-53ca-4220-adc3-75053e024ddd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "49daada1-3820-4c7e-8891-c3ad9d585244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687f1119-ee83-44c8-ab08-c891ab726051",
        "cursor": {
          "ref": "26246c1a-7a32-46d6-9399-f663d58150f4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4dd24202-b623-41b9-bcc1-c7d439ccc804"
        },
        "item": {
          "id": "687f1119-ee83-44c8-ab08-c891ab726051",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c242c011-5dd9-43bb-a9d5-b0a999587b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a395ed79-289a-402a-b1a7-743049d5b7e5",
        "cursor": {
          "ref": "66d456b4-c4cd-40f6-b181-0e21369c4ad7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9740a6ae-e12a-43aa-825e-a6777916a831"
        },
        "item": {
          "id": "a395ed79-289a-402a-b1a7-743049d5b7e5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "21cf3cb2-98ca-49dc-a5ef-ec4b391f415e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adb137e-53ab-4e5e-bd2d-f9d9f91e076a",
        "cursor": {
          "ref": "7589477a-50a3-464e-94e5-a5f98090aec0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2f76ad15-264a-48b9-9085-1db8a3fa3328"
        },
        "item": {
          "id": "7adb137e-53ab-4e5e-bd2d-f9d9f91e076a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fe3dd540-c0d7-4939-9596-ebf0e391e35a",
          "status": "OK",
          "code": 200,
          "responseTime": 2271,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba23ab35-ed1e-4d95-b13b-0e7c1e8a0432",
        "cursor": {
          "ref": "cba2b451-392e-492b-9dc8-9dd6488d9358",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c15ceaa2-8134-4717-bdc2-433b1c61cb7d"
        },
        "item": {
          "id": "ba23ab35-ed1e-4d95-b13b-0e7c1e8a0432",
          "name": "credentials_verify"
        },
        "response": {
          "id": "60506297-6d40-481e-b5af-6a51dc18f19c",
          "status": "OK",
          "code": 200,
          "responseTime": 2860,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf1401d-36de-41cf-a361-fee33617728c",
        "cursor": {
          "ref": "b2683f5f-6374-42e7-a2a0-8fb30ef789f0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2fbf8288-bd38-4763-928a-e14e322cbf51"
        },
        "item": {
          "id": "cdf1401d-36de-41cf-a361-fee33617728c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b90d7d82-70c2-4b26-80cb-6fe74f8ba685",
          "status": "OK",
          "code": 200,
          "responseTime": 2500,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1506ad50-cb10-4346-8dc3-c0911d3af0b5",
        "cursor": {
          "ref": "1f070b1d-b1fb-4b50-810d-e795db713af4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "012cb838-672a-41f8-b84c-716f97219c28"
        },
        "item": {
          "id": "1506ad50-cb10-4346-8dc3-c0911d3af0b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19899d1d-b525-472f-b62e-f6b9cb2b5f7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1506ad50-cb10-4346-8dc3-c0911d3af0b5",
        "cursor": {
          "ref": "1f070b1d-b1fb-4b50-810d-e795db713af4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "012cb838-672a-41f8-b84c-716f97219c28"
        },
        "item": {
          "id": "1506ad50-cb10-4346-8dc3-c0911d3af0b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19899d1d-b525-472f-b62e-f6b9cb2b5f7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95318986-3e0d-4b95-abd2-bcbcd6cd3087",
        "cursor": {
          "ref": "2c267e8f-e7c3-451d-b27e-ecf28b479638",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f089a011-d4d0-472e-9427-ae9aa4c55878"
        },
        "item": {
          "id": "95318986-3e0d-4b95-abd2-bcbcd6cd3087",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d713ca4a-d68d-4a98-b120-14922638eaae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b0c806-2fa0-4060-abd7-64579d4d0c8b",
        "cursor": {
          "ref": "68bec3b0-9814-4fe0-94e9-3b930dc0f44a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed0ebd19-49b4-44cf-9bf3-6cfba0e4f300"
        },
        "item": {
          "id": "20b0c806-2fa0-4060-abd7-64579d4d0c8b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2cbef4ed-25a6-4a75-a472-68aa20a105b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}