{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "13651da2-287f-405e-8e31-3801216b4ffd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "38bed385-20ff-4567-81d1-ee945f0ad75d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8801a4be-ac9d-4c95-a386-48afe2ed6c45",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b736a0c-5721-4f13-bf07-295b4c51821c"
                }
              }
            ]
          },
          {
            "id": "6671cc44-6acf-4ee3-a636-dbb336c17e3f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "280e9763-b2d3-42be-a47e-b6547caad30b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0b369b40-3b15-475d-9489-1ea4a3d2b225"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1bb6c107-2dc5-4a3e-b06e-7832e46a06bd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "de1ff49b-8f44-4a18-a933-b2217e104c95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd72cc46-935f-4f12-8e17-612987d598ac",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4c6ca92-5d26-40e9-b29d-0bc4f797ec03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf6839c4-1bd8-4ca4-8349-acd34be20a00"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ef9bc0d-627a-4418-96e0-8830e8183879",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "765c6362-70dc-4ea3-b5d5-2151057b069c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a95ef22-f828-40eb-b0df-d5ad6c251148",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15241343-a95b-4c20-a1a1-2c4f211bb489"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bf0c988-700f-429b-9fc5-5ed4e6854bc2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "34141665-c1b7-42b1-b060-2951da8fd7d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82d41186-d179-4bd8-a1f7-7a8380bf3800",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2658b06-02a9-4007-8b82-000bf1ee03f8"
            }
          }
        ]
      },
      {
        "id": "842ea03b-d521-4443-9b19-680ee3211ae0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "adfcc1ea-3bb7-4534-8594-ab11eb4b5a20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c319637-d5cd-4a2b-b1ca-3ac05f958b0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5796c67-c2a2-4e20-9e9a-e8e6f7abf414",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1584a277-be13-4fce-bb23-474139b9f4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "474fc4bc-272f-4dc1-b1ba-804bbf87c64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fa7200-2b4e-41c2-b1ae-05d9b4896f85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d3dfa0-0948-4f4a-a615-2fe227bde529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d376ea39-cd61-4609-8be1-597ba49c3755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1cf5e7-d4c5-4fc7-9a43-9c06266dfe9f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f6720d-2b76-4791-b2be-400008a106a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff283be-17bc-4202-bc9f-13757f1d7821"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1abaf25-ebfa-4774-9557-cf1dd4fe9646",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77eeffc0-bd0c-41b8-879b-710d6e9f7986",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa3525f-bd49-4cf5-a442-db91610c4246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63683bc7-2f58-4bde-8197-2939a32ac13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab2a880-75b9-4984-a32a-a0d148c494b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08586840-897c-49b1-87c8-0f6781b8e4c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c554671b-0fe0-4b26-9f9d-091d024a4f25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ae66714-7709-4cdd-b3ca-af62a68e12d3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "008502b8-e1bc-4a23-baf2-c12eedd02f69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "04ea0073-c575-4cb7-b079-47c7d1fea571"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "332d81d2-a877-43c4-a359-29167324cc2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f48e6afe-02aa-4c18-80de-3170348f1eb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e50ea1ba-8ae0-4b39-8a18-7d915e9a7c11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b519c04-9ef9-489b-88f5-e43c4b00a431"
            }
          }
        ]
      },
      {
        "id": "facb6edd-758d-4bc2-99b1-f9368d4b8f7e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7867324c-d05f-4eea-8fd7-d191562f629d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54f6e19b-6740-48b1-b269-06d970311282",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5570ab44-ac84-45d3-905b-ff4226e5426d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665d7ed7-48ee-4694-a083-6be8eea66572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc1198c-1497-4eb6-8e18-4f29a01d6627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef5d8a4-b2d0-41f7-bea5-f63a5206a250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34386b8d-c287-4da3-bbd4-e077a53abe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef851f7d-05cf-4dd7-8c6a-4d3b50bac9d4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c19a641-2a16-45b9-bbe9-c7f61b409407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdf6215-8dc0-4dec-9cb2-22e6bf21c554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b98eb44-d4ff-4b96-a439-8fb9f956b2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c888a21c-1c15-463a-a966-d5fffc1cad7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0e360d-3ad3-4168-93a5-35754996e786",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc583f9c-e8da-421c-807f-8756f01537e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff1e3fd-8669-44b3-abe7-59b97aecf361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fbe77f-ce51-4a3f-a549-dfa29fe880f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c084f08-a7e9-4764-97b8-83c819a47aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f46ab2-cafb-4b78-8d52-a8e40952dc1c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00458402-976b-4299-9140-f288f3bd9826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfa34dc-8e14-407c-8981-2d2349dcf8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a2e50-e4ca-42a5-9733-3fdb1f31b3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3239d266-bda6-44c1-8de1-531d83025889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692bece8-c70d-49db-a92d-f323bfe5a12c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11af9c29-31aa-4dbf-ac14-0aed40ef3678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d84805-a3a7-47e2-accf-127d4d671d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79addcfd-44c5-4cae-ae0e-a0c57515bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e84e1c0-67a0-45d7-a0f1-e25987277cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617680c0-4e7b-44ac-8771-e1112e44a9be",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea22abe-8f99-4eeb-ae41-196c292874f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae665939-763b-410f-9587-83b41c784163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b974c8-f7f0-4827-bb1b-4ee06b0209a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f8b5d55-5d93-44b2-b200-6541f4580a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c31016a-2613-4caa-910a-2ce3f78189f3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55c0ce1-abf5-433e-803a-24bdd7cf6ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a0da23-b9f7-4aee-815f-5eab5db4bbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49af60b6-f8f7-4ead-9b48-6204a933827f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a7c14a1-8303-435d-9d14-905aaf4498ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ce7741-b721-4050-88d0-f429f31f576a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7777521c-0569-4cfd-acbe-172214561785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ebde0c-4f8d-4196-beaf-fd01802952c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5126b1-f660-406b-9e14-f50aea0cbed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c423a4f4-e52d-4bd2-b556-ab94299ba1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8905493-c264-46e5-8b66-c6dfb69d5626",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f437b30b-e7b5-4cf6-b199-8179a29f0aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162de19b-523c-40b8-a89a-2b8850181009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16c236e-fe6d-4639-95a5-8e3159e54801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1214f7d-5b47-460a-9434-0b85733be628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4574641-3dab-4618-8b15-f40ef38fe6d5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2165887-0d99-4ad0-ab1f-9f742c970f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0563fa6-51c4-4b2c-94a7-398a9c845695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744cd5f5-9982-498f-a4ef-29a57ccc9d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba282978-97eb-4189-b06c-f3e89f3cb00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76685a29-0895-493d-9979-3bef7e1170f7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691d6d00-7f25-4689-92b4-027d9d16f91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2bcca2-b237-4dac-9c9b-4f06ace8cc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf408ef-a8ba-4147-ac16-3776b062fddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40244e74-526d-4108-8587-1c6c83336834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3806f142-0da7-4a3b-9075-be705c53c148",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557cd518-7d59-4ec0-8a3a-85749724840d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d282529-372d-4d69-abc0-31cc977ba3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda20b35-557b-44a4-b6e7-dc2bcfab0be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "534180eb-25b3-4b44-a580-49e9e33eb29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adafbe52-84ef-4850-bdf9-3ea16d0648be",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb43b82-3f15-4c94-a726-15d2531d3d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d620746d-189c-4637-a3e9-dd3fb16b0238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef1913d-0f69-47ba-8303-699b29b734bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "097b7193-55d5-45f5-bfee-ad8f26153f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02639b5e-7e9c-4abe-9631-11a4de7622d5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6952fb1-d4cc-42a0-9fed-1d78a64d34b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38b0d59-c594-4c24-92cb-3ff95143f800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102fb2c1-dd52-4d6a-9a35-6fa77c20f46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8966045-6ed2-4490-a794-5e2fb67d750a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1157eb01-3583-410e-82a5-021aeb7edf66",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7c267d-1afe-4373-bfd3-866463a49ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef19d31-a01b-402d-ab58-489b80ba47cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58246532-4bb6-4536-b2f0-2c103ab0bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3edb8a71-7e50-428f-b7aa-00b7c8c0dbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d2a103-c650-431f-9079-e6faa54c4bf9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0428a0-b631-47a7-8dff-14ad43917535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380a717a-b448-4a19-b440-9559e417322d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b06a9bb-fad4-47e3-9791-7a6d82188fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e8fe219-4aef-407a-a8c5-b68a8911d1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85474d5-d0b2-48b0-b834-218c01067fbf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de80552-917f-4a66-a8a5-a7c8ee09b75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a15237c-64c8-4a02-ba22-904fc03b6793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c159caa6-3bca-45b1-b097-e7ab45b6fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19414677-50a9-4ac4-bbab-65120989ba5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167c586a-a187-4d52-99ed-9678f8c60612",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f15606b-aac0-4dd5-b29e-02bb236a2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573d2e4d-e153-47e7-8305-e557f6ae8a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf703dd-eef1-4c4f-98a8-547f4b9548dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08520b28-84b9-4f48-80e1-8c5614e09c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa042fa-8eaa-4598-a0da-8207f7dab7b1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003fcc24-c803-45df-a05b-9f98fce2d75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2db34e-9674-4b95-9ae3-54c22eeae41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fcc857-03ca-4a3b-b289-ae3ff029cbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d39a1a-5f6e-4ca9-a2fb-3f7bbfb7fa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446690af-b3f5-4dd0-867f-3466121c3cdd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14250807-abaf-4536-907d-b80d4f08daa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d254def-2d62-4b53-8b61-33d0459950cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4b70bc-34a4-45bb-9469-51b21b36c4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8299a91f-9b02-43c7-a677-6b397e5b3195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1b375c-bd97-4dbd-81b6-450b3af250b8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b7e98a-fa65-4b07-81bd-a62abfd77d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb1dfb8-bad4-44e4-aed6-1abdeadcf668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f876611-bbd0-4f79-a98d-965ede8d85cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b309ff84-5c24-4ebd-abe5-e44ae27d882c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73de76f8-7092-4aa1-a2b6-8ebe4d3b3340",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f51abe9-6f36-4023-bd75-e9425b0f67bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5df78bf-5932-4f52-a687-0d32956bfb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598b9046-eaf6-4d78-8df9-e27b623dd942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c1c406-ecdc-4df4-a2e5-49b47d7154d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed0ad96-9039-42eb-9b51-b8c25671c6d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b37e27-8406-4545-ae69-6ec83b0f625f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045109fc-fd86-4a17-a630-457800a19fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3937ff-5da3-4ed0-bf5e-b1d863185d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2751ac-10bc-4a58-9779-e78d0e3562e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4ee719-dd54-4abf-bff1-b82757fedb77",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb7aea0-1b07-4d74-9d1f-11aae8453664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1104f5c4-54db-4830-92a6-d4edaadd1c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dab6771-01cc-46e1-9f67-fb9ae7adf063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "15948aff-fb2e-402e-8153-97d22c4e802c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508faa94-c2d0-420b-9dc4-4a0fe7c518c2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d68aac-f321-4413-a12e-343828c2284a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc81448-60b2-422d-a4b9-fb31f29ae43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fb7444-5806-4da6-a40e-76dc7faa9b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2bd29e-fb96-4a3c-90d9-56293f789dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dad02b-1949-4ea3-8b3f-f9651111e44d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc89a4a6-fe62-4dd7-b7a4-15f9b45395f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c090d1d-c04b-45e7-bb30-2fdf33102f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9635988-a251-4ac6-9bf5-09e3a61f338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "466de7fe-824b-4f14-9829-c680d3ddb31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf2c1e5-fe80-411f-aeae-c205b2673dc6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a9ddc0-ac67-4ed1-b744-736c66f89c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26194ecd-d6a6-448b-86e1-c117b41c332c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcac8d2-e146-44a1-90fa-11fc6dadbb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6207aa5a-76b8-4bfd-8400-0450173e983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323d921d-df35-4df9-b079-379d970a9f1b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3f859-61f0-40b9-9e70-b0579429db40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac1016e-8e1c-4f6e-a619-6aeeb8408d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9e04a2-f026-450c-8f91-cdd48e865282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1703c535-68fb-4090-b842-c13ac87e10f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06fb86d-ccc0-465e-9056-55ad7b2f6278",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b517bd82-ac60-4c3b-8a3f-1d3537edff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1f640a-b6b4-47d7-809a-de216a09cc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef8f5f2-7407-4084-bcb0-db1c7ae59550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4c08f3-8ede-4606-a476-0b0da19c2c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42687ab-1ab0-4f3c-ad72-b720ef4609ec",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daab12e8-fb33-4f47-b4f7-eeb89ac66231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbf7a46-b94d-497b-b6a0-be62a5293b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d469242b-c87f-4cde-8653-59ea1c51f5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b12350d0-010d-43b8-a294-6760464c9617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621cd560-4152-4440-a986-9f9ce8d80106",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bf51c3-9d94-47ae-8a32-6f9b5cef0159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f71be8-f0f8-4d00-b346-4acaaeac281a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace5af76-a7af-4151-8484-aafb981be329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "758b6554-39ca-41b0-b166-a77790be93d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bce122-c619-4903-a333-6ce5e5d4b646",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5db8d7-9cb3-45f3-9deb-c578c26e7c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0972d32-4de1-44ae-b889-d952e46884bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51949312-1967-4ef3-b73b-b19658e7ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8df52b8-17c4-4cc5-a2ee-29c16e303540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0a4cb3-da2f-4a27-9f2f-40e67bdd462d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf14e6e-47ff-495a-b741-c793dc7df752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a546aaa-5d5e-4863-a5bd-2c6f7b301fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16634b7a-2b78-4b86-a581-de62812c8bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7272aab-a854-440f-8cac-654133c7c229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce907b4-3b1c-4828-8a3e-63e5ac169541",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194a40db-5750-405f-b97e-fd00b8901993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec8dd2e-52f0-4c30-b38a-de4428668397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573ffe00-9130-4cd0-872a-8002838c48eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d922b757-fd60-411e-9ac7-a27687657606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cd9ffa-71e0-48a8-ab63-3467cf9b3005",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c75019a-4192-4476-bdde-261cec84c123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27c138a-b203-4e59-b7ca-49df83292176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89887da-0738-4c6e-9dfa-f07c387795bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "41ff4de3-eea1-4173-ba37-f121bf1a9d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7214e811-c930-460d-b6ce-1aeb78515c25",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56754b6c-5a15-4c71-ace7-d4cf3cfd7c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe8cbef3-79f3-4733-bed4-e35fc7c7ac51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e320048-e0df-41a2-9a75-6b3b9f86db78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9e652d-119b-4550-b7a9-3bdf59a4d47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45d2ec3-66c6-4c9d-a7bf-ba59340e0d5d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7938d1d-7e00-4b93-9451-71cbf0cebbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01aefc01-624c-4411-81c6-2eea9c3c1e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15192d43-6b2f-4fbe-9b9c-2d49bb29919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "015d88a7-bf3a-4385-b704-832120d7ca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1657d7cc-debd-4282-aebf-e1705d91d9cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe53171-13fc-45b1-8906-6d00c029f5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342a9d79-de95-4234-b860-f626848cafe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29873f25-000d-4c2d-a107-708f48b32757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc9edb3-7c83-4f57-a95f-b93d348dce5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc023ce-cc58-437d-b4e4-409701ffd106",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d1c34a-c992-4f85-bc72-b3b914352e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6536a7e5-ec29-4ccc-b935-9aecc84a494d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ede9635-3f3b-4090-8655-dfba7ab56e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d48b07c-8d17-4098-bd7e-67f05a5fc2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a33657-6e15-4cbd-880c-e69758eb7ecf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bec436-0326-4ada-baf3-8474a1fa6d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dfd359-ab05-480d-8101-f7a5c98d1bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd41493-b69c-44ec-b854-a16310ef1e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab78bd5-ce2b-4b25-9f92-c3230a0f8788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56965ecd-3b7e-4de8-9065-101b15272a38",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e930ad5-f1a1-4a6f-8f7d-6daea61ac520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ccbd2e-152b-406c-82ee-d6f4df411bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984e31c2-3a0c-4b17-bd2b-65e072b8e770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db1f3aed-ebe9-4837-8cef-6b87bab0fccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2faf490-6a2b-4ecd-8ff9-e52611d95bf5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2fdba7-d9eb-4b56-9ce4-db0088561d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4893e57c-12bf-4d05-acbf-c753248ee44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f01a74-3228-4b1b-a642-ac31ec192fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "03549570-7984-4a7b-a09f-c14f95d1e1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b7e3ea-c875-4f78-a3b8-7ceb3171c4e0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adf1904-192b-44c8-8836-198f5c733986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e396b46c-0627-4504-ac67-de4f1dfbd7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb24cc3a-520c-4f14-a3bc-16706d078df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9debaf8-41eb-41f6-8e16-cffff95ddd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03bbe13-1d9b-4cd5-8016-1d511ecef072",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edc9327-b896-4465-913e-d34464c9482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a95a340-f373-4b79-9565-3a5f20cbb902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b6f7a0-ab65-4a20-9767-a0f08f8ad5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "50781368-9c4b-499a-b789-a52415feb451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbe9639-231c-455d-a171-6ad1778ec141",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f307abb-647b-40e7-82ea-5954f60e1251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5310023-af96-4c24-b328-f7140604619f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a95e65a-47e2-4148-aa65-9a94bd408498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbeec97-43fd-4346-87e7-b55f777b3e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46defbf4-dbd4-4e52-ac1d-fb04d2465031",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17ce292-fe7f-4462-98c8-955a8b323b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcd36b4-dbcc-4f22-94fd-32d556b1c8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451976ea-430b-47d0-9800-515424042fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c09713-d7f7-43d9-bc54-1a91b3f4abfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c61ebc2-c51a-415e-9b34-f93c1c41adb2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae7ba1f-b7b1-47f9-8457-ea3f917d6fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8c867b-c144-4229-9f57-cc0c0cdbd3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c79d99-acab-4333-9001-8cb769c5c425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdffda2-bce2-4c01-9d1c-d3b75aee437e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deff8003-0163-4f9c-8e59-43b87278b269",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb5177f-e2e0-4e49-be00-6269ad1166bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7748c651-c0c9-4b2d-9130-71200fb42c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbaabe1-7d61-4244-a786-8b0b1d2a0323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b05716-e783-4e05-8262-af3468e7e5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbf1e2e-2532-4928-a2ca-b66df5e32dcb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13cd6f7-d59a-4aaf-8377-1687a9c5316b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb37e501-40ec-4069-86b8-cb8b256201f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c4cffe-1538-4b1e-8db3-fdc534f0f344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4db4faee-c307-40dd-a984-7d685c6f12d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1032e3-2c05-4bea-b845-8e0bf52a8a03",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341ac318-9bb4-4dae-b1e0-1f178f4af85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbc3c53-59d4-4ecb-8e47-d9671ba38487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebd960a-a990-4cf2-867f-173d7cb03f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bab29b78-aadf-4086-ab00-cf35a901b657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aa834f-1905-4af7-b22f-4ee72424efb6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58401c3-a968-46dc-93a7-05bbca443e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674c2868-f7b9-4d4e-9861-d9584f9c93e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4acd09-a819-4052-8246-e33bb59f4d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c18b16-e897-44ca-97e7-128d950c38bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841f3caf-061e-42be-9a0c-a78762210255",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2525ed64-b991-4f93-99a1-5f4690b2920a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbd207c-7c05-43cb-bef1-2fdd81c82ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0810f786-e206-489b-909a-5a3c2e34fefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a99ddf-c5fe-4c63-8bc7-1453e3f4747d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5503fe1d-afc9-446e-8f76-2e0c11dc5dbb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef3c63a-4cf5-44c4-8a7f-261bd3b1670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ca4c4-7f96-4d20-b867-f0096a28fc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce05387-cddc-4e09-bab0-2190ddfdb54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f14445b-81ea-44c5-a7a0-510d866524c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7212cc-0ea2-474b-9f71-260b1838c1b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541d7829-1c70-44fd-8a73-b5e92f189ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0de4067-b683-4cdb-ab14-0e7ff4442a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed4cf9f-ccec-4d83-9a95-a22aef586b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb355f55-7271-4588-b597-6a2dfe9f5721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee298d8-a608-4112-90ef-33938cf0dff9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de33a33-f865-4680-bd61-33d635daa4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50681454-a6c9-41a6-8655-e20a12dcb9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f66901-d568-4ad5-a5db-c20b18fbd790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ade6c3-9a69-4b6c-ba9a-63353b158b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6765003-68c7-43a9-86d1-163f91089ca3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3789b866-7a1a-44a7-9c33-56b9bafc8b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372f1c78-1bf4-4b2b-ad8e-eb8f5053ad5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38476774-ef70-4654-be60-f1f815cfa7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "897b9763-ad24-460d-97d3-442e8fb2396f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c012504a-fa9f-4fa5-8e9f-c64cf2a92186",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba6acab-afa5-420e-a065-0a0a7d505e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e9e5d2-2b3a-4e27-9cc9-d75054f805d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf8778b-e290-47db-8de9-4b9432391e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b126075-86b4-48a1-a0c3-c5375afc23e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49f3d1c-129a-4dca-a886-e80c8fea28b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955a4c63-c7bd-40a5-881e-fd8597a69175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80348433-71e7-4173-bd51-a4b379a38d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66ccf6f-0b21-4194-a15c-7b668c3321e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0273419d-7591-4bc0-b346-a0ff1a46ff8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af3b8b9-c586-4e78-915b-a5e00cecb4e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dee6b1-8cf7-475c-aff9-81f9a7fb1ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2042d2e-3b61-48fd-9cdf-7af8b19b02f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eca7cb-7e2d-434c-a551-67db7fd39fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27bb1bcb-a632-49d4-920c-86727f5f732f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af369828-bf07-417f-8fd3-7746b12f03f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abe650d-f78c-444a-bbd1-d9fea3715768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21941f24-c868-402c-860a-8da4f70c862c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1404dd-5ba8-486b-a408-46e92c3bd8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91c3065f-3e9c-4c1d-b42a-f508095c73b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2f7148-72b5-45b3-ab62-b61240517716",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18deae0e-11f4-4848-93b0-8ef72765f7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22dbbd3-1914-4096-bc18-da6dbe01a17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c334b947-aab4-486c-b205-1f2a5ef471a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2291a7-779a-450e-b1a0-27b5438e20d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0db96f-c6ad-4811-b265-0c4988f38f3a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2454d6-8d2e-4b2c-8ec5-cd1e1be5db28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a649e4b-767e-4d88-bce5-083ead262c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38158b6-a0f6-467c-83f8-9bb8dbf2148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "214855ec-65da-4457-8f16-f4f9f6d026fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dab33d-99ee-49d4-a6d8-358d46b262a0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dfad41-6b4c-4cd2-8ef4-2dca75936a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6ada15-3e4c-453a-ae0d-e7b1550e55f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f5d357-147c-4178-82ed-5d2104919443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b7f369-0ff3-4ed9-bfc2-e1dab00ac2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbe9840-6980-4d43-b03a-fd1184c78f8c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678199d6-32ea-415c-98c3-6471f418e445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4dd64b-ba43-491e-8f55-3529aa27fb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf8f8d5-ece8-4d8a-8353-8c0874172dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e126caaf-3fb1-4270-984c-4b3b653b8708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe50ac72-3f7b-4fbc-844c-30c133815346",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5659e9ad-7b93-4091-a835-3b94fecd592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f5fbb8-ae41-4591-8a22-548d057c91d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e0ae54-0694-465a-bbfb-d4f18de4ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "013fbb09-fbbe-43d7-9c58-bff711cc072d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8af098-b5e2-483d-b4ec-ffe6c8dfb075",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d966f04d-735f-4826-b83f-391164752bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7416bd-601a-4eb1-9d29-52d2ea857bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11abf696-4a4c-43a4-a87d-580674cc3229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "438bc827-c304-4f53-aa6f-0013ada1efbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7debe56-21a4-4680-bf08-a60465019939",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7ee94d-0c78-406f-aa91-60e9d9f0d2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80991ccc-2f08-4a7f-9d06-8981247fceee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb2939b-e946-499a-b758-ebbbe1758ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7adfbf1-769d-4e62-953d-9f97c14c1c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477827e5-0662-4ea8-b2e8-574e0cc99622",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05bfa70-58ae-4805-9983-6f5b21825247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bf3bd3-2489-450b-8c9a-7e3d92b3e3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57e4d42-d4a7-4abd-8bdc-b77657ad7781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "191f8d17-28ef-4a2e-bc09-52104043b868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7dd295-768d-4b85-a789-1d363cd42548",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd483c7-1162-4d3e-b962-a1b5a427686a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a601a44e-5fab-42bd-9b4f-908c0ab0f4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082b88ca-a4b0-412a-824d-5e2c79a276d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e57b540-22d5-4c93-95e3-f4be1a633634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ed1aba-08a6-4b34-b347-403de71a8df4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cf2617-d9a0-416a-aea3-cc2a1914d84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5daa697-4e68-4b28-bf7f-793468e92279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1137eb-4067-493d-9587-894c7c6fcdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc489764-7e98-41fb-962c-fc5b3a1fa470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5ae39d-0ec2-4afa-9264-c003c8223092",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47986317-3934-49a1-9f46-d16c9960fdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711944a4-dea0-45e8-9a93-c40e53512ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81caf7b7-6b5b-4e7a-ad71-9f9b158e98c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc2808c-a195-47b5-8f0a-a7e9faf2b254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11596300-ed11-4ad0-a6f9-52b8241e07d6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b806fca-373b-4516-9335-0a1bbc110104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63668e09-b7f9-4408-8fe5-49fe7bab9d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d516d0-b903-4de4-ac1f-07f6e5912f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e00abaa-1fa2-4f52-8d0e-ad0352ef91b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b6f52d-916e-48a2-9cfa-91eac2b4a5b3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62c0d64-ebfb-49d4-bcd1-ac3b3d85ba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fb2735-e0ff-4239-a452-a5135fed0247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4113cad-6da2-416e-9841-45f9d7c98546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c53b357-21ee-420f-a9d4-eda0e262d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea64d0db-333c-427a-bd8f-eecd08a691c7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775facda-9f61-4e8c-b00b-cd865e3002b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7547bdf-3fe7-4707-8770-f0dde04fb2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b84e99-2fba-41cd-be07-1895d391f9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f32e3076-3e6f-478b-b5a6-543accb18942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b1b383-5a3e-4b38-8acd-ce275f2eb5bd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d60a70-5d6b-4f21-a97f-0a8aa54fc0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1b7867-842f-4edc-b880-3dccdd67635e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bde93c1-1e75-4770-9c5e-54a43ed13c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25512444-1595-4eec-a560-919b45ce6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d838ef-7dc1-4b8f-a78b-4d9895586a90",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a74463-1f44-4103-8dac-a976e71cf04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aeb419-cc16-4782-a04b-27c7be176d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63042a44-48ff-4bcd-99ea-d535133c8aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e08a736-501f-4efb-84e8-7782c032ef67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f74371-9ac8-45d7-b3bc-3674c72a61f1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629e7f83-a009-4ab9-994e-dba1a5b75430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae6fa5e-e0cd-4913-9c94-7e42908fffdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7560bf-b322-4f45-8ae9-0532f4302926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e31d33-41be-4cd4-bd27-b6eb4024606c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5afa126-d761-4ed2-8777-4cc28163f452",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918a2dc5-1fa1-4fcc-8e96-c8b64d58427b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be8fb0e-be9f-4aeb-8c8f-a37ff425199d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6877cc-61a0-48d8-bc23-96ad28fab665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66cc11df-d1bf-4ba6-9840-d86ad46dd568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce522d0-f883-40e6-a089-a52781d62b69",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2ab305-fde6-4f33-bd03-38573ad86be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae1250f-c8d5-4e05-805a-1535bf7a3b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bf38b8-0c33-4fd6-838b-7310b0ad09c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "171de789-3bb8-47e2-878f-2f61ddec9c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27591c1c-e32b-429c-be72-aed3d76bfac1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546da20d-a555-4013-8eed-f297e4c3faf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f29c96-f56e-4734-993f-8aa860659f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910ed0d4-1aa0-44b1-84e4-6a95b9511bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f41036a0-3534-4a24-8706-30785287d13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77f2270-1456-4ec0-8c11-9fe2aa066976",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700dac37-1966-4a41-ac57-24a97f615609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c3d3d5-1332-4961-ba1e-3da38aa993e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6490373a-7875-4059-8df4-01822f4c39cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca4cb0b-7c01-4473-8555-1d23ac62a84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a6f8ba-ba91-44fd-b793-1dbe877fcde7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2879b302-09fc-4b8a-8d51-6e16aacac8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c22bfa9-0688-414b-96a3-307a1d3a014d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36321b5-5ee3-43b8-8ec6-e29f9a97e0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c17566-aeef-4dee-a87a-8e0e63ed12e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfa282c-5e9a-4bb9-a9ab-24485cb3511d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec9830b-2240-4572-a5dd-83ce6bc047b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72accbac-9366-46e6-aa08-e9839fe3da1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a101bf-a6ba-4e52-a110-d3748fc48be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dca5989-5228-42ec-afaa-8bc48de31561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bc554b-0371-4da0-95ae-7b7b9061571b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecec9b13-d38b-4b2c-85e7-540c1eac2937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a71f918-5c56-4cf7-bb16-fbe078e7bd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc28ecd7-744b-445f-8fc0-061b45a79bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "524ef883-0e39-401f-bb31-8a964a44a8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae3f534-2344-464a-87b6-460640fc6a8a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0904247d-b173-45c1-8af2-77453e19792b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63354d2-ced6-46d1-853b-71ad91129298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30303c2b-46b3-4179-a2c5-bfe9daf078d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80c4b110-e71e-4e7d-9871-d9f6eb217544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b584f617-8ae9-4529-8bfe-4ee82e553bf9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fcdf46-123b-4aa5-ab57-11bdc3f484a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964ed868-60b6-4f5e-8307-a65ff06057f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c299d63f-d6a2-4d84-844c-53f0b70550c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e09be3c-6489-47c9-ae1a-e0ec03d40d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88dfc23-2b45-4181-9f16-854a50e638f7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc936ef-51b6-4a2d-a18d-a0e3ba799715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce30449-a462-48bf-a7cf-b24feeb8e1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b810896-1604-4410-9ed0-a844f36f77f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bac8ec9f-868b-4a30-8397-4de53f75533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a439e9a0-c388-4492-9a12-3554ab46fb26",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cc96c0-04da-4397-bc98-1bbabf2b2273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458553be-8f5d-4062-8689-bfe698c6c53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce020a-b775-4473-a327-2b10167af697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8e8673-ddce-4bf8-b782-89dda4ac4252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad5b855-f04f-4ef8-8fbc-a34a3d70639a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8cadaf-1890-4322-a665-05358e199887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba97a0c7-063e-41c8-839e-d76508378543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11323ac6-eae1-435d-9f2b-346d73f41b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7e5d65-f943-4e3e-b8bf-1ae48cb5f4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af11d269-41c1-4d63-b0a7-0812ab6e4b3a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9e2c3b-65d8-4109-b14d-f9bfe1582710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f56876d-a9a5-4991-a49a-c89e04b652fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fe85e7-104c-446e-bd6f-6eec5c783881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb31afa-190a-4131-a257-69395670062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de66bc7-b09d-428b-adb4-394b6e5d92f6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdf48b8-014f-4b74-a09b-04c4c3e94144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5abe0f-a373-49fe-856e-46ce3579cf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46cd71f-52c3-4758-9641-15f4640f49ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a63ffb1-23f1-47cd-bafc-feb7d76e9ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cb6dba-de6b-4d93-94bd-29d267fdc548",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4981ca85-c91c-4a13-b910-f38213cf66ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e48b8519-f405-4497-9e23-7519a2190574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcc66ee-4a0d-4d43-b03c-63f9e4859796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51e5e03-5c78-44ea-8449-4004623da1e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58844a58-f328-4dcc-9553-4caac982670f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e6d76e3-2d75-4c5f-b33e-7aeb509e2a21",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d567cd66-3550-421a-bee4-28b017cb255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86f3ad21-af4f-409a-b59e-389dd719d126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbf0d67-5941-4a63-98a1-a6662315e203",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71da6029-4df0-4b03-8e0b-b3cbba52daf5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68df4dc8-3f50-47c1-a165-25838cc24a1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06838c6f-9318-46f4-8741-218a854a204b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d3b7872-f5d4-4fc4-9460-e9199a7a3c33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "103448ac-49ac-4858-9b78-8740262ea242"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e518a0a4-6c16-4d43-8f65-b8a22563bc00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f40f77d7-9174-48af-aa01-77bcbfa7219e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99c02805-80c7-4f7c-a3b6-0cc3cbcd2c54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08e98138-98bf-44e9-ac5c-86d9ab6c9438"
                }
              }
            ]
          },
          {
            "id": "d6d47a0f-bead-4f32-9012-fe19ef46c99c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4dd90d77-aa96-4ec8-94b0-34ae9e53388a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d1827526-3fb4-426e-b82e-30e9296ec516",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a71521a-bfea-4335-bbc1-da43176c81c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3c1da0b7-f3be-4b4e-9e7d-f5abdb6831e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39fcba8-ecc3-46c6-8669-e70cb37a536d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2e74bd-a5aa-435e-a99b-ac7955ee3072"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e19a755b-1472-4563-895e-df94484db02f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "543dc5ff-9bd2-49fd-aa6b-d419534ebbde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c969fcc9-6215-4bc0-877d-a79c7cfee21f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50948d2d-6b12-496d-bba4-3b96f1414497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc8be053-74d9-4dc1-83ae-7cada1f0f406"
                    }
                  }
                ]
              },
              {
                "id": "e042d9b4-d638-460c-ac2c-078900a5160b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa70445-478a-4cc2-a32c-72f10a2fe93e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d33b674d-d1d8-4e1a-9828-5ef82ee9804c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7741bbb8-dd9b-4735-a0bb-a9340a55fac5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dfdc8969-a7bb-46d5-b5c6-bae0cf8af4c3"
                    }
                  }
                ]
              },
              {
                "id": "515956d9-e85e-4f44-bb83-e3110ad2a9a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3786454-baa0-4bed-94ce-bd867e18e648",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba06fcbb-2617-4be3-ac48-c027898490ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "875aa2fa-7f55-46e8-8e39-22e9d2241275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf69544d-303c-4bf0-b26f-3042b5e83ab2"
                    }
                  }
                ]
              },
              {
                "id": "e141856f-b004-4ce3-b4ce-8ff2de066ccd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2473269-380e-4142-8cfd-8d8fe099d856",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "415d1da5-237f-4642-9d23-22d868eac54b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de815171-0810-4f10-9148-4bb293c0562a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aaf70f45-99b7-499b-b7bf-b53b05e0f105"
                    }
                  }
                ]
              },
              {
                "id": "73df6f09-f6d1-4c20-847c-bfb5999948b3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc09423e-062c-4171-862c-58d00f4f6dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7eec6343-8138-44de-b806-f8b5ee8e3dd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f983cc32-1709-4901-b0be-c160abaf92ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dd0e63c2-088c-4009-afd8-23552ebcd3b5"
                    }
                  }
                ]
              },
              {
                "id": "5a3cae8e-dfa1-4181-abc5-b8b7bf8eefff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cf87fc6-f4f5-4913-8ae5-17373eccf278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e2e9730-1f47-432b-b9bd-2829a8500765"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b640194-00a6-4e57-94b5-3b01aa440101",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8e56663-34e6-4da5-82dc-7460d9ab1175"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55a43eb3-1df3-4493-8608-782703c02c33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c94f14ea-41eb-4068-94af-b24b848d1bd7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9e6a7c1-891e-4534-9fdc-ec808b204da5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c941aed-1dea-4f41-b59a-07755b73b7fb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d48d284-3c49-4c96-bdcd-1f16b5f2597a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7fd98777-b6a5-4935-aee0-f5c2d8ff87f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7db3c471-313b-439a-b0ba-4f2c18a93de9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cdb3714-ef5d-4eee-b85d-1724d33aae82"
            }
          }
        ]
      },
      {
        "id": "70ada611-e7b7-4018-a31f-2e18f7b3cd41",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5b34d6af-bfb1-44ca-8b5a-d94ae9d692f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f8a9946-9aad-4a29-9d56-251a0b9b3a03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6129ee3f-0026-44ee-820a-30db18c83530",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3615e7f-9b47-4fad-a388-c5400187c2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60a60c0-293c-4d5f-bb6e-d3adfa77b96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49ad0c4-7523-4013-8229-4adf50623f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "021f8bf3-4e91-4454-9def-9baed1058011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8338a57d-5bd7-4a9d-bb84-6482db439480",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e42c12e-144a-4b86-8478-d9641f56946a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2795f19c-4b41-4ec2-b54b-65161ee5f658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60a0fc5-8ff5-4b5e-b5c5-42cf1dd05560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6de81a1b-d056-4cb7-9d6f-066ae5858cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35344a1b-12d6-4f1a-9dce-fc85394109d6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231f0df3-94bb-4d87-aa6e-27a856bb298b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b689f072-df19-47ce-bd1a-75a3c6e31ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ca300b-b385-464d-9c93-aa821809691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83451374-991f-4cb7-ac7a-a02639c5f00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6320772b-348d-459a-a36c-aa1448648599",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82c266e-e3c1-4575-be38-1fbb2ef4b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb551ee5-4d01-47a9-8745-d82e1a2b499e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f61d98b-9cbf-43d0-97a7-ed6ed853c371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "010db414-9b06-4d41-96c7-48bf2600a754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2416d18-c59c-4cbb-b810-3f416f9b736e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927942c-967b-4aba-8f84-83fd5cebb01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224b790a-cf47-49ea-941b-0df0452ac53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5210c6-8af2-4d4f-aa37-86050c7dd3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65104b39-4e8f-4e9c-84cc-6d2628dd214b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a63594d-5fc1-465d-bac8-9e2867973853",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e90bf5d-1244-4dc2-8c46-6f9f43f329bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b529676-c67d-4a2a-918b-b8176cd699d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c2fd6c-efb0-4d7e-8ac5-c1f75a047270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6684ea7f-b899-4ab8-ab18-dd46111862cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e284d507-268f-4569-8dfe-053361189a3e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24315f6a-628c-49df-9146-a3843a992a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44d7c38-47b0-436b-b2d3-b3678d5838f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929ad841-ed07-499d-bef5-f90c91e23ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dfab44-c9a1-4846-964a-140ea2a3b9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d74a382-55af-481a-be19-929fe17aae99",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c91fc4-92ab-4bb3-8edd-a2abe3835225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92769b7f-b38c-4e2d-9e84-3a007aafad18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d2daf0-9bab-4700-b5ce-92fedf5b6dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaab14bb-cfbf-4824-b586-7a2078b824d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3490384-6624-435a-9e2e-80a9d491bc1d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e836e2-38cb-47aa-8601-8e4d8a4e70b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe288aa-5514-4c70-b4fa-23b9ca1ad664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96918635-1e19-4e5c-9364-8a5c9d0ab1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52dada8-7d26-46cc-9f3c-c8747614b0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d310e3-618c-4b1c-a57b-cb324dcf4f16",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e552e-3c60-42dc-bd5e-c716f30778af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7ff8e9-59a6-4afb-827a-e2e09f4d556b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb428a7-5a7e-455a-bfbd-619af7fccc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "608b51e8-17a2-4789-9b66-55abd33e121d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08ce7b7-1d18-45ad-b248-aa65e522ebd3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015bb078-5232-4e4e-b4fb-939e36fe682a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47e7417-575a-4f21-9c40-f00cbcc0b4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b351e4b7-3c1c-47dc-bd85-4bf4bd6cea96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a77f51f-8d43-41bc-b693-b59021d8b908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7057916a-20e7-48ae-82a6-c1a2bfcb077c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6338fb66-580d-420e-9560-68be394ad012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2951fb92-616c-4ff2-9a2c-1dac69322033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b9c934-f0e6-47c1-bb5e-7d9ba8720d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "337e00ec-410b-4da3-a594-15f16c385513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4eda2b3-0804-40bf-817b-27638364ee8a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81098464-cfe7-45d2-9e80-c93c9649ed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9e3f95-a943-460e-a862-0dd4347a8b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f748abe-5794-4d9f-9e6d-ae1bc2b904ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d715f8e-65c4-49ce-b5d3-c9b1f94c5f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0292e240-6f3e-4f2e-bc14-9362795ec428",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0015a88c-0984-4bb9-bd9e-ab71e0a7947d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97114e0-2c9f-4e2e-b18a-1fe8a5dcfd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f41df89-c062-4f51-91a2-7fa2c05735ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0ae80a-003e-4466-a250-77353fee5d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73ecbf3-affb-4258-b950-c3b24a9b0333",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b62a7dd-53c5-464a-9a33-eefe14eab191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f775a5-436b-45f5-87f6-d51098b3888f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8854a7-766e-4e08-9ffb-76ddbe8b2174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "759a5a8d-1284-4f09-8c34-f8eac6abdc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9458eba-a551-49a8-b16c-377d9f804cfc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edf4b9f-81c9-48de-b77d-a1705f634b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbfa41d-af87-4092-9398-91e60c6bdecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e430dc7-77b6-4fbd-b141-43749a7dee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d64fa1-32de-4ca2-ac5e-02e042b55ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db244f4c-efc3-4c07-8d05-28f6ea2fbafa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6161bea-a834-4fbb-acf7-6aed893760ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0daed27-5b61-4963-851a-16815e9ddb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1050747-8ffc-4b33-b957-55339115aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ef17c3-e98e-4f60-929f-75959667980e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc7459-2b4f-4f04-947a-5b787cd7a6b8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad992e44-5d01-475a-94e3-5a722de1e830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f90d5c9-35f3-42bf-b9cb-2bb3d2f08659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a234496-78dc-4ce8-aa60-042f0dbbc2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3259fbf8-335d-45f3-9e22-032e19a32251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dd93ed-a64f-477b-8692-f98f59136a49",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733340ff-e31d-463a-9f77-64a6cd728814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b83569-7a48-4a53-ac41-d760dfd65b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb2585a-7818-4328-ade7-3dfd3004fd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f26cc82-cd04-41b6-8ad6-2589b97f8c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3feeab-567d-4127-b4c1-6786b5807fef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b8bc70-e896-44b0-b261-58aa0f7d9830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df838f17-8b4f-4256-8e69-8e9b8bd6f2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d8718c-39df-45e6-8d32-7bdce1f9ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d6e0ad-fb08-4030-902c-4820e115b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87fb8b9-1ca5-4271-9936-f17bb2b45bea",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d179c46c-6217-4781-8383-d171efb42306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d057eca-5214-47ff-b66d-38f5b6e77871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270b2626-0c80-4b0a-957f-581d0c381a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7c0ed0-8988-427e-b97c-61056a2ca8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc5b165-54da-4c1d-a96d-1c8ee6632919",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1857d726-8eb5-4214-95c7-800daa4525b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bce4a2-5b4c-4964-b750-9dd56b2656cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97483142-11f6-471f-a1f9-9b380c90fd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f60800-1330-42f1-ab53-40b81314529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcce0b7-e5f2-49c9-bc76-8df1a3607a98",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2ecca-13af-4a40-bd1d-f1b35fa8b9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55600e7c-c754-4ac2-ab29-2f6712814fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8989dad-23b7-4110-821a-a37eff5edf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5742194-3fb0-4b78-9597-394bd0639050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db47abb6-e257-45a9-bd56-bf2a60ac0d0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bac0b90-857a-4b01-ab7d-43ec739c7d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c71f32-9dda-4b31-89ab-c8a947370f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da8277c-cfb2-483f-a269-688645ed44cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5183c04-3981-404a-84a2-9c43b6e87c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e57fb75-3167-4bfc-a79a-c4ad90b0f02d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0e6671-9213-456a-b481-b56d659c6adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab91ef7-12da-496b-bfff-8a7d144e7701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ed0460-d56f-4b82-b176-e3fe03af3394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d59bdd0-4ccf-4fcb-a28b-7838895b5a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4b9dca-f1b2-4904-9d38-720e4bd74ebe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e54d366-a9e1-46bd-afa4-6e61e1da17bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c43c51-931e-411b-a706-619eac505b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa7f273-0ed0-45e4-88c9-435e9dde9e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c221d32-4732-447a-9b94-34aef087224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca720b5a-e4f5-448a-a6da-e680d0fe381e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7cc25a-bb5b-4c02-8a5b-4d41ed4ba6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbc0340-e749-4a94-90c5-c03c370d37ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e67b31-5ceb-496f-ba2a-2a28c7dc174a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4b00af-be7f-43d6-83ec-1b1920c097ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514f1bf1-51c4-4b74-ba67-394f850231e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927c5a3d-877a-4324-b0b0-223bb101ff50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbddd15-6160-4bc5-9a21-aeef2a4542ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6743eb-53e9-4bfb-a252-ae5cd7c41fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0439f5ca-477a-4768-a4db-388cffcada10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe69f2b8-f5ca-42ba-853f-65b95a15c146",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff543142-866b-4345-8ab1-c23f6927f560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2846aa-8e4b-4dbf-a454-a15484cd7f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1ea8f6-03be-4916-8d13-407752b434ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04f8055-9ed4-42d8-8054-403832df6eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b23fd61-54e5-4227-8279-d0ff28603458",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8feea7b-e5d1-4fab-993f-f8256955e8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70021565-98b8-4970-aa4b-431a88a1d9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b30c4e-5c34-4fef-a4cf-c8d059651bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33a0f4b-3431-4626-8f16-87344bc79c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c34cd3-8c0b-47e5-967d-09b6ad3b669c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa47879-c425-4707-9dd9-20006f9979e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b6bb3f-8aa1-4303-bade-919e0501d85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1980d73-0192-4482-b1be-750a52a6c05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55223f64-d280-4828-94ae-2e4db74c4249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1e8b6e-4ee8-4999-8694-d75890c8f716",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb551fbb-15be-4540-b257-91eff46e9f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23274b70-01da-479f-b41a-3cc3f914ccfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f87fd3-0544-4d6b-a77b-61b5910fbd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f68514a-658a-4c00-9861-9404f7d5cb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a05bc3-269b-47a3-a602-99dd0a91f2e3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4885b407-a510-43af-ae10-bbc62eaa9552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f65a90-4fbc-4803-a4bb-782efce813ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74c575f-eba2-4b8b-bf8a-5dd282e5a4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b9b78f-af6c-4759-8f10-17f81901042f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad716de-d870-47cb-b882-a8f6cc9e67ed",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1de8e0a-01e1-4aa2-8897-3de7df744111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b367c4-2fc1-46da-8503-b6bd7c08f82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c0be1-e587-4a6d-b054-6d6554ad9865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04646d2f-235d-4cf1-8709-c6a974a519a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079818e-5b4c-4f7d-93a9-b495dbea61a6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5684a0-f15d-4a31-8598-c6b70680c7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864b4bac-9d93-42dc-8c12-ad900f5f144f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ab4962-1f0c-48a8-b7a1-24fe1a16e901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d07918-ea4d-4e02-aea8-37d14b78059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb28148-f26c-46bb-b39a-eeb8ca80d139",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b57f2-7659-480a-9482-83d01311729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbf78ef-640b-4d44-a068-ea4b2384ed73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1727c5cf-6fcd-418d-b522-83b1a554f1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b294ccc-5e20-4df8-bd86-799a398b94cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3592bed-caba-47d2-bf35-f7c554f991c2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560ec8e8-bcca-4f16-8875-2ffbdb4e10d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601b8a8b-d095-466e-aded-811eac1b1e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16359f67-b056-443e-91ef-cb366c028ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2268700e-9c88-46a7-92f6-251cf0b92f31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4c69a3e-e082-46e5-9f30-55de7615b121",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19aede64-012e-4e23-ba04-26b62bb9a1aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f76953f-b50c-4128-9604-c08ea420c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6948b090-03c1-47b9-a497-9d4c63015673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67587f4b-f289-4536-a271-b608bc1a58da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b35191a1-bf53-4520-b36a-3550d196dd63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "000dc4aa-928a-49e6-90db-cd5468729991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57774c67-be4b-4253-832e-d51453725f6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52f71733-73e9-425c-9dd4-ddd27ffedd31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fb78c25-ab80-416d-8400-3790998fa8cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "771962ca-039f-4256-9790-5dc778f5539c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d782e4d-96ee-4c86-a40d-32e38b63a418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa6308ba-e958-40eb-a000-d89234d3fda7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88cea0ac-5f40-4955-9127-a894ce64a863"
            }
          }
        ]
      },
      {
        "id": "64ff87fe-b03e-4f9a-914c-76a352951e12",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1c0ea437-2b7e-4716-a62f-14cd42fda3fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5b63ede-6ce7-46a3-b8f4-82b27184a5fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af263e58-9ac4-460a-9658-ca9fff8c649c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883782a2-4a97-4f97-83e5-4720ed927452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfba3c11-a45b-4c37-85e7-19f08b2821f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c781bf90-a712-44f6-bead-e5bd4463641e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a70407-8a76-465f-a1d6-c3279850a5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9c5482-a778-4390-8803-c03d41658bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68cd17b-1bc1-4efb-8572-51d920732424",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4c487c-54e1-471a-9a8a-9ee7adfca73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2e5ef4-bfe8-48bb-9fce-898120246e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9156c5-403f-4c57-96ee-55ffd3d26248",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0f961-f054-4b01-acbe-0652765aa313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a963821-c8d7-463c-b5a7-8dc84461b36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4da8b2a-2e9f-4c95-bddd-37b22e52f869",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b045a2-5f17-4eaf-8d3c-3c71fa8af24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86d0439-73df-4361-bc18-aac95a4e02a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe5784e-8647-4c2d-a9e2-a0b5f1325bfa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82ec29d-1239-4592-b6cb-2d4a1d9980f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa81f52-1c99-4980-aa28-fdb7e1cbc8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f6ceff-79a5-4d50-8c2f-adb40bb6ac13",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df723ade-2c9d-43e3-8b50-385dc8cb8f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a1545c-c842-4631-9cec-57984f5c8ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc201d8-836b-4495-8bc7-d5a8bf6ffc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4f5a20-3f55-4f80-892d-211c4b64fc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef8530c-b55b-49cb-85f0-832222d20bfb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a586ee7a-632d-45b5-826b-ae4f06b4b19c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "733cbbd0-a472-4a3d-90ad-3597e443e4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd1dcec-31d5-48e0-bafc-bb2a12d23b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b81870f-1bdd-4022-9ac2-3fb3c6496ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f478307f-9ceb-4cd7-ae82-15507c2eeb05",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3777398-4083-447a-92fd-b9c7f75e2a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f815fa41-d509-41e8-ba09-82b15d7f2ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca8653a-e4bf-4e96-9f57-f0821facd4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865ad06a-4ed4-4941-9c6a-c9e76e51f9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb0114d-99d5-48dd-97a2-126c18c7d7b6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf417030-73d0-4aed-98fd-a88b533c28b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d25c804-f6d5-4957-891f-30dc3542953f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133392ea-5709-4771-9938-506f749788c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400014ae-889d-4feb-828d-e07880665eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2be0ce-a84b-4c52-b89b-1fb3e6b0b5ae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f3d0de-6014-4d55-a70d-41312482b75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fdf1ea-855b-481e-b860-141fa5645c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b20ca5b-e73f-47e5-96b4-cb5f658eb762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc70cf77-4df3-4cbb-a4c4-df1ddc70ff99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674c6613-b054-496a-b23c-49e198fadd3b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b12cc0-7647-4d8a-983d-6dfe039da239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8a47b5-e813-42cd-a6e6-68b590d6ea49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2c608d-8ce5-4a8a-9514-c20aca17431d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a6d16f-ef16-41d8-b60d-f99f4d5b66e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51b0103-3778-436d-82b9-3b060521d164",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b008936f-ec2a-4f5e-8a68-1d8e6f8bc8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23280b96-9969-4d49-b9e7-80c020d87474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8a63db-9f8c-48ee-961c-c5bf03f47735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844770d5-854e-45c9-9684-7df9dce194f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edfdff2-89f7-4f42-ab6a-ddee06f5924c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29545cb-d73e-4db4-b387-f7393e06a78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7394b7-ed9a-4fd0-bea5-2dae4bdf6889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20381828-6934-49f9-b692-1ad5bcc0b297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65010e1c-2f82-42ec-8412-02940e77dc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a643a6d5-b7ed-4967-b76e-6f4316c7a707",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657fbddc-0458-4eb2-b457-38aa1fbea2ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7056330c-d58e-4a6b-8119-2c8fd8091f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cef40a9-f10f-4993-b767-31595abd9ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d7e805-9eba-4fc5-a9b9-0b00c63c8b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5117459a-f5b9-4ec2-950c-ef7fda9979f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b96ce83-dcf5-45aa-9818-c0fec39de557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ff852b-e2ea-475d-9310-3e3e662d064f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59be2c9-ad1c-4509-bc30-cef1083349aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe74a9b-710d-4b41-9408-540bea05614c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fed111-3314-4851-a587-8f8b00575cd2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f49b7e-f59b-46a2-abcb-89550357deba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ac2894-3562-4090-a702-41fc835907d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4214418a-0af7-4f8e-b3f9-7700b363dc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ab357d-285b-47fd-a1cc-f7bb987aacc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c3d8d6-d3f2-4dd6-9b2c-2ed2dd1afcd4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe6e37-ed3a-4384-9160-d8493d7a0478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458364aa-850c-4384-9afa-b4b1f0ac36e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95377b31-193c-42bb-9d84-53b1d38d30b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6956feb-3e04-4a84-83aa-2132d37d6d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f8277b-8ac8-4283-9fb6-8786ac1535c8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ede4a72-5706-418e-93a5-d507a9e947d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df32bf4-fc23-43d5-a5aa-fdeb24170592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d808325-032a-41f4-b6f5-70f7d6960d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dd2b09-c5d5-4b34-82fc-d2ca2f873f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962cf2df-ccd2-44fa-a9e6-6f2c36c196eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bb07ff-095a-4185-9350-68dc407f2cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac53041-1a9f-43cd-9ef8-5633da75b5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73abd8f8-01dc-48b1-922b-b9712cf2a70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c77a138-8428-4199-885e-395851ee7e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0911af9e-f204-43f0-a35e-e162ab399b66",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6efd4c1-738f-4276-9f41-e93361095c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61100616-58c3-448b-bb21-cd200b68bb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24fc84c-a462-464b-abff-64e5e314e8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb20e693-cc80-4515-824c-cd1c1f5efed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c50439a-6685-4086-9d14-84e5a17f5bc9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ad8448-fde0-422a-a32a-8e989ed06dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd73fa1d-87c5-44ec-b6d0-6e21e7b25038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14533284-53a6-42f1-9f10-573d539d98b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04f4d66-c7a6-42fb-b567-f4925bcd40b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a4055c-56d1-4357-b692-7e8a621370b4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9628812-cab3-49fa-990c-066732381e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a85a26-b3d1-4c68-966c-04fb0184f0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f191b28b-0ebb-4362-9aa7-321ae9a7b906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388091ce-ea72-44d4-8d57-1251780f4809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde5e488-1a2f-4ece-8b3d-8876d216c9f0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec991835-1c37-4456-84e6-a996c4163a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ea01c7-0fb2-4809-9245-4e7cfce01ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049b1081-b15f-4bd4-b218-37914e5310aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04eb529-d06c-45ab-b379-da5711bb01de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83296ce-ba7d-4496-9f30-35428c813cf0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4762b862-6eb9-40e1-b9c0-db8fcc17d75b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b40370-c37f-4a6b-9ce6-e00e2b084063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799c394a-668a-4381-ad6e-212ba6d87e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06c4ea5-235b-4ecf-92d0-4bcf8e9ca4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9fc605-af94-427f-9b16-66a301ebcb7d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47a2a19-dd57-4e22-90ab-1eb03feb0b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bee9da0-944c-447b-9506-82cd8a92f159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1010907-db6f-4ecb-8aaf-5eef400b8fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc94fe0-088c-4852-9962-9855b1a7bebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d151b5ca-f770-4365-80bb-a6cecc62217d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36136af0-e580-4afe-8425-2b64e648a1f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2508a81-a915-454b-bfb0-ae2b76934b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca5dad-ca1d-4089-858f-7a0908ea604f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48666f95-7351-462d-823c-b0f4618ddfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f07ed9-8fb9-4bd9-ac33-90578809dc60",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0121ae66-f674-4248-9b30-f6805f7664c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad265aa1-e7f1-4b2b-98d1-4e6cf2b75201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679536e3-75ac-4bdb-a862-7e9dabba0fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ec2c84-6e20-45da-bdb3-32e5687ec8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403aa760-4fda-40ab-ae25-3701c1dc2fb2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3d6e5f-a9aa-42d4-8597-af4edbed0593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf82d406-44b7-42e9-861f-efd4be8a9fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6c22bd-e6ce-4bc8-ad81-8fc5b7d0baf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad619d2-3a6f-47dc-ac9b-e46614c5e8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5fa580-0bb3-4026-92e1-a27d5f33d0fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd62b448-c148-4fff-9f3a-e6d25ec5b947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7762191-4997-45a7-9596-6f54bffac5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2c1e1b-1bd1-4501-a401-5e32c2953028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d30a81-3c8f-48c3-a521-f2d57aaa7a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c926da-ac62-4f04-8977-0735e0a1636e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e373091d-24d3-4cf3-9864-d83c75dc42cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d474d52-75ac-4df8-8e03-505363c79791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c1152b-df3c-4696-bec2-819af65c0126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3e0533-2faf-4e9c-8cd7-ab6aad5381b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10e9194-71d7-4599-9c67-7732342db64b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b792a9-d836-4fe4-b62c-1f6642429a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9e62f2-151c-4a30-ad78-44cba40b252f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1db0db7-0f64-4631-ae55-4cce7c5f08ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0f3722-87e5-4e8c-91bb-1414140c6ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca67fb5-a0ec-4a88-b2be-9ca63d02c87f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a346bb3e-b4df-4d7a-8829-b672861c88d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65762d91-7f23-4422-987d-138f94102369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd1b4c3-5166-4eef-8a44-fdbdf770f006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c44ccc-9d6e-4219-9c8d-992b2f9be78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2ba468-e0ff-4cc9-b21d-cfe79cb6a47a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aeb4b0-368b-4603-9720-8dd81f3d77a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360783b9-091c-4412-bbf3-b567060d9181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8687412f-ddee-4834-875c-cbb375daf499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646739cb-9573-4e2c-be91-d8b05fe3d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19057578-3174-4d15-9027-195884faccd0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7619c4-368a-4800-a03d-44597becae88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99defa09-f6cb-4798-93ef-839cc703395c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf6d9d4-c55e-4662-9b55-92ce25252370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc825e54-ad2c-4b85-9cef-9a19fea77fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a28bff-52cc-49cd-bbe9-ca365cab052c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef95a5a-4f76-476e-97a2-172926aa36ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdef6380-4958-4706-8272-7ab8fd8b59a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3469da0e-ef3f-4c13-8153-9ab45cbc8a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61e4578-3bb3-4659-b39f-b2730f2eb347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6885ebe-8e06-4f3a-b946-69b31fa87075",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9afdcb4-6ecc-477a-baf5-098ff4dd4469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080fe805-eec2-4c97-8509-5ada60936dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8de55d-ad6e-4c43-a4d5-376a6278c79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c43474c-aa55-491a-9ec1-d1668d786588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688d95eb-d8db-497d-8430-a7041776a773",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cba62c-1301-49f0-b7bd-ce3043342990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5c05f3-200e-4788-8e08-849cec87abf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2b4134-0299-4b75-9da5-04de324641f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59aaf3cd-4d2e-4eba-bfb4-61cb663ed29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee70553-45a9-42be-b34a-48806a184c61",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f1078d-f70b-467e-b034-1779180ef6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af77801c-ec0a-4301-bcb8-f8904e40b79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15c0c20-248f-4700-a6a9-9bd453e5f75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31e65ca-beee-48ea-b307-e1f175bad637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1baf73-8993-4e4f-bd8b-4ac66a2afe70",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bc83fc-dbbb-41d0-880d-c6ff5ef83915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90fde22-1b3b-4f9f-9e29-cc520e02fedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c0d933-2288-4bf1-bb68-41f721c86a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceb2be3-dfc0-4907-9c7d-b1c60619d820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a3a0a0-c3d5-437d-9c1b-20fe23c7f7bc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a122fd-6f7d-44e4-82f5-dd5fc61bca99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0509625b-a2d9-4c29-aa6a-5ff7f1b7000a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb7cfab-7bac-4536-be47-392ebab23dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420d8278-9574-4550-85ee-a37bdd45b7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a65dea-a5d9-43c9-979f-e84df5030bd0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a404f1d-96b3-4bbc-b092-3dfc06197982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2b797a-5beb-4d00-ba90-e18afe94cdd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3fbf7a-e112-448f-97e4-dfe6ac31b036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340bc5c5-5207-4633-a5ee-c5a5280a6491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c55954-19fc-4b40-868d-d91e281b96f8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31e7f16-3c68-4016-a741-2b99386144b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2737265-5f46-4105-be25-4adbf53e9209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f74d29f-9103-4275-9251-d4517de94d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e91d813-e697-4db4-8430-2637657082b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489cc22d-a7f8-4ed2-a67c-fb3ce4ad9cc3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71081a9d-e04a-4d0e-81e0-d158feb764d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd73f9b-d9ab-4ce4-8fce-4cbda3d97f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5507cd-59f1-44b3-ba1d-3ebf69f236a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506bb424-04b7-46ba-a6c5-d3d70182eb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12f6c55-74f7-451b-8e52-596d10c8c23e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbf651b-9d8c-4db7-b512-e688536ed16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55ea836-2ca2-427d-a5d0-00afd4b23fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5528f8b-6fb5-4a1b-8743-e0eb7b288714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a601023e-c1bc-4cb0-aaf1-aa059e4bb615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13479b95-6173-4bc7-a942-fee694977a07",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf15841-e9b8-459c-a1b6-5dac4c569512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bd321f-d1e8-4188-b348-de94508c0340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd1467b-c56d-4645-afc1-d38bdc802e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10d9d0c-4992-4d5b-b02d-56541027f42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4455e2b0-29c6-44b4-b8b3-40e17c0a0425",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d42f8b4-9ab5-4dbe-b406-3391517262b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15baeed4-1eaf-48d1-9745-19a981a790fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d6e14d-8162-4783-bbf8-132c9640fe4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b800e650-9666-41ba-a9fb-8cf6bbeba295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334f671b-0973-4ddf-9897-3aa50fbafb3f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b694db-a51d-4a84-8061-9d659d89d2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9120cfc-b664-48af-b2ff-49ce0433874d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b48c53f-6ec3-4d9e-a55d-d6758c3cf3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c28526-c09a-491b-a690-c03a2a725cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e6c8a3-5d19-41dd-be7d-84df5ae44944",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35728f4b-36bf-4ab6-94a1-dedb59b0b03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c5edd6-d9f2-479f-b48e-8c7dd44e70f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c623ff62-5052-45c0-8872-263358c792a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810c25d8-d6c2-4adb-b4d3-83e319e45baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2405e8b4-c8de-4d72-be3d-8098df63889b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa0dbe9-b666-4b84-83ca-027abd3e62d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c626a8-6e00-439c-bddf-5e02c58e7f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0104daf5-b6cb-4da8-8667-6b4d4dadaa06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f09f5b4-4d16-4316-a67f-4ebce02ff22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe563f4-17b7-453e-99d0-0ce89fd9cd20",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a121b66-35fa-41aa-b8f7-b5d3efb6e439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c17084-ff4d-4eb3-8741-c98216c951bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d75731-ff2a-43b3-bf03-228de9f07eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623f9aa9-330b-4f46-b1e2-d6f32af4d5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b849de84-850e-400c-aef0-e008abec8be8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85dd510-a87e-4beb-b24d-b8637090cf5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f65f88-8a3b-4c1f-9827-118e8df278a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81588ae1-95c6-42cd-99c6-3c0ed96089e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239430e7-d7f5-4cb9-b5eb-3d256c6256dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a291df-9da6-42ef-b624-c70c6a00d320",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e28c345-a2cd-4060-bb46-bf5b9742fb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f3ae16-5bcf-4cdd-b42e-e478c37c32cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ef999c-73eb-4eaa-b2f0-dda25687afce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd113eb8-3a77-4166-aba6-3462cbd048b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b8d70f-0324-479f-aa24-fd09ad99d775",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34882e9-0d24-4618-ba7a-c7af0a0889d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf77478a-207b-43cf-9004-1455cfb22024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9fcd82-e8b0-45e7-8491-46f06348e2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bf6ff0-b992-4e17-9db8-cc14f69ca25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42b9d0f-14c4-492e-905d-0beb58874c96",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cbdd4e-ada9-42a6-af8f-4ed353a853ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107446a3-2b59-42d0-a4b7-99369eb1fd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf95ecc-4446-48da-8f6f-11adffd6ed56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e1c7fc-4e7c-4f47-a300-e9251c6a6213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55736a06-2e3f-4528-a71c-cb22d4f2f18a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05c08c9-1cf2-4726-9f1d-b6d59439a0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f5f16e-fc30-4f02-ac2f-f0530cf5a3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63c0298-3381-4b7a-adef-4498f4f72c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c11731d-dc7d-4a5f-8023-164e48c6f2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0dda9e-c388-47ee-b900-5118c1add0d4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61863653-76e1-4727-9493-ad999693278e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339ce73c-7220-4856-96da-2cca845d89da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6035e1-dde4-40b4-b8d1-54f584087836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa0d240-4385-4d8b-92de-e8566277a5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8480b296-8498-4570-ad43-802f0b80149c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d017550-72ec-4ebf-a566-4814f7bf4322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f00116-97ce-4796-a143-865b7efc55e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f3258-6a2a-4a2c-ab92-63e046a97fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe6177c-7a33-45a8-a57c-3b180b03b41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40606fa-3342-4dfc-843e-11172220f309",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5733d6-e335-4e62-bd10-37f8d4bd1d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671cada5-e4c9-434b-97b7-b0516b045beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabe71c2-7a1e-4c29-906c-67a5870ec0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3464c59c-1244-44dc-9509-93355a2a4be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7583aaf4-49ae-4df3-b2bf-401cefccee32",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c669d6-305a-4621-8b6e-305ea9194eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e62fe41-7518-40c6-af54-8dcf9ca56393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d1a055-b0c5-41ad-95cb-9c9fa23a78d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d646cc4e-1a99-4cc8-84b7-d678672e8d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5ef8c0-6cfe-42c5-8eee-bc34e899c3eb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaef155b-5246-4d71-8ca4-25eec44fc4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9032faf-4543-40ff-9367-8141e7937813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f539de6-cac0-4874-9eec-db0dff057626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920d5a97-1144-41d2-9c26-1be03853a707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bd5f9f-c914-41d4-8a03-5ec7455c2803",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010f6e1d-9b7d-4eda-a394-7c60f655c7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bac1d82-23ba-41fa-bda8-16178075db24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d5fd4a-aaa0-4a31-9544-da15836c35f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02923969-b81d-40f7-adfc-e49caf1c7c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef760fa8-bd6f-4080-ac57-e856d3ff9755",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eab1fb-f47f-48b4-b03c-f6ac33eb93c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea05058-3c7f-4d57-a3db-a050638b8bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693c81e5-ece2-4a4e-86ce-0f9efbae8938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a33544-2cb8-4fb7-884e-6183d6b607c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142a0ca3-8f56-4ce7-9111-22c8137b35ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037e2ac2-b44c-4864-aa6a-3e188ab59047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94170fff-5e81-44d9-a1c1-cceb0b572b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d540fd2e-dde9-4145-8474-e4b06204defe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97cf4b7-dc59-4213-9689-facb89d9ff26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae0d939-dbcc-49f2-8199-b93366b13f16",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6798ae1d-3b81-40eb-8289-72b8a698c42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff631af-28db-44c3-8019-50fe82be4342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab657d97-9674-4cee-97fc-c489f71840b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56695ca4-50fa-4b28-8c31-21678e44c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca99268-f3d0-4d9e-a760-f2ff29dd7a29",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7459027-70c5-4b72-8f31-cb55827d0dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de19f266-e366-493d-ab5c-659020ed0a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc1ec49-cf7b-4f78-b9f5-f3d3e9f6e3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5613674-b8bf-44cb-898f-6ea0ef140008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cc0edd-c3ae-43c6-b78d-ef465da51b4d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc9fcd8-f59c-4ed9-ac79-3fd469d053bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64bc02bb-9bee-4e06-a45c-a9991ab24f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a38cff-99d8-497b-be80-1b9742aeb26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dca494d-0e22-481d-8bb7-4187158949e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd8aece-58cc-4987-8497-ed171f11688c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2134475-dfc7-4bd0-86e8-067e93f24eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff774433-13c8-4d3c-8501-e428061e3234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12a6f86-c4c7-43ca-992c-5f3506c07299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0715a16a-cf6a-4206-ae6e-b0a7b9a48bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d0a000-b974-43b2-a8ee-ccde405e2ee2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b522bd-37eb-41f4-ad9a-cb2ba2ba8985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a612b8-05ad-4698-b5d3-71a195496a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc41b19-c692-4766-b20c-995b4cdf7b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001fcef7-9dc3-4c8a-be25-eb0fa4eb36ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dad90c-61fa-4789-88c6-5abff3b6b210",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c938b89-7629-4ec9-b515-69c71ea95120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db55432-93ff-447d-9c71-5f84658a87f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3ab627-3d51-4958-888c-2147575d49a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c81564-03d0-47b8-9c0e-f073fb74c13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ff5a73-5eb0-4a58-beec-180709f1fe00",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd017e4-6731-41d9-89ad-939acb855d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39dc7e5-3af1-4bac-9985-84717eea8bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec27199-2f85-4a7e-9300-5a785a0c71f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbc1c73-a1b7-4425-bcd3-708bff1c6d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f727e283-f2da-4336-9f76-d4ddf93840fe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8523f8ea-351e-4b4d-b37d-1c73b2aec4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f2903b-c5fc-476c-871f-6b104a109b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda0659b-fb5f-4ca4-b469-ac6abe02449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dacb09d-b44a-4cee-9f9c-b2005f6c783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3b6dbf-2b19-4f8e-b356-38b8f1fceae0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d189a4-9f41-4afe-911e-e2f8732035aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a977b8-bc33-40e0-aec7-d8d356cb991d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52443baf-07b0-41ab-b1ef-c37dd88ab95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b9dfd0-c672-44d3-ab50-4e46f9ab16d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7735a994-eaef-4393-a1b3-36df662d38b2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16c6c29-c78f-4264-af7b-971dd0ddcfb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb3d82c-72a3-41f0-b047-a1ed5ac28102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394fee4d-6aa7-49ed-ac89-f6957d4371bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24af041f-e7e8-4436-90f4-2b3d8a23a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad3c965-433d-4df5-9101-def25c4e02b3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eab3d7e-35c1-4336-a342-ecaa6f66d870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4431c20-4cd3-46ba-8a17-6b5b6c641150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0739e3-2f00-440b-81b7-676314289d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbfb6d9-0027-44f4-a071-2f7bc321be16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2c4569-634d-40ba-bf3b-4b5c35e5961d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95a0e1c-7eb6-439c-bffc-ea7de187fd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54038861-a4f3-4d73-83a4-d32859bdeb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521537f3-f92e-4fe4-bd5c-c7406684b2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f25f38-095d-4570-9cf2-e04985d2c626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db0a047-5d1c-4cba-8dee-0909d72b0e8d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89637e8-fb56-478c-a592-1b8836f879da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aed4003-bc5a-4ae3-baba-617605864c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86655a2-9139-4fe9-9d93-2026d56d4498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4739d34f-4a5f-4c0f-b88f-dd32f8cb0369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ab775f-f06f-4848-bf8e-0ef768725eb0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209befd2-8695-4657-a995-955f9b84e886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e8302f-8441-4bb1-aedb-d9f1bbd67316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee0c659-9194-488d-b999-e7d293af3cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f2ebc7-98a8-4bab-a4a0-b021f4560526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2502ccc-8483-425d-bfcd-54c927823175",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61626ebe-789c-48b5-a545-ea291c8bd23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96f0eaf-ef5d-40d6-b423-696f67d7c139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccd1b84-7890-48f8-85cd-1ea702f2e75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb54597-f371-43ff-9856-c7fc8162afc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5773a776-81fa-4a74-83c5-c49efab7f34a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ec3b9a-2b02-4c4c-adf3-239b6bd5df8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df6d919-9f33-44f9-831e-8a8b52044dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fdbfe8-0366-4aa8-9409-55a3bd929c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1d0ea3-f39e-4f40-a40d-bd258a60ba1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447b2f4b-6c81-4fb2-b8bb-8f9fa1f34424",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0efe17-88af-4351-a656-154ac3a4d797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f733af6-cdbe-496f-bea9-81a7b43ad84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788dfb23-d9de-4c0a-a1c1-ffb6aeaa71c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346d39fa-9565-4919-a83f-8af5e27a06c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f105f04d-6953-417e-86f3-c27cd573ffbe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb2b47e-d959-4dcd-8201-46a3a5e6956a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb6c4b44-534f-4370-8ceb-cca61e039398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb4564d-9283-48a2-861e-f0b91c08b491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562c5dc5-23dc-457d-bfbf-b1831865f68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f72807f-e59b-43a5-804d-1dd76875bc0b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f579ac25-c7d2-40e7-8ab1-e4832ac82072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "153a9f2f-f45f-48d4-8415-1d342b8afe59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de484799-9b87-4e34-a233-cf4d455086f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bb74c0-0e13-48cc-a8c6-5a4c33fcce72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcfe603-40a0-4bde-ae0f-e1f2db44caf8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9f4c8c-24bf-44de-8991-db27dce52401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4bc3b9c-54dc-4287-9634-f325cc575a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f952b8c-b0c4-4c26-add0-ba543461741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3a05e0-13f3-403c-a85c-50c73d441f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04ff9f3-4ee8-4f2d-9d12-ac356883de8e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b43dcf3-ae0a-4566-afa1-073f583c7701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22758350-190b-4b2e-a825-82e4731e8eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062de377-1a2a-4fbe-8f1f-82a04e4b4d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1880c8-9515-4d83-8143-8b39e07ca5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ec4844-9c58-4e7f-adcf-95592ba9e6a7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f09998-9105-40f4-9ed1-d28be4e4300d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b140d2a0-6cb6-49f3-b799-fc449e402620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a01fe3-1f50-4042-9bd7-abd09f77052d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3322ee83-0818-4cc1-9a86-628affc5182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be786422-fff8-45b6-ab84-d765fcabb1c1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964fc123-0ce9-461b-9804-42fa1ca1182d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6292cf-f38d-42f0-a8e1-9f6450485401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1513a1-a8c9-4291-bc7d-1db01871994b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4c4697-5ff6-4a2e-b2fe-d225eeacc3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cef926-c089-4c7b-9caa-4f5717e1d1c2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eec52c-acdb-4975-a256-f18fbb8ed562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8257c5c-e739-4cab-8d00-88af9a5784e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3559086b-7382-4fcf-b097-060df0c5a92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fdd304-a511-4ab9-800f-738c4dd739b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddd08bf-be9c-429d-8a3c-b4e8af70c734",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cc8f0e-4c02-45b6-9ed1-594fe0aec7cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0f29d6-0086-42fa-9ee8-33193893c5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e80e5e-808f-48ae-a288-8ef0d4b9f8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ecc6f6-caf0-4247-8914-e617a5f89557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa42db17-cbe5-42a8-aa2c-d23a66ed2324",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e56717f-8862-4657-8002-de5a5d4135d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53054c32-09f0-4416-8f56-91ea6a24c516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de9e089-719f-4dd9-847d-c8621d6f0bce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f68aac5-8380-4778-a705-1d5b018a7e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a67ca92-b1e0-4087-ad03-a8645722dff0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9172d951-707e-4e70-93e7-01deffe533a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff39e3b-c233-435c-b37e-014aca35a8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8ac609-7e77-462d-8361-a5babb22e030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087d2d6b-ca2c-4ed3-89ae-a2e90547468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d188d61b-0a98-49bf-b4dd-c9da7599541b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8db01e9-d95b-4e7c-8002-6f1e3cb7c14b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f176ae-8739-44c1-a40c-f09a3145c6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cba48c-ae1e-49e1-b298-fbdb61f4ffaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f305f15-9417-4e21-9e45-2beb8b37d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29ad465-32f4-4dcf-9d54-883f46c22fb1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376c8cdc-fade-473a-9fce-95e1bb7fcf6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11089fd5-8976-4b25-a060-e4e889aeb2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709ad7fe-353d-41e9-93fb-2e2b28aa3135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50cba3e-b194-4d3b-8a37-c5008be16b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7106d57-3efe-4551-9d95-b935015fd7ec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98119086-f919-4ff1-a497-c28b01659251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0566726-9203-4c2e-9a4c-3b99b28adbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20b4e86-7415-4a3d-8320-940cf1855708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e912af7-471d-4616-8020-63773a808970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dea84cd-8004-4a9e-8d65-52479db957e8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349eb588-fb3a-4334-96a9-44162f83bc09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5ec71a-5afc-4100-932d-d2981ada187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517c77f9-e172-4b21-9b62-d4c699e62364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83688cf0-a0ca-4553-97f9-c72a9d20bb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09206f8c-449c-41b1-a5e5-4981c781290d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d478f9-f433-4fa8-9d82-a6aec979f850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb5b838-2d2a-4867-8db7-7df6709869d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c460dfe-bed5-497c-a64b-2cc0017d391a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcc59a2-3b04-4f6c-b228-36ee05480abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec73eea2-c250-4cf7-8e20-068b133bcc36",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e96567-9d7d-4d00-8a44-1f6d2a85df08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254496c2-34ee-42a7-99da-c8dd48b59731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92042b8c-f919-4bc2-b651-91090fa9d35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b62c0f-aab8-4187-9f3d-f14aa2e77e95"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f11ae95-c323-4d5c-b9c4-c5ba2a5c00b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "deef50cd-127f-4163-b289-6b398dd8908d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5108723d-1ff3-4e34-9d2e-74c122aa4c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22f3ac6d-bb32-47a4-8b1d-2d069da82fbe"
                    }
                  }
                ]
              },
              {
                "id": "6e35a584-6b35-48bc-b8a5-b73c48fc7c5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7eb36e43-7655-4b78-a399-75b1f528128f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba44c1c-d85b-4b4c-8899-29df0ab5250d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c2c095b-43d1-47f0-a302-7703d0b43aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b35858a-466a-488e-a2f1-5acd08e108ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b61f61a-5549-41f0-9299-bbdce5339df9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aaff88e-4a99-42de-aee8-410b1b79e6a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81f90e90-7d41-433c-b0b0-d12a44c7ed59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75a06c02-5540-4f17-a516-cdab075d0049",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9274c676-1aba-463d-a83e-d383548d57c2"
                    }
                  }
                ]
              },
              {
                "id": "5b9b687e-483f-41a5-b837-6dd7c2c9a19c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9c689815-4a2e-4b54-889f-dca270125a0b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e6fabb-f37b-4922-bf1f-57c8a9f2835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5ebefaed-f9be-4b2a-843e-1177b74dc856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944efba6-45c6-47b5-9d23-fabfdd0df3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9382807-6320-49d3-b374-207a18e96c12"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "618fe6b9-e979-4b16-b366-bb698bfdade8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9a55361-5539-443c-ab81-ef983bff9154",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aecca7a7-8fa5-4be5-95c2-b1d1f13666e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d33671a0-21b2-498f-8042-487eed3d1d87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ffdaa73-0aec-4eb8-9fad-e36dac5339e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7543a384-a306-4dde-9332-7c52caef495f"
                    }
                  }
                ]
              },
              {
                "id": "9da717af-4a3c-4ddd-9822-4063f0463233",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43e0cea3-43b6-4e07-9bf8-9aec9bca2ace",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d456ddd4-61cd-4540-bad3-a258629bcfee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c44df33e-20ca-415c-bf57-3eff25c9572d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192f2710-0f6f-49fd-9bac-d15d9f7ed5e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f980afa2-cf46-486e-914f-2f4fbe5eda61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "49a03695-043b-45fe-9cd5-5dd56b5fa1dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28e5a4b8-78da-4c8a-a1b6-458bdb86e8f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a394d944-c839-4757-bb96-a4da7a91db8c"
            }
          }
        ]
      },
      {
        "id": "65b9e389-668c-413c-8788-4ea38c63067f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3cef2ede-a1cc-424b-bbe4-9bf1bfa83a5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24665f19-3156-444a-9957-548b5630ac75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "082e14b6-c000-4e31-baa0-5ce0399d0b40",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1e9e88-8b77-4f61-93ee-d4b538634e56",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d032a36-3419-44e8-ab20-bb61423133dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc227be-d908-4561-b149-7defc8d913b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdd3a74c-6c4e-4a5d-9dee-505e7c141427"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4547a0bd-56be-40ae-9b16-58fb21e5d73c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e73863-e88b-46e3-8606-33960bf80743"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0be3e8-ae05-49de-a25e-04ab15557084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcc74ec4-202a-481b-8aa3-0391d8e826a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15a6f6bb-e4dc-41bb-8521-66da6bec84d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9735014e-698c-48cc-9299-f488a0d3c98b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32de36a3-8b99-4125-9b67-299ba15c92a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33502e34-07d1-4d20-9b59-deb81ab164c7"
            }
          }
        ]
      },
      {
        "id": "d8cae20d-1445-431f-88c5-fd1dadd4fa86",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "69f4b6af-facd-4bbd-85a8-670cab1cc8bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bb248cc-58af-43b6-82f2-fb7234514c37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9949ad4d-339f-459e-a8cd-83b0f5126192",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8273f6a-532d-46b5-b4c3-afa7ca5adc05",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3705a88a-8e31-450f-8439-28030678bb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff9f15d-15fe-4643-9302-8a0a0fad1b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "315c5b1b-3604-4d5b-bc0c-23b3c9522305"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee0d1ac6-3d93-47ec-b080-f610506317c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22443682-47f7-405f-823f-f523a5d115cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db81ebb5-5256-42dc-b804-3979d35c8636",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbb1ff97-a04f-44bb-ae01-14e0b7b9114a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d894dbbe-47dc-436e-8aec-0cf19b1302f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a1dc01e-cf27-4c6c-b80a-7f63f9f33ca8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "841e1524-84bb-4954-bf06-4bd5a33973ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "544ca2e9-d9a2-4d66-8e5c-fd1335681c27"
            }
          }
        ]
      },
      {
        "id": "6ff9fccc-64e6-4e41-88c1-9d828c851340",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "acbdac0f-5f79-4b78-b7b5-5e7d730559ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a71f9ef1-863f-44a4-a4b2-8d3330b67d08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c4bd04b-5152-4303-83dd-1b5066a2c6cb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6852e157-1097-4963-9176-597c9a537599",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7f8ae9e-cf1f-4ed7-a041-8c8dbfceaa6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10e4313-72c4-40e7-a386-3d40eef9342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b296a85f-4a07-4d10-ad4a-87122505b8be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a99694f-5331-4fa6-9b91-5cb734eadf5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3da83bb-dcd8-4573-8eb3-e9af34e401c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7361f569-5df8-4036-a7fc-d0bc4d1cb5be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38a34dab-87e0-4e09-93b1-2b896fb8ccf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cabe69a-57bd-4ea5-ad13-b4601085cd5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56163e91-d726-4e06-a32a-c311259ed282"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e445a1b9-260c-4d8e-aeb0-69c3bfb3b623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8670296a-8831-41cf-b0b4-db693a2cbc59"
            }
          }
        ]
      },
      {
        "id": "a570b9ae-d4cf-49c3-af9a-ab8be6762e8d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c4d8fb0-c88d-42f9-a8d4-ae9e66a513f8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58b1fec4-88e8-43dc-a804-f2802eb1e58b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b10cf7d8-1839-4152-a5cd-81b490c9b02b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee67eb47-25d7-4f64-a247-b5f8b98fa9e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "903054d2-dbb7-4c9c-9f55-420a17867c6f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 431.02380952380923,
      "responseMin": 10,
      "responseMax": 12538,
      "responseSd": 1872.7184254501294,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724805695666,
      "completed": 1724805813110
    },
    "executions": [
      {
        "id": "38bed385-20ff-4567-81d1-ee945f0ad75d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cffb75db-ec5b-4b47-bd41-c30dc1808a9b",
          "httpRequestId": "7ac478f6-f0be-4dab-89a2-c5a5ddc35905"
        },
        "item": {
          "id": "38bed385-20ff-4567-81d1-ee945f0ad75d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0e86ef17-5ed2-4427-8be9-026781a0e4b8",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "6671cc44-6acf-4ee3-a636-dbb336c17e3f",
        "cursor": {
          "ref": "e7ca72f8-da33-4570-b68a-5f55fcfc29f5",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ccd388ca-5e9c-4724-ad77-43ead71c882a"
        },
        "item": {
          "id": "6671cc44-6acf-4ee3-a636-dbb336c17e3f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "213c0398-6153-4da6-afe6-5fe94eab02ba",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "bd72cc46-935f-4f12-8e17-612987d598ac",
        "cursor": {
          "ref": "620759a6-4a15-428e-8144-f515efce28f7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "849f917b-929e-4988-8d91-df3b4b19b2c3"
        },
        "item": {
          "id": "bd72cc46-935f-4f12-8e17-612987d598ac",
          "name": "did_json"
        },
        "response": {
          "id": "b50d068b-dc5d-4941-a8ed-57d1cf7bd099",
          "status": "OK",
          "code": 200,
          "responseTime": 424,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5796c67-c2a2-4e20-9e9a-e8e6f7abf414",
        "cursor": {
          "ref": "009067bc-b98b-4df6-b568-e8c2eb1c8346",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c12f801b-4c0a-464c-b840-20b6ba764c42"
        },
        "item": {
          "id": "a5796c67-c2a2-4e20-9e9a-e8e6f7abf414",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b68ad3b-dae1-4038-bc9f-0826d27c4bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2124,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5796c67-c2a2-4e20-9e9a-e8e6f7abf414",
        "cursor": {
          "ref": "009067bc-b98b-4df6-b568-e8c2eb1c8346",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c12f801b-4c0a-464c-b840-20b6ba764c42"
        },
        "item": {
          "id": "a5796c67-c2a2-4e20-9e9a-e8e6f7abf414",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b68ad3b-dae1-4038-bc9f-0826d27c4bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2124,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fa7200-2b4e-41c2-b1ae-05d9b4896f85",
        "cursor": {
          "ref": "93f082ec-bce1-4c25-9a40-bcd53e111d76",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "43c790ae-7bd5-4adf-bd49-7f510e4c45af"
        },
        "item": {
          "id": "77fa7200-2b4e-41c2-b1ae-05d9b4896f85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7edb916e-3650-4e6e-914c-4e6218446b14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2462,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1cf5e7-d4c5-4fc7-9a43-9c06266dfe9f",
        "cursor": {
          "ref": "eb94aae1-3761-46cf-a850-c005cdc52e01",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "231b0935-225f-475e-8d13-5b548615cfef"
        },
        "item": {
          "id": "aa1cf5e7-d4c5-4fc7-9a43-9c06266dfe9f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "859fce02-e7f3-43e3-9ec9-cd4758c5f977",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2172,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eeffc0-bd0c-41b8-879b-710d6e9f7986",
        "cursor": {
          "ref": "baabac57-0fb6-42e8-b02e-e5c970652809",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "53ae4aab-3eb5-4360-9feb-7d24ee84c060"
        },
        "item": {
          "id": "77eeffc0-bd0c-41b8-879b-710d6e9f7986",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eb7a5d56-4b8a-4f28-9b33-fbb13af514c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 328,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae66714-7709-4cdd-b3ca-af62a68e12d3",
        "cursor": {
          "ref": "6b2926d5-52b9-46bd-b75c-85682b5918d6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4fc09252-d485-44f3-b4af-45bf0a9a2464"
        },
        "item": {
          "id": "1ae66714-7709-4cdd-b3ca-af62a68e12d3",
          "name": "identifiers"
        },
        "response": {
          "id": "7dae2c88-583d-4bce-a953-2d9ab96e16ff",
          "status": "OK",
          "code": 200,
          "responseTime": 2327,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5570ab44-ac84-45d3-905b-ff4226e5426d",
        "cursor": {
          "ref": "759f0404-d8c8-426e-bb6c-4f573229987a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "97eada30-67e7-43a6-b6e7-a0d2740bcafe"
        },
        "item": {
          "id": "5570ab44-ac84-45d3-905b-ff4226e5426d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1590e1e1-edb1-4295-a15f-0a2cfb0cfd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef851f7d-05cf-4dd7-8c6a-4d3b50bac9d4",
        "cursor": {
          "ref": "f41a8d46-3ba1-4dfa-bfbe-a462c9de9f46",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "021f9be6-64f8-40fa-8b38-97d7f9f10864"
        },
        "item": {
          "id": "ef851f7d-05cf-4dd7-8c6a-4d3b50bac9d4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "84906353-1a1f-42de-a8fb-7b8db2238707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0e360d-3ad3-4168-93a5-35754996e786",
        "cursor": {
          "ref": "a5ba439b-c38d-459f-ab0d-814310809e2b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "20bb5f27-cea7-4fde-a327-d3fb2c9873bb"
        },
        "item": {
          "id": "db0e360d-3ad3-4168-93a5-35754996e786",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4b98c29b-cfbb-4ed5-ae24-ba480fd7d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f46ab2-cafb-4b78-8d52-a8e40952dc1c",
        "cursor": {
          "ref": "f965e30d-7f77-4b1e-887f-2f0cf47ecd0d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5e5be081-fb3f-43f8-a617-551bb33cbc17"
        },
        "item": {
          "id": "c8f46ab2-cafb-4b78-8d52-a8e40952dc1c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e1b124a2-f593-4cfe-8ae3-c5c333c63105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692bece8-c70d-49db-a92d-f323bfe5a12c",
        "cursor": {
          "ref": "33548ec0-1445-4ce7-942f-72a2790f5572",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "230b30bf-7d9b-45a2-9e49-9fe2dd38b424"
        },
        "item": {
          "id": "692bece8-c70d-49db-a92d-f323bfe5a12c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e4e3aeba-2181-4bb3-8601-ed8d49f157eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617680c0-4e7b-44ac-8771-e1112e44a9be",
        "cursor": {
          "ref": "5532de4d-543c-4171-9a90-93d92b122a94",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "15fc72d9-5af1-4cb3-9b58-db24eb022261"
        },
        "item": {
          "id": "617680c0-4e7b-44ac-8771-e1112e44a9be",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e0038a5c-34c5-4cbd-b3a7-d660b4cfb124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c31016a-2613-4caa-910a-2ce3f78189f3",
        "cursor": {
          "ref": "4d3391d9-edde-4e92-be36-cdcfd7aa30a7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d6b2823f-324f-47c2-a49c-611c32994c50"
        },
        "item": {
          "id": "7c31016a-2613-4caa-910a-2ce3f78189f3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0c9ff94b-6f16-488f-87ce-b54fcbc487ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ce7741-b721-4050-88d0-f429f31f576a",
        "cursor": {
          "ref": "19d3d1a9-cfdc-45c2-af30-caa77f7b070b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d99f0e0e-f33b-45d1-b2d4-b7e185e886ff"
        },
        "item": {
          "id": "36ce7741-b721-4050-88d0-f429f31f576a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "74353f02-3fe2-4c34-b4f0-d30badae0327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8905493-c264-46e5-8b66-c6dfb69d5626",
        "cursor": {
          "ref": "ef227787-604d-4fdb-b3b0-04db89e0b13b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d73a2aa0-70ba-4c12-b971-8635fe28db93"
        },
        "item": {
          "id": "e8905493-c264-46e5-8b66-c6dfb69d5626",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d26084a-4a15-4cef-8ec6-774a4efa0205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4574641-3dab-4618-8b15-f40ef38fe6d5",
        "cursor": {
          "ref": "dd31c4f6-6ede-4f9a-9097-49c70c046df0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "63cbaaf0-b8d9-4394-9a8a-69d087149454"
        },
        "item": {
          "id": "d4574641-3dab-4618-8b15-f40ef38fe6d5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "95797d09-bded-4ea6-b583-7ac34c88c87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76685a29-0895-493d-9979-3bef7e1170f7",
        "cursor": {
          "ref": "5c35b409-4c8d-4e83-ba87-b9b12db0aaae",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "91e02e78-19e0-43bd-a457-2ad0d8aefd9a"
        },
        "item": {
          "id": "76685a29-0895-493d-9979-3bef7e1170f7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "13204467-9d97-479b-91ec-511a79719b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3806f142-0da7-4a3b-9075-be705c53c148",
        "cursor": {
          "ref": "d9d5fb05-00fa-44da-9fea-f9d42d7ddcb0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "60ec7a99-5bc7-46c5-8db6-dc06607dc6df"
        },
        "item": {
          "id": "3806f142-0da7-4a3b-9075-be705c53c148",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7416cafc-45ae-4fe7-8f77-78671d4e0bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adafbe52-84ef-4850-bdf9-3ea16d0648be",
        "cursor": {
          "ref": "d87d391e-9bc2-4113-87c6-c7c5f4640ac0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ddeab0fa-a940-48cd-a8ba-f08a7fabec0f"
        },
        "item": {
          "id": "adafbe52-84ef-4850-bdf9-3ea16d0648be",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ff3e9ab5-f269-4cdb-a7ac-12f6cbb48b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02639b5e-7e9c-4abe-9631-11a4de7622d5",
        "cursor": {
          "ref": "5a129268-50e0-412e-846c-20ff31436eb0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ff8c5ddb-7801-4497-af55-202942c18c45"
        },
        "item": {
          "id": "02639b5e-7e9c-4abe-9631-11a4de7622d5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "180173db-9f37-4472-b34a-711ca065c85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1157eb01-3583-410e-82a5-021aeb7edf66",
        "cursor": {
          "ref": "f933d177-b909-4afc-93d6-229556044420",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3d00a321-56ec-4097-bb69-22f5bfbcd29f"
        },
        "item": {
          "id": "1157eb01-3583-410e-82a5-021aeb7edf66",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "24ce6573-bdbe-4807-bbcf-f62096e61689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d2a103-c650-431f-9079-e6faa54c4bf9",
        "cursor": {
          "ref": "d61ac060-510a-4cdd-acf6-87a66d4cb853",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "67c35991-cb4c-4fe8-8907-dd6932165627"
        },
        "item": {
          "id": "41d2a103-c650-431f-9079-e6faa54c4bf9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9b3ba4ab-0ed3-4e3a-aac0-a91d7c8b2dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85474d5-d0b2-48b0-b834-218c01067fbf",
        "cursor": {
          "ref": "9ee8cfa0-c85d-4947-8717-835bb2c71b81",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e9c8ef7c-0c05-4b22-9cca-19628e4ffbe4"
        },
        "item": {
          "id": "d85474d5-d0b2-48b0-b834-218c01067fbf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "66f930d1-632c-4573-94a8-25ee49bc8f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167c586a-a187-4d52-99ed-9678f8c60612",
        "cursor": {
          "ref": "d9c0ffe6-fdd4-4bbb-b2a0-76d941098ca3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "00b2ebd3-feca-4581-8fcb-ab17e1766759"
        },
        "item": {
          "id": "167c586a-a187-4d52-99ed-9678f8c60612",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "83887438-8793-4504-a06a-a13ad16b9cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa042fa-8eaa-4598-a0da-8207f7dab7b1",
        "cursor": {
          "ref": "087e22e5-4122-4d25-be69-140af1c16a35",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7e7f9143-8c2d-4402-9193-6633b39ee6e4"
        },
        "item": {
          "id": "8aa042fa-8eaa-4598-a0da-8207f7dab7b1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "04f0d261-55bf-42ab-8302-c167d106829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446690af-b3f5-4dd0-867f-3466121c3cdd",
        "cursor": {
          "ref": "e0c941ca-58d7-42fc-8621-0032c370706c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0df8b1e6-7248-4ffe-820a-750e3ef15bd1"
        },
        "item": {
          "id": "446690af-b3f5-4dd0-867f-3466121c3cdd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d47d3b7f-8a2d-4267-8116-163a9de3f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1b375c-bd97-4dbd-81b6-450b3af250b8",
        "cursor": {
          "ref": "10a6c2aa-5292-4ccd-ac56-4ba8ec0b5ae5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "efed38cf-d902-4fe8-bd25-3b8253c37b59"
        },
        "item": {
          "id": "ad1b375c-bd97-4dbd-81b6-450b3af250b8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "45c0644a-c9cf-41ae-af55-0fd772990341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73de76f8-7092-4aa1-a2b6-8ebe4d3b3340",
        "cursor": {
          "ref": "38561868-e585-4b5c-beb8-033e556a4536",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "26f6e3f0-bd8e-4575-9861-828c07c4eaaf"
        },
        "item": {
          "id": "73de76f8-7092-4aa1-a2b6-8ebe4d3b3340",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "79ebbf27-7f70-45d0-b722-8ae87a54e25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed0ad96-9039-42eb-9b51-b8c25671c6d9",
        "cursor": {
          "ref": "0f663964-a4aa-4810-90d6-118eca41996a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aa22a57b-fee8-4f33-9668-1f452e00fbbb"
        },
        "item": {
          "id": "0ed0ad96-9039-42eb-9b51-b8c25671c6d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e499ba0e-bece-412d-a838-b5ca0c704e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4ee719-dd54-4abf-bff1-b82757fedb77",
        "cursor": {
          "ref": "70e25826-d1be-4a37-a49a-298c7d9fb1e1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "40d536f6-b2b3-426b-90b8-f231eecd55ed"
        },
        "item": {
          "id": "9d4ee719-dd54-4abf-bff1-b82757fedb77",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "16073c7c-1b86-4f39-86a8-b5e6882f2583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508faa94-c2d0-420b-9dc4-4a0fe7c518c2",
        "cursor": {
          "ref": "ae34934c-1666-49e6-af44-dc40c9da6b93",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43e47c4c-cd61-420c-8dec-c8b46be258e5"
        },
        "item": {
          "id": "508faa94-c2d0-420b-9dc4-4a0fe7c518c2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6233e2fa-9d4d-4536-80c2-95223eb209d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dad02b-1949-4ea3-8b3f-f9651111e44d",
        "cursor": {
          "ref": "1ae8900f-1b74-483e-bc79-530b610c12cd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ed9c7868-73c0-405c-8322-1923db143fdb"
        },
        "item": {
          "id": "f7dad02b-1949-4ea3-8b3f-f9651111e44d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7888ac9b-4796-4c86-b4cc-e6dde55c1bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf2c1e5-fe80-411f-aeae-c205b2673dc6",
        "cursor": {
          "ref": "b4d8f237-b770-43d7-991f-bcea51c59349",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "45428e41-e8df-4ecc-90d9-f020645f9730"
        },
        "item": {
          "id": "0bf2c1e5-fe80-411f-aeae-c205b2673dc6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "55a02c50-c589-476a-82bf-04b9f0490910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323d921d-df35-4df9-b079-379d970a9f1b",
        "cursor": {
          "ref": "921f7e4b-6477-494d-b416-9b46ca4a8169",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "de3b2c59-bbc1-462e-9d97-7ad4b728371c"
        },
        "item": {
          "id": "323d921d-df35-4df9-b079-379d970a9f1b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "871dda29-089a-4aed-b9f0-188f5fc203a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06fb86d-ccc0-465e-9056-55ad7b2f6278",
        "cursor": {
          "ref": "b86b2780-d0b5-46bc-ac30-39769e8978f6",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c0ffe405-9500-4958-b211-90898a84fbe1"
        },
        "item": {
          "id": "b06fb86d-ccc0-465e-9056-55ad7b2f6278",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "197542a6-1028-4cba-96f7-3e2d1e4b06fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42687ab-1ab0-4f3c-ad72-b720ef4609ec",
        "cursor": {
          "ref": "38e3396b-3a6b-483d-b3e1-bbe22ba22d7b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3bf74139-66d0-4b5e-8d35-5a2ceb5c3378"
        },
        "item": {
          "id": "a42687ab-1ab0-4f3c-ad72-b720ef4609ec",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8a715c0d-bf3f-4ba2-babd-eec70c4efcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621cd560-4152-4440-a986-9f9ce8d80106",
        "cursor": {
          "ref": "3a2603c6-548b-4fa1-923d-2732cbd19224",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a4db2721-269c-41cc-b58d-36f6f5cfbb54"
        },
        "item": {
          "id": "621cd560-4152-4440-a986-9f9ce8d80106",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f99e5666-9342-4a41-a01c-b5bd6f1fa064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bce122-c619-4903-a333-6ce5e5d4b646",
        "cursor": {
          "ref": "2624ea65-ea50-42d5-b95f-96247b1ed13b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0b99f09e-2069-4c10-803b-27bc185ca760"
        },
        "item": {
          "id": "11bce122-c619-4903-a333-6ce5e5d4b646",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bf5682c8-481b-4698-8a37-99f4c5a65b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0a4cb3-da2f-4a27-9f2f-40e67bdd462d",
        "cursor": {
          "ref": "52da5940-b1a8-4718-a574-938bef512909",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0056b3bd-5bfa-4ce9-90b3-08e524ea2a41"
        },
        "item": {
          "id": "4b0a4cb3-da2f-4a27-9f2f-40e67bdd462d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "03c6de4a-2333-4212-a30d-825a48303a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce907b4-3b1c-4828-8a3e-63e5ac169541",
        "cursor": {
          "ref": "5c504aa3-8556-4c1f-9557-236d801405ae",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "941da453-97d9-4f2b-bbf4-d576317084d4"
        },
        "item": {
          "id": "3ce907b4-3b1c-4828-8a3e-63e5ac169541",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "977f24e2-5ec1-4755-b77a-85616985d212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cd9ffa-71e0-48a8-ab63-3467cf9b3005",
        "cursor": {
          "ref": "a9c0238e-7413-488b-a541-950a08cac79b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "63c5ba06-7b47-4f1d-9014-f5c2f8b52d0a"
        },
        "item": {
          "id": "f5cd9ffa-71e0-48a8-ab63-3467cf9b3005",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b6f8a008-e355-4f44-af00-ff81315e43f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7214e811-c930-460d-b6ce-1aeb78515c25",
        "cursor": {
          "ref": "2bdeccfa-dd63-4ed1-b063-908c7730ee8a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "13fbe2a4-e8e4-4adc-8672-65c79e6b995d"
        },
        "item": {
          "id": "7214e811-c930-460d-b6ce-1aeb78515c25",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6b870558-4e73-4354-ae7a-b0f33620298c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45d2ec3-66c6-4c9d-a7bf-ba59340e0d5d",
        "cursor": {
          "ref": "de44eec9-ac86-4320-bf12-3421164c6faa",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0e17e4f7-e357-49a4-b557-ce84cd1434ab"
        },
        "item": {
          "id": "b45d2ec3-66c6-4c9d-a7bf-ba59340e0d5d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db20cd1d-434f-44c6-a193-cf5dc39c9a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1657d7cc-debd-4282-aebf-e1705d91d9cb",
        "cursor": {
          "ref": "898bf708-9a51-4135-9656-f345313e7797",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5500c8d9-2e31-4510-a0b0-caba4fabb0f1"
        },
        "item": {
          "id": "1657d7cc-debd-4282-aebf-e1705d91d9cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "98d5c9a6-87c2-4bfd-9d5e-459f954877be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc023ce-cc58-437d-b4e4-409701ffd106",
        "cursor": {
          "ref": "cd8bb0e9-2cc9-44fc-b732-971e60784708",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ef0b1817-a24a-4214-b7a8-3470853476ed"
        },
        "item": {
          "id": "4fc023ce-cc58-437d-b4e4-409701ffd106",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ffc15033-427a-49eb-b8df-f81372581c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a33657-6e15-4cbd-880c-e69758eb7ecf",
        "cursor": {
          "ref": "f6bb5330-efce-480d-b383-c206977e9e2a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bbf50f27-705d-467a-be22-00fa73a6b215"
        },
        "item": {
          "id": "c6a33657-6e15-4cbd-880c-e69758eb7ecf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ad4f90df-485a-4cf7-9941-2153d3e8b164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56965ecd-3b7e-4de8-9065-101b15272a38",
        "cursor": {
          "ref": "e6832c1a-f104-44e7-927f-6ea1c5adb1cc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a1131b74-a5aa-4614-af47-6548681a7db8"
        },
        "item": {
          "id": "56965ecd-3b7e-4de8-9065-101b15272a38",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "53f4d2fc-fa6f-4992-8c5a-a3e9dd7ca3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2faf490-6a2b-4ecd-8ff9-e52611d95bf5",
        "cursor": {
          "ref": "926c2c8e-b46d-404b-9b64-9285e98c15d0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "da66e8fb-01a6-468f-83a4-3585b9ad89f8"
        },
        "item": {
          "id": "e2faf490-6a2b-4ecd-8ff9-e52611d95bf5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "114fda37-ab28-4e8f-a3a5-2a330460fef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b7e3ea-c875-4f78-a3b8-7ceb3171c4e0",
        "cursor": {
          "ref": "6dfebf5c-8c29-4aa5-ba4e-24114614a0e9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d46c927b-a5e8-45b6-bf7e-87ff7407f4d8"
        },
        "item": {
          "id": "b0b7e3ea-c875-4f78-a3b8-7ceb3171c4e0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1add15c4-f0bc-46be-ba10-1d6d0a2b35d1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03bbe13-1d9b-4cd5-8016-1d511ecef072",
        "cursor": {
          "ref": "c7a54a03-28a6-4006-8c88-946059b55fd9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "00b3ede7-b1bf-467a-a86d-6f311ecdf9a2"
        },
        "item": {
          "id": "e03bbe13-1d9b-4cd5-8016-1d511ecef072",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ee1d3a56-8505-474a-a660-7bff62d04726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbe9639-231c-455d-a171-6ad1778ec141",
        "cursor": {
          "ref": "c7424e7c-d689-4790-8f08-6d34c25fc5fd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "722eff87-8aa2-447a-bcab-6c09fa3d8629"
        },
        "item": {
          "id": "5bbe9639-231c-455d-a171-6ad1778ec141",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6b536ef9-77fd-4a23-81f5-d5b72ca0e13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46defbf4-dbd4-4e52-ac1d-fb04d2465031",
        "cursor": {
          "ref": "3f7f9a79-0a9a-4199-8976-2efd562d99ba",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "427377ff-c19d-4009-8012-cc524b89647d"
        },
        "item": {
          "id": "46defbf4-dbd4-4e52-ac1d-fb04d2465031",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "30b61f60-dcd9-4f58-ad57-19b40c0b4f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c61ebc2-c51a-415e-9b34-f93c1c41adb2",
        "cursor": {
          "ref": "0c8b2664-be43-4092-a24c-40ef2ddbc957",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8d970304-191b-4798-8b3e-9646bb2b9d28"
        },
        "item": {
          "id": "5c61ebc2-c51a-415e-9b34-f93c1c41adb2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "147a416e-b5c6-46f3-a52e-99d83d573301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deff8003-0163-4f9c-8e59-43b87278b269",
        "cursor": {
          "ref": "1ba871c1-8aa0-4455-b336-c8fe166c7cf8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "017f2250-869e-446d-901d-b7573cdb3314"
        },
        "item": {
          "id": "deff8003-0163-4f9c-8e59-43b87278b269",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e0ee2db5-3eb6-4ae8-9585-23b150ca51f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbf1e2e-2532-4928-a2ca-b66df5e32dcb",
        "cursor": {
          "ref": "da61c6d3-6758-461f-b8b0-a5ee5a8b6ff9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "09dafae1-6bec-4534-9926-5611e6781b74"
        },
        "item": {
          "id": "efbf1e2e-2532-4928-a2ca-b66df5e32dcb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a6572834-83e9-4b45-899c-9aac96173cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1032e3-2c05-4bea-b845-8e0bf52a8a03",
        "cursor": {
          "ref": "fcb868fc-d09c-497c-8a07-98e5925eb6f9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "39a3d274-0c9b-4c09-95a9-5cca449ada6e"
        },
        "item": {
          "id": "6c1032e3-2c05-4bea-b845-8e0bf52a8a03",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e20cb98-4774-4012-af0f-724fe2e0d7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aa834f-1905-4af7-b22f-4ee72424efb6",
        "cursor": {
          "ref": "0bf5569e-2662-4051-ba48-1c028e3545b3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f4e215ff-9176-4b0f-adcb-e0348269384d"
        },
        "item": {
          "id": "57aa834f-1905-4af7-b22f-4ee72424efb6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c75a246-6bd1-4afe-ace2-32cc38e66b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841f3caf-061e-42be-9a0c-a78762210255",
        "cursor": {
          "ref": "d8f943a8-ae45-434b-b31e-e296fa668c01",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b17b5c0c-52c8-4733-a74e-cd24b8bd3ad3"
        },
        "item": {
          "id": "841f3caf-061e-42be-9a0c-a78762210255",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fd4387b5-07a5-4966-b9b3-04577d1044dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5503fe1d-afc9-446e-8f76-2e0c11dc5dbb",
        "cursor": {
          "ref": "468fb883-edce-4966-a5b3-957bc7cbd8a1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c687ac8a-9d61-4cea-86bb-ddb220635359"
        },
        "item": {
          "id": "5503fe1d-afc9-446e-8f76-2e0c11dc5dbb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a9119e81-9361-4028-85c7-6622c57f73ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7212cc-0ea2-474b-9f71-260b1838c1b2",
        "cursor": {
          "ref": "978d3bee-8432-4666-8fb1-2e924d6095cf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aba88ce9-9463-4d36-9e05-fa509fe93f15"
        },
        "item": {
          "id": "6b7212cc-0ea2-474b-9f71-260b1838c1b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac442bf7-fceb-4b46-bc25-5911134c497d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee298d8-a608-4112-90ef-33938cf0dff9",
        "cursor": {
          "ref": "aad48276-6480-4284-95d6-84659f74b850",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "89e244cb-de7b-4f86-8bdc-52a0cbccd233"
        },
        "item": {
          "id": "eee298d8-a608-4112-90ef-33938cf0dff9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3196c7b0-5235-47b8-a7b5-0c7e1e4acc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6765003-68c7-43a9-86d1-163f91089ca3",
        "cursor": {
          "ref": "f736c9d6-040b-41ec-8dce-8cf8a0ef1693",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "aa0ff660-b580-42ad-8346-8ad4ca453ea6"
        },
        "item": {
          "id": "b6765003-68c7-43a9-86d1-163f91089ca3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "546c2832-30d5-4e49-8380-71646aa8b625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c012504a-fa9f-4fa5-8e9f-c64cf2a92186",
        "cursor": {
          "ref": "525ce9a4-70bc-479c-9d52-308813767a9d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "767280c8-60dd-452f-923c-9ff74d27d839"
        },
        "item": {
          "id": "c012504a-fa9f-4fa5-8e9f-c64cf2a92186",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9a93c8ec-06bf-4e0d-ac4d-3d1e1e4519e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49f3d1c-129a-4dca-a886-e80c8fea28b1",
        "cursor": {
          "ref": "3e9fb2db-281c-42cf-94cb-d81e685a3652",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "440b4ede-b303-438a-8471-f3ceee85196a"
        },
        "item": {
          "id": "e49f3d1c-129a-4dca-a886-e80c8fea28b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e6ac709a-51b1-4732-bed3-42c7cd196675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af3b8b9-c586-4e78-915b-a5e00cecb4e6",
        "cursor": {
          "ref": "2a4ca054-3921-4d3b-abcd-30dd6596152e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a1ab4796-cdaf-41e4-9b6e-fb2fe15a8c07"
        },
        "item": {
          "id": "7af3b8b9-c586-4e78-915b-a5e00cecb4e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c45de38b-825d-4960-9517-cfb40b446c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af369828-bf07-417f-8fd3-7746b12f03f7",
        "cursor": {
          "ref": "a0ffb117-ed01-47ca-a16c-81b60f5b2e25",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b50d3ca5-a200-4836-bdbb-0e3ac4ddbcc6"
        },
        "item": {
          "id": "af369828-bf07-417f-8fd3-7746b12f03f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e87f26fe-855e-40b0-b368-4cceb02ae8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2f7148-72b5-45b3-ab62-b61240517716",
        "cursor": {
          "ref": "d8d2b8e5-70a3-47fc-8a92-8b157dba6f71",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8970d8ad-a4f9-4fc8-aa8a-7dc8ba924608"
        },
        "item": {
          "id": "8c2f7148-72b5-45b3-ab62-b61240517716",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b73f24ed-7af2-45ff-be31-dc35b6e697da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0db96f-c6ad-4811-b265-0c4988f38f3a",
        "cursor": {
          "ref": "3c612df7-d93c-4549-902d-677cf36153af",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c9eefc51-2bd1-4a75-8728-3f14658fbffb"
        },
        "item": {
          "id": "8c0db96f-c6ad-4811-b265-0c4988f38f3a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "62eab7b3-904e-4928-bc2a-d681f7d0d36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dab33d-99ee-49d4-a6d8-358d46b262a0",
        "cursor": {
          "ref": "3cf1b53a-41e5-49d9-8c33-acc309e54807",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d09cc5d3-0d11-4ccc-9ac9-6f138da9a110"
        },
        "item": {
          "id": "74dab33d-99ee-49d4-a6d8-358d46b262a0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1d894323-7c76-4ace-ac03-f4b2537b3073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe9840-6980-4d43-b03a-fd1184c78f8c",
        "cursor": {
          "ref": "b70a1f19-1551-4b6d-b029-842091319f92",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a198fd9f-722c-4cbc-9c78-082ffe273560"
        },
        "item": {
          "id": "abbe9840-6980-4d43-b03a-fd1184c78f8c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "575bb4e7-7743-4e42-9256-ab362092eb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe50ac72-3f7b-4fbc-844c-30c133815346",
        "cursor": {
          "ref": "1de37f11-9429-4b6d-a536-d763672b22d9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "82341b1a-0d31-499e-bad2-56f957adf37b"
        },
        "item": {
          "id": "fe50ac72-3f7b-4fbc-844c-30c133815346",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d72ff6bb-aded-49b6-be5c-14adecc537d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8af098-b5e2-483d-b4ec-ffe6c8dfb075",
        "cursor": {
          "ref": "cfcf5fb6-ee27-43dc-b1a6-6c9833682fd3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1def5bcd-c5ca-40ea-a877-b8598d0a0187"
        },
        "item": {
          "id": "4c8af098-b5e2-483d-b4ec-ffe6c8dfb075",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "be219577-7ff4-475d-8731-c7a3e9d2847b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7debe56-21a4-4680-bf08-a60465019939",
        "cursor": {
          "ref": "89aef0e4-9b94-47be-a074-f61e3f7cb749",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4eb01594-9cf3-48df-adbe-7fda467bf7e3"
        },
        "item": {
          "id": "c7debe56-21a4-4680-bf08-a60465019939",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8c0a40b0-324d-4553-912a-5a3097d3efb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477827e5-0662-4ea8-b2e8-574e0cc99622",
        "cursor": {
          "ref": "36329072-508b-4490-9d42-630a90b4076a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "06c1d6f4-1aa7-4adc-9322-8195aa57b6ea"
        },
        "item": {
          "id": "477827e5-0662-4ea8-b2e8-574e0cc99622",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "18b04eca-8547-4200-8f18-f57ba58b7d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7dd295-768d-4b85-a789-1d363cd42548",
        "cursor": {
          "ref": "2b827809-44c3-433e-96d3-4ae2e7d4b1ae",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "481a040d-f9cb-4ae0-9999-805349afd868"
        },
        "item": {
          "id": "5f7dd295-768d-4b85-a789-1d363cd42548",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "36c9f389-c605-47f8-a416-26c623ea31a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ed1aba-08a6-4b34-b347-403de71a8df4",
        "cursor": {
          "ref": "bff5bf2c-f242-424d-9612-ec3f9efec648",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8dcb455c-8bfa-49e3-bbcf-67fc3b461b81"
        },
        "item": {
          "id": "98ed1aba-08a6-4b34-b347-403de71a8df4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "52424af1-cad3-454e-a0b4-38b18334f0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5ae39d-0ec2-4afa-9264-c003c8223092",
        "cursor": {
          "ref": "4d5d1c32-6083-47ce-a8e9-d63d441c022b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e0fb516-dc94-4fd9-b40a-e505c4077350"
        },
        "item": {
          "id": "8c5ae39d-0ec2-4afa-9264-c003c8223092",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3e610582-b99d-4842-8345-38d071ccf2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11596300-ed11-4ad0-a6f9-52b8241e07d6",
        "cursor": {
          "ref": "ecc9d36e-e5a4-45b2-835a-5dcae5ff165b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b67ddd3f-bbdf-42f6-9627-fa500c93c064"
        },
        "item": {
          "id": "11596300-ed11-4ad0-a6f9-52b8241e07d6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5e04ece3-40c3-4c97-8c88-8279cfb2af69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b6f52d-916e-48a2-9cfa-91eac2b4a5b3",
        "cursor": {
          "ref": "18acf5ea-b2bf-4d13-9ad9-4c99f0ab0013",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "02e18011-d5dd-435b-9190-0a2f75525dc0"
        },
        "item": {
          "id": "b4b6f52d-916e-48a2-9cfa-91eac2b4a5b3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1c9d71c8-f23c-4d77-8579-b93e1026c57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea64d0db-333c-427a-bd8f-eecd08a691c7",
        "cursor": {
          "ref": "32474c79-014a-467c-9916-7cfc15024daf",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8b7c60b5-aea3-4dc1-9213-944262774fa5"
        },
        "item": {
          "id": "ea64d0db-333c-427a-bd8f-eecd08a691c7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "98ff848c-8603-4e9c-b2c9-f26d9c576c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b1b383-5a3e-4b38-8acd-ce275f2eb5bd",
        "cursor": {
          "ref": "44062501-bda5-4ae0-98ba-20b944293348",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b6d0054e-51c7-4e0e-a50d-6ece322ec002"
        },
        "item": {
          "id": "b3b1b383-5a3e-4b38-8acd-ce275f2eb5bd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8bba7f2f-4520-4da2-bad6-1c135dad4e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d838ef-7dc1-4b8f-a78b-4d9895586a90",
        "cursor": {
          "ref": "e666b223-64ce-4bfe-9238-b6e77511e593",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a9df5041-387c-4586-8ec1-fa352e3b4d0c"
        },
        "item": {
          "id": "55d838ef-7dc1-4b8f-a78b-4d9895586a90",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "67ce6604-cc9e-420a-a218-a1378eea689a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f74371-9ac8-45d7-b3bc-3674c72a61f1",
        "cursor": {
          "ref": "99591e2f-5015-42f2-b36b-59349a4144a1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dabe85b7-4845-41d3-8cc2-483a70dad9c0"
        },
        "item": {
          "id": "57f74371-9ac8-45d7-b3bc-3674c72a61f1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3e61bbf-dbd8-44c9-a9c3-240ef0f2406f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5afa126-d761-4ed2-8777-4cc28163f452",
        "cursor": {
          "ref": "0d18e156-d3cb-4913-8007-71f958af7134",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cdbe5834-d668-4ff1-a1df-6cb8c2cea538"
        },
        "item": {
          "id": "d5afa126-d761-4ed2-8777-4cc28163f452",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "09694d01-2c39-487b-9626-561a531bbe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce522d0-f883-40e6-a089-a52781d62b69",
        "cursor": {
          "ref": "f6d5a2bd-0a6b-4e09-ad94-caf4c702ef29",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d5323297-e057-4a50-be39-b12fb89f8306"
        },
        "item": {
          "id": "fce522d0-f883-40e6-a089-a52781d62b69",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6c731286-e16b-4a91-b5ad-fa1ae4f8e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27591c1c-e32b-429c-be72-aed3d76bfac1",
        "cursor": {
          "ref": "0d70f4c6-fff4-4428-94bf-b87ed303d9b1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "733a6872-64ab-4475-871a-9a59a8431c48"
        },
        "item": {
          "id": "27591c1c-e32b-429c-be72-aed3d76bfac1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e8185a48-766c-4d59-9c3f-8324873dc89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77f2270-1456-4ec0-8c11-9fe2aa066976",
        "cursor": {
          "ref": "bc6f4e18-23f7-4b2c-a03f-0e821a02ae1b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8dae3001-0316-4b35-9cb4-93ec5a264cac"
        },
        "item": {
          "id": "a77f2270-1456-4ec0-8c11-9fe2aa066976",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c6e42b9b-d234-4b01-abac-f488bdae4744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a6f8ba-ba91-44fd-b793-1dbe877fcde7",
        "cursor": {
          "ref": "43f209ab-7256-4482-aac9-294210c2ead6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b85c979d-bdd7-48d3-9bf2-d5751a1c845c"
        },
        "item": {
          "id": "30a6f8ba-ba91-44fd-b793-1dbe877fcde7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "54c8127a-b4a5-484f-8eba-1a85da4e649c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfa282c-5e9a-4bb9-a9ab-24485cb3511d",
        "cursor": {
          "ref": "601ee944-a37d-4b04-9135-9d3794a8b8fa",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "149749a8-6412-4106-8262-2ff14ecd6181"
        },
        "item": {
          "id": "adfa282c-5e9a-4bb9-a9ab-24485cb3511d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "059f6e29-6faa-40fe-b24e-d4468dfbcf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bc554b-0371-4da0-95ae-7b7b9061571b",
        "cursor": {
          "ref": "8e88161d-32eb-4054-9ed0-73c3b028726c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "09e0c5d7-c5e5-4bb1-bfa5-c7df1cac7376"
        },
        "item": {
          "id": "93bc554b-0371-4da0-95ae-7b7b9061571b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ef19d045-8a7d-45db-bf31-8544b1f1aac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae3f534-2344-464a-87b6-460640fc6a8a",
        "cursor": {
          "ref": "4623008b-c8c6-4a14-a86a-22cbbfb0b8ca",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e1fc01f6-38c9-4d22-b4ca-58217b3772ec"
        },
        "item": {
          "id": "0ae3f534-2344-464a-87b6-460640fc6a8a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "24c545da-dd68-465b-b922-eb0ecd50f773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b584f617-8ae9-4529-8bfe-4ee82e553bf9",
        "cursor": {
          "ref": "6f2d6116-8b87-426e-8e3c-d7bb5bb69064",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "25b9cd37-5dd3-474c-8fc1-406170b37e06"
        },
        "item": {
          "id": "b584f617-8ae9-4529-8bfe-4ee82e553bf9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eee7af31-79f7-4e57-84b9-46545021a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88dfc23-2b45-4181-9f16-854a50e638f7",
        "cursor": {
          "ref": "5099562c-9edf-49a3-a6e6-4be40b2316d0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "93a19f12-3cb3-4de4-9011-eb120f9ec88e"
        },
        "item": {
          "id": "a88dfc23-2b45-4181-9f16-854a50e638f7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "736a4d10-5401-4c37-a950-b2df4c41c71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a439e9a0-c388-4492-9a12-3554ab46fb26",
        "cursor": {
          "ref": "9add70ab-df40-4f59-aa0f-cb5993585a5f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a5fe048a-b281-4295-8628-3b653860dfb8"
        },
        "item": {
          "id": "a439e9a0-c388-4492-9a12-3554ab46fb26",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b34953e0-b4ca-4943-9202-bce43f30cde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad5b855-f04f-4ef8-8fbc-a34a3d70639a",
        "cursor": {
          "ref": "900c5517-ba32-4d50-a517-2de0e9d2bc16",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7ebca512-bd3a-4717-baeb-e9301e7691a2"
        },
        "item": {
          "id": "dad5b855-f04f-4ef8-8fbc-a34a3d70639a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "331eedf8-76f9-4226-9b84-74dc1eb0af12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af11d269-41c1-4d63-b0a7-0812ab6e4b3a",
        "cursor": {
          "ref": "a42f85f0-c3cc-41ec-a619-edff50d35ed0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8b4cba2c-6260-4754-a497-9d3f5864c125"
        },
        "item": {
          "id": "af11d269-41c1-4d63-b0a7-0812ab6e4b3a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "afb0eb21-46db-40cc-9d44-692f0a66c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de66bc7-b09d-428b-adb4-394b6e5d92f6",
        "cursor": {
          "ref": "becddff4-523a-40e1-ae14-2dea5f3dedd0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d6a4d79d-c006-42e4-b772-bc33652d266d"
        },
        "item": {
          "id": "5de66bc7-b09d-428b-adb4-394b6e5d92f6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3344c22e-7e7e-4ba1-bfcc-372d39c44458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cb6dba-de6b-4d93-94bd-29d267fdc548",
        "cursor": {
          "ref": "050618f9-010a-4d99-8fd5-a2192a02105f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "63d8713f-7b59-4c94-aee6-c9a838130b5e"
        },
        "item": {
          "id": "c2cb6dba-de6b-4d93-94bd-29d267fdc548",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "86e5b1f6-c8b2-412e-a871-d340c5ec8cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d76e3-2d75-4c5f-b33e-7aeb509e2a21",
        "cursor": {
          "ref": "0d5baf83-e704-4ada-87ee-ac285ec0a4ec",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "65714954-236c-4a0a-a6ca-d1464920a8a7"
        },
        "item": {
          "id": "5e6d76e3-2d75-4c5f-b33e-7aeb509e2a21",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8c2aa57d-6351-488f-8aed-76985137e5c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1827526-3fb4-426e-b82e-30e9296ec516",
        "cursor": {
          "ref": "1b323461-8f98-4ac6-b2a2-023b05ea44d8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "96612ed7-f218-4b1f-83b3-18c34d7015da"
        },
        "item": {
          "id": "d1827526-3fb4-426e-b82e-30e9296ec516",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b5629fff-e633-4d55-beda-7a7bf6d457f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e19a755b-1472-4563-895e-df94484db02f",
        "cursor": {
          "ref": "09b4f3f9-882a-4e88-a3f0-bab3d6599d8f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "60441210-5547-41c0-a0cb-61d4ad2f66a8"
        },
        "item": {
          "id": "e19a755b-1472-4563-895e-df94484db02f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b76808ec-1e5c-4680-9a6e-7392a79789c3",
          "status": "Created",
          "code": 201,
          "responseTime": 12352,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e042d9b4-d638-460c-ac2c-078900a5160b",
        "cursor": {
          "ref": "426f25d3-b991-403a-ae49-755227da4caf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "80817b66-7ac7-4ec7-b1e1-b0c4ff6b5602"
        },
        "item": {
          "id": "e042d9b4-d638-460c-ac2c-078900a5160b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "947ba91f-a77c-471b-a2c7-9059e67aef93",
          "status": "Created",
          "code": 201,
          "responseTime": 12538,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "515956d9-e85e-4f44-bb83-e3110ad2a9a3",
        "cursor": {
          "ref": "f382f8f2-1d6a-4601-80f0-b64e4a225c21",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f24741f9-c8b7-4804-8bdc-344510df717e"
        },
        "item": {
          "id": "515956d9-e85e-4f44-bb83-e3110ad2a9a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "261b6dbf-e81c-41f7-a111-0c1a579fe556",
          "status": "Created",
          "code": 201,
          "responseTime": 12181,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e141856f-b004-4ce3-b4ce-8ff2de066ccd",
        "cursor": {
          "ref": "314f2735-9f50-4cea-98f6-8f68da736628",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1f4f9c9a-55fc-43ca-8a19-79615b3496e7"
        },
        "item": {
          "id": "e141856f-b004-4ce3-b4ce-8ff2de066ccd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3b44d50c-3333-4096-9ce1-d3e5acc26de8",
          "status": "Created",
          "code": 201,
          "responseTime": 11669,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "73df6f09-f6d1-4c20-847c-bfb5999948b3",
        "cursor": {
          "ref": "98eb82d8-bf31-4f5f-9405-d50a7ce5381d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7cc74dc4-fc5b-46e7-af6d-6287ee215f41"
        },
        "item": {
          "id": "73df6f09-f6d1-4c20-847c-bfb5999948b3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7eb65748-078b-431c-bdcb-f5c50b0fc824",
          "status": "Created",
          "code": 201,
          "responseTime": 11902,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-28T00:42:57Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-28T00:42:57Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5a3cae8e-dfa1-4181-abc5-b8b7bf8eefff",
        "cursor": {
          "ref": "1e8b4ef9-b75a-47ab-8c1b-3edf2f7032c8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "66eda52c-fa6e-49c8-bfa1-06d92aae5611"
        },
        "item": {
          "id": "5a3cae8e-dfa1-4181-abc5-b8b7bf8eefff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4c73cd38-45bf-46c6-9b94-cfe6bcabf8b3",
          "status": "Created",
          "code": 201,
          "responseTime": 12190,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6129ee3f-0026-44ee-820a-30db18c83530",
        "cursor": {
          "ref": "ce92b1c6-60c2-413f-aafe-ee1f6c7a0611",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e2358805-3b73-4af9-b2b7-0486299cfaa6"
        },
        "item": {
          "id": "6129ee3f-0026-44ee-820a-30db18c83530",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dd39b5a2-5f06-42ec-b9bf-9ff1b1a2ad69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8338a57d-5bd7-4a9d-bb84-6482db439480",
        "cursor": {
          "ref": "eba926fd-008a-4b08-8f28-ac982e580cf9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "53a8a314-1ba4-43fa-81c8-2032258215e5"
        },
        "item": {
          "id": "8338a57d-5bd7-4a9d-bb84-6482db439480",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3711f898-1c46-4fae-9c9b-e3b8a6bf844b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35344a1b-12d6-4f1a-9dce-fc85394109d6",
        "cursor": {
          "ref": "39c33b0c-1928-4023-b5bf-fccc9ec88802",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7551e667-6753-4b40-9df2-27544288558f"
        },
        "item": {
          "id": "35344a1b-12d6-4f1a-9dce-fc85394109d6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5545c64a-eda3-4ee6-ad17-3726d774188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6320772b-348d-459a-a36c-aa1448648599",
        "cursor": {
          "ref": "2763abe3-60bb-4065-8a1f-450a9e3bd5c1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bb7a81be-f938-40f5-bc24-7504ceafb4e9"
        },
        "item": {
          "id": "6320772b-348d-459a-a36c-aa1448648599",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4aca26a4-7c89-4a41-a1ce-0b9d8d31c4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2416d18-c59c-4cbb-b810-3f416f9b736e",
        "cursor": {
          "ref": "a2a500e8-2b41-44b2-aa73-c8a37470d40d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ae47e1f-acf6-40cf-a9a0-97cbf0f454ba"
        },
        "item": {
          "id": "a2416d18-c59c-4cbb-b810-3f416f9b736e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d39700d2-102d-4248-9e09-2d20d81b3b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a63594d-5fc1-465d-bac8-9e2867973853",
        "cursor": {
          "ref": "7033e10a-92e0-4253-bc3e-4a17b4de185c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ed3ee0e1-c62c-47f1-9275-6ea611125ec2"
        },
        "item": {
          "id": "9a63594d-5fc1-465d-bac8-9e2867973853",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d3662fd-ceeb-40bf-a8b7-f1ce5b1b0c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e284d507-268f-4569-8dfe-053361189a3e",
        "cursor": {
          "ref": "c60c77bf-bf0f-481e-a57d-4e9d96f12544",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bcb08d50-f846-40a9-8717-c14f8409c4e8"
        },
        "item": {
          "id": "e284d507-268f-4569-8dfe-053361189a3e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2064910-126c-409d-8d99-6cda0a00fe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d74a382-55af-481a-be19-929fe17aae99",
        "cursor": {
          "ref": "c16fa17a-f099-40f7-88f6-5f7f03f1a54d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5af0d3b5-248c-41de-b45f-be8fc46ab670"
        },
        "item": {
          "id": "8d74a382-55af-481a-be19-929fe17aae99",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cfc7d83f-08c6-4d22-bcbb-ee5e6447d630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3490384-6624-435a-9e2e-80a9d491bc1d",
        "cursor": {
          "ref": "8c900f41-9378-447c-add0-bbdbba122a0f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d479f18f-303e-4682-b9a8-de2bfc97b08f"
        },
        "item": {
          "id": "e3490384-6624-435a-9e2e-80a9d491bc1d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7780337d-80dd-4599-b412-98e51aef2b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d310e3-618c-4b1c-a57b-cb324dcf4f16",
        "cursor": {
          "ref": "d1db6218-c734-48c8-a4e2-c888df583432",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8e04d27c-b2df-4237-841b-177a85aa02fd"
        },
        "item": {
          "id": "b4d310e3-618c-4b1c-a57b-cb324dcf4f16",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "33c572f3-d161-4006-aad5-f1349d1bfd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08ce7b7-1d18-45ad-b248-aa65e522ebd3",
        "cursor": {
          "ref": "b14423a8-265c-4958-b6b0-bc65158728ff",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3f03a770-3956-4690-bfe9-66ca344f239c"
        },
        "item": {
          "id": "f08ce7b7-1d18-45ad-b248-aa65e522ebd3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "546e0736-b760-441a-891f-8cda98a920d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7057916a-20e7-48ae-82a6-c1a2bfcb077c",
        "cursor": {
          "ref": "831edab7-f7f3-452d-a917-89a12d205af0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48b29bdc-e0dc-4b74-955b-14fb30d226ae"
        },
        "item": {
          "id": "7057916a-20e7-48ae-82a6-c1a2bfcb077c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5bb3c420-cd2b-4916-a8f1-bd6d2b4d6504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4eda2b3-0804-40bf-817b-27638364ee8a",
        "cursor": {
          "ref": "6d8562e5-ef32-4486-82cb-7c283b96216c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "08c8d13b-91e2-4ce1-b47c-e0b3e58e7b07"
        },
        "item": {
          "id": "e4eda2b3-0804-40bf-817b-27638364ee8a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a4a0c5f-ffbc-4602-b99f-f2df50ca93bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0292e240-6f3e-4f2e-bc14-9362795ec428",
        "cursor": {
          "ref": "28f46e58-b31d-479d-8a2c-d1d5cd8505ea",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0bd53a69-2b7d-4315-ab99-688f47d94a32"
        },
        "item": {
          "id": "0292e240-6f3e-4f2e-bc14-9362795ec428",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "412a7b10-0cc2-44b4-a262-55ca5dc65359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ecbf3-affb-4258-b950-c3b24a9b0333",
        "cursor": {
          "ref": "b22cdefd-93bd-46fc-9caa-bb1d8ec3a942",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "83e5dfde-0c68-4702-91c0-29b0a08d1a47"
        },
        "item": {
          "id": "f73ecbf3-affb-4258-b950-c3b24a9b0333",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0facc6e4-c68f-4a77-8bef-73b594ba394c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9458eba-a551-49a8-b16c-377d9f804cfc",
        "cursor": {
          "ref": "660fdab9-d7a2-4d7d-b250-415de8e5d160",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b7924b6a-fc6e-4405-8109-a887b6e09785"
        },
        "item": {
          "id": "e9458eba-a551-49a8-b16c-377d9f804cfc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b77337b3-b4d8-4a97-a0de-32cc39d66fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db244f4c-efc3-4c07-8d05-28f6ea2fbafa",
        "cursor": {
          "ref": "f63b6889-a1a8-4cb2-a132-8ac262936a36",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7950b572-08c0-461f-af8d-5a9b3554b5ef"
        },
        "item": {
          "id": "db244f4c-efc3-4c07-8d05-28f6ea2fbafa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6920d84c-6a2c-40ae-a94b-1dbb30b66330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc7459-2b4f-4f04-947a-5b787cd7a6b8",
        "cursor": {
          "ref": "7108ee38-32e3-49d6-91b0-6861ad55fa69",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bca2df93-b35f-4d42-8a90-325eb21c3e9b"
        },
        "item": {
          "id": "69bc7459-2b4f-4f04-947a-5b787cd7a6b8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2cc90603-aa69-48e2-b696-c8d4d28c5ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dd93ed-a64f-477b-8692-f98f59136a49",
        "cursor": {
          "ref": "58222225-d298-4309-9e7c-ec48250ded44",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d1f5a2e9-d00b-48b1-8356-bdefb3c9b8e4"
        },
        "item": {
          "id": "25dd93ed-a64f-477b-8692-f98f59136a49",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1fc5b3a3-3835-4c5e-b4a7-49ef70bba640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3feeab-567d-4127-b4c1-6786b5807fef",
        "cursor": {
          "ref": "7b6e61fa-f10a-491a-ac1d-8de8fafd025d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cf0de787-dc0f-466d-b5ac-cf60c6ef8816"
        },
        "item": {
          "id": "ca3feeab-567d-4127-b4c1-6786b5807fef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a7fa8135-8177-4d25-8412-d9e08acf14d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87fb8b9-1ca5-4271-9936-f17bb2b45bea",
        "cursor": {
          "ref": "5e1d4dfb-8f02-41b9-8d8b-ff51137648dc",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4ca8cb3a-bb0b-456c-a7c6-754c70aa64ad"
        },
        "item": {
          "id": "f87fb8b9-1ca5-4271-9936-f17bb2b45bea",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2786712b-45db-40db-8f84-5cc29dbe2dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc5b165-54da-4c1d-a96d-1c8ee6632919",
        "cursor": {
          "ref": "0a948795-98aa-4436-a33a-273f661ac073",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c570066b-4497-4eae-b880-2ab9d57c1526"
        },
        "item": {
          "id": "0fc5b165-54da-4c1d-a96d-1c8ee6632919",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6925f892-756d-43d1-acd3-f4047e371f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcce0b7-e5f2-49c9-bc76-8df1a3607a98",
        "cursor": {
          "ref": "eb377c76-2e59-4466-ab76-b32491a02498",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d75d1967-9b6f-423b-a3e9-3fe34e7470c0"
        },
        "item": {
          "id": "4bcce0b7-e5f2-49c9-bc76-8df1a3607a98",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "146f64da-fd07-428d-959d-a9d80a188bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db47abb6-e257-45a9-bd56-bf2a60ac0d0f",
        "cursor": {
          "ref": "123e83a6-ff97-4aa2-9da5-60116e4358c9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f2437cbc-ad59-4c12-bae8-bc5892362bff"
        },
        "item": {
          "id": "db47abb6-e257-45a9-bd56-bf2a60ac0d0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cdbac063-e2c9-4ba1-81b7-57f3cbdb3e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e57fb75-3167-4bfc-a79a-c4ad90b0f02d",
        "cursor": {
          "ref": "f31dee2f-e67c-4e32-843d-ad01a5d4c21a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ada271b-8d6c-43d2-be05-977c5f6902e8"
        },
        "item": {
          "id": "0e57fb75-3167-4bfc-a79a-c4ad90b0f02d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3d0d20fd-1e9a-4bb2-8252-2b6e17edd471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4b9dca-f1b2-4904-9d38-720e4bd74ebe",
        "cursor": {
          "ref": "c5e9598e-e623-493e-b246-8ebfdce145ea",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a5f64557-6e83-48d1-a1c5-374e2cc58a02"
        },
        "item": {
          "id": "ff4b9dca-f1b2-4904-9d38-720e4bd74ebe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bc3685e1-4963-40fe-8958-2e9704132423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca720b5a-e4f5-448a-a6da-e680d0fe381e",
        "cursor": {
          "ref": "0eadb8d5-a79e-474b-a0bf-aa730dba2199",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "656b2d11-a85c-4e86-a952-38f3226d0248"
        },
        "item": {
          "id": "ca720b5a-e4f5-448a-a6da-e680d0fe381e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cd5e521c-94ac-4d8e-9c7a-a32f2e621722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514f1bf1-51c4-4b74-ba67-394f850231e5",
        "cursor": {
          "ref": "cfcf5019-d248-445e-8428-21cb62965658",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7b9b987e-d36e-4c2f-bf74-78ab515e8f19"
        },
        "item": {
          "id": "514f1bf1-51c4-4b74-ba67-394f850231e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a39fed19-e166-4a2f-9033-3c37421bd02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe69f2b8-f5ca-42ba-853f-65b95a15c146",
        "cursor": {
          "ref": "5d4cb08b-21c1-4bd4-b6d2-ecc248758bef",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "90aa6706-bded-4858-b72b-65ac6cf15fb6"
        },
        "item": {
          "id": "fe69f2b8-f5ca-42ba-853f-65b95a15c146",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9a177553-1d2b-44ed-bf82-41f04971cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b23fd61-54e5-4227-8279-d0ff28603458",
        "cursor": {
          "ref": "83d187e7-10d5-4073-ac84-a5e89f3789b3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e9a29cc7-583d-4430-b6cf-a59bcf6447e6"
        },
        "item": {
          "id": "0b23fd61-54e5-4227-8279-d0ff28603458",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "323e9663-a36b-43ec-be07-209b5be321e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c34cd3-8c0b-47e5-967d-09b6ad3b669c",
        "cursor": {
          "ref": "9167daa1-5e34-4971-b1f8-f51c5ac82102",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b41f9a1c-3238-4137-9d7d-37f82fd713af"
        },
        "item": {
          "id": "33c34cd3-8c0b-47e5-967d-09b6ad3b669c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "702d44f8-c68a-439b-961a-43128b052693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1e8b6e-4ee8-4999-8694-d75890c8f716",
        "cursor": {
          "ref": "f73a2289-5d72-4742-8d59-c0547e997eb2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "79b73aae-7edf-4b87-aec3-341679304d0f"
        },
        "item": {
          "id": "ab1e8b6e-4ee8-4999-8694-d75890c8f716",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "32d5ffbe-d022-4ee4-a624-727f6a528c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a05bc3-269b-47a3-a602-99dd0a91f2e3",
        "cursor": {
          "ref": "ef4faf54-eeb8-4cc2-8f61-1ad40d1c9d4c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ceac4780-4c02-4648-8b2e-d50ac19edb5b"
        },
        "item": {
          "id": "c0a05bc3-269b-47a3-a602-99dd0a91f2e3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f2fd729f-e4c2-4022-9f13-e32333d0f0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad716de-d870-47cb-b882-a8f6cc9e67ed",
        "cursor": {
          "ref": "e57852b6-8092-49a6-aba4-214180842b2a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dde4080c-f7a6-4f42-8728-c7ef4ac9e10a"
        },
        "item": {
          "id": "0ad716de-d870-47cb-b882-a8f6cc9e67ed",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "69d5859c-da92-4836-a0d3-b356570e1bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079818e-5b4c-4f7d-93a9-b495dbea61a6",
        "cursor": {
          "ref": "4dc88920-8322-4a0f-92ce-fe237349af6f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3404fc34-74dd-46cb-a631-251f0071fc49"
        },
        "item": {
          "id": "b079818e-5b4c-4f7d-93a9-b495dbea61a6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "71ad1ee8-9b46-4d60-b6dc-d53362340297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb28148-f26c-46bb-b39a-eeb8ca80d139",
        "cursor": {
          "ref": "0bb61566-1439-4eba-bd4a-702c2c4090f1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2db77d7d-96b3-4590-a485-7282f307fddc"
        },
        "item": {
          "id": "7eb28148-f26c-46bb-b39a-eeb8ca80d139",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "374b441e-c95f-40fb-aa4c-8bad8ab7253d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3592bed-caba-47d2-bf35-f7c554f991c2",
        "cursor": {
          "ref": "67d3493e-960c-41c8-9429-f6167c27bee8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b0a675b9-be10-4305-8455-f130b5d4fa8f"
        },
        "item": {
          "id": "f3592bed-caba-47d2-bf35-f7c554f991c2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b6c8065c-baaa-4ee6-838e-9552bbaf9f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aede64-012e-4e23-ba04-26b62bb9a1aa",
        "cursor": {
          "ref": "ee07d2f4-25b9-41e1-95a8-1fe75c238c28",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3bac3747-2ab9-4394-8070-314ab8c9dd26"
        },
        "item": {
          "id": "19aede64-012e-4e23-ba04-26b62bb9a1aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f01cd399-ef85-4fb3-9299-0329e832cdd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af263e58-9ac4-460a-9658-ca9fff8c649c",
        "cursor": {
          "ref": "2eca6de3-e717-4eb5-a126-abe26f34c602",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4c472fe5-9807-4e5d-8131-56a27d9f4984"
        },
        "item": {
          "id": "af263e58-9ac4-460a-9658-ca9fff8c649c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "72c03d70-62fe-4a93-b783-c7a0664523ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c781bf90-a712-44f6-bead-e5bd4463641e",
        "cursor": {
          "ref": "158e6d97-0c6b-4ee6-82aa-ef215dc7f8b5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0645e2fa-4d52-4c76-b3d3-b3d8bf478aeb"
        },
        "item": {
          "id": "c781bf90-a712-44f6-bead-e5bd4463641e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a669d72e-d6d4-4665-b07d-6ba54b0ec557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68cd17b-1bc1-4efb-8572-51d920732424",
        "cursor": {
          "ref": "409d2187-707b-4c1d-ab7d-a247ace39eaa",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a9eeea0b-1c4b-493d-9096-19b0609736f3"
        },
        "item": {
          "id": "f68cd17b-1bc1-4efb-8572-51d920732424",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7bef6d96-cfe0-42db-83d3-f4e1f69148db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9156c5-403f-4c57-96ee-55ffd3d26248",
        "cursor": {
          "ref": "4b358685-a796-4b88-aea8-b855c675afb2",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "48b383fb-446f-42a2-bb17-ae83f07649ca"
        },
        "item": {
          "id": "ff9156c5-403f-4c57-96ee-55ffd3d26248",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "afc59121-78f5-44be-affd-508d65191a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4da8b2a-2e9f-4c95-bddd-37b22e52f869",
        "cursor": {
          "ref": "91af4386-e292-42ab-9ef8-73f81fb645b9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "68c8e57f-abf1-48f5-bc1d-eb2e5305eac3"
        },
        "item": {
          "id": "d4da8b2a-2e9f-4c95-bddd-37b22e52f869",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "85651ea2-e8d6-468b-aa36-0bc6378561af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe5784e-8647-4c2d-a9e2-a0b5f1325bfa",
        "cursor": {
          "ref": "2aab4cd6-cdf0-472a-92f9-3d342e41b319",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "73fc2658-1632-4aab-a869-f9e333d71bd1"
        },
        "item": {
          "id": "cbe5784e-8647-4c2d-a9e2-a0b5f1325bfa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "71923f0e-07d0-41f4-aef6-998e130898ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f6ceff-79a5-4d50-8c2f-adb40bb6ac13",
        "cursor": {
          "ref": "58077fb6-2927-4e9d-929c-e127a9156e77",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e37c53b-5843-448f-a001-fabfdaebf71d"
        },
        "item": {
          "id": "06f6ceff-79a5-4d50-8c2f-adb40bb6ac13",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49769240-bcc7-414d-8de1-9a5769c18a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef8530c-b55b-49cb-85f0-832222d20bfb",
        "cursor": {
          "ref": "9e59f194-ce76-4b7a-8a64-d35b9a98919c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "69d9d8a2-4c90-40d4-80b2-4df983cf5e5b"
        },
        "item": {
          "id": "fef8530c-b55b-49cb-85f0-832222d20bfb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b14a79c0-1054-439f-a900-684aeea55b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f478307f-9ceb-4cd7-ae82-15507c2eeb05",
        "cursor": {
          "ref": "3402ad58-a936-4b48-bf77-59aa9ebe491d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "055b2f77-50e3-4686-aec3-dfc82bf55bd7"
        },
        "item": {
          "id": "f478307f-9ceb-4cd7-ae82-15507c2eeb05",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bb636275-0e6f-4db0-9af8-85afcd9c6b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb0114d-99d5-48dd-97a2-126c18c7d7b6",
        "cursor": {
          "ref": "341827a2-a80c-4356-909b-ff249e168893",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4dc5fac2-03aa-453e-bc62-5613a2033b10"
        },
        "item": {
          "id": "6cb0114d-99d5-48dd-97a2-126c18c7d7b6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cb94f467-2877-48ca-ba2e-5aa1d30fd9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2be0ce-a84b-4c52-b89b-1fb3e6b0b5ae",
        "cursor": {
          "ref": "87ff2cca-229f-4ae9-92e2-8b9fc8b9f0fb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "34f40eaa-a002-4d07-9a50-04bfbcbaab5c"
        },
        "item": {
          "id": "2d2be0ce-a84b-4c52-b89b-1fb3e6b0b5ae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "998ee717-5d90-4877-9310-f7f3a0cf759a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674c6613-b054-496a-b23c-49e198fadd3b",
        "cursor": {
          "ref": "f1e38251-e273-4ac6-b1a2-71bf7e799842",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "21ac33f6-515b-4956-8346-dcca64912341"
        },
        "item": {
          "id": "674c6613-b054-496a-b23c-49e198fadd3b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ffc65058-1acf-4eee-8337-390c2dbb8e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51b0103-3778-436d-82b9-3b060521d164",
        "cursor": {
          "ref": "1383fbfa-686d-44ee-ab4c-5ab4720429e9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5c46bf3a-c348-4553-be47-cfbf93cbd458"
        },
        "item": {
          "id": "f51b0103-3778-436d-82b9-3b060521d164",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2fc7478e-37ed-4f65-a2cf-d07fc63e48fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edfdff2-89f7-4f42-ab6a-ddee06f5924c",
        "cursor": {
          "ref": "f0bfcc5f-1fc1-4577-9f0f-5ffdac600faf",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "49089bcb-033c-4cde-a7e6-f6925ee55e46"
        },
        "item": {
          "id": "9edfdff2-89f7-4f42-ab6a-ddee06f5924c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5c65483e-05ae-4715-a55d-876a1de88b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a643a6d5-b7ed-4967-b76e-6f4316c7a707",
        "cursor": {
          "ref": "707ff69e-1ed7-48b2-bdc6-f35e94044069",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f90b9009-9a13-4e6c-96db-d66042a8ce8d"
        },
        "item": {
          "id": "a643a6d5-b7ed-4967-b76e-6f4316c7a707",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a2a986eb-20cb-4d7c-ba1a-5ac10dc08aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5117459a-f5b9-4ec2-950c-ef7fda9979f4",
        "cursor": {
          "ref": "afd2df99-52f1-4b1e-b1ac-b60cdfdd9b91",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2cc08826-c635-4ef5-96e1-c4f6ec5df986"
        },
        "item": {
          "id": "5117459a-f5b9-4ec2-950c-ef7fda9979f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "30ee3d7b-72cc-4915-87dc-5007138c3369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fed111-3314-4851-a587-8f8b00575cd2",
        "cursor": {
          "ref": "3094d7e0-526a-4280-b33d-1b6a2c6b51cc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "65c756f7-b4c2-45cb-8f40-43492fd20929"
        },
        "item": {
          "id": "e5fed111-3314-4851-a587-8f8b00575cd2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fa3a3f6b-97db-4238-abd8-811ae6c46f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c3d8d6-d3f2-4dd6-9b2c-2ed2dd1afcd4",
        "cursor": {
          "ref": "ed202abd-dfba-4869-9962-e7e568f6d0df",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8bc724ab-c689-42f3-a018-9e7dfb4ae824"
        },
        "item": {
          "id": "09c3d8d6-d3f2-4dd6-9b2c-2ed2dd1afcd4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4dff672e-d5e4-4b86-b6f3-b4e3c11f838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f8277b-8ac8-4283-9fb6-8786ac1535c8",
        "cursor": {
          "ref": "c7588a58-3296-4cf6-b766-1374044421c1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cec7f775-5d27-46b7-a137-66b3e6625478"
        },
        "item": {
          "id": "c9f8277b-8ac8-4283-9fb6-8786ac1535c8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "06798966-86a1-4941-88e9-fc54557c1b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962cf2df-ccd2-44fa-a9e6-6f2c36c196eb",
        "cursor": {
          "ref": "0a3efbc3-5e1e-47b2-9a62-91ddb382ce16",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "57defb0b-a608-4faa-b4ae-99893bef725a"
        },
        "item": {
          "id": "962cf2df-ccd2-44fa-a9e6-6f2c36c196eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "44b82c63-7578-438c-bdc0-e4e5de707ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0911af9e-f204-43f0-a35e-e162ab399b66",
        "cursor": {
          "ref": "68310973-c9db-4c2b-a5b4-20b7868c7d19",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "182ac5f7-c4e7-4dde-80a8-a2ede8c65a5c"
        },
        "item": {
          "id": "0911af9e-f204-43f0-a35e-e162ab399b66",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e343d62c-6b26-4b0d-ad48-a79b8caeaf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c50439a-6685-4086-9d14-84e5a17f5bc9",
        "cursor": {
          "ref": "2cf6f28b-9d10-40f3-89c7-32d57ae17169",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6ffb7fa9-2a40-473d-877f-6ab88dd8a55a"
        },
        "item": {
          "id": "9c50439a-6685-4086-9d14-84e5a17f5bc9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "58b044f6-a633-4480-a8a5-33dc3bbf876a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a4055c-56d1-4357-b692-7e8a621370b4",
        "cursor": {
          "ref": "fb1a7f7a-7bef-4f41-80c9-356f73f33bec",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4690f956-65e7-4f9c-bc66-2a0cbc13baf5"
        },
        "item": {
          "id": "74a4055c-56d1-4357-b692-7e8a621370b4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c55eb4c8-d490-490b-a224-746c0a617307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde5e488-1a2f-4ece-8b3d-8876d216c9f0",
        "cursor": {
          "ref": "93badbdc-22fc-4ea5-877c-b92f2e47f182",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "190b297c-a4e0-4865-a833-8956b1228bae"
        },
        "item": {
          "id": "cde5e488-1a2f-4ece-8b3d-8876d216c9f0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15e15ea3-8375-4628-b9c9-ae55838cb4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83296ce-ba7d-4496-9f30-35428c813cf0",
        "cursor": {
          "ref": "689e62d7-56be-45b2-9681-94f9775e36b2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7ddf7ae0-77f8-427f-87cb-7b54dfdcd34c"
        },
        "item": {
          "id": "b83296ce-ba7d-4496-9f30-35428c813cf0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "96d7dea5-24f4-474b-b9a9-09d1a01dbced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9fc605-af94-427f-9b16-66a301ebcb7d",
        "cursor": {
          "ref": "8f3a7fc1-a198-4b2b-84fa-77c878025c26",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8fecad1e-1974-4f89-b37d-2eee824dba36"
        },
        "item": {
          "id": "ea9fc605-af94-427f-9b16-66a301ebcb7d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "37ba6169-d9db-4f87-9b75-edffe8bbf421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d151b5ca-f770-4365-80bb-a6cecc62217d",
        "cursor": {
          "ref": "c9126804-3785-4034-ac9e-c3c70e868a0e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ee794e4f-1ba3-40f3-90c9-de4676f5914c"
        },
        "item": {
          "id": "d151b5ca-f770-4365-80bb-a6cecc62217d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0a4aaf66-6c56-4488-a01e-03103e5e66ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f07ed9-8fb9-4bd9-ac33-90578809dc60",
        "cursor": {
          "ref": "4503beef-7a3a-4df8-8296-e0dd9c47aa9e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "27265a69-d1d8-4627-9bef-5383efa64966"
        },
        "item": {
          "id": "01f07ed9-8fb9-4bd9-ac33-90578809dc60",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7795986a-820d-44d2-958e-d8298e143ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403aa760-4fda-40ab-ae25-3701c1dc2fb2",
        "cursor": {
          "ref": "bc5d23e0-32ff-4eff-ad8c-5755e0f6b285",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "84d0e867-4c55-4ecf-b4eb-67b6f173298b"
        },
        "item": {
          "id": "403aa760-4fda-40ab-ae25-3701c1dc2fb2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ba21e1c-8273-452d-90b9-2ae4ca205134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5fa580-0bb3-4026-92e1-a27d5f33d0fa",
        "cursor": {
          "ref": "f04b4c63-6d83-46d2-aad9-3b0ac7a3499f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d4c94bf3-040b-4bb5-ac85-4a34c7559cf1"
        },
        "item": {
          "id": "fd5fa580-0bb3-4026-92e1-a27d5f33d0fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "029744df-3513-4e9e-97ab-6ff3d67b854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c926da-ac62-4f04-8977-0735e0a1636e",
        "cursor": {
          "ref": "b50bedf6-da82-44fb-b53e-eafef764c722",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "837baf86-0345-48b3-94ba-dde1f70e4155"
        },
        "item": {
          "id": "a0c926da-ac62-4f04-8977-0735e0a1636e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c9858fd2-4711-4c87-b8f5-37a9bbf5187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10e9194-71d7-4599-9c67-7732342db64b",
        "cursor": {
          "ref": "04ccec2c-1264-4467-9f84-e3a266db51ac",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9bfd072a-3f89-4c0c-9315-735fa54b6493"
        },
        "item": {
          "id": "a10e9194-71d7-4599-9c67-7732342db64b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7a8d28c8-65df-47d1-a111-6892840575eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca67fb5-a0ec-4a88-b2be-9ca63d02c87f",
        "cursor": {
          "ref": "0398cd88-47f0-4cbc-94a9-f2f459a073ac",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "378a109b-7b32-41ae-89fe-9da565239fc6"
        },
        "item": {
          "id": "1ca67fb5-a0ec-4a88-b2be-9ca63d02c87f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "51d151d7-9efa-4795-95b8-85636a509173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2ba468-e0ff-4cc9-b21d-cfe79cb6a47a",
        "cursor": {
          "ref": "ebb8e9bc-f72c-41e1-b111-7771bc2e4ddb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "928ae234-b686-4903-976c-0fa4a4f603d6"
        },
        "item": {
          "id": "0f2ba468-e0ff-4cc9-b21d-cfe79cb6a47a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f45506f5-e413-4933-afc3-6f9430ddf082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19057578-3174-4d15-9027-195884faccd0",
        "cursor": {
          "ref": "e829f9c8-7654-4414-ab9f-b99c7f5adc2e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3839aa5f-d063-48d0-b589-8a2520382f3f"
        },
        "item": {
          "id": "19057578-3174-4d15-9027-195884faccd0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1c60ba08-6395-4573-97b2-2b4611e3c193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a28bff-52cc-49cd-bbe9-ca365cab052c",
        "cursor": {
          "ref": "b736ea5e-20cc-4df9-9c5d-dd2b715d2524",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ce401d1a-e774-4914-822c-494f89f1fa9c"
        },
        "item": {
          "id": "c2a28bff-52cc-49cd-bbe9-ca365cab052c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "67466a7e-977a-478f-9ad2-4e4446de39ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6885ebe-8e06-4f3a-b946-69b31fa87075",
        "cursor": {
          "ref": "5339e141-1c66-4cd4-b11d-595abe055081",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3ad1bdee-e123-41f8-a02c-738d83924741"
        },
        "item": {
          "id": "a6885ebe-8e06-4f3a-b946-69b31fa87075",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "99bfde83-a30d-4b96-9116-a712f9997d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688d95eb-d8db-497d-8430-a7041776a773",
        "cursor": {
          "ref": "4875e4c5-72cf-4cab-82e1-ad3cba990e40",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b636241a-fee7-40b5-a4f5-718842f7c139"
        },
        "item": {
          "id": "688d95eb-d8db-497d-8430-a7041776a773",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0f7b55d6-3ec6-4fdc-baa9-2cc9f1707e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee70553-45a9-42be-b34a-48806a184c61",
        "cursor": {
          "ref": "5522e802-f704-4faa-8833-e99123485086",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ed6ff950-72ab-4e77-8025-da1e1a2b6dc0"
        },
        "item": {
          "id": "4ee70553-45a9-42be-b34a-48806a184c61",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "843dea9c-55ff-4f28-8bac-3be2b7eb588a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1baf73-8993-4e4f-bd8b-4ac66a2afe70",
        "cursor": {
          "ref": "48734224-7552-4d0a-9c3b-39f2859033b3",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "04c8b4f8-f3d7-46c5-9309-e46d58f028bc"
        },
        "item": {
          "id": "5a1baf73-8993-4e4f-bd8b-4ac66a2afe70",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b601e2fa-31cd-4eba-9c99-073c026b3437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a3a0a0-c3d5-437d-9c1b-20fe23c7f7bc",
        "cursor": {
          "ref": "31287e24-2b74-4ef7-8712-14836193c781",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9c0bda72-2b85-4fa3-88e2-4ee2911a869c"
        },
        "item": {
          "id": "17a3a0a0-c3d5-437d-9c1b-20fe23c7f7bc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "52493c44-8ec1-4571-b5e1-550a4e95adc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a65dea-a5d9-43c9-979f-e84df5030bd0",
        "cursor": {
          "ref": "492d56df-208b-4144-a99f-8a7a24a38d99",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1e2ce18c-28b8-45ad-99da-d2b794d5fd57"
        },
        "item": {
          "id": "e7a65dea-a5d9-43c9-979f-e84df5030bd0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "74e3da89-4810-41f2-8d8d-bcc4500f85ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c55954-19fc-4b40-868d-d91e281b96f8",
        "cursor": {
          "ref": "e537a206-8771-437c-8a7f-7e2ad94abf6c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2f99fe7c-a4a4-4dc6-809a-2b1aba617470"
        },
        "item": {
          "id": "72c55954-19fc-4b40-868d-d91e281b96f8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "24a583d3-b1f9-4380-93ec-751582c0ffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489cc22d-a7f8-4ed2-a67c-fb3ce4ad9cc3",
        "cursor": {
          "ref": "996fd2d3-5c00-4954-b358-1f438887da0c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0d527e17-43c6-4fec-a897-6856f5dfb39e"
        },
        "item": {
          "id": "489cc22d-a7f8-4ed2-a67c-fb3ce4ad9cc3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7b30e0f2-2ea1-4994-8ee6-99f7142c62d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12f6c55-74f7-451b-8e52-596d10c8c23e",
        "cursor": {
          "ref": "2d4889a3-09b8-4bd6-b088-f216f0a27cb3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0ce0faee-9c51-4eab-84ed-7d5549a50cc5"
        },
        "item": {
          "id": "a12f6c55-74f7-451b-8e52-596d10c8c23e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f0fca76a-9c64-4ab4-b76e-54ae12cf06da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13479b95-6173-4bc7-a942-fee694977a07",
        "cursor": {
          "ref": "01736fc7-5521-4ee3-ac5f-fd84e3ee36c1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0a620d0c-4be5-4692-a6ae-6b1de305ad3d"
        },
        "item": {
          "id": "13479b95-6173-4bc7-a942-fee694977a07",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fcbc03ba-5aa1-4a49-ab93-1e1e7b5bb523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4455e2b0-29c6-44b4-b8b3-40e17c0a0425",
        "cursor": {
          "ref": "b66157a3-35a5-4b88-8b1c-240372720da9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e824f261-62c7-4ab9-bcab-90455e1355d4"
        },
        "item": {
          "id": "4455e2b0-29c6-44b4-b8b3-40e17c0a0425",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7ce1e8d3-b889-4e6d-bba8-4863fb76a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334f671b-0973-4ddf-9897-3aa50fbafb3f",
        "cursor": {
          "ref": "d372f28e-7c0e-4133-8b8d-7615d66571be",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7afbffd8-241c-4d5b-9f36-a04bfb3e3f06"
        },
        "item": {
          "id": "334f671b-0973-4ddf-9897-3aa50fbafb3f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "671fbf65-671b-4d87-8e0e-5f66b7d09fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e6c8a3-5d19-41dd-be7d-84df5ae44944",
        "cursor": {
          "ref": "6c5ebbfc-7d1a-42dc-a757-a8aa4ac3df5b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9d3202fc-54c6-458c-8b5f-1b21081010d6"
        },
        "item": {
          "id": "19e6c8a3-5d19-41dd-be7d-84df5ae44944",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "29313355-8d23-4970-aca6-2cd6f5815929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2405e8b4-c8de-4d72-be3d-8098df63889b",
        "cursor": {
          "ref": "a3a9f7d6-466a-4f70-ad53-c9b6e13fe973",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "42303576-fc0e-4c7f-8b06-23972b25fc2a"
        },
        "item": {
          "id": "2405e8b4-c8de-4d72-be3d-8098df63889b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "88ae1cd9-7d4c-4ba4-a334-dc277663be8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe563f4-17b7-453e-99d0-0ce89fd9cd20",
        "cursor": {
          "ref": "35d3f1bb-18fc-4574-9e8f-8de595bfd848",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "75b04b06-ddfb-4921-94e0-00110f313581"
        },
        "item": {
          "id": "7fe563f4-17b7-453e-99d0-0ce89fd9cd20",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b00eb90a-bd9b-4a44-b54d-1e9caf2cde2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b849de84-850e-400c-aef0-e008abec8be8",
        "cursor": {
          "ref": "5ed22390-bdc1-4334-9006-004ec9e52212",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a7fc994f-b49d-4ce2-8523-160318663350"
        },
        "item": {
          "id": "b849de84-850e-400c-aef0-e008abec8be8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f89617e-0d28-45c0-ab18-de51f1eee026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a291df-9da6-42ef-b624-c70c6a00d320",
        "cursor": {
          "ref": "5c9a240e-14b6-4511-b878-f63fb9a5974a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a498d97d-55b9-4771-9e09-6f649020d979"
        },
        "item": {
          "id": "84a291df-9da6-42ef-b624-c70c6a00d320",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0c7902ba-8466-483c-a5d2-581b79731955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b8d70f-0324-479f-aa24-fd09ad99d775",
        "cursor": {
          "ref": "d6416bf1-a5b1-4cc9-96ab-03822e2f29bd",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ed457dfa-4149-439c-aee3-cdbe26216cff"
        },
        "item": {
          "id": "01b8d70f-0324-479f-aa24-fd09ad99d775",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "44e6f872-9a99-4743-8e18-be965ad36161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42b9d0f-14c4-492e-905d-0beb58874c96",
        "cursor": {
          "ref": "bea65a83-82f4-4f07-87c8-77a8eb1bd9b9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a3f21477-b6e0-497e-8dde-2affc5a2209b"
        },
        "item": {
          "id": "d42b9d0f-14c4-492e-905d-0beb58874c96",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e75d2cd1-39cb-4760-bb1f-599cecf4c32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55736a06-2e3f-4528-a71c-cb22d4f2f18a",
        "cursor": {
          "ref": "a1fa3df2-7b9b-4859-b8b6-443c42bbed76",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "681d526f-4e01-4ae7-a3f6-38c93ed816c5"
        },
        "item": {
          "id": "55736a06-2e3f-4528-a71c-cb22d4f2f18a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2bb26e9a-21ef-4f0d-8cf0-c8c58890d261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0dda9e-c388-47ee-b900-5118c1add0d4",
        "cursor": {
          "ref": "e668596d-56b4-440d-b242-3a029b6dc6cf",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "08163e96-5374-4e43-b1df-41756b61a07b"
        },
        "item": {
          "id": "ab0dda9e-c388-47ee-b900-5118c1add0d4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "70c1119a-9282-49fa-a877-1d642edee8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8480b296-8498-4570-ad43-802f0b80149c",
        "cursor": {
          "ref": "2131a80a-2831-4e38-baa7-e4caeeba8e3a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "530bd004-1e00-4ce6-ba05-2bae1d5709cd"
        },
        "item": {
          "id": "8480b296-8498-4570-ad43-802f0b80149c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a748c58e-c591-437c-8070-45b0e45db510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40606fa-3342-4dfc-843e-11172220f309",
        "cursor": {
          "ref": "e5b72088-e262-4320-9b12-2f9820618557",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ecb986fb-a8ba-44c7-a9bf-d85e375b31d2"
        },
        "item": {
          "id": "f40606fa-3342-4dfc-843e-11172220f309",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8d169bbc-ebd7-430e-92ee-3795fc7c3c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7583aaf4-49ae-4df3-b2bf-401cefccee32",
        "cursor": {
          "ref": "af89ab91-dabb-4be1-99a3-5b0ac73451ad",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c0577cd0-ed2f-48cf-98fd-282cdf84dc51"
        },
        "item": {
          "id": "7583aaf4-49ae-4df3-b2bf-401cefccee32",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "19d6f1bf-93ed-48f2-acc5-56d93a6516fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5ef8c0-6cfe-42c5-8eee-bc34e899c3eb",
        "cursor": {
          "ref": "ba95fc19-e19b-4dc8-8c05-33dbcee2720d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "12e10a47-876a-4955-8757-63c3f107ded0"
        },
        "item": {
          "id": "6e5ef8c0-6cfe-42c5-8eee-bc34e899c3eb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "26ea7761-4704-4ebe-8a4f-94092ee18674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bd5f9f-c914-41d4-8a03-5ec7455c2803",
        "cursor": {
          "ref": "69ee5a7e-a6d8-454e-ab4a-ddc0d2fc38f8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e903a6ea-f326-4c46-a13e-b321d160c987"
        },
        "item": {
          "id": "10bd5f9f-c914-41d4-8a03-5ec7455c2803",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cdb242e6-15be-4f07-8b3d-c9629b85f10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef760fa8-bd6f-4080-ac57-e856d3ff9755",
        "cursor": {
          "ref": "aeab0329-3309-4ac0-b73e-86442baca71b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e76a0e11-5a4d-44b3-b159-11f581cb899c"
        },
        "item": {
          "id": "ef760fa8-bd6f-4080-ac57-e856d3ff9755",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d0a632c5-181f-453f-baf6-8cc1df0ba8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142a0ca3-8f56-4ce7-9111-22c8137b35ea",
        "cursor": {
          "ref": "85891c04-4a0a-40fe-96ed-4ff07733a9a2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7882ea03-70ef-427f-ab76-0b1ad23a925a"
        },
        "item": {
          "id": "142a0ca3-8f56-4ce7-9111-22c8137b35ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c0b0b592-fa4f-4839-9d6d-c7ab851f85f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae0d939-dbcc-49f2-8199-b93366b13f16",
        "cursor": {
          "ref": "6afbc005-17c1-4e9c-a05b-5ba40836ab67",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9bd20449-ccca-4839-9761-e015e35f9443"
        },
        "item": {
          "id": "fae0d939-dbcc-49f2-8199-b93366b13f16",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "32389afc-0fec-4483-b223-73d08ca5cd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca99268-f3d0-4d9e-a760-f2ff29dd7a29",
        "cursor": {
          "ref": "70e138d6-8686-4eb7-86db-3cd0e0207b95",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4674fa4a-f280-4c47-9508-f434af3ce692"
        },
        "item": {
          "id": "eca99268-f3d0-4d9e-a760-f2ff29dd7a29",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1e9bebb9-152d-4401-8318-4020ab2e8cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cc0edd-c3ae-43c6-b78d-ef465da51b4d",
        "cursor": {
          "ref": "018b03c8-14b9-42de-9307-5c8bfd119d86",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1201bf06-c7eb-4ff3-9052-d461e32f2bdc"
        },
        "item": {
          "id": "95cc0edd-c3ae-43c6-b78d-ef465da51b4d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a1a669e4-16e2-4840-8cad-3a5197979599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd8aece-58cc-4987-8497-ed171f11688c",
        "cursor": {
          "ref": "8c87ff30-17de-4126-8d99-644922309431",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "191eb02a-82d0-4705-84c5-7daa120ddfef"
        },
        "item": {
          "id": "4cd8aece-58cc-4987-8497-ed171f11688c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e92f42d7-3bba-449b-b24c-372dc43eabe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d0a000-b974-43b2-a8ee-ccde405e2ee2",
        "cursor": {
          "ref": "1c1d9cdc-ad4a-40f6-97b6-d09dd429ee48",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3114b214-d014-4c04-a824-13f1fa6e3e58"
        },
        "item": {
          "id": "c6d0a000-b974-43b2-a8ee-ccde405e2ee2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d7def3a1-a7ee-45d7-bab3-d05c0945e8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dad90c-61fa-4789-88c6-5abff3b6b210",
        "cursor": {
          "ref": "f16f1d7e-0c8d-43b4-9e3a-a8d31706daad",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "725c3b29-4dab-4569-a9c9-3ebdbaa194c2"
        },
        "item": {
          "id": "53dad90c-61fa-4789-88c6-5abff3b6b210",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf4daf7b-74c5-4424-a850-69694079c76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ff5a73-5eb0-4a58-beec-180709f1fe00",
        "cursor": {
          "ref": "fdcae42d-e78f-4b03-b56d-df9b7f670a75",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "184df168-eb28-4a03-86e1-35505fe10e7c"
        },
        "item": {
          "id": "a8ff5a73-5eb0-4a58-beec-180709f1fe00",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6e4a2bbc-a74b-4b6f-a8ce-b454c3a8e99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f727e283-f2da-4336-9f76-d4ddf93840fe",
        "cursor": {
          "ref": "52780daf-b9bc-4fc6-9757-41f594726227",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c5aad8b8-2423-4e3a-ab21-560e31fd5c47"
        },
        "item": {
          "id": "f727e283-f2da-4336-9f76-d4ddf93840fe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5a4220f1-57c9-4179-bcd3-f7fa7cf30811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3b6dbf-2b19-4f8e-b356-38b8f1fceae0",
        "cursor": {
          "ref": "d02d041a-f48c-4775-b44e-791a395018df",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1926c871-627f-4921-8d98-2443be1e7600"
        },
        "item": {
          "id": "ff3b6dbf-2b19-4f8e-b356-38b8f1fceae0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e6fed32c-f5d1-4cd7-9f8e-d539eee23925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7735a994-eaef-4393-a1b3-36df662d38b2",
        "cursor": {
          "ref": "88ebfeb8-995d-4900-a970-da1973f7dd44",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7891e477-2bc5-4171-8fd4-267f770df82a"
        },
        "item": {
          "id": "7735a994-eaef-4393-a1b3-36df662d38b2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2966552d-904e-4538-8800-fd1c099beb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad3c965-433d-4df5-9101-def25c4e02b3",
        "cursor": {
          "ref": "014f4c81-ab23-4f97-b3bf-db5dd92dfc30",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b75e44ec-ac0f-4139-84f6-7c101fbc4191"
        },
        "item": {
          "id": "5ad3c965-433d-4df5-9101-def25c4e02b3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d2c9574b-f94d-4c44-94ae-b069c3f6e509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2c4569-634d-40ba-bf3b-4b5c35e5961d",
        "cursor": {
          "ref": "3c877a25-49be-4bb8-b746-b9b3e43aceba",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "52c04cc9-ea83-4960-807a-36bac46cc625"
        },
        "item": {
          "id": "fc2c4569-634d-40ba-bf3b-4b5c35e5961d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "914dfc73-47b6-4b22-8f33-56c517c07faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db0a047-5d1c-4cba-8dee-0909d72b0e8d",
        "cursor": {
          "ref": "3071bf59-b27f-4bed-afa4-8578c5c944d2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6ffb27eb-fc79-44b8-94cf-af913ba8ed0c"
        },
        "item": {
          "id": "9db0a047-5d1c-4cba-8dee-0909d72b0e8d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0f9f8d2f-262f-417d-a931-bd5c4ded7df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ab775f-f06f-4848-bf8e-0ef768725eb0",
        "cursor": {
          "ref": "3b57eb6a-edc4-4bfe-b692-39d7385edff5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2e9e6b67-da82-4cfc-93eb-0e52e4011c2e"
        },
        "item": {
          "id": "38ab775f-f06f-4848-bf8e-0ef768725eb0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f83a6985-335c-4870-a5d0-1405f5ab8369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2502ccc-8483-425d-bfcd-54c927823175",
        "cursor": {
          "ref": "b90728ae-66b2-4772-b6e9-35d621fc4ca6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b8e9bf99-93f3-487a-b95d-6ba5b7017d10"
        },
        "item": {
          "id": "c2502ccc-8483-425d-bfcd-54c927823175",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "47f88084-b0a4-499f-8970-2a65c991d180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5773a776-81fa-4a74-83c5-c49efab7f34a",
        "cursor": {
          "ref": "701c75ef-578b-41a3-af5a-ce20b6788e9e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0466a6e6-53f6-4763-9726-682a31558cab"
        },
        "item": {
          "id": "5773a776-81fa-4a74-83c5-c49efab7f34a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0889aa93-1907-4161-8ed8-b3fd696bdcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447b2f4b-6c81-4fb2-b8bb-8f9fa1f34424",
        "cursor": {
          "ref": "e1bd84ad-791e-4fb2-96a1-97fbeed70278",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "df2cde36-1e8d-4318-9e6a-5ef9aacd4691"
        },
        "item": {
          "id": "447b2f4b-6c81-4fb2-b8bb-8f9fa1f34424",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8f8e79fe-0fe0-4be1-99bd-cf2276c90058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f105f04d-6953-417e-86f3-c27cd573ffbe",
        "cursor": {
          "ref": "56e05e15-3c63-47b2-a14a-ce24462bbee4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6badeb31-beb4-4916-a213-4c91aef4ed99"
        },
        "item": {
          "id": "f105f04d-6953-417e-86f3-c27cd573ffbe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9f4f0412-7e88-4c4a-b98a-2396399e1c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f72807f-e59b-43a5-804d-1dd76875bc0b",
        "cursor": {
          "ref": "433f44ee-b0a6-4dac-af8d-60c9bd06ca14",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0448b5be-3070-4925-b236-65c46bf66c37"
        },
        "item": {
          "id": "6f72807f-e59b-43a5-804d-1dd76875bc0b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "73bc6e98-0e97-4e4e-9301-7f3a3649431d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcfe603-40a0-4bde-ae0f-e1f2db44caf8",
        "cursor": {
          "ref": "181e72fb-4a1e-4b5f-a895-1a9c3f440611",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5be06104-288e-4cc9-a6a6-cc0a8f8ecbf3"
        },
        "item": {
          "id": "0dcfe603-40a0-4bde-ae0f-e1f2db44caf8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "535c97fc-31fd-45cc-8d8e-18dde060ff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04ff9f3-4ee8-4f2d-9d12-ac356883de8e",
        "cursor": {
          "ref": "6a3bb5e7-97a7-4f2b-a925-5bed82611708",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "81b63d0f-497c-4597-ac53-1c8412a9472a"
        },
        "item": {
          "id": "a04ff9f3-4ee8-4f2d-9d12-ac356883de8e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7c398554-c059-40cb-9725-6cd2e759d656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ec4844-9c58-4e7f-adcf-95592ba9e6a7",
        "cursor": {
          "ref": "ffd27f54-669a-4ece-bb88-b4c57d054072",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "27ff45f7-20f8-4f81-b6f8-9c476034ac9d"
        },
        "item": {
          "id": "28ec4844-9c58-4e7f-adcf-95592ba9e6a7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1838575b-20bd-4062-9140-f66b23da052c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be786422-fff8-45b6-ab84-d765fcabb1c1",
        "cursor": {
          "ref": "865c574d-eeef-4929-ba0f-9e521e36a9a5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "24f5b23f-a32a-499d-844b-8959a41cf5fb"
        },
        "item": {
          "id": "be786422-fff8-45b6-ab84-d765fcabb1c1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "54e0a9af-d35d-4dac-be19-c8685e5453d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cef926-c089-4c7b-9caa-4f5717e1d1c2",
        "cursor": {
          "ref": "b8e8d19b-868f-45ff-83e7-a69bb3d0163b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e99e0305-02f1-4577-a07f-656e161626fa"
        },
        "item": {
          "id": "01cef926-c089-4c7b-9caa-4f5717e1d1c2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e8564492-28a9-4e21-af60-44d0f52f8d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddd08bf-be9c-429d-8a3c-b4e8af70c734",
        "cursor": {
          "ref": "e2deebad-82c8-4d8e-8ba9-cbfcc89fccad",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7532fc0-2d2f-46eb-b1af-c9d74cf16a44"
        },
        "item": {
          "id": "cddd08bf-be9c-429d-8a3c-b4e8af70c734",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b77952bf-bb77-464a-af4a-bdc4c12f5081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa42db17-cbe5-42a8-aa2c-d23a66ed2324",
        "cursor": {
          "ref": "0ff8c40d-0975-4619-b131-904a725210e4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d763dcf1-cc25-49b4-b901-86b8e515e994"
        },
        "item": {
          "id": "aa42db17-cbe5-42a8-aa2c-d23a66ed2324",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2806eb59-e030-4dab-bb4f-bf2ee15563f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a67ca92-b1e0-4087-ad03-a8645722dff0",
        "cursor": {
          "ref": "beff6c3a-2092-4c39-9a2a-4c264b511703",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "96008e3d-0149-4748-9089-9d17e8d0f5d6"
        },
        "item": {
          "id": "4a67ca92-b1e0-4087-ad03-a8645722dff0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ed759865-8dd3-4944-b599-9f0b184f8fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d188d61b-0a98-49bf-b4dd-c9da7599541b",
        "cursor": {
          "ref": "43f169ad-7fa4-4cce-82ff-f913a8157e04",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "77823b5d-c794-4ede-a655-1fa9ed2b6e56"
        },
        "item": {
          "id": "d188d61b-0a98-49bf-b4dd-c9da7599541b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eb91c9de-fbc3-4e53-991e-78fd2ccf8ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29ad465-32f4-4dcf-9d54-883f46c22fb1",
        "cursor": {
          "ref": "82a9a0e6-7a4b-453e-82b3-d3c8d3dcc17e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5bc20b55-c1c7-4ba3-8e00-b62053fa2f2a"
        },
        "item": {
          "id": "a29ad465-32f4-4dcf-9d54-883f46c22fb1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "06d0604c-c7e2-4347-a77f-65e4f7c0ee7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7106d57-3efe-4551-9d95-b935015fd7ec",
        "cursor": {
          "ref": "46966bf9-ed4a-437b-94e0-6e74d01effc0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f204d8bf-7981-4452-80fa-73a78246130d"
        },
        "item": {
          "id": "d7106d57-3efe-4551-9d95-b935015fd7ec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cf81ee97-04ec-46a6-a086-cadb19206e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dea84cd-8004-4a9e-8d65-52479db957e8",
        "cursor": {
          "ref": "9755dc10-241f-4111-9988-d66862d85279",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fb966c61-3b25-434c-8c06-dad8c24aa49c"
        },
        "item": {
          "id": "8dea84cd-8004-4a9e-8d65-52479db957e8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eb9f79c7-789e-48d3-b7d1-7b768a9a2389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09206f8c-449c-41b1-a5e5-4981c781290d",
        "cursor": {
          "ref": "421fe163-dc43-4459-8557-dd98c1fff411",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b3ecc28f-6325-4e0b-9c11-85eebea44037"
        },
        "item": {
          "id": "09206f8c-449c-41b1-a5e5-4981c781290d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1e13f738-3a15-44bc-a45f-91f2b446b1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec73eea2-c250-4cf7-8e20-068b133bcc36",
        "cursor": {
          "ref": "f71abb49-8d21-4abb-9cdb-3174c3de58c8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c26ced80-19aa-4f37-b7e0-de3e49f1a113"
        },
        "item": {
          "id": "ec73eea2-c250-4cf7-8e20-068b133bcc36",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bde8bd9e-7d9e-4c6b-a131-91f6282a618a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb36e43-7655-4b78-a399-75b1f528128f",
        "cursor": {
          "ref": "9ea5eef0-6b19-41d7-932e-680f85bbe688",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1e1e5fe6-18c5-45c0-8d3e-0d2c10cbd1ca"
        },
        "item": {
          "id": "7eb36e43-7655-4b78-a399-75b1f528128f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "24851231-2334-4e3c-8101-323c189df3d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c689815-4a2e-4b54-889f-dca270125a0b",
        "cursor": {
          "ref": "2f8284ab-1a1b-424c-84e5-2707a9ef0438",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd356bbd-4288-4241-bf1e-5208cbdb26ff"
        },
        "item": {
          "id": "9c689815-4a2e-4b54-889f-dca270125a0b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0c1e6dc0-0e52-492f-a62b-08fcd29d5fb7",
          "status": "OK",
          "code": 200,
          "responseTime": 2057,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a55361-5539-443c-ab81-ef983bff9154",
        "cursor": {
          "ref": "c692b526-0d41-4e9e-b32b-3d74349a5480",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3a2256c1-6b1f-466d-8dcf-bc3b249dea9a"
        },
        "item": {
          "id": "a9a55361-5539-443c-ab81-ef983bff9154",
          "name": "credentials_verify"
        },
        "response": {
          "id": "43a9864f-70b7-4970-a4d4-8659c12883a8",
          "status": "OK",
          "code": 200,
          "responseTime": 3244,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da717af-4a3c-4ddd-9822-4063f0463233",
        "cursor": {
          "ref": "f6ac2d96-6399-4dc6-9ae1-82b008e7c98b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "415e5864-0c46-45a0-aca9-1b93b6e9de44"
        },
        "item": {
          "id": "9da717af-4a3c-4ddd-9822-4063f0463233",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a5ffd362-b1b8-43b8-aea1-5d2d0b2d910c",
          "status": "OK",
          "code": 200,
          "responseTime": 2966,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "082e14b6-c000-4e31-baa0-5ce0399d0b40",
        "cursor": {
          "ref": "44d62d17-d820-4786-bbda-2c267da64e72",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e5af76c-1c4a-4c0b-b633-4a0bf4a6ac77"
        },
        "item": {
          "id": "082e14b6-c000-4e31-baa0-5ce0399d0b40",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d3f66de8-38d5-418e-a173-176628b8733a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082e14b6-c000-4e31-baa0-5ce0399d0b40",
        "cursor": {
          "ref": "44d62d17-d820-4786-bbda-2c267da64e72",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e5af76c-1c4a-4c0b-b633-4a0bf4a6ac77"
        },
        "item": {
          "id": "082e14b6-c000-4e31-baa0-5ce0399d0b40",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d3f66de8-38d5-418e-a173-176628b8733a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9949ad4d-339f-459e-a8cd-83b0f5126192",
        "cursor": {
          "ref": "5fe4cf83-8ddb-49fd-bf74-b19cbdf5f74c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3b8bf2a1-880b-495a-a74f-66c0545eb8e1"
        },
        "item": {
          "id": "9949ad4d-339f-459e-a8cd-83b0f5126192",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b5099e3d-4940-40dc-9bd1-8ec19d9af29f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4bd04b-5152-4303-83dd-1b5066a2c6cb",
        "cursor": {
          "ref": "46fae19e-30f9-4fc3-89f8-7f7d3b38e44f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "45eecba9-4c6d-4d8c-aacf-b96a43bd4105"
        },
        "item": {
          "id": "2c4bd04b-5152-4303-83dd-1b5066a2c6cb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6d61345b-e106-4c26-a978-d4411bcf5d98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}