{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "628afad5-b5f9-47de-868d-0ae0dee60b1e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bdc74e3a-a87a-4d5e-b310-a43362e55268",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ab4a433-5c88-411e-a93a-85dd0c4ba500",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac7fdbce-1c9d-4924-b1dd-2c253a9b46fd"
                }
              }
            ]
          },
          {
            "id": "61b58467-a50d-45f1-8913-20c1055c9c5c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08527fad-3f94-4cdf-97ab-4a8ca50c9aa3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "79a5ed16-f40d-4a6f-af35-0ab1fd500c5b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a69cf3cc-dd6a-4250-b0cb-dcea64e3bb86",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4a200f07-cdc3-408a-b930-abfd473a6ab2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe5d1d9b-68c3-4275-8d52-31fbfc52c422",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5554939b-f2bb-49eb-b5f4-059aad471767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94aa40b3-7ccc-4a2f-89cc-6c872fb75812"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "633cd7f9-8166-4bd5-9865-a9eea62e5d0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02e978ff-0fb7-4658-b090-991aa8d39d62"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d1a5939-760f-40ae-8219-fc0ae4141c4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d10466e5-483c-4b94-9429-5c8ade21742d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59fa0eb6-3f28-43d5-9999-c03246dfc40e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "49072db2-25c0-4023-aec9-91ba75f1b9da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdb1cebb-dbd8-4c61-b2e2-52f38df33fb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea53d3f8-f1de-4478-8a4b-3e9d7f217fb1"
            }
          }
        ]
      },
      {
        "id": "59947532-ffad-4f94-96a0-47dd5675d5a3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "51a4b16e-fa01-43d1-b0b9-5b1d88c3634a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df620ce1-534d-47f3-8275-c4a44080ace3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36578856-e1d3-4bff-8a49-01bc4adbabfe",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cabe9c-2b51-4c31-abc5-e179163b6573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3513dba6-84f4-4da6-95c3-52bb21662cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4445478b-95c4-464a-a1d2-8b9fcc9dfbf6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba219312-49a8-46bb-835e-10793132f936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbf2877f-6e81-4d68-ab5a-e51c484dbd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c009c5-7adc-4c1b-80b1-65512b4874eb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75075cdb-f981-447d-a19a-189fa8a08746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9af5ec94-2ad9-4ebf-b395-6a85bc49f13d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9dcf059e-e840-48e6-850d-de4b4b930604",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93e894a2-ad66-4881-b60b-2ed5ddb38559",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2338cd-c3cc-4024-8c12-908dd0704877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ae18c05-4815-447c-ace7-8311971ce3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1fd67d-a00d-4a77-9efc-778b90786ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41664c05-5071-49e1-9c3f-5253d15634aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ea5c8009-fb5b-4532-9196-3d063712ef02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78b3036c-8303-4f70-9c41-70f533dff5d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "513b83e9-2b1c-447b-9b77-b29c8d5a3f1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "16a94a8a-68bf-4e63-b997-fcb84809d8a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54d150f6-44d4-4308-b0d1-12dc3510b1bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6e6d04ac-ca8e-4b5c-b08e-bdccf24c2e66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edae5edb-b157-407a-9934-1a8e4f7f1cc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7375fce4-8835-4525-9470-4de12bc20e15"
            }
          }
        ]
      },
      {
        "id": "096d2ae1-4738-4fed-a943-957b9f19f771",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "93b5c669-db88-41c2-8a60-c2090e8dba48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa8a0916-a910-43ed-b29e-220494d32292",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ca923386-5efc-44fd-9ff3-aa5b254a7e01",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39feb60-4b44-4132-a44f-aafa68a39c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a430ce7-5dc0-47c5-a849-d0d8ebd99749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990fee38-ce79-48a0-8400-13cf5a3bb698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e6cfc7-a338-4e3f-8a88-2232acddf978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db1ad15-1898-43b0-a29a-ec08b28c92b4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d942b7da-3793-4942-9ca8-fd500a02e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c13411-b685-46ed-a56c-0bf8eefa702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928e9d57-7fab-4167-80dd-0a0bf8cada6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eebfca07-6148-4855-8f81-ae86a0ac910c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ad3f0a-7e23-41cb-a30b-5ef324694387",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf92526-27f7-4663-881e-7dab7d955318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a34d33-8934-43ea-9ea6-83883b512996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bb1d1b-7660-4e33-8a60-ea555f7be9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c97e983d-0b88-4b35-9f71-3022d48a8100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092f4361-2a74-4ddb-bb7a-3194a4583a5b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129fa715-eb51-42bc-a105-8790e576ff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8167a0-fa9e-433d-8874-151654d34417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26425d2-307f-4679-ad5c-8443dbc8f700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "904eec57-b9aa-4a8c-ab38-efd2a9371cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9168a4c-af9e-4371-968d-16660d7463d1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e859d4-689b-4b65-897e-86642ac20a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c49153-451b-4227-a8aa-6b4f09b3ca82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446f83be-ef11-4c75-ac60-2c74004803c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7196ed0f-9d49-4184-9605-9ee43533e0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6883b275-d609-4052-8aae-867ee40147ff",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06631b67-3710-4a53-808b-a98a7596cca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68f8c33-c625-48e8-adc5-d2f1fda31065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e330a1-18c4-4d2e-a08c-f6d09af262df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "986a4c0f-b639-4da2-a113-03923097792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02666fc6-6950-4cf6-8963-f4d7fd10bce8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebfa93e-e025-4dcf-9d5b-4d97361b54b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0237e6af-aa70-4f49-9830-da70422cccf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8041a7ae-e379-4db2-9b28-056dcb7dce38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "066dafe7-cd57-45f7-8a4f-bec5d6264e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4645163f-eada-4fb4-a66f-aca0e406afa4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79193bbb-3720-45ce-a18c-cffad8604dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f2ad11-cdff-4bc2-9313-89a2df43dd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75160400-8ddd-40c9-9fcb-6e672a919956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "558ead53-8741-42a4-8f43-fbf204b23db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baae29e1-9f70-4aa9-841e-3a6e0a46325b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a956dc5-ae93-4d93-9cad-e69e77d45e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fc648a-68cd-4edf-b5f4-db51d395fc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b75e6e-4c3b-416a-9e06-72f27d32625b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bcdb5dd-9fa5-462a-bca3-c9156a2bd7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3f9bea-9a78-4351-ab14-82a9a9326bcf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcfecf1-9d98-4c1f-91f3-488937061134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a27e73-8c54-4055-9e52-8aefb80c0814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ff0083-2be7-4234-927a-d44b99702016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48fd525b-0098-4df5-803f-733bb84a1546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae90e68-e599-4123-9081-f72f747d6b21",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fb7c87-766d-45e4-b93a-0558c9ff69cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1fb90f-2a37-42f1-a7db-147752645c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b601b3ba-552d-4ebe-b6e4-0618b1a30314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b730d07e-105c-4244-ae84-f22a5c61e88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f6e399-79c8-4754-9a79-95026a905d9b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cff6d39-29d7-4a1d-b12a-9140a447a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71834483-839c-42e9-87a3-9b3bba4d9a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd965e2d-e307-4134-be89-4a1e4e777be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "479fb116-24ec-44d5-8801-bd0f5302aeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630dc0e1-f136-4e2f-b12c-a9e8357a3717",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53e5b93-add6-44de-be56-2dc41d3265b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538e54a1-6953-4fe0-bf7e-319907916cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3e1a2e-3ebc-4568-a943-bee59f204916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deaee8f0-f9ca-4eea-abef-811c4750e861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c2d039-a42b-4cbc-a785-91d2bff628f0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea93b27-19a3-4887-aba5-a40eba9120e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543385e7-f4c7-418e-bd56-a316b3116034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a736dda1-933b-4619-b975-686199c62d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de910df8-32f7-4690-b20d-fedf791c9fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30327af-a26a-49f3-b874-84b95cd81c7b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40112fc7-9bf5-4f7f-b0bb-0108470e4ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7b4bc8-622d-41fd-acf1-8bdcfc160a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f75b1a-fa0d-4466-96d1-d5d05282d469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ce7b812-9445-41f5-9d5e-0580f3598c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7280ebe9-4feb-4e7d-9511-3f4a8cc25208",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b2ba5-ac05-42d6-92d3-2c53a33cf7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20953626-e876-44ed-903e-fc81de7ae73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe899ff6-712d-4671-808c-300f46568b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b64b0944-6a9f-4886-9b8c-982a8ae323fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035811c1-1c06-45eb-9317-8b2d5ac00915",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0145e748-27f9-460f-8544-b33ce9ad1374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f823e8a-2f89-4ecf-ac8d-2162d6c97985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e7639-362c-4047-be6d-be9e34e25d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b85672dc-7dbc-4736-b750-5d0f92638ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bf0b97-9adc-4977-807e-54ec384b8ec2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491ae6f7-bef3-48e0-8277-03613eb2ae66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a8495c-ca9a-4b7f-a17d-6e336590f7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae03a195-63e7-4651-a515-32930a1f5958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f6d297-7d38-48a4-b624-e23895be9f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631938ea-c6c0-458c-b62c-2f9eee0590c0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a013fb8-a0f6-443a-bc96-2d940e3d07cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52997981-51a5-4e1b-b34d-7c710395d028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4628834b-b109-4718-be65-1d63f9e9b935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d541135c-583e-4543-9c86-208745920ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b751b06-1a79-4fb2-8007-929563f1c16a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866756e7-fa9e-405e-baee-d59945d2afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ac76dc-881a-468f-bd66-1e0a02aba9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce182d5-227c-453e-8bc3-08a37f098183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ec8d79-eb62-47d6-97c7-7878e7765c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05c5996-b365-4d06-988e-eb376b8d6088",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6786a6cd-7b4b-4664-8c32-c3ed021dcd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38b3674-d703-4d05-bf1b-f9e745d4868a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1332ed82-b615-410a-b9ce-e3e55cb72aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "056704d2-abfe-431b-bc70-ac314560db8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbcaa91-d17b-4998-a33f-77bcc18375c9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce4d337-f7f4-4818-9cc7-0a3b755c4ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e57e88-073f-48a2-a316-289a54496693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a893bb-3a40-41c9-b5cf-e051d3880179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ca9990-81ce-47cf-a351-2235ad5543c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d3c738-04d0-4c6d-ba6a-386da116361b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66807b83-59ec-43e3-9642-d473bda95a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc8c037-4ff0-4068-8138-9b5f0ee62d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fec78c0-af97-454a-9119-66ff56c5ec9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60aa9de7-1744-435f-812f-d1d909ecc979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c397e3-6f06-44ac-ad2e-4ceaaa80d28d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f30e89-ca8e-4f9f-b27f-69611f06d7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e26e20e-0ef7-4b2a-b059-449b5d0141b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac509cee-3791-4ede-8692-a99945d9fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c08b1f51-e21d-4627-a46d-5acf3db07a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e259352f-191c-4afa-a4b3-77c42baa4f2a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e35f2d-50ab-41ee-8577-cc99594215e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a68cd0-686b-491e-b412-a4b3877236e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac8f3d1-4ac6-42e4-b1ce-79298a2ad4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f476d5c4-6d0b-424d-a705-b368ea0733d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e4a0a1-9f0b-49b6-8d2a-76c319a4559c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5847521-8c3d-4ad6-ac2b-5884e84bf7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80caba09-8982-4802-9645-038542894672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e767c2c-e523-4a4d-a68f-c9ce6063f698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b851e819-63bd-482a-b583-0d9ceef53f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba63d511-b7d4-4812-9f88-ee862915a8e5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8757663c-c311-4595-b758-fd649a332c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8636e2b-514a-4da4-98ab-a0a7cde678c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02730059-5474-41ad-a78f-00b4f882a42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c313fe-7e63-48cf-b039-2c14d335cf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3785d7-c5c7-4707-944e-84ad159e35e6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fcacf3-a267-44ae-8072-425989c28865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219cc639-f2c9-409a-ab10-c30b9bbd28af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fee8df1-4ddb-4d38-af13-b9181327acd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fd9dc8-75ee-444b-af97-610dbcdb8824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792b063e-38b3-4f20-b98c-5d86f8beb0b9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594e7740-82a1-40fb-a326-b9dc6aaf209e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe7b612-1cac-4e36-8338-d7b8d45e2c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f0eb24-eb41-46e9-9924-7468ced26a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86f466a-45f5-471e-a4ac-592700b246e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9761c117-6f7c-4c6d-8226-1a0b4eb95502",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1b5dd5-3ad1-4577-9865-647ce339714c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc87750-0f93-4668-b19b-eeed7eb5f2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c083d8-4903-4cf2-83b2-ec6114ff40d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7c28a8-4616-482a-807c-81a73984d12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b432371-bdb1-4d05-8f8f-8fa169220bc9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9f8049-7b8c-48b6-9af6-cf17f53a9b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301c1628-b48f-4492-860b-94b28f7c638a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474f9fc7-7f03-4dee-b2a4-6f1a561ea9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5687e271-cd17-4cd1-954d-e03930cdfdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac3ead7-cee4-423f-9894-d4a541da5413",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23741f0-3baf-47e4-b6d6-bda14538ebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3d0e1c-dd09-4dbf-851d-1cd501028c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211d3843-7681-40af-a0fe-e97124feaae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "397781bc-5938-465c-9b58-7f558340bcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608af356-7015-4d98-a24c-7dab5745160d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c9b309-c790-4a53-95c7-a55dbf3ee4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9be3cac-aff0-451b-829e-33a407bfdc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e021a737-7dc2-4755-81ca-e8f3f18a562a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "563fab70-9423-4be5-8ce7-394e903beaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daedade-0ba2-40c9-ac4e-ab5cb5f9148a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d730f5c9-0148-429c-b493-512870f9e4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28348266-1c4d-49d8-a921-65dd67614389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d967b22-30dd-482d-8985-759b839239c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b19ece-90f2-4f8f-9a56-149babd72ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4e4585-b05d-4540-bb6d-55f69c502c0c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b28766-f25d-4355-b4e6-32dc00e41cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a06501-e5c2-4afe-9218-8d533946eaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5118aee-d4c0-4653-878f-84d50f726d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2a1750-b706-4808-8df8-0cca632df194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b9e475-3eb5-45ba-89f6-a380dd2eeb83",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30bb882-4f4d-4c1e-97ca-00fd04ed167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90dbfbf7-7d02-475a-8ef8-b1be32c3e2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32f68b0-e053-4fae-bfa9-08eb9bd1ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59ae527a-af23-40e1-906e-c3515c272be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d619d2a-6b84-4f7f-8857-274eb22110c9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accbf7c1-4ff6-4e79-a1f1-c62ebc62914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dabb467-7b32-4be0-bb40-75b5aaa77615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cf2b55-98a4-49ea-8a91-6c175d788e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f98d289-28d1-45ff-b78b-de057fe93994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abafcd5-b0f4-4cd5-9447-22d5e60f6170",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7ae705-d802-4d46-a35e-75c80172f66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c0ef39-a741-4649-bb21-002b096118a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ecde91-8d5d-4e93-94e5-bd8744279223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cacda6e0-2631-42b4-a857-dc9233c700f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3d10de-49c8-412e-be8f-8c246756be90",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de13f240-a704-428c-9b0c-b37383a44ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca82891-fd6c-430b-aa8e-10212f95429e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a5c194-9517-41c3-9335-0ffdbae7fb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "127ae2d0-6e1d-45e3-a27e-7ab623c9b3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca6c2ee-51fe-4b55-8e3e-f71aec050afd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1347e72a-f54f-4dd6-9594-9c0fc704aa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76630818-73ca-46c6-bde0-e53554090f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f000fd4-4ed7-4458-b1fa-65f046bd2bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d54d33cf-740b-4c91-af98-322d1d133fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423b2fe7-2050-4227-885d-46d6804dc7a7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1819e796-7cde-43a9-9e54-41ede7cc564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdaef03-6999-4bb9-bd62-699503503942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8fbb53-9f4c-4288-b0f3-2665a54351f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df60f0f7-266a-41fd-9837-66a2b85eef3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee31401-bf45-4a3f-a921-23bb667495c5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5301caab-e6bb-4427-b267-63aab2feb423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6cbc32-aeb1-4212-9d5a-b1dc9b3f3d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7f576a-40d5-4191-b854-75be090b6c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "af1919b8-cb36-4a54-a68f-02fd3cb3ac6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90787b47-4afb-46e6-bbb2-8e6495fe95c8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55fa364-b2cd-4a5c-93cd-03fd146dcd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6797f785-cad4-4dda-93de-c9a9ce6fd68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b785db-1c91-4322-9d2d-875746c9668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b37560c-3179-4a70-a9c7-721a1e17838a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e5500b-1d7e-4d73-851d-0d10a903c5c9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11eca4f-e1ee-45d0-a276-767b19d4233c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb40e2a-7826-4709-a725-f9ee2d1ee021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b71921a-33b3-48d0-86d9-2444410aa9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec68a18c-1c28-41ca-8ceb-d870b90ee810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23d0228-cecb-4c47-ab5c-cf03a5dcd9d2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9f4666-c951-4d29-9a1a-75a5908bef1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a76e894-6e0d-44a4-b3b3-2d4e675e4bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbff843b-9547-400f-bf81-0234da9a6d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9124c507-d07e-42c3-81ae-e56c30f600ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b2dc55-50e2-4050-b6c4-8b71c34cec22",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b0fd4d-b5fb-4255-a567-6df878a28b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81faa3fe-292e-4848-a0cf-e23359bea094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05db9a44-a4db-4296-bc86-4d9a4b5ce3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b484e11-67af-4dc8-9200-39b59f57a560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725c0777-50a2-4425-a770-a6781d3df7d5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a47624-4a91-4a28-8087-0627ca9b4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4512a7-75dc-441b-8659-0f0e142da467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8a258b-9943-44d4-a2bc-375896a95d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "def3f197-69eb-4381-a167-8524508ad96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0126ff5-67d8-4963-bff7-d9cfd4620498",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197f2074-8ff0-45cb-adc8-26fe41f07022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7b11cb-3f22-4fa5-b58b-27837506c67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9e24a3-ccf2-45d7-8490-dc5d0fa7ce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b621ea4-a07c-4cc2-a9f1-518becdf1e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146d6db7-8b0f-4d34-816f-d7c316f65b2c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cf4959-0a47-48e6-b75f-30a0929fcbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95926911-4fa4-4574-8310-8a7f94e9763b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8251c840-6f93-4160-adf1-12bf3e3e1274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee63a02-84bb-44c6-aead-396b9033eaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4233f52-d9d7-465e-8e3e-c65e73067228",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afe8cf5-9bb3-4f56-94e6-d8d6a2aba41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716e093f-1653-435d-936c-c318efa4568c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184a5b37-52d2-4d5f-8e64-baa0c2f12834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fee5a17-7b1f-4ded-8a0a-cca8ea400961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b77927-d371-4a0a-96aa-111e7b013555",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948b734d-32b0-492b-8466-19b6271077d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3fc0cc-240e-4657-8393-a4cdc98a692d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbf7bb0-193f-409c-8a89-9ebce4ee10ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "13834a19-fbc1-4bf5-b35c-be4e00f96bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc284009-9e9b-4518-a96a-208c0df4a00e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012e67db-45b9-41e0-a637-23699de577ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb463955-c53c-443a-b7ec-0fdc503d6693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457e72d3-8afb-4eaa-9af1-235a78ca03f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b75910a5-4bc6-478d-85ed-d84b2b36a931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fd680c-caff-45b1-b509-fa8800b1e98d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051b600d-857b-4108-90e7-37f680b4eeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9415450-45e9-4a8a-8e7a-04e62305eb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a97a040-a956-4e0d-b314-54105aa000aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7463b2-ca5f-467c-984f-2cd2ec0c6e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3744e692-4307-4359-9f0b-4e7090a28e92",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ff2e8b-382e-46f8-91a8-62b97fc000c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b63aaaa-db43-44b9-9332-788b9382673f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc9fa6a-b0d3-4fb7-b98c-254a80644e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b68a1e2-bcf2-47cf-8cfc-8a6c3a8e4b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4826208-1b13-481b-9a0d-1db806dca17a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84250a49-ba0f-4543-9fe9-447a181c2c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f065d10-005c-45fd-a6cb-024b5dcca38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd58ee06-3563-44af-bbbc-f574b4e5eeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "039e391e-eb47-4101-8f92-8395750577db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6a307e-479d-4358-880c-ecdd8b38ae8b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c990fd-28b3-4e3e-9542-9c33350febd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fd19bc-891f-47fa-8954-8c6f350318f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fd41e7-7ef5-4a99-bbdc-96ebb8cd706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "805e8670-d923-4c02-8666-1c1e69bff36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f90a31-0133-4ffb-8971-3cc47094ce8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bea6200-c948-4862-b53d-2136a17e2339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d13e845-f103-425c-9775-2afd795502a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b2d7bc-5410-47d6-8c82-c4930a4fb445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54c4f68e-e734-4636-9ae9-b0256ee2b68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e1325a-39aa-47b6-bdbe-e9082886a177",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec339f6-c41e-4de9-b19e-c0c7d993a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc8396d-21ae-4504-95b6-138dc67bb2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00d3fbd-3740-4f8d-bf14-3e74930e82f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a102bb7-28af-40ac-ba86-c734a43a4a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa587e7f-4c99-4be1-92aa-142ceb57bba3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9803fe24-e8bb-4582-ab05-64b5efeb482c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a686ee1-7daf-4f05-8cab-59a8f2295ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a7df29-475a-4c50-9e02-5202c7b28dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "719755e7-75a6-4f42-b1d2-47b5d232e004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1c794c-abe3-4ea7-9ae9-e61dcdda9002",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c77d8a8-b087-4b27-a4a0-b2c3b3b6e561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962f7274-69cd-4b06-ac71-1b8b5fcacf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b1780a-7bfe-46bf-9f89-a5e729a1cee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fae175d-35f5-4d7d-8104-93102754de04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e415b9d-83a9-45c3-8624-7574c0fcf0e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13be5166-bac5-4b20-82a3-caa45f825568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80b99e9-8bb4-42fe-8fbf-c91c408f4226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343c6677-d131-44e4-a03f-fa89843879bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44532d4a-a997-4866-b0af-91e1095fad8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e42e1e1-6651-434f-b4f5-083f83e81377",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd06b5f-c1f0-4061-b85f-dda2917ec506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a11e12-7124-4b0f-9701-1483e1cac870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd97bc8c-9d22-4217-8279-f5d3df6c5f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6bc01e-1ab7-42ab-8471-2cdf64cde979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6885b398-f80b-4f31-8988-45884113593a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41626431-9a8d-46f7-8610-46a3af9f625c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982945b8-eda6-4d30-9392-0857e0bc04cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd40a6f-d40a-45e6-ad10-7928f4ebc0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "17004367-8abe-4c34-9a74-9f071151c192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2544f295-d342-4eb0-bc2e-3f71c68434bf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143cab4e-8491-436a-a6d8-a63ec087d9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bca085-d07c-4b2b-baea-0fa2335206d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d093b7e8-02a3-408d-bb22-62136046703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63ee4529-3748-4d95-9ee3-8dd79a784071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19266411-4d5a-43fa-a0a6-03f315fab286",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d74b86-b353-431b-9382-66e745da6ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20543e6-e064-4bb1-b6a3-c5e31383dff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80252c6f-6088-4de5-96c9-e47f09322d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "623a9055-606e-4ea4-9482-71374b4ca288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43880ab7-fed5-423c-8440-7b6ba7c8dac8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f6b807-36e9-4f09-8f34-efffc0b23b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe08cf2e-580e-4592-bfed-d28c97fd1a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42f5568-49be-4456-b19b-536d21e5fb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef84377f-eb6c-4664-b255-bf0dee70dd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982d5c0d-cb6c-44bf-9e96-da11c23d3e38",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047b6bdf-94a0-442a-a155-503d23b8629d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61660143-e0e6-415c-a588-98954936a40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b8631d-f859-4e18-aa68-0f0d118159fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57a41620-67be-4705-bc1e-b7387eea2eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36428ca5-da15-4f03-9a20-3f4a5e69813a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed82d6d-4ad3-4baa-92f7-a7c87bcef235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2f37b9-8f67-4d51-b707-0f37618056eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06994de5-ed16-4ff0-a318-46b00960fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4063fa-b851-4e1b-89dc-38568f4b61ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf985cff-4ad4-4279-93b6-095d66e3c76f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5c7d21-71bc-4c1a-bd14-bb524a77201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6719386-675e-48fd-972c-b11c4b3a0768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66298acd-87e8-47a4-820a-100285d99568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc618a0-00f1-4f90-9114-58c76ff0c7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd27df36-6b90-4b9e-9b82-bae4d7f2be24",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e507b73-bc68-4fc4-a8a5-11bc60e8eaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c658c8f5-398a-4ef6-92cb-ba9a3859f2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b110a455-8e0a-4264-a5f7-185a03ae56c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01bdd11-4c21-40ee-98cb-33597abec3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a876fbc-6c52-4240-9742-04f756773234",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39859a7b-36d4-4c04-9db4-103b7f17a3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154c1233-7447-437a-9782-816cc19b5c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd4d077-d809-4111-a601-49f3d61bcd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50fb0314-c5bf-46fa-b1b9-2cb0d8f5ba37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38f2df6-7541-4a9e-bd0c-72e711229933",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14f886f-5e23-4958-9aa1-d268b0abd679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40291e9b-6cc1-4808-aef2-f8ed5681f552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bdd89e-83cb-45e1-afa5-1710a17213f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e93204-1115-48a9-96d3-9d1be2183bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594f1fcc-fcaf-4383-8546-a7110e9c48e0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67cb296-4bfd-4fc6-8e9b-65fb90a8f6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea08b0c-2d69-4e84-8ddb-40ccf1e61cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c44cec-e8dd-4ef2-8c1b-0577d2f0dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad54ecd-d436-4840-9e85-0038722e5e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dc5fad-b711-456d-8241-ef925bc4074e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17256856-d242-4ebe-958d-a0a668144955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a648785-f235-454e-bdf9-349843e1084a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d112bdbe-d2f7-48d9-9085-e640fd92ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "150ae02d-ccbc-4692-82a1-27a118401cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39525507-1631-4e6a-a460-13ff8181f1f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80aa11e-78a8-4da8-96fd-00daf3f5964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e795316f-a25c-47a3-abcd-8651828c0bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b654b96-facc-4988-b0f7-a830e9bea0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d4a50c-2a1f-4809-8c84-8d73cbb85f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976639b1-190d-42d0-b165-c6d34c2657b8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b5b6ef-e518-47a7-985b-9affb803de50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6bb408-f15e-4e1f-8157-f6d4c0d32138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eb2efd-ff17-478c-8802-58907c70f921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3a90e5-c0cb-40dc-805b-3c2777636393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac821317-f6aa-4019-8ceb-8e24b4bfbecd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659790f4-fff5-4cfd-b507-a285591c49cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41fa560-ac6b-4dc3-92ad-da1c968a576d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcf44fd-f5cc-46b1-b639-d814c712bee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d713b66b-d663-401b-a54c-121793d8b600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfe7292-7330-4eef-af4b-d1c1fce30668",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0296f11-7475-46a4-bd82-ec29c0762d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec33077-fa06-4904-97a5-2f07982008bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a922cd-6082-4ce1-9d0f-dff058ffe42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "679bd42c-b117-46bd-ac87-1d3132a50f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d6586d-6c75-4ded-9473-093a477f050f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ab7543-7e33-4445-b8fa-7f528e30a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c29b5a3-a592-480d-8cc2-4e2fc7838685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fe4e76-8c2b-401b-bafb-4e8b62fdffca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dba478-e53b-4a6d-b5b5-39b06d11a572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc6aa5c-5063-4c46-9f07-5d48c5930e3a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9a7745-8d07-4ae8-9321-0180b5141bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b35ec00-cc5f-4f28-a94b-002980de4862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f64246-53c3-407e-8429-255ca363c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c732068e-350f-4e0d-8af2-6466fd5105aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7991ee4-288b-49b0-b63c-37a3f271bafe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25872b76-8968-44b3-84b3-77d0adfcc813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c806ddd4-2df5-4577-8d30-223a30364f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b673bde-a96a-4571-bc9f-99cafcc944ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8c1884-56cf-4559-97fb-94cc6c164a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a48340-b4ee-424d-97c8-98aced94c27d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d32067-3a19-46e7-b1e7-a5bafbb73cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c11eb95-d316-407c-9309-cf330352d834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f09d23-3899-49a3-89ce-14f821ff9ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "158af94a-a34d-4bcf-b6a1-5d1214e52bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4fe2bd-f815-44ba-bec4-e2e87f2cc236",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1f1a16-4597-40fe-91aa-830784ac1d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77c78ff-5c3f-4ca0-8e4a-b110d2e75f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be4eb63-1489-4bd9-ada5-7d9b20b698c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d786828a-f2f6-4eae-ab00-f7314ff804f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1f6362-c881-4c02-97c8-e419a4b24366",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca26aaa1-4a52-4354-a7e8-b18dfc4e5596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98a99d6-864e-40a6-a56a-d6c0a748f6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6556976f-4a9b-4407-97ee-ccdca4405522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2b5b50-b3e9-4607-95eb-c04e7ef7a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6924ad8b-fa3f-484f-a0d8-16d862e87ca6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20271a31-956f-4971-8118-af723c9aee97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ed4be2-1991-4959-a9d8-28df400e675a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb752b4-ab02-4081-87ec-936a92e46cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fd6183-0b73-4e76-823f-b7f488ec0ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d540bb48-a8c1-4d4c-bb3a-339342c65189",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f42eda-bf75-4efe-a1b7-217ab7dce6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94830de-167f-4f1e-8203-6baef802acbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879daa72-d274-4a51-bd3f-03c2b1063bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2155ecd4-bc08-4460-9679-e69e5321da0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ace4eb7-936f-46af-9ab6-b40bb5ee983b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c885fe-32d3-4b14-92fb-9a01c74ba69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3aa116-6da3-4993-8e5b-1459e97947e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b12042-2ae9-4909-b6b0-f2b6fd7d8e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5a9fa8-3ad5-46d7-a2a8-be33fb881838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cc1d4f-b110-4869-a9a0-cfc4f294f3a8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15722954-81d0-4400-988b-02dcafe18ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1915f9b-a873-4f0f-844e-ba3d261415d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1f9f6b-1929-461e-abdb-00bbdf3262ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d960da-d769-4e7b-9f39-4f927d21d7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0b064d-491e-4020-8879-f43b0cac9422",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53066c6-fcac-4afd-8ad1-f9a6a427673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871c26bf-9823-408a-95d6-6f520aba8227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79380436-ea21-4c86-985b-ef5ce0804dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7249dcd-a866-401a-b1ec-4608d6584f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3aac7b1-69bd-4811-b96b-6db44af426cb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4b3303-f72f-44fb-9c5e-d7b4d311bcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37382d9-2e83-4ae9-8061-6ed23500332f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b847dd7-11d1-4b2b-ad89-b074c48e6ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06debf9f-3255-4a87-af83-44404143c518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b62aabe-f6ee-4c30-b0c2-d57dace9b93a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2430153-a7e1-42e6-ae95-9dd9e8caf146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4abe85-46e9-4ef3-8958-f5731ed27dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580e7a04-26bd-4b21-9b32-1cc8a2cd1bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb220b1b-b0e2-495e-bc4c-6583eae0aea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b508e7-7827-4c06-b6ed-9ce070600d6f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af41e94-4fe6-448f-9eac-2a516ae8eeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b139b844-e09a-4967-83af-a893b441ac34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5057f7f-44e3-41d7-ba29-70037c32240a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "050a6356-c797-4c56-913d-2f7203f6cd7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "faf8a769-96a8-4f24-b1f4-9faddb458f1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a649c9b-e3b7-4c27-85ae-761c6020c717",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0feaa939-6562-434a-8e90-0f982dbfb8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b73d4025-5e72-43dc-b6ca-449ccc478a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0b07ab-b044-410d-b5c4-13952b6e418f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4fd3a60-8e5e-4cda-aa5a-724eb720fd2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c7edbe9-3e88-47eb-9993-e98debd02407",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "584aa240-3678-4ae8-907d-7f362e237924"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6879edc8-c3df-4d8e-a2ac-c578501d2755",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b23c5abf-6667-40a2-a11d-71710231f309"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c04823c-8bbf-4448-863c-8808f7f8d6ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0efcfd3c-45d4-43cb-b6a1-95e8e5048dfa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "90adf69c-0d1b-4853-99af-1d070b5ca1bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5a782f3-5ad6-47fd-9097-5e07985aa46b"
                }
              }
            ]
          },
          {
            "id": "ff8bef39-8a4e-4839-9109-ea1eaf51d88a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc1c7f8a-fab8-416f-9c1a-1d297eda11d7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "73537ca2-ae96-4cca-af14-12f7ff6df9ea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fa7008-38dd-486c-a0b7-4cb76ac55ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a25b1ddf-bdd5-4638-abc9-99c8a87158ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d8e52c-252c-4450-9d0b-ee7ed5967241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49ec10a-a8b1-413e-95a8-27d8f27aa420"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2532b35c-c06b-4ec6-9e30-702d81697cf2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b522e2ea-848a-4bc9-97e4-a8d93935cadf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8956f3c9-de7c-493b-9e05-ed24910cd7f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85f3f655-4738-45ac-b9ff-9882a8a522f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "216269e4-9c3a-440c-8393-6cc3130e76e6"
                    }
                  }
                ]
              },
              {
                "id": "0ca4ff91-0e14-4aa9-9c77-951960585f14",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "662ac228-484c-4648-91e0-205bacda7fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "438db66a-1608-4421-8f15-c3fd8b46e77a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24be988c-405d-4320-b5c7-218bee85c980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf810921-ef8e-4203-b052-38158970582d"
                    }
                  }
                ]
              },
              {
                "id": "e34ef08d-a63d-4290-af05-2ea0926d5549",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "287843fb-c128-43c0-a421-428d3514f5fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2ef0e20-8a8c-4b98-96c4-1a14496b13f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15f542a0-9d0d-48df-b1ab-ece6be9585e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae18d088-434c-4a70-8dec-7fcb229d74fd"
                    }
                  }
                ]
              },
              {
                "id": "f3621ba4-cf45-4427-9340-94c0617e17f4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bc949a3-8577-45bc-9fab-f0b1f777fcb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f236fab-cc2d-410c-a3c9-a97b3bad6c08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edfc348a-3aa1-46ae-93cd-5a199a48db6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c208c617-36b4-4daf-84f9-573e5ff2c6b8"
                    }
                  }
                ]
              },
              {
                "id": "9bb08fe8-00f7-4334-806b-c283615b4229",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "099ca9ab-025b-4bab-aeab-70aa3fa5a2fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6684182f-0a64-4e8e-95a2-c949e4dc409a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca4a2e8a-79fa-453b-9210-f3b5fe66f00c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "26bbe154-302c-4437-90a9-56f28671003b"
                    }
                  }
                ]
              },
              {
                "id": "5cafff5a-f5ff-4c86-b32c-582c30816c6c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54c55e32-559c-4aa5-a801-f06d0739794f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2355073b-a900-4892-b99b-1fd77498025f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaeb88d7-1f93-437c-84b3-757441615306",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3c642fd-dd01-41b1-9590-c43d1d9583b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37f99a2c-10ff-478d-b3a4-b201c0d2854b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0f65ad2-3a09-4c4b-bfb5-6b525de947fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5344669-d37e-48f5-a650-c17070b21e03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2adb3728-2d12-454d-97f1-8a0fd5befde8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7688fd1-52f5-455b-8875-d611ef8312a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "de0c128e-d82e-4b63-8f05-677639c66bcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df307240-e08b-4e0d-a9fb-d4ddb9132305",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c119ecd-8bf9-4145-be63-d9bc7523d255"
            }
          }
        ]
      },
      {
        "id": "5da6170d-f13f-4fec-a245-2679b75552eb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f95b8edb-3abf-4bb9-b737-328e4a93ef02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bb95efb-152c-4dd3-a244-1a62ad7458d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "805e7a08-2224-4210-ace8-7b743c3fa123",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8272a349-ca9d-424d-a3ed-c9e104750aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f372d7f-ba11-4362-9b5b-73c4c19e22f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0487902a-88c0-4b30-8231-dab9f233b44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a2d7b5-9a13-48f9-8cec-de9814b92378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fceb43-ce86-422d-b72f-76eb27fa0049",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e019ef-3c27-4d60-8f08-8fa0ed1452f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4f7fe0-0a17-451c-8418-054bacf2f8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352df927-4783-44c2-9dd4-aaf76b11448d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d409524-05f6-45d6-b884-1f1ebe4bb3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaf433d-4c90-4ecd-8edc-b4efbaf951d1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9425f920-5410-4c96-83d6-754a61e7adab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a48330-f2a4-420f-b186-c532924bba4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defc3d79-4eb1-422a-8fe7-a436bbd26637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eadb9dd-60ac-49e7-afc9-9a1d5819edbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0152c8b4-92df-41f5-8b34-bac9887f5235",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a74c9b-d595-408d-9cf8-f70bdedb67c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5803e7ef-317c-4c07-8aa3-ce09a57c9cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4836909-8840-4998-9949-26a926b655ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84245092-86ed-490c-8295-9e522e7f911e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b692a5c-7708-4146-bc37-4c6d388ac55f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5df267-7c99-4328-b169-17356b0e9dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9430651-95e0-4b78-9db4-16799a905eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eba7f5c-3b8a-4cab-a732-ecaa07f4b716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "450db754-f9d2-45b8-92a0-c43166efbfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab4a6c0-4736-433e-962e-139f51d6787f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a90034-6185-4a19-89ec-10adf772caa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93bb50e-e3b0-4209-8b1b-fa40566cfb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf57fce5-e0fe-4400-8cea-1db296564e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cab80901-cbde-44f0-8ac4-c18c5de27bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a8afcf-b757-4f49-9811-26eb21fd0d7c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f5ced-21be-49ee-894c-c03aab25861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4747ab71-6253-4031-9719-a379b079973f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406e8539-4fdc-44b3-b35e-3f869518075d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "95195bd2-2171-4d42-acc3-06cf2f4fa735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dd7595-bae8-4c46-97f0-00228ab7caea",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42e0fb5-4768-419e-bae0-14b6d8b84fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc9e013-5be3-4398-8299-f14361bff98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec43e5f-a3b6-479d-b6d5-c1c071d9cbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcea806-8a53-42e4-a77b-eb40f474d1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3470346-b8b9-4425-80cd-e740f387939b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21550397-a7c9-4674-b077-7c3133b3e0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b845c593-1366-4317-a8a2-142977ff83ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc07bcf-c399-4a1a-98c7-b18c4cf0f523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a216c0dd-9d26-4d92-bab3-f689db255cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcb6df6-36ff-4c5c-9e5f-5f2a64ca9ac4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983c3dec-7de3-46cd-8c39-d577b4f29c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c84f78-87a3-4d9c-a818-8222fabaa691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab77fb2-ee0d-466b-ad3e-b3078d8e4a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14fa6dd2-4943-4086-ac5d-9516add1e775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02941097-8e83-4e4b-9e9b-16d329496c31",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5f2510-f49e-4343-bad6-c1c8fb13fb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05eb0223-82a4-42a2-b503-46e2eb963948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3800fc-aa92-431f-9e15-a9eca079c174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfcbe5e-b91d-4fd1-862f-80cf9e99a945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ee3cc-8d78-4a1a-bfad-31d6704ba6f9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49b83fc-550a-4480-9e64-529016c81325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37e3aa3-195c-413c-8ec6-4d886956c455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819590ba-b06b-4cef-b1bf-97a9c23024d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "146fe068-ac96-42a0-ac66-5b69777d4749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af613d69-364b-4633-8cf5-862a37752bc1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d16dd6f-a35a-4a78-877a-fe4b7a65c95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d127f3d-5195-4629-a65a-31faafce1791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479407ee-3e33-4601-a929-2ab0ad28dc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdc931e-c85d-4394-b10c-544f80148b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c086b5e-bd9d-4ff0-b612-c23ea3483652",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2295f95-b728-4845-9567-9626e283ccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c7ea78-3c80-4dd6-a587-df88953b9325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed0185a-78b1-4b3d-accf-1c8dd6e4c270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a651dadb-b7e7-4c1e-8e41-0418bd784eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c39e7a-6d7a-490d-8fa4-818fd7ca1dbe",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633d59c6-f142-4736-b79e-c1c606ea435d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a746fe-4428-421d-81e8-ce086fb69b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f72b1d9-ecff-44ef-b3a4-4845c5d0fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d8d7b5-1365-4892-811d-8260dafa46b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbd31d1-3bea-42fb-8779-dedb8ac27dde",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aceb85f-15ca-4f8a-8a06-996bd4994f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66f3935-aa71-424c-ac00-e8ce6a716c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0517d6-7174-4e6d-96a2-ab465a734d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b626e7e0-4e09-4974-b9b1-57aa17610e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23470f38-f3a6-4f75-9d56-cf7bd6cb6566",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d15b10-8c97-4282-a88d-d1c92dbaed35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8299722c-da90-44ce-9495-8e0df7c166c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49188b9c-c88a-4fc1-82f6-b6a7b91e8c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee7c905-57f3-4953-9188-f46feb219c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9c429b-7f01-462e-b6a9-05a1ceda94e1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ef2a33-9187-4682-aacd-460999b5ed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56fce6e-4077-4350-be8d-d39dff32f7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c756a5a2-5153-4999-ad1a-c62c0d61ef87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a30f8c3-e03a-408d-97e9-9f17926277da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3e7e1f-90f7-4e9f-a036-2975f4b1e085",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d0b05f-0922-4570-819f-75c4bace9534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7598556c-c050-47f1-b3e5-53db275a20c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4008ec-f544-46cf-98c8-5de2187d2c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094248a0-f770-4d12-b2b4-a3ffdbb96c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9340e5-421a-4f86-9796-b5cea3507ed0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f72e96-6890-4c2b-bee1-c1965d10f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4333eb05-7f4c-4999-b18a-a74609a966b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8eb2e7-1870-41ac-84bc-d8b125e9684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c229a03-f51c-485e-a7b2-587a17d69c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2962db5d-391b-49b3-92d2-392719c066a2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f493f2d-07cd-4b42-88ba-e6724508330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053310b3-16da-4ffe-97ab-6fd88c17a069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca4144-ce23-440e-bd0c-ffd25768727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74b145d-609e-4298-a7aa-5e407167dba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50179069-a63b-42dc-a4f7-b2d11d1ddcde",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b398cd-732b-490d-9865-2fade2ef0ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f24914-d0d8-4e88-b58d-60c54311137a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e727f137-3197-439b-8780-0b87bf6dc894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac63e2dd-b3f3-41d9-b032-6f09898203bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b7e3a-9227-49c2-a7d3-ae34ee738f3b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a814f92a-4643-4926-8473-43be7d885604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfa2043-e918-41e8-8d73-0762a29be148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5536ee74-4d65-4c9b-b28b-40961d93e291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6dbd4f8-f6f6-4bbb-97a6-39916a958e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01753685-a52c-4591-b58e-5855cdfcb409",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0b3f19-afba-46f9-a58e-bda6173977ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47f3feb-e3e9-4d37-839f-8f37a225675a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189dded5-0d8e-44dd-a9e5-72fdbc1a515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c5dad2-41b9-40f0-a0ec-2593e906db19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65575493-c6f0-4906-a36b-19a6edd98777",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fcd99e-ffde-473a-9e48-236bea171cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9acc12-5231-4c70-9ec1-b5b0fbf0872b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ab68e0-4c0a-4117-bd92-f985bbbd6e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4609418d-957d-40cb-8a2c-ee6ecb1ce7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26336fa3-6fca-44a9-b0c4-aa6814531514",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81313b45-207b-4ea3-b2e2-bffd316f1185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f268fd-8177-4946-ac91-d6f2ebe46a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5945cec0-fcec-497a-8072-549794186bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c28960b-4d01-4e84-8c79-55a1d385b599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c9f834-237a-4b6d-b290-c3e3fb926fc7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb3b629-d03d-4e55-8c0c-d89d9cb5fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bae4b3-86bc-4966-9ba8-edd2706be4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e314a124-f376-4fee-9f6e-813e8d06da93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd8fa16-9f8e-4b7d-8608-1849e423483f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0c3613-8183-44d3-ba00-a3f590529a0c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a638bc27-196b-4614-bd1a-3d67977985e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbdec6d-85f9-421a-aa3b-7d6b2ad463ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b3e0c6-921c-48e8-addf-ab1c12da8be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f180e4-aa70-4850-a1cd-757992d1fef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b897c3-438b-40c7-a98f-1d45dc856184",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b811b5-d453-4d44-8f65-c08b4653df50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adfc163-55fb-4e5b-8f4b-f7ecc49b6ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbde1670-3b78-4dd6-9ad3-61bac5a63d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f055c6-7d10-4c8c-92c0-c0c66946eaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081ca2cc-706b-4be4-9809-ddc162f1c177",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074bf11f-28b8-41d8-859d-d256263a1964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a40ea6-353f-4d3c-9a12-c69e62364cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92a511c-c01e-4a24-9806-cbdda0148b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49361229-a444-4509-ad49-4d8437863f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e2a788-aa6c-468d-b863-615744ae39bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61723e98-757e-49ea-bd61-0a587ef38478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ede8cbb-f780-4936-9109-b08a726d3c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba41e9d-ea17-49d2-9e66-315c8d23512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b263e655-1e35-42af-9c02-f3e6df7daca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb3918c-5bf4-46b7-b785-61b717f186a8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b6ca93-0bc2-4157-9ffd-adc142ac1d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb9d3e2-ca7f-46f4-ada9-85724e13ee54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f714b1a9-5552-410e-ae7d-dbd2c35e548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec9b95d-0232-45d7-956c-0919633d0b22"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b10ab2f-3d5e-4765-b12a-f6b67db42082",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ad10096-81fc-485f-b4b4-6f78944b9a7f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b737dbd3-e28a-4d4c-ba80-ff47e365b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "005b8093-4a8d-4cc0-992f-f791bb9238e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d425aa1-821c-4e7e-a582-597651795bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d65744e4-4f68-490b-a64c-15577b79896c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02f2e849-0372-4ddd-80a9-c424522ab2bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "274f8bac-16b4-4efc-97f1-0c63d205cd88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8737b4c6-d8fc-4625-85b4-98a577ccd818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e041d635-ed6f-4b9d-ad91-e18db96f09d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05f15227-4876-45d9-804e-6fffe9c94949",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08369892-9860-4a8f-b1e2-6a3246f55bd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef13853f-ae65-4c97-b792-b66e729a160c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e54d833e-933f-4326-aceb-a8ea9a2c0b17"
            }
          }
        ]
      },
      {
        "id": "2c12cca1-6edb-4d9d-924e-c81da3147286",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e6529605-21e4-4ef8-9702-0d27f3110df4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19d27f06-db84-46d9-a08c-855ba6a5f80e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df33864b-6e8a-44dd-9ae7-a954ad8a3f28",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfea82e-d8cd-4b25-b7b8-94014b3b6ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b4b4bc-b3f6-426c-85c2-146af7c3c337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab45cb9-af5e-4941-a50c-5aff45f5e7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "68780c92-ec94-4e08-8540-a1fcde94b62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b36814-f22e-414d-8e76-7fcbf08500d7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908461a6-ae7b-4000-a5e5-4d937d917621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d67575d-bdaa-46fe-ad0c-ed3cf8cb5ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3696e899-bb3f-471f-8695-92a928c1b08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d44f5d-6b51-441e-aa4e-f2003cb85eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352c5cd6-d17f-46c5-b8b0-95560c113bd8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c1e0c7-8a73-41f6-8620-2f92d0ebbb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fd3538-f5a4-4a27-9d8a-e213d2ac5c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ae57f0-c35e-40ed-9f3c-556290309f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5c05db-bad2-4045-8e2d-714fe4f037e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed274c20-2ef1-4c80-b352-ca5ab0d712aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3ba668-5235-4c83-9449-104661f2a160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9084014b-711a-4f19-a681-aae2ccb29d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5810dc60-b236-4591-af24-92e1c580680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc0c227-2a68-4ebf-9337-b777e0fe6c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6822ad-23a8-445b-8a71-4e76fc3dbf39",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363bb231-707d-4b36-b924-1df4ded5820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8ffb62-c337-439d-a004-9914b3a185ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c444441f-eb6e-4077-b183-f0f40bd921a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0621ffb1-010f-4a66-a5c0-66c7165adc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d1a89c-0f62-4a36-91b7-64f30e23f6b7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d854a4-b8a7-4cdb-878a-2b7c8256fddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ec2018-e256-4893-b0b1-3d1a376c0a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29d32af-3fb7-4cf9-aca6-9ee1084e0c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd224ff-b0fd-4cfa-87b7-4313627a8f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee443629-6708-4e36-9f2a-28b75ac2a373",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfe73dc-9722-453f-88a8-ee2239990d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f2c209-4e16-44dd-bf14-6cce3ee76303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae78d79-93f7-470c-bc77-410aaa5e4a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "90691129-1370-4b05-8fce-efe8c3187fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33c96ef-0d7a-454a-bf2e-81bf6acc45bc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ea36d6-887e-4804-85b9-1178134efac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb1cb00-abbf-4513-9d6d-50f9d8f348ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a89f5b-3282-4577-81ed-ee782af53d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5177be08-d3b5-432e-a91e-2daac64ff0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccf2203-88f0-4dc4-b112-bfd5207f842d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e86076-c31a-4323-ad67-89af95e00c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40954591-824e-40b7-aa4c-18b24d7aa0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b36cddd-aa50-4f01-b36a-fc8a6818a229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a152ca2-dec6-45df-812b-d08d1c78d1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6067f66-7631-4bf5-a36d-db32aa4459a6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b108afaf-beb2-432e-ae18-ae0e67c7bb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05421d6-f7d5-4769-9b09-d18ca59a3442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ffd36d-b4c5-4a45-91a6-5a038a0461cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2448fc-3dd4-4676-a15e-032cd2f27445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ea84ca-703e-4c4f-b1ed-814f059efe37",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25cd9e9-50c0-4764-83ff-0c214b03cb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c785365-8910-4405-bd71-3db5f945e396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f2fc44-736b-492d-81c7-9d8e302a7161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02803212-63f0-439d-a776-8a141fe1b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cf90c7-36ff-4351-b876-b114edf76c75",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9441beb-22ec-4fa8-bfaa-07bffffda2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeecdf57-b770-4645-b204-896cbb1efbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bb5d12-a628-4f79-b83e-91fd345936fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "773b1a4b-daca-4e6e-83a0-f8602f50f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4eff60-f2bc-4c26-abde-c5e2dc6881ab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbb453b-ff6e-4f96-88aa-1fd6f9bb05ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b722dc-6009-4b3c-9573-5bc02d6fe8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33cf6c7-f9bd-409f-8ada-e771a6c40318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae86e364-d4b0-4e9c-96d7-01e5cc0b417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e7f35f-498a-44e6-8f12-1441dd461a3a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4f9098-a33d-473d-ae44-da45df6c0a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f99f98d-1655-41db-8104-ed1cfc29ef03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757e3dcb-f6db-48ce-9d99-10b52fa9c388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "680907aa-7b94-4dc0-bac2-a8c38cd94278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feeadc2e-651b-4264-a770-d3fecb564737",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4372cbb9-3bf7-4423-b16e-4e3cba949abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892a1a7a-076a-40c9-96d2-5ea14db3d128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c29831-827f-414c-abed-ca87de6c2d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dfd35b-7aac-41bb-89f3-7544a1210261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe08824-035a-417c-8551-f2106d4e6c98",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740a5454-0b30-4d84-8de8-924e6b54142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cbc975-9d6a-458f-8b06-955814f69297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16a184c-473c-41c7-9454-e68128261643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf1d81f-94ef-4bd9-beb8-5141cfff9654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b170eaf-21b0-424a-8b84-698f5ffb71b9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f1c5d9-9db4-44d4-96e5-4616b49fc751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e572d6-6c7c-44b0-b5c8-a6f48d1c1f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec6d6a4-c77a-41f1-82c7-6f6a96c85833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bae3fe-a801-4a99-8cd5-70ef07967901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2de9b3-8fa4-467b-81b6-d486f62d52eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dd7ef2-a8d3-4197-b900-3af63e44b291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1123f45-8753-49a5-b56d-cdba25d23e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4245f952-ba7a-44d9-a866-cd26ad2d17d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc8d572-6c64-4e54-89fe-d49baeeefd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02437f27-6204-4a9e-921c-e7366880f5ed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de924e38-d742-46f4-8d29-8473d541ac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5637a596-dd9e-4d81-8cf2-f7b0f4f734bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cb3933-9dd5-43a0-a0cb-4762209ba9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d4a336-a395-4eba-b45a-2da24f2e67ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412dedbf-b0d6-4d31-99d0-22127a0bbf0f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567cbf3e-ed93-4023-92a8-9afcf1b3edac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c04650-6436-4ede-90e9-302780770f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f37d64d-ccc2-421b-a5cc-0f921404247f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a0627c-efdb-4b00-80e7-49342a2321a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4763d8-3539-4df4-8734-7b7806a7dbff",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1528e69d-0d75-44b2-95a8-6fdd1a7bb948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c8dd22-719b-4d77-8b5e-64a49b3d83bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd78d145-bf90-44f7-b41d-c4de52821e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc00bba-4d10-416f-826b-052e958e0352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201b4085-7db6-4e03-82e4-c452582aa141",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aef0d7-d32f-4efb-8786-729d93cec5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81f9bb8-a237-46f3-ac19-eaa1d1b34804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb99e22b-ca70-4ba0-98e8-5a850852b8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24febc9-46f4-4f49-adf7-1e153f8406a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cde5982-b2c4-4883-a555-26648e584345",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1864cfbb-ce4d-4126-959b-ee2bd90fc0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff84b6db-dcda-4193-86de-ef010a8d1472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8800222-a60e-428e-92cd-5aca1e3fa07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a14742e-e269-449e-a28f-f1cb30160c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99621f7c-6543-41f4-a53b-753bd9c1f05f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe3ecb9-35f6-4774-abed-2415982035c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d74924-36e6-44c2-99bc-80da34283d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf88487-59b4-450d-b70d-e72065806a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04f05a8-6d66-4b28-9c26-a1c7d354eb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a51ef2-ff44-4f52-a523-ad9b7980713a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0274851-a869-4302-ba01-0a7b7b18f25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1e5297-5405-4f1c-aea4-9c737c7f5e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7873690a-7f79-4402-85a3-51e056522a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9726fa6e-81fe-4fd6-89a6-37a381fc30a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb101875-3d0b-4953-b766-310eacc2f197",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524738d6-b58c-4db5-97e8-cf902972ba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d95f9b-9b09-44d2-b8ec-18a6565dabd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c780eaa-2593-441d-a3aa-7489d3966152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6879a795-282f-4094-9599-81276a263de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860ed1af-f087-4c8a-8445-ea73cce2ee14",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f20e61-92b7-4a7b-8d9c-74973a06c849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df15e96-15c4-4448-92c0-581ff1ba2fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cade5ce7-1b60-4461-9b7f-12237a7a6916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89bae8f9-5e4d-454f-9a4b-a26ad98be196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6164a11d-d341-4d5c-aff7-4d37eed2951d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59870ff-3f29-4390-bb39-06b82b2012ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03568fc9-48af-4b5f-8547-17dd68a78449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2f0bd6-1188-42a4-b992-872c8ef06580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1491b4f6-b5f4-45c0-8458-45b2c188a30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35437f0d-4a47-40bf-ad02-f2eb6b196dea",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea16f267-abfc-46f5-80f5-7de0a8d3d1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f80ddad-6733-4a64-9604-8dfd506d516d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7b4b4c-c8c4-454b-9a78-cb9b6a3094da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18104dbd-4a0d-412e-af72-0ac4c2fb0588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01a6f4b-afee-4668-9982-e6cf2c3f1c97",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca0ffcc-e5fe-470a-804f-b39a45a8d9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87e26bb-2af9-4279-99ed-d581d54d9885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c005a7-5c65-440d-bcdf-568ac510a2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3819e57c-e49f-4808-8a2c-18d07cd18a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f977d81-46b3-4801-a667-31465239aba6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1fcb2b-0d99-46b3-9f81-3a5c02064248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9476583d-518c-409c-9bc3-eb2ab119ac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8c6099-26ff-4c4c-a4df-603f1bf28cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b681b3ad-6940-42ab-8522-0b0fef93e8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078cc706-49bb-4299-a7f6-4e8cb15bc983",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fa2dd2-909f-49e2-b9d7-de18ca7d1c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ba4548-17b5-4b4e-bfe2-33209f1aba8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e975e3b-0bb0-4088-935a-c08e16d87127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc858df-2bc6-4161-9014-f961b3df350e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9b6fda-ef6f-4830-a6b7-76e8f672866d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec05b8e9-57c7-42dc-af48-0d26e061b7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f9b8ab-37a4-40c4-b3e0-cf01f8047896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed2dfd0-8756-4303-a50d-3f1f3378ba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c96c7d-8ad5-46d7-9c26-4bcf805d868c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a1b432-08d4-49e7-bd85-76dafb3a63bd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68307d38-dfaf-44c0-838c-63afd098a3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32331a02-289d-440b-9c5e-0215729aba16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f59fc3-0ec6-44ae-9d0d-3dc481ea07bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c44666b-f7e4-4a6a-aeb9-1e17fe36ff96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91d2def-4caf-440a-99d9-cb9e018f22b9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f9d79a-91ca-4505-85ea-0c60a763c5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27da431b-ed45-4f0e-a037-4c9a9f0ff4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d9c15-f499-4f77-894d-c2509fc465d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4252428f-ca8f-4fd7-813f-28ac8acbf459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91754edf-1946-456b-8baa-4660d4e600a2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41af21a3-598a-42de-819c-ab57d8c7b168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a31335-84ad-490b-9926-24ac9c576cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14187330-c150-4268-84bc-9cdeb2205101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7156a2-73c4-428c-b661-629b08518a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bab3309-67d7-45a2-b5bb-c074e55bff1f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80407b9-ed5a-4acd-9be5-02651b8b90b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e29cd6-58c6-4c15-86c8-329204f0f57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b309318b-cc33-47bd-9d48-5fa3142deaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d09e0e85-0502-420b-8a8d-02665b21f15f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b714acc2-ca6f-4278-8e1d-4a9708b95e54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dcac96a-e566-45e6-b4f1-46e9d1e362ab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedda4c5-4900-4023-a9e4-d6c7f0a719fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d18d76-f4bf-4390-9bef-d3f95352cda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5339132a-f55f-43d9-9e2d-b7cafe236fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4178437d-d24b-4bae-9064-5bc3e9a2a744"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c1e8bd2-7546-4c15-a2b9-ef2157474693",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b09a6c9b-d47b-4263-8db8-0c1c228fa7a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cf3c167-00bb-4003-9a82-58173f4b0325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33178fe2-f629-49ad-950c-f9d6a14ccc2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b77027f7-212b-4bd7-a741-eecb9c738a57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6566b217-9870-4a95-a807-da8af2135d43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9ca4a4a-d648-4d26-81ab-eed6e76d3abb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f5fe60c-7cfe-4d96-a25b-c20caf05e771"
            }
          }
        ]
      },
      {
        "id": "6fa878de-1181-4051-88ac-248e0e4a6bfd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "030fd613-faee-474b-9737-14e1f226b93b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18605955-0f45-4ceb-9128-f9ad6b30349c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b46568fc-0698-42de-a842-cc606c72d9a7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a24a314-ca5e-4544-861a-60daf07bd864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5813991f-6e14-453d-a9c2-cc03ef9749cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea804947-cfd3-47a4-9510-c98c05bf134b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3164811-c056-4836-b05f-aad41c221c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d80aae0-49aa-42ec-84ab-cfcab844bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5b7b7f-4508-4d86-8f40-f5709d2e77fd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb4132a-14ee-455d-be43-77fdb410202e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a167f711-f13d-4b2e-923a-f9124e0d72d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefe13b3-368a-44b5-b9f7-5f7a08f36a29",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db63a70d-ff6d-4ec1-bdcb-a4cbc3af75ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e874c5-3eb7-4a6e-aba7-6f7c61f3be3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abf8d67-9314-4f37-b677-91c1e982ff48",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8176aac-2bdd-4af4-b852-453efbe047ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762bfe76-df54-4694-90f3-7e9563076013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e243a69c-bb92-4e24-9dfe-9640c1a13deb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57abdd4-0530-4aca-9a2f-88d8ee9386a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68f7a36-07c8-4a9e-9416-bafcedc0c894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c745bc3-222f-4a67-9e6d-00cf9759c0d5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f184605-0997-4f59-b8c5-392d77dd244f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e277addd-df41-4600-b7d4-14b590acd997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cafa0ea-97ad-4559-b67e-1061df40d61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f135639c-6a98-4327-ace1-a445f89186c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d452d07d-b702-4e1f-9fa0-60adaaa9aae7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2169f084-82d3-4dd6-be82-c69cd3ff0e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3934a6-281f-4d52-a92a-5e301b1f9203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9f564-2b30-45f4-9574-aa9fa7e80616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f552cab4-653d-4277-8c5b-52bdc3a6b805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fe7be7-a189-4020-8c3d-b18c0c17a038",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaccf6c3-ee21-41e5-b813-5b4c6f58e745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52277d9d-6460-4c19-86e6-337138d1af1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39314570-8375-4128-ae28-67d84ac489c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18409ef-f59c-4416-9492-84ff59719ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a434851-a37b-4725-b772-059c7a094720",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520b28a4-83f2-47cf-9362-a6199a1ef335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "084b1871-406a-4e64-84a5-015513dee14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34161e0-9280-4d5d-a144-806fd64d062c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362d9afb-1c23-47f0-8a5f-315ff8a2587c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bc6e57-92d7-49bc-87fa-c3109de275b6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee802c0-2312-4e18-b9e4-df9a6cdffbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49e3389-9968-4170-bb85-0f9171b25077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86952b9e-5a8b-41ea-87bc-74ba6cbad95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb4d7e8-d333-4290-b84e-31b1ef6027e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e1dfcc-55cb-4181-931a-f5bdc5643a87",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb02906-a06d-4cb7-9db1-fa7b4c7c51b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb42cf9d-0908-4f9b-bb5c-3f64e794d73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f611fc5-6731-4a88-947b-2bdb93fadce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18ef490-11d3-4d87-b9cc-9ddeabd29b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e7ff55-2631-49b7-acd1-b1d525ae9a28",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddf89b5-ef8f-4cca-8e3e-d63d0711d367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1c8882-2f8a-49a1-a3ba-a4804a7d97a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdd72bb-a698-4d43-8d2c-7fc53741b016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9bd066-a13d-4826-bc61-22986ea1fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf906377-9ef0-4b2a-b803-c97d174edffd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03aa82-fe16-4b5d-becb-8b18f5352231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b631bf6-df59-4dbb-97e9-0f7af1ce3c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4297e6-92d9-4e32-8404-d21885adf41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b93bb0-880e-40bb-aad1-40d5fcb14640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687b1d98-5202-4cc9-b5aa-0f6b6346e0ed",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b7265f-2c2f-4ebe-84f6-640bf2ee2e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8467abb7-a112-4b8f-a9d2-87f4cb1554aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f534b72-283a-4b00-96bf-598234e5d64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad0ebf2-a412-48d1-8720-739a448950df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ad4c33-d3fc-4a67-8381-c4468bdf7843",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c166d06-c0c0-4693-aca3-b4cca6b3a4ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbd6853-299c-4d2e-9320-1dc1d521d30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d4db57-b720-4360-84b0-b1c0d3b4202c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27207703-350c-4b0e-a75c-52c1c0ed691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c782d8-bf93-4223-9d6a-3c9a91dc6be5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a015efee-bfea-4ca2-88e8-02bd3f2cc475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd6498c-2d33-4ee9-922e-791f78cf40f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a1da2-0111-4c47-a4aa-7002ff98b171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab5879b-914c-484a-b870-79834c492364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9acbf6-ca8b-49f0-9f28-eeaa9a990efb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d05662-535a-40f2-b6e1-a5b1b7f3cfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cffafcc-9ecc-4a9b-b598-ca0694e8ea2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eeb6a0-59d9-4f5a-9b62-8d4c7cca1f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1762813-19a7-48e0-9aca-a480717dc34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf72c551-d21f-4c2e-aee1-7247503791c4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb90b0-5a29-4e4a-94aa-36f5b2b896a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7949741b-9e69-4c93-84c0-d443e4ccbf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7e10fe-11cf-40cb-8102-e5c263d324fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da92c0dd-9248-4675-89aa-3ccde6133c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71de7acf-19c1-41f4-a614-4c229d29fd78",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fc608e-a026-47c0-919e-4ecfd61e881d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c6a3dd-db88-4173-b317-044f0c9680ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030c1d91-4674-46c5-abda-19591a85d647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9feca060-457e-4812-8e97-52767f602d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c6b614-90a1-42ac-b698-8475cd5de3ac",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4abe941-6691-4535-a52b-6f8e0ea83373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c983f879-585f-4d52-877a-8f89c16a055a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108609db-dd9a-460c-ad8f-485c741e2a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de62a8e-2f47-4962-83c5-8e76fc08c06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa381f6-7e94-493b-9a07-6f11b1fc0057",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e120aa-7ef1-40c7-87a9-fa8e31ad1642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7502b63c-3779-4ee3-b492-1f57fd4cfded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03df5c58-1889-4290-8292-37f1b6b50b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bd6f4b-cfa6-45d8-986a-2694291af604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba76856b-6c3f-4936-8e1a-7719c894fffe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9028533-2bb0-4bbb-8125-f15700ad932a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242fd9a6-eb5f-47a3-af88-d1e2da26baaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71b6443-44a2-4c9e-8f0e-87969efac276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d9bd68-d2aa-43d2-acd8-6ec58fb390fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de53d3d7-08cd-420a-ba97-0e2bfe675756",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ef0396-7356-4b97-8132-45b934334785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed0acb5-dff1-42f8-814a-cb618dccd111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4318c8-073b-41f7-ae4b-315bcd69b153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a380f6-3fbe-4404-bd1f-9c422cbc65e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa30ff3-0bf9-4afc-a3de-982be1c4f760",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22644b3d-f9c4-4a9d-bef8-3fb24ab0cde0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a236fb4-e8e0-43db-9630-f5c192805c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e306b5c-e30c-4408-b4e5-e7cb6c552940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e763895-8221-4251-ad01-e3c42a695180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb5d104-5ef4-4d6e-b973-f035be2557c3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9418ead0-8212-45aa-9794-70d41161629c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c27a18-6b09-4f1d-872e-640d52770318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f733afa-ca3e-460d-a61f-ccddea8c2bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0524c78-103b-4b4d-af53-4c540c40518e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8001222a-746b-44a1-bb60-9548a66a641c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea80bb9-4c68-4d98-9652-17426e18b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f38ae24-0d68-4247-b863-4945b0afd42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e740df8-a59e-4615-a06c-d7b93b9f768a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f6c039-9606-4b31-a684-53a4dceef683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f15d9c-3d04-476a-af9e-409a016b59fe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf6491b-df5f-4867-9457-53b020d8e279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcae44b5-2414-47f7-b70a-c07e0690c51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643c779e-300a-4f9a-80c3-7f44d491a33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff4b8a5-e005-4d38-bb8f-b66215aa9640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71e57dc-61c3-4eb6-a0c4-19084f018ef0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c88d65e-72c7-4c63-94f2-415a030c2c72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4554599b-fb7b-42ce-9d8a-a49618336401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459768fc-4aa9-4c83-b9fa-06d50ae3936c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f963f5a-a554-456c-9e6d-eba0208206f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126eb3af-4eaf-48d1-a625-5f48d585c9c6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f3b975-7076-4d70-b537-8d48254fd955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a6ee2a-b399-4362-8dfb-c3320f044018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26de0a23-469c-4153-aa0f-4e10af5a0ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89538f90-24b1-4692-96c0-8d8c4cdf4976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ad7c96-58d2-443f-a599-48bb637f5606",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab076ef4-119a-43d1-b30d-e35b6d4985eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2840840e-ec68-4d51-8de6-85487bf5d6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895e53a7-9b65-4fed-af21-523584f533ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb61d568-05fa-43b6-abda-155454cfab46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d24c3ff-b6bf-41e9-bf6e-a877f5ad2ee3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7578c74b-ff4e-4321-b377-052151cfebe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e42160d-a51b-4207-b160-f725ccdb6ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7f67c-4de3-469c-9f8f-551b9873a31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd78f04f-b1cc-4cd6-bfdb-8d1cb61c9ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b04eaad-7a3f-46a3-b854-8ac45a5e29c8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b404e5-b76d-43fa-ae78-2bcdeb15bd7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b90d94-47b2-414d-b19e-80efb9f174af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75c5837-5970-4de4-a45b-bcdfca1ab77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5794446-7c2f-44ce-96f9-27a4a49ad211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0421d64-c487-4c97-8384-6e3a929c03f1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac81f87-46c5-42e1-abe5-4d8a54e871dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5702749-2796-4b32-82ba-c2c5c77cf0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e988769-ac67-4722-a27c-b076789e7b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50897c8e-9907-46f7-b0cc-9f54b91e9b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c79337-d9e9-413b-95e4-629f9c7ea1be",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a389b-2b8f-41d8-9355-50cf55e229f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb34a77-97af-491a-b9f8-b9c8c101facd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7189012-0573-42f2-9260-d6f0faaf249e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c16c3a0-f23e-4274-b77f-e115c4ac157d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec93bd7-9e57-4463-9d7c-097d74c6289e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9b9d08-d749-43ff-9c57-ed746285262a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94b6149-2e9c-4d23-909b-7d27780f09d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ab593c-b2a8-4c6f-9e1a-1ad1be6172ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff642158-f365-48d4-be76-6aada22c0281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284f6b8b-608b-4f65-bd5d-b411e0e81fe1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8e28df-5aa2-41a1-b5ac-3a3e1bdf98dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47f9cc7-27af-444b-af43-97815178863b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a09f4d-0a1d-4c05-82cc-f9ebf51ad8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7932ae44-29cb-40a3-9a5a-4ecd0dfc6502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e9fee7-91df-4a10-98f7-bb8f7100cc7d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c14006-ee13-4653-8305-49918444aec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed239338-f776-4f55-a317-17277f08f9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a44fa6-d896-4533-b419-90df045ff509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c083b3c-59bf-4801-8d0d-f0ce1a584a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6181055c-e14a-488c-bee5-544fbf582504",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838dca80-f9e9-4d28-b430-b628ce8be87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237c315c-bd9b-492a-abd6-b24b627567c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e02bd2-0e5a-486c-8175-7c2bc05c760d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41866e21-2f6a-443e-acd8-1869d90930ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adeb964-8382-4fb3-beeb-085c9196475b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f8ce0e-c193-4e3f-9ba9-f52665d6af98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f3332c-aaad-45cb-b4b8-d01bbab4b8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82aad902-7708-430c-a838-1f2fc3b11afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c19bbf-e090-4ef5-b944-f2409195bcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed7580c-c450-48b7-85e6-389b3f5ae64b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0df628-daee-4940-9afb-8f69b3708629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d0f887-9f0f-4de5-a70f-da7476f0cfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045d1875-1239-45a9-bfb7-f8a2cec2d85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbb1ed7-47cb-48e1-9925-5d30fa507171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345e527d-3ace-491c-95a7-16ff9978aa1f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffd15e4-2a15-41c1-8e04-82b0115c54ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3db84a-322e-491d-b8c6-129806c233ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbdd7dc-1132-466b-8d52-e1f99c1ca16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8dbbef-38c7-496f-ab4e-b4136750dfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b062cc-bd33-4626-ba0b-aef89d465bcf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634c1d69-fd9e-47c0-9c41-246eea652ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe5b35a-7342-4b17-bed2-4d921f6488d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cc4c40-6b0c-451c-b939-ab5c070803ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d46af0a-3b3f-43f7-8fab-9293b56602e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0167ca11-afcd-4bba-b8ad-79260ea250df",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2c54dd-f521-46db-b5fa-60577b823532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed9f915-0970-4e16-adf5-2842a1b628cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360f80cc-15e2-45cb-a3b9-a8ad2e44bc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33352bde-06ad-4c22-a67b-41fe0b3c72db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ff68b9-af2e-4f39-92d5-1f34f5cc06f6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8ae42c-477c-44b9-8322-3e39c5fcd8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0092276f-7c5a-4e18-a16c-a3c26d5e4314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567f364c-2b7a-4319-bc3e-ecc67561688d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87418c80-a925-424b-94d0-8c283e206020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee56afd-beac-4295-ac8c-c4c578ac93d9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02a15fb-a0cd-457d-beb4-c310723c8e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c98d8e-c6eb-47b5-8bcb-0b475dc179c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c00503-4982-49b9-b2ae-82381be9e67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d793aeae-18e1-4add-a1b0-84d9dfb6a51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7dbba5-5401-4097-8200-03e43c3eaceb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0889493-2e6f-4221-9141-67b599d259c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e63b0b5-c4b5-4443-881a-8473f09216bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb87cf9-993a-44c3-808e-8e68abbb3d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689bcda5-6411-4dd7-900d-0d83c2ff2e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382331e7-f33b-427f-92bf-c0ef873fe633",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e5b5a5-eeda-4a4a-b49a-07e72b82b453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66ea7c9-cf0d-490e-8b11-b919a37c6150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71558e54-5bc5-46f6-b782-d4837a524a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0dc23a-0e22-41a7-bee7-ff8a9b6377a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238ce488-7f3e-4e49-8fb6-31b687fd8520",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6ffe85-e6b7-4bd3-8b02-6fc87aa43d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa87ce5-a07c-4479-b308-3a014453d868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0593c9-9fef-424b-928b-48d7688796ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66981602-f04d-48c3-b421-499fcece3650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480702cc-50e9-4a9b-a346-27810f3a720e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602def9a-197c-48c0-a096-c04cdcf52f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43147f5a-c7dc-4511-a41e-6c46ebffb047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea3c2c6-40f2-4fc6-b4db-58cf687aa6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1e2e81-5659-4323-b7a4-310a8dabdc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf3a2a8-3f91-4dd7-a3cc-f7cf89d10f76",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a19a8a-9d2a-4bc9-bdc0-253214db07b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d65fc0a-5f30-4338-a187-4413c4b0c8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371bed8f-1ce6-4158-be0a-aebfc03cfef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7d60b6-0045-46ef-bd70-3cf5830bd281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4eb5cf-4f70-4a78-a3b8-dd6622b4a490",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d971f4-fdd5-4e4e-b797-fe6014b6305c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bce81a6-2640-405a-9693-ba52dfd296dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7983d9f-2dc1-4100-9a78-646e9724ed8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb3606c-be80-431a-89b4-1df752112d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234e38b2-b977-430a-8c0b-d301b6081477",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fbc553-0d10-4b99-b32c-f3b3cd9d2c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda71915-5ca0-4292-8e5d-97dfad8c772d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce65f52-3da5-45f6-aefc-784b0d91841e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbc2abd-fde3-412b-9546-10ec17fed3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ecee14-cf4b-4925-97d6-d2a9dab373ee",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedb13bf-f2c2-4bdd-919d-3f028320c783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c13ec0-6740-4952-84e2-3533fdfad238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eda0e1-a985-437e-a5c3-1b57bab073d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca515840-cbee-4182-8f5a-70d3ef8ae0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b520ee5-0a26-4216-92a2-fb5be0f8ca27",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6671e536-e041-44ea-b4c1-f2c9becb8a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92790511-ed5e-4a2a-a2c1-6fa6fc21b38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b844b700-38d1-40a6-a569-b17077aa3a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1355ea25-b547-4f8e-8afa-105c19491adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4718bcb-0e16-4056-90e2-7d84d6c6d247",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8138ee90-fa67-41da-a157-86f56dc3ae7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8739117-ade9-4f50-bd6b-d2335f35c9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0442d8-98f3-450a-b119-5ac3959245fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baea17a-61c4-4eff-882d-c1cefc796c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9002bb26-b469-4e0a-a2d0-659ab5c67a55",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dde6ea-1d3e-4d83-94cf-c01ad4ffafd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063a835e-9053-44fc-b8b7-1ea437179162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd1ad1-6bd5-40ce-9056-639a05dced3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a80846-e6d9-4653-98a5-4bfcfecd1db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eb1f27-5a7d-4de0-98a8-52af1beb14e5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81333822-78ca-443d-a90b-069a30f15a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb09813-df3b-4cde-b9a2-ee39311c1582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d24c927-2cdc-46f5-8bc8-7a2cf8944d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b6b710-fb44-45b1-954a-d16e7d911d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4f676f-5254-4a7d-81d3-5fde2e19d911",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29e391d-fe93-4cd1-b974-18f0bdecbf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c3656a-ae38-4c58-82fd-349cf26f863b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f91aac-ca8e-47b8-81f2-45bd06cdefd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331cd7cb-c1cf-4125-a2f2-50c1817b3a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13b542c-7f07-4ea3-8f3b-1a34fdb31e55",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a009e8cd-81bb-4d98-99af-43396d4af819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8ba789-b599-4063-9cb7-c69dd2c60735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549ed7e0-ab05-4d74-9d80-469f8d7baad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae0a4ab-8a34-4f99-82de-5be300daaa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c32f034-e0d4-44aa-b950-254003ea823c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dc9a72-ed17-4bb3-9c63-2a403d09ba02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5fe378-1733-465d-852a-70f6476c149a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ce7d73-90b3-451a-8c27-a0bf803477cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c23c892-39ca-4ae0-81dd-ab356c5a4091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5009e2a5-5684-4b05-bb2b-09c63389048e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c172f6-0509-4f5c-bca2-e03565a6e12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa05fff4-65ec-4bda-af65-1469895ce5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6823280c-7728-4b09-a81f-c6a080d81085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be64678-87d6-4a61-885d-f63305739dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f762f51-069e-4bd8-b855-a07fe32e8a46",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b75fd9-eff9-4c84-bd03-27d251f05876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494b849d-94fd-4559-afcf-07e95602e54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f27c58-8c39-491e-bd0a-8a9bdcb82fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d91993-a73e-4668-b661-caaa5271056a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af2dcc1-ad8a-4bab-bd5b-51313f2e4a76",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3e68e3-5a45-415e-8760-2835d2bbdada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acccd5ab-d8b8-4f1b-a399-cf99534024f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311e1d55-72c9-40c5-98c6-8be7030a7f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e31931-f348-4765-a718-4009cbc706ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed621dc-563d-45d0-a61e-6dac11715c3d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1429a196-0522-4f32-9103-fedc532a3e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89738817-fb03-48c3-a1c7-3e05ba981dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c401a8b0-d19c-4d72-85e7-aa54530199ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd64e30-33b5-400b-8b15-d279971428a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c0e581-289e-4444-84f6-dd6efd304595",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e76a65-16fe-472c-9704-358201b95872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80618b84-91cc-462a-bf4f-47d57903a2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98fb348-c861-4cf3-b757-21dca2d33142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246ea05d-1756-4786-ae3a-9828af0cff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f19280-f4bb-405d-a80c-2c4316ef1131",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c48cdda-5804-4f91-b6cd-0ce2eaae266e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33579cdc-d73c-42fa-86f8-59a0def09b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16f247e-2a2b-4d2c-a0e8-1b91f77d23cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d2fa31-16d1-489e-bf03-a76fb458dbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29609c4-9dc1-4573-8f72-6db3dafa8592",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf285d5-e1f0-45ed-bb06-bbea9e903309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1bae57-7148-4d4f-8ee3-44547a90814b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed46385-ca6a-4b37-9959-98e5fe8c6d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9705d03d-c7c6-4d5f-84dc-7953567bf35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33924e2b-b3dd-4c0c-9b0a-a28d9995faa5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977200c8-f49c-4de5-894c-e0ceabfef8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b878ea8-5136-484d-ab60-987e56c9b15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36261ca-3f6b-4a61-8691-2e3486e17171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d77776-9666-4671-8755-0575986a7df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f24a03-7d2c-4ae3-8efa-5d7651fe2817",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcaf3bf-6f82-4316-8e23-cf86318efd34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d38a112-603d-40b3-90d7-3c26cb6939c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30800708-17b3-4a21-bde2-535655c0c6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caddad5e-4a6c-4be4-8415-b6fd2b353033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad85aa-bedc-466f-871c-bc716c44eca1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7190ae-5f38-49ba-bd1a-4f7440b88422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d375e491-7ddc-4bf5-ad00-9f91b3df10a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d86a92-506f-4cdd-86e9-5b8e8bc07b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351ededc-4d2f-468e-a2d3-b6d0e0269679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7308b2ed-1f3e-42ec-a932-416fec44010a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1753767-6597-4d38-ba32-56c1c726c098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d28aa86-04f7-4e95-bc87-c68365a5f74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e7c5f7-76c0-43cd-98e0-4b00582b1e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e6067a-21fa-4e9f-ab63-4bac9408443d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803f7ad8-d33d-4a6f-a355-ba52daf25466",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7305bfbb-7d79-4939-8d62-81a333775956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786d94f7-2c58-43d2-a818-20e75e6e18a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ace4d42-a964-4cca-9fad-70b6af4edcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addb606d-055c-461c-81a9-0ef462a99bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65b4713-0395-4703-860b-fd7639a89766",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a93937c-0f91-4355-990d-c3b21999c28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee84dc8d-0151-46da-b230-ed53c160992f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44699be-11af-4722-a9fd-0075b6ea5f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8ee3e9-26dc-472f-8862-f4d3935b8b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd58fba3-2f10-440a-97a2-d273deaba6e9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09b9f57-2b22-42e1-85da-d8ea6b225bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91811b71-0b3b-42cb-a5c4-d91190cde442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d85efe-8676-47b0-b368-1bf422590c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e20821b-a0a0-488e-9e67-77fc36e92833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e1bc92-ff3c-47d4-822a-519915c84346",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66af53b0-3ce1-4dfc-97e6-1ed80adbfe92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855444e2-abb2-4530-aaa3-515cf1b3d3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e769ea58-2ba1-43c2-9813-499f6507bdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704b2471-0839-468d-8582-b83203e6a096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160f9332-8eb4-4285-b1d5-992522e6be05",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10519c49-d8a3-40d8-8bee-31794d922630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b916a04-35bd-42b2-a020-fb8d92a9ee3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2802ed96-9344-4afb-8afe-59bbcf521a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45b9837-06c1-4eea-a916-7e8e253684d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a9d521-f5d4-4b7a-b8ee-66c6662c22b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe2288e-a9e9-48b5-b8c5-dd996ffbfed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a79c96-dfe4-4430-b0f7-99e4ee947ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89682313-68c9-43d2-9080-63cfd064c385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a510f01-0ae0-4689-ac72-852267d36364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71db3613-4e6d-4735-9f20-93eda5cab085",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb59110a-aa72-43bc-ad99-886bbf7c3068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff732f93-c022-4634-b551-73f88d167520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d06165e-18ff-4913-b514-34c76ea7f340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2c9ed3-c513-4415-9752-860f4b92619b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28658b05-032b-420a-8eb6-7f0d5393979f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1e714a-c426-4fd5-a907-461bf3c68d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5aa1136-b3e0-4f1d-8e1c-a54c787ea59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77594ea3-3082-4708-8480-2594a0db4720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e03697c-0eec-4d71-b2d1-93c465efefd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566a147e-1b0d-4f69-8806-51bb37238e52",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb1ee1f-33b1-4373-8a53-2ab02e29a990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3357e39a-19e6-4734-b3bd-31e971ce4528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214ca957-4817-4411-a5f4-31ee3a6474a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2d65c5-caa1-4ca8-9a9f-321ca0b7ee55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a6aac6-79b3-47d3-9556-8f1e46307615",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c03430b-4fe7-4d93-b8c7-42c7b121f1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3beeed41-31da-4d57-8ad3-ce1e3ac07835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325bc05c-734f-4252-99ba-4ae703c41a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc661d97-b3a1-431b-b4c3-fda7f08a6aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b7f00b-fccf-4da1-b880-17b191ad0a11",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f0cc49-2d46-466d-9985-210a78d01e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f97b6c1-a194-4b70-9cb5-4496b8f34c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b547cca2-f78a-4d0b-868b-ff2d095af9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95d13ad-11b2-44e8-a65e-7a78435d5666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e590f4ef-7ae9-408c-ad33-81fef2270e32",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce465e6-aabd-4504-8fb6-8288633c0851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c5b608-bb57-4ec3-b1c7-857516adc2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed4f512-d137-43b5-bbc9-8ea8cddf05b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e915b66-370c-4327-bfa4-45214db0915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95670b02-e84c-4046-88db-990681556c7c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6519ecfe-01fa-44b6-b324-78eb071f68fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832554ab-1270-4bbd-b0d6-a2facc02e3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40c518a-80b4-46de-a332-6ea3be5c5c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e36c708-38f2-44e0-bb29-6074edefb7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae8d405-d806-41bb-a76c-51bf12bd948e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614ba7bc-e7e0-40dc-8d7e-f2f034847bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d14ff7f-949e-45ba-a8f9-6e1e4b5ab53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18aa225-fd4e-4383-8219-b49a30d0bd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dad82b-8b53-4043-b385-45010852bb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d8c155-4832-4239-ab55-d9f7bbb4e062",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4891df-894f-4281-9b8c-b78e6778bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36dfe482-f9cd-43b5-a872-4861a03db71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569a85c8-42ad-4517-901f-bbc34dd94860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4267f26e-9694-43ee-bbae-72aac18548da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccf97cb-1ae7-420d-9598-b3374c5d187f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bc11eb-c27a-49b0-849a-2ea6e359c057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467e8f00-9d57-45e5-ba29-a24c0085ec13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5737842-f40f-4db6-a542-4ea3eb2c5b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f05162-c67e-4464-88c4-20165801e00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83a2b3f-6be8-4fd4-87df-a0267c8f9e2a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd434321-7cfc-4d5a-a5da-0fddd7570eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e2dbf2-94e9-4d3a-ba35-4bab34c5ce3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f782826c-5a72-425b-ae4b-c42d4c8abfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f4ab2d-e159-4f9f-ad7b-4b8b66ea9339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de3d2aa-0e78-4d87-8d7f-0fdd00da4fbb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18d4422-1d6b-49b4-bf17-179c5a2ccf71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77a13d1-b87e-4537-8a9d-0b9ca22efd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ae7304-5ecb-4dbc-a8e9-25fbfa7a681b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d002dfb3-7e00-48ce-b65b-87c96be96f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267b5fe1-ffe3-48ce-95f7-901ad8ad126a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50054101-2720-46e6-9e76-19c0e8a8f37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e172bd-8280-4fe6-a725-c3a798cd1ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddde93c-39c4-4de1-a500-87aa05287a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5daecb-3692-487a-87fc-15ca34d07f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1121e91a-1ec2-40af-8091-a59fe73bc660",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b26b56-5ba7-45c2-b74f-9c8a910f1073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c67727-8d95-4af8-9e99-c68e5046c5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984525af-7254-4175-878d-9388d4795916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff554ef-9070-4f93-933e-334204456196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a917ca42-e16d-4567-82af-a99bb4669991",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbac243-369a-45b9-b902-e6db57e589a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e35cedf-0460-4aad-955a-a8979bf35eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb412ee-11ee-4823-a93b-6a16c73ad831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fa13d2-b8a4-4987-ba68-698deaf55458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0fc304-8ff2-4bc1-bd5b-c27470d30647",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb850f84-a779-4220-8078-6266c216b0c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb84b7e-cddf-4499-8e05-875ff35df19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e517cee3-a051-4394-af7b-f849da94f2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7bfdfc-8c1c-4b66-b168-cfb78bf63018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471a0d32-8f6c-446c-b7aa-15812f4115ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a3b445-5003-4f03-bb05-a8ed33ed80a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c22063e-98f4-4b72-964b-cc3d5752da05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c080d3-8f59-4280-84e3-08d970e459d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f9d098-c28c-4215-8156-c8a4fb26520f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b91c0e-0910-4b53-9847-7ab5ce3830ef",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68a6c57-7570-49a9-858f-b51f585fe119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7c9ab3-5190-46ea-a305-653d1e99d915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408af76b-30fa-4f30-928a-09dddff39c8c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18c7892-8958-42e9-b3cc-0214a8bbcc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa65e88-e110-4dfe-b385-c891c4d1e8a2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3289c1-2477-43cd-9c65-8bbcb0b2f60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8e7e45-fc8f-474f-9e42-e22a57d310dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51670dd2-bb24-4a60-9789-6ff0ed4a47c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4c0fbe-f606-48f9-8d56-b3a56becb4e8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab0baeeb-fe3e-4682-8af9-e5343a8928d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dd2fa47-a7c4-4031-83c5-e3e2dd024311"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49051331-6e1e-40b8-938d-b36db622c1f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41fff5bb-3c34-4197-9d08-fc9bddf30daf"
                    }
                  }
                ]
              },
              {
                "id": "be2e6d28-116b-4a9e-9e58-1184784f1eb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a11d8c2e-e367-436d-9d91-b8eca10ca637",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff30f964-f9dd-4228-a77e-7898f1cf12ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6aa52d9e-49c4-4a5b-be8d-187da3d8398b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f793c105-6153-41a2-bf30-a9210bb3fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71bca1fd-a830-4025-9fbf-59a908524b4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e734b0b7-897c-4ca0-ba47-2c5b3210fc84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9fb9d1-c92d-4205-a5b1-d33d60396a02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea989b00-6156-40a2-8a27-f2f6afe3ec32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b4f6436-80f0-4614-bf3f-0a97405c9eee"
                    }
                  }
                ]
              },
              {
                "id": "fefd9cf1-8a26-495f-8418-567c79c9bdc8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ac859899-7ddb-43ef-9645-439446322906",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72835771-d973-4173-9a1f-c1b831745ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97ae8fba-2612-4962-988c-30ddca280814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8760733b-76e1-4ed6-8881-5dfa6b03604d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2767df-7343-4134-b970-443d3e2c0209"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ffa9f512-3e22-4f9a-9072-6ee05a8dae25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e99dbb6c-c7d6-4ab8-9fce-6c560b0ea03e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70e435e2-7858-4fd8-9a9b-08e34680583c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8428b628-6f0d-4500-a8d9-a48f7d8811c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96781b5a-4a12-4a77-b365-e954d6a0aa0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79f99d63-0e7d-46c4-9d16-7cba9b8c1587"
                    }
                  }
                ]
              },
              {
                "id": "1f6f4609-65cb-4d9e-9d44-43a5e0a02352",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef05eeaa-acb8-45ca-8331-f993b726cb43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7fee43d2-4db3-45f7-9217-4c8c6c29a2e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c03b145-d69a-4462-8c2f-ef65115abf1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a36adf8c-47cf-406f-9006-fb52251e3082"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a1b0559-6252-48b5-b758-abe512408d0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5644de0e-0605-47c6-8aba-74a6950aeefd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aeb2d76b-6a39-4388-b1ff-498eae2fda04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9215796-5c97-4e24-9697-75cfec2a1841"
            }
          }
        ]
      },
      {
        "id": "129f6a28-6b0a-4121-ae9b-df94e19c354e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7b1fda7f-d767-4726-9aac-67ced940d57a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ad1b90f-6835-4c9d-85a3-2e58d2491805",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1b86ba1-cd53-4a82-a448-751bf76ff7ee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1cb8c2-47f9-4ce0-826d-e0cfc089816b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3b3abd65-9b2f-4764-b2d8-9e5cf4b8c8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b16310-624f-48d6-bcf1-752625e1f003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fb5dbd0-93fd-4b4f-991f-62409e2909c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e937c8d2-1d0c-4c2e-89bf-5346e78a8532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6e6bec-ec10-4ef0-bbdf-810daa53de44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f50b4741-3874-4a62-bfbc-255b2140f4eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "553144a1-cd4a-4379-8542-f5cb99b1361f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f79eb416-861a-490e-b4dc-c6aa337e92af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "abcf39e7-e7e9-440d-b52f-c49a72f124a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4eca97d5-0eeb-4f56-9257-365f1cabe137",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e97f7bea-41d3-482b-b77d-c0edc6841789"
            }
          }
        ]
      },
      {
        "id": "5ef6d080-3be1-4bb8-b818-96199eb76d54",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2f499269-b3c3-43fc-82fd-8611da7b8a53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8aa54df0-550d-4754-bba3-82f08b673054",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc88148c-70f1-488d-99c8-67f0267228b0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3e1158-8a7a-4f13-be8a-8dc86e409d9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69c3b6dc-26b0-40da-8e0a-bf4865907765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a499c-df1d-48af-873c-57b7bef4a1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "616d2171-89e6-435d-bf84-b3440094db6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45b558f3-15db-429b-a32f-a950102a0783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eebb802-860d-4e72-827c-ce34e283f27d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd99c94a-ef2f-4573-ae35-0be43b494418",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40d78508-f44c-4881-9a0d-27b4b2523180"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1313f108-f251-495e-b9aa-5d36ef93b2b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9dbcced-6506-4ecc-b1a3-525dceeaa59b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa3dd994-e445-43ed-8b99-0249d59b6b83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fb0aa5f-4820-4f73-a1a6-032fb35d9f04"
            }
          }
        ]
      },
      {
        "id": "5c0762ac-9ab0-40f1-bb99-f39969ad7716",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c3079424-5b96-4e43-b886-4bebeb106a9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7184832a-b095-4ec8-adde-334f3020da6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fb33312-573e-4381-97b9-540a7a6f035f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d469a6-e22b-463a-a49b-7ea0479d08f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c09694eb-eaed-41ca-87f8-09c8fe0eed96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc35302-7c9d-4029-8119-b56aafe5760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05c264be-cd73-4ec7-843a-eba916d267cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "348e4cbe-75a8-4e4b-be4d-ed606465ff81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37fbd79d-9c03-4a31-8cbd-96b936b97868"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16bbaa92-e485-4143-8a31-c50d63ac7c54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c5fb40b-3269-4b30-b9ab-7e7e7ca319e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9826f5a6-f485-4359-922b-037819c3947d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "658e2b74-3475-4acc-98a9-373356d70e72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7398859-e88c-4203-8946-ea988ee95108",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a24782b7-35b0-497c-8abd-a645ca1449b0"
            }
          }
        ]
      },
      {
        "id": "0517f04f-5d0c-4d0a-9ca1-8689a8ad02ef",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa316be0-68f0-44d9-84ca-5dd4e360eaaf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fd12c86-4751-40f7-ba1e-68bb24e1384c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3765cfac-9b88-40fc-be75-80155dbb4356",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e6889f9-269f-45f6-ac43-febeddaaed50",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdfc1000-ae84-41ff-a251-677e58b88707",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.94035087719298,
      "responseMin": 10,
      "responseMax": 8659,
      "responseSd": 595.1483376523906,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706229266245,
      "completed": 1706229309164
    },
    "executions": [
      {
        "id": "bdc74e3a-a87a-4d5e-b310-a43362e55268",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "365d25fa-3128-41cb-9525-c313396f5a16",
          "httpRequestId": "f4529097-ce94-42cf-9619-3e7bfbfd9dd1"
        },
        "item": {
          "id": "bdc74e3a-a87a-4d5e-b310-a43362e55268",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b1a63a85-47b7-420a-aaaf-f251b5aa281c",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "61b58467-a50d-45f1-8913-20c1055c9c5c",
        "cursor": {
          "ref": "db033412-b753-4986-85ae-18ff04282068",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4a42d35c-d8fd-45ec-8384-62c5d07a2351"
        },
        "item": {
          "id": "61b58467-a50d-45f1-8913-20c1055c9c5c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c80eb004-443d-4fb5-8898-8d4b68602017",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "fe5d1d9b-68c3-4275-8d52-31fbfc52c422",
        "cursor": {
          "ref": "c2042aee-ea52-4cd0-a410-f176dc6076ce",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8880d23b-f187-43d1-93f9-25f61f5d35b8"
        },
        "item": {
          "id": "fe5d1d9b-68c3-4275-8d52-31fbfc52c422",
          "name": "did_json"
        },
        "response": {
          "id": "0c8f4525-b403-44bb-ba4a-b5f830c529a6",
          "status": "OK",
          "code": 200,
          "responseTime": 171,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36578856-e1d3-4bff-8a49-01bc4adbabfe",
        "cursor": {
          "ref": "eb2fddc9-a25f-4950-a320-b81bd2b4ac26",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7346f8d4-bbed-4e83-9856-9f477e9e689a"
        },
        "item": {
          "id": "36578856-e1d3-4bff-8a49-01bc4adbabfe",
          "name": "did:invalid"
        },
        "response": {
          "id": "f04ebd95-53a7-458c-8044-6906033bd18c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1051,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36578856-e1d3-4bff-8a49-01bc4adbabfe",
        "cursor": {
          "ref": "eb2fddc9-a25f-4950-a320-b81bd2b4ac26",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7346f8d4-bbed-4e83-9856-9f477e9e689a"
        },
        "item": {
          "id": "36578856-e1d3-4bff-8a49-01bc4adbabfe",
          "name": "did:invalid"
        },
        "response": {
          "id": "f04ebd95-53a7-458c-8044-6906033bd18c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1051,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4445478b-95c4-464a-a1d2-8b9fcc9dfbf6",
        "cursor": {
          "ref": "0c97abb1-501d-4675-a5bd-0e3f6cd65429",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f73d6cca-d5b2-437e-a594-2d1388a966b9"
        },
        "item": {
          "id": "4445478b-95c4-464a-a1d2-8b9fcc9dfbf6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ef01032b-920e-4bfd-9695-e6fff285c410",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c009c5-7adc-4c1b-80b1-65512b4874eb",
        "cursor": {
          "ref": "a723f982-7481-4508-b350-f28d69f6f789",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cef31021-21e4-4732-93f5-69fa0b6302c6"
        },
        "item": {
          "id": "f3c009c5-7adc-4c1b-80b1-65512b4874eb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c2524a13-4dd0-4c85-a3e0-f078b005935a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e894a2-ad66-4881-b60b-2ed5ddb38559",
        "cursor": {
          "ref": "ceae29f1-179f-4499-b1f1-7a38ff1f32be",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "55ab065f-a314-43b1-90e0-2fe09b12ba47"
        },
        "item": {
          "id": "93e894a2-ad66-4881-b60b-2ed5ddb38559",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "96c3935d-0990-4fc9-a8ed-b7db3d26e079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b3036c-8303-4f70-9c41-70f533dff5d5",
        "cursor": {
          "ref": "520b2b9f-b094-4527-babb-05205899add0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e83c8b17-83ef-440d-b654-58d21f87fbb3"
        },
        "item": {
          "id": "78b3036c-8303-4f70-9c41-70f533dff5d5",
          "name": "identifiers"
        },
        "response": {
          "id": "889bd833-96ee-4c17-93d8-97027c14d5b8",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca923386-5efc-44fd-9ff3-aa5b254a7e01",
        "cursor": {
          "ref": "be994344-85d1-49c0-91a4-a7a59dcac1c3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7be2c170-f3ae-4fc5-bb94-23eb9266f64d"
        },
        "item": {
          "id": "ca923386-5efc-44fd-9ff3-aa5b254a7e01",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "04722c3e-a7db-4803-8ada-bfd184b345da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db1ad15-1898-43b0-a29a-ec08b28c92b4",
        "cursor": {
          "ref": "decb3aa1-5df2-4726-910b-4ad2258dd8de",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6ca44b5-4094-4a3b-9ea4-b1b924278f53"
        },
        "item": {
          "id": "2db1ad15-1898-43b0-a29a-ec08b28c92b4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "41510f6b-e2e5-4051-8fe9-596f6e227119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ad3f0a-7e23-41cb-a30b-5ef324694387",
        "cursor": {
          "ref": "06fd3a5f-94d9-4f90-9f7c-6fbeacb5294d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "489cf85c-ca38-4dff-80fb-8debf58b729c"
        },
        "item": {
          "id": "b2ad3f0a-7e23-41cb-a30b-5ef324694387",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d6d4f0e4-1490-474d-a839-06b839737dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092f4361-2a74-4ddb-bb7a-3194a4583a5b",
        "cursor": {
          "ref": "41299c93-fbf1-4f96-aae2-9171a3e7d775",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5c4b57fc-115c-4848-985b-9f578d2a6007"
        },
        "item": {
          "id": "092f4361-2a74-4ddb-bb7a-3194a4583a5b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4a65e84c-04c1-4a71-a11b-8591009e5089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9168a4c-af9e-4371-968d-16660d7463d1",
        "cursor": {
          "ref": "57293332-8fd4-4ceb-a3c0-06c77f69969e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "75f7b891-2ede-49ce-8007-9cb4d6de672b"
        },
        "item": {
          "id": "a9168a4c-af9e-4371-968d-16660d7463d1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "68fc21d9-957b-4ee7-8032-0d41e7571cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6883b275-d609-4052-8aae-867ee40147ff",
        "cursor": {
          "ref": "87604452-b1ec-4b72-9186-ff09d5348022",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2ec29338-8123-479d-b8b7-974d128bc766"
        },
        "item": {
          "id": "6883b275-d609-4052-8aae-867ee40147ff",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2749b65b-f4ed-4d3d-8cbe-59cc372aa0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02666fc6-6950-4cf6-8963-f4d7fd10bce8",
        "cursor": {
          "ref": "de53ab99-1528-438c-b200-da2442d2dce1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "09d0e73e-522a-44db-a691-e2d3e443bbcb"
        },
        "item": {
          "id": "02666fc6-6950-4cf6-8963-f4d7fd10bce8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bf90b3b3-47ae-4e65-ac35-ae0bc7ca17cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4645163f-eada-4fb4-a66f-aca0e406afa4",
        "cursor": {
          "ref": "53760781-772b-4229-8399-3f45294741bf",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e065a907-f949-475e-b2df-e43c6197fa12"
        },
        "item": {
          "id": "4645163f-eada-4fb4-a66f-aca0e406afa4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dbbcbfb2-64a6-44b6-8fa1-05c642a0d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baae29e1-9f70-4aa9-841e-3a6e0a46325b",
        "cursor": {
          "ref": "e26fcca0-ac89-4c15-b9bf-6899ab8ba065",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2440d4c5-ec3f-4844-89f9-94fb68a75892"
        },
        "item": {
          "id": "baae29e1-9f70-4aa9-841e-3a6e0a46325b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "95a9a618-e73e-43dc-be6f-e97db977ecb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3f9bea-9a78-4351-ab14-82a9a9326bcf",
        "cursor": {
          "ref": "b4f4f558-96c4-45c0-81d6-133f5b177867",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f48ade55-7c72-42f2-8a3d-cba3af938c35"
        },
        "item": {
          "id": "7e3f9bea-9a78-4351-ab14-82a9a9326bcf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06f3ad7f-c92e-40e6-b399-b3350b65ab1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae90e68-e599-4123-9081-f72f747d6b21",
        "cursor": {
          "ref": "ae63cb1e-150f-4c09-a140-6c8bf4e0f08e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7b706dec-40af-4242-a43d-57d6ddc4e85c"
        },
        "item": {
          "id": "8ae90e68-e599-4123-9081-f72f747d6b21",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "865fef29-744c-4c5e-b099-3c19881ce412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f6e399-79c8-4754-9a79-95026a905d9b",
        "cursor": {
          "ref": "f4d05aa3-ee78-4eab-bd54-f794685dc22a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c246c028-a426-42b6-bc74-34942d27a041"
        },
        "item": {
          "id": "d9f6e399-79c8-4754-9a79-95026a905d9b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d8e0219d-d91f-4ce0-828b-70b52d52ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630dc0e1-f136-4e2f-b12c-a9e8357a3717",
        "cursor": {
          "ref": "411f1ba1-945c-43bc-b63b-565c6caaadec",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a1ac9066-15b0-41e2-a80e-ff8909829165"
        },
        "item": {
          "id": "630dc0e1-f136-4e2f-b12c-a9e8357a3717",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d01278de-e193-45a0-8781-d40456bdbbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c2d039-a42b-4cbc-a785-91d2bff628f0",
        "cursor": {
          "ref": "e760ec59-ee45-44cb-8253-86e903a9cb6b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be08b80d-86a9-4200-98c9-b130d3e23933"
        },
        "item": {
          "id": "26c2d039-a42b-4cbc-a785-91d2bff628f0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "32d24de1-0671-4963-95d3-f073a683d8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30327af-a26a-49f3-b874-84b95cd81c7b",
        "cursor": {
          "ref": "f68efc0e-ea15-4082-a158-de61d652f1fa",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "928718f6-f5e9-4975-9c05-ac133c1b8c04"
        },
        "item": {
          "id": "c30327af-a26a-49f3-b874-84b95cd81c7b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cef72c68-fc44-411e-b047-42477a501a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7280ebe9-4feb-4e7d-9511-3f4a8cc25208",
        "cursor": {
          "ref": "17f7040e-fe77-491d-afd7-2b2a27e5d9d4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "80fdebc1-3769-42b2-97bb-57d97797a8e6"
        },
        "item": {
          "id": "7280ebe9-4feb-4e7d-9511-3f4a8cc25208",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0029b4d6-0841-4b47-a1e6-a47df4fba14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035811c1-1c06-45eb-9317-8b2d5ac00915",
        "cursor": {
          "ref": "537786bb-0798-4033-b5d9-86534ff6b401",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e5202aab-0e1b-4e85-8b15-b3e9f4192258"
        },
        "item": {
          "id": "035811c1-1c06-45eb-9317-8b2d5ac00915",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5c570a25-2f23-4963-a2fd-1288ccfe44b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bf0b97-9adc-4977-807e-54ec384b8ec2",
        "cursor": {
          "ref": "54e44ec4-ef39-4538-b899-949733a645d3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7526dd1b-94c0-4b61-900e-6f061ffe6582"
        },
        "item": {
          "id": "72bf0b97-9adc-4977-807e-54ec384b8ec2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0012003a-91fa-4352-bc2d-32d7ea3e598a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631938ea-c6c0-458c-b62c-2f9eee0590c0",
        "cursor": {
          "ref": "fb0d5b08-08dd-4725-b639-d22ca32737e7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b7437ca5-03dc-45d8-af0a-3a5cb7cf233a"
        },
        "item": {
          "id": "631938ea-c6c0-458c-b62c-2f9eee0590c0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6de322b3-6040-4a91-b159-cfe915d6c8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b751b06-1a79-4fb2-8007-929563f1c16a",
        "cursor": {
          "ref": "fc7d963b-ab28-434f-a40b-9646968bc8ab",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "12ebab55-93ad-478c-9b98-0f219a25b484"
        },
        "item": {
          "id": "9b751b06-1a79-4fb2-8007-929563f1c16a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "34dae111-9dcd-4d8f-b87d-722f6a120f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05c5996-b365-4d06-988e-eb376b8d6088",
        "cursor": {
          "ref": "c41609ef-6973-4f85-b56b-1f8db3945720",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7cee6c29-fa24-4f21-b0c0-ed366905aba9"
        },
        "item": {
          "id": "a05c5996-b365-4d06-988e-eb376b8d6088",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1e4e668b-fe7d-4858-80e1-39fc0b14c0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbcaa91-d17b-4998-a33f-77bcc18375c9",
        "cursor": {
          "ref": "25aeb4db-fb72-451b-8e76-1521fa015e68",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e32b04af-04fb-43ab-b07f-daed6c645dff"
        },
        "item": {
          "id": "efbcaa91-d17b-4998-a33f-77bcc18375c9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "449ebc15-975e-49be-a5c9-729439f4aaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d3c738-04d0-4c6d-ba6a-386da116361b",
        "cursor": {
          "ref": "9f6dff81-261b-4a18-98f7-f819662cf901",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2c636b6d-68d1-4631-8320-5a20463141ab"
        },
        "item": {
          "id": "74d3c738-04d0-4c6d-ba6a-386da116361b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "433ffe26-7dd8-455d-814f-8537155caf12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c397e3-6f06-44ac-ad2e-4ceaaa80d28d",
        "cursor": {
          "ref": "890eba95-fef4-4007-9257-66a9e46337d6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8c5c5ec2-1f65-44ee-bc08-53742c378e47"
        },
        "item": {
          "id": "75c397e3-6f06-44ac-ad2e-4ceaaa80d28d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c2f3160a-d96d-4f83-9be6-81c12c01c733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e259352f-191c-4afa-a4b3-77c42baa4f2a",
        "cursor": {
          "ref": "b2a2fa53-8dd0-4ce0-a772-ae4426f455d5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f7f1830c-cc06-47e3-8d6b-b28cfd2fe948"
        },
        "item": {
          "id": "e259352f-191c-4afa-a4b3-77c42baa4f2a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "382d2895-6a9b-4a50-b42b-b82e90cfc04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e4a0a1-9f0b-49b6-8d2a-76c319a4559c",
        "cursor": {
          "ref": "20ae10c9-df49-49b0-8563-d6c01c278bcf",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2b293e9b-6bdf-40d5-b634-a332de48867e"
        },
        "item": {
          "id": "d3e4a0a1-9f0b-49b6-8d2a-76c319a4559c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f1e225e1-f752-404d-8ef7-72de422bcfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba63d511-b7d4-4812-9f88-ee862915a8e5",
        "cursor": {
          "ref": "e6bc02f1-4dbc-4508-848e-cd43489ed3e2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "368499ee-4e2b-49db-9579-4a12292a1a6a"
        },
        "item": {
          "id": "ba63d511-b7d4-4812-9f88-ee862915a8e5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a00ab483-2815-4e81-b9e7-29c003c9a506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3785d7-c5c7-4707-944e-84ad159e35e6",
        "cursor": {
          "ref": "e7bf229b-f79f-4856-a267-1b52ecb728a5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "50d8d904-baaf-4bab-81d7-a0910227b53f"
        },
        "item": {
          "id": "6d3785d7-c5c7-4707-944e-84ad159e35e6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "93ae8862-7601-4000-8f5e-a7879f84af3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792b063e-38b3-4f20-b98c-5d86f8beb0b9",
        "cursor": {
          "ref": "ce3ed5fc-a91d-47cf-914e-9d7e0feb9434",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7495ca71-a354-4797-9419-1c6c87c32f43"
        },
        "item": {
          "id": "792b063e-38b3-4f20-b98c-5d86f8beb0b9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c7d8f8e2-5637-4cb8-a71b-5eec943be478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9761c117-6f7c-4c6d-8226-1a0b4eb95502",
        "cursor": {
          "ref": "dcb0455d-7a22-429d-b33f-237a9b591a3d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f97c9a94-091d-4b7c-ac93-628d6304f8c3"
        },
        "item": {
          "id": "9761c117-6f7c-4c6d-8226-1a0b4eb95502",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9675eaaa-9881-45ca-9e79-a95dacf559f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b432371-bdb1-4d05-8f8f-8fa169220bc9",
        "cursor": {
          "ref": "5d82c845-9292-4c56-a8e8-3004ac3b2ed0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0e2991a7-7055-4b63-898f-3b202775d09f"
        },
        "item": {
          "id": "5b432371-bdb1-4d05-8f8f-8fa169220bc9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6372cdad-a468-4023-8f7b-e2934139ba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac3ead7-cee4-423f-9894-d4a541da5413",
        "cursor": {
          "ref": "d380f4ab-4c7c-4611-a33b-1e5cfc506b71",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a330219-896f-476e-af9b-960047d76f95"
        },
        "item": {
          "id": "3ac3ead7-cee4-423f-9894-d4a541da5413",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4438b012-8860-43dc-b083-3b3f898d5457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608af356-7015-4d98-a24c-7dab5745160d",
        "cursor": {
          "ref": "716fe22e-d9fb-4377-8dc0-556faba360d7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "050618f0-3805-407f-bd63-6cd07ffbfbab"
        },
        "item": {
          "id": "608af356-7015-4d98-a24c-7dab5745160d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fd2094a2-8d34-4f1d-8809-03b11cbe62f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daedade-0ba2-40c9-ac4e-ab5cb5f9148a",
        "cursor": {
          "ref": "e5358c3f-2993-4bd6-8009-ba330e5cc6f7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "520dcdee-8ed9-49a6-97e9-bd8d0245acad"
        },
        "item": {
          "id": "5daedade-0ba2-40c9-ac4e-ab5cb5f9148a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1f583fbc-7e21-4b22-85c8-0209fdd3f656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4e4585-b05d-4540-bb6d-55f69c502c0c",
        "cursor": {
          "ref": "ad7fb268-1ea1-4ef8-a89a-2e0cc60ce7da",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e0c95a29-0a13-4b40-810d-1ec235ed79c9"
        },
        "item": {
          "id": "4e4e4585-b05d-4540-bb6d-55f69c502c0c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "23b3cd28-4868-4cce-ad14-2f00d0f959d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b9e475-3eb5-45ba-89f6-a380dd2eeb83",
        "cursor": {
          "ref": "e28f2e7a-f900-43e1-a144-1cba32e605db",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4fcd6f52-7f80-4f4e-a15e-1ae0acff3166"
        },
        "item": {
          "id": "60b9e475-3eb5-45ba-89f6-a380dd2eeb83",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5c97126d-2f49-41e5-be5a-73188b32f9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d619d2a-6b84-4f7f-8857-274eb22110c9",
        "cursor": {
          "ref": "fbad48f5-71a7-4a75-8291-a4c5b1fb51a3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d5b433cf-eba7-493c-ac9a-66bed97b62f9"
        },
        "item": {
          "id": "7d619d2a-6b84-4f7f-8857-274eb22110c9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a0034556-635e-4ed0-93ff-606ff10c07db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abafcd5-b0f4-4cd5-9447-22d5e60f6170",
        "cursor": {
          "ref": "c3daf8e3-d0e9-481e-8c1d-3f0f17e2ca6f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81547777-e8b0-41cc-90bc-01eecacbeb7b"
        },
        "item": {
          "id": "3abafcd5-b0f4-4cd5-9447-22d5e60f6170",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fffab5ca-1ae7-4119-80e9-eec53174fcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3d10de-49c8-412e-be8f-8c246756be90",
        "cursor": {
          "ref": "c474982f-f6f7-4892-abbc-79295d590910",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1c822ece-b85c-496e-9f98-83d370e745c5"
        },
        "item": {
          "id": "7c3d10de-49c8-412e-be8f-8c246756be90",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ec0c1f4d-7cdf-4bc1-aea6-2cfdec2d3aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca6c2ee-51fe-4b55-8e3e-f71aec050afd",
        "cursor": {
          "ref": "b37b8a9a-d4a7-46ea-b368-daa8d422fd18",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bb6813c8-2dd8-4b11-9aac-4150ca2d7022"
        },
        "item": {
          "id": "5ca6c2ee-51fe-4b55-8e3e-f71aec050afd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d637dddf-ee0e-443b-a2b2-7f5ad6aa87a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423b2fe7-2050-4227-885d-46d6804dc7a7",
        "cursor": {
          "ref": "c88af5cb-d6ba-4e57-a4b4-acf107bf8efa",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7643fa79-9706-439c-ab6f-b1274da91b6e"
        },
        "item": {
          "id": "423b2fe7-2050-4227-885d-46d6804dc7a7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88d35295-3074-49dc-9fdc-e3b055dcd8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee31401-bf45-4a3f-a921-23bb667495c5",
        "cursor": {
          "ref": "5b03d090-4845-4b5c-88a1-be62570a2f39",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "359ca155-665d-4ca9-8af0-4b9ec9ccda99"
        },
        "item": {
          "id": "5ee31401-bf45-4a3f-a921-23bb667495c5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "55fcb9b5-366f-47e8-8810-575c58538cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90787b47-4afb-46e6-bbb2-8e6495fe95c8",
        "cursor": {
          "ref": "942fa68c-7208-4343-b0b5-af6630083d3a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "70c5cede-a923-432a-ba04-60448cb06fd5"
        },
        "item": {
          "id": "90787b47-4afb-46e6-bbb2-8e6495fe95c8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "68a87bcf-20fe-40e8-b88c-4abc9c9f673a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e5500b-1d7e-4d73-851d-0d10a903c5c9",
        "cursor": {
          "ref": "0ba70e7a-daf4-499e-a30e-a9d4dcac2bb3",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cd63d96a-a2c1-486b-9668-d26f239b3e02"
        },
        "item": {
          "id": "81e5500b-1d7e-4d73-851d-0d10a903c5c9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "946a902b-9399-445d-9de5-81dc7cb11eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23d0228-cecb-4c47-ab5c-cf03a5dcd9d2",
        "cursor": {
          "ref": "746ebd20-77c3-4c1e-9b9f-3dce8326f754",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8996203a-8522-49e2-9781-ac784165ef5c"
        },
        "item": {
          "id": "a23d0228-cecb-4c47-ab5c-cf03a5dcd9d2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2bc7058b-0a7d-4a69-9c06-35ff8bc8a474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b2dc55-50e2-4050-b6c4-8b71c34cec22",
        "cursor": {
          "ref": "e06e963d-e882-4de5-9618-a7bc27d70f70",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd5f0216-522a-4204-b034-08bc31e5d4c9"
        },
        "item": {
          "id": "b1b2dc55-50e2-4050-b6c4-8b71c34cec22",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b56b8402-73ee-4f12-b42a-7494e10a5bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725c0777-50a2-4425-a770-a6781d3df7d5",
        "cursor": {
          "ref": "c8956c9a-a440-444b-a8f9-ce63df421623",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0e55ab5d-1d2d-4334-b41e-c519aadd261d"
        },
        "item": {
          "id": "725c0777-50a2-4425-a770-a6781d3df7d5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9781ceb1-03fc-475d-b8aa-a5cca9f9a188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0126ff5-67d8-4963-bff7-d9cfd4620498",
        "cursor": {
          "ref": "7f4b8933-ec55-4704-8166-eea87ca3b536",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5105a94c-830e-46a3-ad7d-71835004476c"
        },
        "item": {
          "id": "d0126ff5-67d8-4963-bff7-d9cfd4620498",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8618b037-f6fa-414a-9103-d9c23bdf622a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146d6db7-8b0f-4d34-816f-d7c316f65b2c",
        "cursor": {
          "ref": "879a1c41-36b1-43b9-82ad-241ffa502b7e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5a61f726-18bb-4564-b8f1-9e5f94576a68"
        },
        "item": {
          "id": "146d6db7-8b0f-4d34-816f-d7c316f65b2c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5fa48266-cdb5-42f2-919a-86909faf3bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4233f52-d9d7-465e-8e3e-c65e73067228",
        "cursor": {
          "ref": "0fe87565-0d04-4f72-848f-93b610010380",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8e053bfc-72e2-4fe0-8593-4b688407d8e3"
        },
        "item": {
          "id": "e4233f52-d9d7-465e-8e3e-c65e73067228",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "af0e0e7b-5eae-4646-94a5-eb1d57446790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b77927-d371-4a0a-96aa-111e7b013555",
        "cursor": {
          "ref": "5f1a3b7d-a8d5-4ffb-ac64-0e581fd60066",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a35a4a71-7f4f-46e0-8baa-fd1d1096ad04"
        },
        "item": {
          "id": "16b77927-d371-4a0a-96aa-111e7b013555",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8bcfadac-6254-4d5e-ab8d-4ec5329cc299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc284009-9e9b-4518-a96a-208c0df4a00e",
        "cursor": {
          "ref": "a82ba2f2-839b-4ed4-846d-26e6ecf28ca3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8cc6b876-bcd2-49ca-8f4c-e9885ef581da"
        },
        "item": {
          "id": "cc284009-9e9b-4518-a96a-208c0df4a00e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "45be702a-4dcf-41b3-8a33-3c543ba2b9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fd680c-caff-45b1-b509-fa8800b1e98d",
        "cursor": {
          "ref": "994c3c7c-710f-4675-a1b9-0f4d47c2efb0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1759f199-b228-447f-bf11-cfd294b7e556"
        },
        "item": {
          "id": "93fd680c-caff-45b1-b509-fa8800b1e98d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0b28c722-75ad-40d5-a93e-e4687b561658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3744e692-4307-4359-9f0b-4e7090a28e92",
        "cursor": {
          "ref": "89137b58-30e7-414d-ba71-df0c51c63aec",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "05213572-e5c6-480b-a8ec-d331b7761785"
        },
        "item": {
          "id": "3744e692-4307-4359-9f0b-4e7090a28e92",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6a5d286a-9085-4526-b8c3-bbef1ea4ccc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4826208-1b13-481b-9a0d-1db806dca17a",
        "cursor": {
          "ref": "cd415349-e276-4dec-93af-f80ad839209f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3867268b-2309-44cf-b3a1-798bda24ccae"
        },
        "item": {
          "id": "d4826208-1b13-481b-9a0d-1db806dca17a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "83f04a00-e8d6-49e4-823a-6331564ff531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6a307e-479d-4358-880c-ecdd8b38ae8b",
        "cursor": {
          "ref": "e8b72d2c-da96-4571-aaa2-067781bf7b49",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5c354365-1b57-429b-be9a-1e0585f565f5"
        },
        "item": {
          "id": "af6a307e-479d-4358-880c-ecdd8b38ae8b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "995d5d69-64c8-4cba-ab19-ad6df225cc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f90a31-0133-4ffb-8971-3cc47094ce8b",
        "cursor": {
          "ref": "9d2d15d6-cfcd-463f-bea2-9e780c3f7874",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bf16d091-7581-476d-8a4d-f5aa893261b4"
        },
        "item": {
          "id": "96f90a31-0133-4ffb-8971-3cc47094ce8b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1b91083d-993a-4674-b71e-4e7ca9c94e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e1325a-39aa-47b6-bdbe-e9082886a177",
        "cursor": {
          "ref": "0d59897b-4269-493f-a432-0583cceb74ed",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e85dab34-13a8-4225-b531-871672040c14"
        },
        "item": {
          "id": "f4e1325a-39aa-47b6-bdbe-e9082886a177",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d3e092f1-1114-4b2e-8fdd-fd8d5ad9a634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa587e7f-4c99-4be1-92aa-142ceb57bba3",
        "cursor": {
          "ref": "b5e0e637-e7be-4cf9-ba07-949a808a8c81",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "13ca710d-6879-4710-a4ed-1d05db3cc269"
        },
        "item": {
          "id": "fa587e7f-4c99-4be1-92aa-142ceb57bba3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2c1062b2-eb58-41ee-b6f4-6f367af8bce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1c794c-abe3-4ea7-9ae9-e61dcdda9002",
        "cursor": {
          "ref": "390ef233-4014-4dd1-9f0a-15375029e2e6",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "11b1f1b2-bbc3-48bb-a160-454ab4fb75cc"
        },
        "item": {
          "id": "9c1c794c-abe3-4ea7-9ae9-e61dcdda9002",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98046977-2bbb-4ce6-b288-cce5f56d2181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e415b9d-83a9-45c3-8624-7574c0fcf0e3",
        "cursor": {
          "ref": "ff3f503a-7a52-45b4-a095-f80111c16fce",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1d0de2d0-ec64-4eba-a148-eae8092d53f2"
        },
        "item": {
          "id": "6e415b9d-83a9-45c3-8624-7574c0fcf0e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "21e85412-2bca-47ba-ab67-f081bf1fd8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e42e1e1-6651-434f-b4f5-083f83e81377",
        "cursor": {
          "ref": "b4bfe319-e873-41c9-ace6-1a870ada6aef",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "48884437-2049-4cfe-bfd1-775d331f3fda"
        },
        "item": {
          "id": "0e42e1e1-6651-434f-b4f5-083f83e81377",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cfc1c16d-0ca9-40af-a137-b110eb6898b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6885b398-f80b-4f31-8988-45884113593a",
        "cursor": {
          "ref": "b68e53df-c90a-4ab6-99de-1921ac9f22e3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "13991cdf-5457-4648-bafe-5fc95a131b73"
        },
        "item": {
          "id": "6885b398-f80b-4f31-8988-45884113593a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f5552b7a-d53e-41d1-9871-b8002d545434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2544f295-d342-4eb0-bc2e-3f71c68434bf",
        "cursor": {
          "ref": "13670fbd-567a-4f4f-b977-00b761dfc394",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6111e17f-f084-4b91-99eb-a06b9cadb1cf"
        },
        "item": {
          "id": "2544f295-d342-4eb0-bc2e-3f71c68434bf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "622f71e3-9755-4b7d-adde-5b2396765128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19266411-4d5a-43fa-a0a6-03f315fab286",
        "cursor": {
          "ref": "46f39585-9a87-467a-97ab-2be47701cf8e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "365e6649-40a4-4701-9a1b-77caf8cd7ffa"
        },
        "item": {
          "id": "19266411-4d5a-43fa-a0a6-03f315fab286",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "954abd27-3202-4592-a2fc-d4f2814db4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43880ab7-fed5-423c-8440-7b6ba7c8dac8",
        "cursor": {
          "ref": "ce3b9f7a-02fc-4335-8f48-2dd85cfc2a9b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0a78f3c1-6324-4203-98c3-9a6e9ca7e91c"
        },
        "item": {
          "id": "43880ab7-fed5-423c-8440-7b6ba7c8dac8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "37a2f9dc-b12c-401f-a615-393395469bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982d5c0d-cb6c-44bf-9e96-da11c23d3e38",
        "cursor": {
          "ref": "fb025d3e-46ce-4aff-b647-8ab61081d595",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6190e7c7-7c1d-41d4-b86b-57ba283020c5"
        },
        "item": {
          "id": "982d5c0d-cb6c-44bf-9e96-da11c23d3e38",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "99d186ce-b6dc-4685-8d4a-14ba248f9022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36428ca5-da15-4f03-9a20-3f4a5e69813a",
        "cursor": {
          "ref": "3e8254d3-aa55-4a3b-9726-99e9091f2d0e",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "232f4101-b830-4253-8ce7-de897a6b7b4d"
        },
        "item": {
          "id": "36428ca5-da15-4f03-9a20-3f4a5e69813a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a7d6c095-70f3-49fb-8c45-7fd1473ce130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf985cff-4ad4-4279-93b6-095d66e3c76f",
        "cursor": {
          "ref": "ec85bc02-595f-4920-b688-6d3d24b90542",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "241b57b6-cc20-433b-9eac-2c569b8f2778"
        },
        "item": {
          "id": "cf985cff-4ad4-4279-93b6-095d66e3c76f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "25e1ba12-5408-44ab-9bd2-fc335f066fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd27df36-6b90-4b9e-9b82-bae4d7f2be24",
        "cursor": {
          "ref": "7b1a0806-b7af-481a-affc-e068bbf01079",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "297b215c-c0d7-48d4-b2cc-18df5dcfdc8b"
        },
        "item": {
          "id": "bd27df36-6b90-4b9e-9b82-bae4d7f2be24",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "eb883cfd-29b7-48ca-a6bd-8faa7628f715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a876fbc-6c52-4240-9742-04f756773234",
        "cursor": {
          "ref": "09d1791d-a7d4-436e-a822-64fd0802b60d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6e506af2-8496-4147-bb60-69c4e07a6e4f"
        },
        "item": {
          "id": "6a876fbc-6c52-4240-9742-04f756773234",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dc8155d5-66b7-489d-8b9c-55efd1205770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38f2df6-7541-4a9e-bd0c-72e711229933",
        "cursor": {
          "ref": "09d09d19-a48c-4549-8faf-851b70937797",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c33f79b6-4707-403a-8abb-2632d74c2a6d"
        },
        "item": {
          "id": "a38f2df6-7541-4a9e-bd0c-72e711229933",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4654b148-674a-4f49-b9a3-fb6a4ee97690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594f1fcc-fcaf-4383-8546-a7110e9c48e0",
        "cursor": {
          "ref": "f7d6af3d-2d72-4ee4-b40d-48641795037b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "65f3bd8f-00ef-4757-978d-b3c114baca80"
        },
        "item": {
          "id": "594f1fcc-fcaf-4383-8546-a7110e9c48e0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c5eb3168-0d92-4113-86da-3dc69c31bb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dc5fad-b711-456d-8241-ef925bc4074e",
        "cursor": {
          "ref": "c775502f-4edb-4c2e-9312-5c0321620545",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d9b5082f-78a5-4dce-aacf-2f1ea6931106"
        },
        "item": {
          "id": "35dc5fad-b711-456d-8241-ef925bc4074e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "62e0d5a0-0575-4993-ba88-d50cb410cfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39525507-1631-4e6a-a460-13ff8181f1f5",
        "cursor": {
          "ref": "68baf3ce-67bc-45ac-bfc4-6f5d75d6bd08",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b42b1473-4955-4e99-bb7a-770df0c324c6"
        },
        "item": {
          "id": "39525507-1631-4e6a-a460-13ff8181f1f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "762fd6c8-0968-4543-bb0e-d29055421315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976639b1-190d-42d0-b165-c6d34c2657b8",
        "cursor": {
          "ref": "61491534-3dbb-417b-9eef-fd83538a9980",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9df54c0c-b6b3-4785-8144-2b340af9d085"
        },
        "item": {
          "id": "976639b1-190d-42d0-b165-c6d34c2657b8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3f386b66-0500-4c10-88e3-ae4400741ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac821317-f6aa-4019-8ceb-8e24b4bfbecd",
        "cursor": {
          "ref": "37d6f564-ae5c-4d5f-9bd8-57dc94d7a2c4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0e7ea8e5-f9f1-4aca-ad97-11e5e98dd2d8"
        },
        "item": {
          "id": "ac821317-f6aa-4019-8ceb-8e24b4bfbecd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "76142b83-22fa-4bf8-bcfc-1ae84d3e333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfe7292-7330-4eef-af4b-d1c1fce30668",
        "cursor": {
          "ref": "7289be6a-da04-467f-85b6-47d4810f388e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "603d7cd7-2a47-49a7-9fe2-77ec55ee5432"
        },
        "item": {
          "id": "1bfe7292-7330-4eef-af4b-d1c1fce30668",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c97a4f63-2d81-40c2-b354-e3290168bd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d6586d-6c75-4ded-9473-093a477f050f",
        "cursor": {
          "ref": "559e2353-125b-44ba-922d-e921ae3d8571",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8b166dac-ddf0-4f68-867d-c4f2b39ffeee"
        },
        "item": {
          "id": "58d6586d-6c75-4ded-9473-093a477f050f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6373dc96-fc59-4190-94bc-88ff9ecb683b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc6aa5c-5063-4c46-9f07-5d48c5930e3a",
        "cursor": {
          "ref": "9a7e0e4d-1a52-4104-9f5f-8b4572e351ea",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0a2f452c-4dbb-4114-9153-297832977ed5"
        },
        "item": {
          "id": "6dc6aa5c-5063-4c46-9f07-5d48c5930e3a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e4bb880d-eb4b-4f6c-b65a-0e72889ba67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7991ee4-288b-49b0-b63c-37a3f271bafe",
        "cursor": {
          "ref": "e2caf1ec-5ef2-48d7-95b0-320d9d04f193",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a77fb19f-a83f-4256-801b-13b5d1a99a85"
        },
        "item": {
          "id": "a7991ee4-288b-49b0-b63c-37a3f271bafe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eb5afebe-6b0b-4039-b383-8563a697e90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a48340-b4ee-424d-97c8-98aced94c27d",
        "cursor": {
          "ref": "80a0c86c-a15f-46b0-a7f4-fb252a112cfe",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b198c4b4-0fb8-4f1f-bdd1-4062813c5b7a"
        },
        "item": {
          "id": "43a48340-b4ee-424d-97c8-98aced94c27d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ceb2757e-c0ad-4f07-9df7-0fe633d201de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4fe2bd-f815-44ba-bec4-e2e87f2cc236",
        "cursor": {
          "ref": "b576425f-d8b9-4fff-99d6-6402d2841369",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a1da6eef-7974-4006-8699-f7093de0f7bb"
        },
        "item": {
          "id": "7c4fe2bd-f815-44ba-bec4-e2e87f2cc236",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ac4351b9-ae45-4c0c-b17d-4a23d09b2f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1f6362-c881-4c02-97c8-e419a4b24366",
        "cursor": {
          "ref": "5a01afb0-9579-4540-90bf-182b798ddf10",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a7f0114e-45d7-4d36-a1d4-ecfba09de9ff"
        },
        "item": {
          "id": "eb1f6362-c881-4c02-97c8-e419a4b24366",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "de5e2812-b9b4-401b-ae40-3da2c4642291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6924ad8b-fa3f-484f-a0d8-16d862e87ca6",
        "cursor": {
          "ref": "fd123cd1-e3bb-4269-97f0-064351b28711",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "562dbc0d-6ac9-43db-afc9-0c318390e089"
        },
        "item": {
          "id": "6924ad8b-fa3f-484f-a0d8-16d862e87ca6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e0ee47b8-86c6-4863-bf87-75c1a6fe09f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d540bb48-a8c1-4d4c-bb3a-339342c65189",
        "cursor": {
          "ref": "bb4c1e33-ab9d-4a2c-941f-b2654eb96970",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0a01f12e-663a-4386-8c1e-cecf23e99fe2"
        },
        "item": {
          "id": "d540bb48-a8c1-4d4c-bb3a-339342c65189",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4dbc0cc9-3b5e-454b-bdc5-dcc0f857ad12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ace4eb7-936f-46af-9ab6-b40bb5ee983b",
        "cursor": {
          "ref": "a20f55da-856d-47af-9fb2-f5c166883023",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fff91cc8-c313-401a-abfb-721f6efa11f8"
        },
        "item": {
          "id": "6ace4eb7-936f-46af-9ab6-b40bb5ee983b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2c87d3aa-d328-4e30-a830-076fb8ee1e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cc1d4f-b110-4869-a9a0-cfc4f294f3a8",
        "cursor": {
          "ref": "8a547c5f-2a64-4600-8112-2431a8a1b4ae",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1887998-a5d3-4d04-820f-b029802dcffc"
        },
        "item": {
          "id": "86cc1d4f-b110-4869-a9a0-cfc4f294f3a8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0d6c6883-4355-4407-b2fc-e7b5bf2fca46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0b064d-491e-4020-8879-f43b0cac9422",
        "cursor": {
          "ref": "e2f5391e-5ab8-4509-a7e1-fcd358ed0870",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f405cc4f-e1a6-4d9c-a812-c232b5622dfc"
        },
        "item": {
          "id": "9a0b064d-491e-4020-8879-f43b0cac9422",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ad2b361a-a78a-4b4f-81e5-645fcb14d664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aac7b1-69bd-4811-b96b-6db44af426cb",
        "cursor": {
          "ref": "039544ef-26db-4919-9982-9ae0849cfe9c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "599a49f7-f7eb-4b6d-91b1-f407e99f1959"
        },
        "item": {
          "id": "a3aac7b1-69bd-4811-b96b-6db44af426cb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3d85a934-2340-4b5a-9182-b779692e9375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b62aabe-f6ee-4c30-b0c2-d57dace9b93a",
        "cursor": {
          "ref": "0842b0b3-7d99-4ac6-af1d-a56abc613d8a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "264880eb-fae2-4631-916b-f1454ab19600"
        },
        "item": {
          "id": "9b62aabe-f6ee-4c30-b0c2-d57dace9b93a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98cd2e65-29ec-462b-adf3-34d3350b9111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b508e7-7827-4c06-b6ed-9ce070600d6f",
        "cursor": {
          "ref": "ad1b4041-0839-4bcf-973d-d22e67176a09",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0c4913a3-5c0b-4c15-8212-6b5bccf1a581"
        },
        "item": {
          "id": "67b508e7-7827-4c06-b6ed-9ce070600d6f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "22db27d5-e0fb-4657-bf8a-7cab21ab4681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a649c9b-e3b7-4c27-85ae-761c6020c717",
        "cursor": {
          "ref": "eb93346a-f20b-4c10-9da0-df70a5b5e90f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fc966492-f55d-4ca3-8fbd-3fc7c0c307b8"
        },
        "item": {
          "id": "9a649c9b-e3b7-4c27-85ae-761c6020c717",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9663422b-97c7-4a24-ab40-0843facebb6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73537ca2-ae96-4cca-af14-12f7ff6df9ea",
        "cursor": {
          "ref": "ce47f1b8-2c1d-413d-8534-2e1037e73d3f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "856f187a-4c77-4202-9226-33b5faacd724"
        },
        "item": {
          "id": "73537ca2-ae96-4cca-af14-12f7ff6df9ea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ba798989-a877-48f1-8fc0-f254d66b3650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2532b35c-c06b-4ec6-9e30-702d81697cf2",
        "cursor": {
          "ref": "4687f67b-8a91-41ef-8d55-367bc3f17536",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fc789186-ac24-4f90-8dee-b449f6eb0f8b"
        },
        "item": {
          "id": "2532b35c-c06b-4ec6-9e30-702d81697cf2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bdfcbccb-d901-476e-b9de-597a5bdab196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0ca4ff91-0e14-4aa9-9c77-951960585f14",
        "cursor": {
          "ref": "980ba8a8-8385-4566-84a3-ea4a1e2c9b01",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4cdf93c8-b00c-4caf-a212-28bcfa4e156c"
        },
        "item": {
          "id": "0ca4ff91-0e14-4aa9-9c77-951960585f14",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e0f962b4-83e3-47aa-b491-22474e405103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e34ef08d-a63d-4290-af05-2ea0926d5549",
        "cursor": {
          "ref": "35c5d896-8069-44c4-a6f1-4bc71f281aad",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b7a7c71a-57e0-4874-9d0e-dbf87dfc56d6"
        },
        "item": {
          "id": "e34ef08d-a63d-4290-af05-2ea0926d5549",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e9d8a4ee-a14b-475a-9f3d-14688b0e7bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f3621ba4-cf45-4427-9340-94c0617e17f4",
        "cursor": {
          "ref": "9fa15b54-b5fa-4b8c-afb1-bd044e1b8968",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2e6d1ea1-e656-4a9e-9d84-73018a30af6b"
        },
        "item": {
          "id": "f3621ba4-cf45-4427-9340-94c0617e17f4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d1eddf7e-ed2a-4c23-8651-af899521d4dd",
          "status": "Created",
          "code": 201,
          "responseTime": 8659,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb08fe8-00f7-4334-806b-c283615b4229",
        "cursor": {
          "ref": "941843b7-183e-4b14-a816-e747f781fb87",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a51c3245-c392-4580-b0e6-b63265f9983e"
        },
        "item": {
          "id": "9bb08fe8-00f7-4334-806b-c283615b4229",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "de036c18-832e-4953-b554-acca17df5937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5cafff5a-f5ff-4c86-b32c-582c30816c6c",
        "cursor": {
          "ref": "4906a2f6-9877-429b-9eaf-fdc1f5e108e8",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "011af0f7-2830-45cf-b279-f97797c7a85a"
        },
        "item": {
          "id": "5cafff5a-f5ff-4c86-b32c-582c30816c6c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dbe72a7f-f257-4457-be3d-53f0d660690b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "805e7a08-2224-4210-ace8-7b743c3fa123",
        "cursor": {
          "ref": "497e6805-9587-429a-bea4-e9c5fb280d9f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "17a5ba6e-4a79-41e7-a5c5-06000500f6aa"
        },
        "item": {
          "id": "805e7a08-2224-4210-ace8-7b743c3fa123",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "70f61376-534a-4f4f-8dee-ec21523a55c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fceb43-ce86-422d-b72f-76eb27fa0049",
        "cursor": {
          "ref": "2cdae890-6c29-4d95-a9a1-a6c92f56b620",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7677788c-763f-4ca4-afca-2ec902e44d6e"
        },
        "item": {
          "id": "83fceb43-ce86-422d-b72f-76eb27fa0049",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "516c3dc4-a238-4ef9-a16f-f78250acc5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaf433d-4c90-4ecd-8edc-b4efbaf951d1",
        "cursor": {
          "ref": "4d8754f3-2823-48c8-929c-5e26fc85affd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2d518567-1ff6-49a7-a278-b20318bb4e7e"
        },
        "item": {
          "id": "7aaf433d-4c90-4ecd-8edc-b4efbaf951d1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29f8e570-db17-45fe-a321-a95bcd18463c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0152c8b4-92df-41f5-8b34-bac9887f5235",
        "cursor": {
          "ref": "693cefe4-e7a7-48ba-a4a1-c924b7737655",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c2438f2e-49d1-478b-aac4-2c91e684cf02"
        },
        "item": {
          "id": "0152c8b4-92df-41f5-8b34-bac9887f5235",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f0f3755-fd6e-45eb-99cd-ba929cfc1297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b692a5c-7708-4146-bc37-4c6d388ac55f",
        "cursor": {
          "ref": "5d59f65a-ca61-46ab-a757-5dede9b818fe",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "52bc4361-d153-47d9-b31d-6daa9675d22c"
        },
        "item": {
          "id": "5b692a5c-7708-4146-bc37-4c6d388ac55f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3557baf3-68bc-43f3-917a-c1aa13a22b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab4a6c0-4736-433e-962e-139f51d6787f",
        "cursor": {
          "ref": "9cfcf2ac-201c-4025-9954-adb822132943",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "70b8712b-df82-495f-8aee-882fc1bea6bb"
        },
        "item": {
          "id": "bab4a6c0-4736-433e-962e-139f51d6787f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f09dbfdd-3959-4972-b84c-5f81d1080761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a8afcf-b757-4f49-9811-26eb21fd0d7c",
        "cursor": {
          "ref": "2e72cf07-6410-404a-9ebe-0e6d761991d4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b6139a70-3fa8-44da-ab41-c01ed38fdbe4"
        },
        "item": {
          "id": "f8a8afcf-b757-4f49-9811-26eb21fd0d7c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dc95a21f-b994-4304-80c4-4052dffc6b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dd7595-bae8-4c46-97f0-00228ab7caea",
        "cursor": {
          "ref": "0a600fa1-4a59-409d-8280-51bbb2146b75",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "04a66e34-5341-4355-8638-117c359e9b5f"
        },
        "item": {
          "id": "c7dd7595-bae8-4c46-97f0-00228ab7caea",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1a624ecf-e6ea-45f5-b8a2-938020c98d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3470346-b8b9-4425-80cd-e740f387939b",
        "cursor": {
          "ref": "a4a3977d-2531-45e3-9741-ef2b693d2758",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "79426fe9-3ea5-40cf-bcb9-f1315f55e68e"
        },
        "item": {
          "id": "d3470346-b8b9-4425-80cd-e740f387939b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8c9b5a99-46fe-4a94-948d-e933fc9297da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcb6df6-36ff-4c5c-9e5f-5f2a64ca9ac4",
        "cursor": {
          "ref": "9fc427d8-7179-425e-96f7-74657b37f0e3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "db5dcb10-5299-4612-b832-7a8d02a156c6"
        },
        "item": {
          "id": "6dcb6df6-36ff-4c5c-9e5f-5f2a64ca9ac4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ddc0be68-a0de-4dd9-9a3c-7c04698a3207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02941097-8e83-4e4b-9e9b-16d329496c31",
        "cursor": {
          "ref": "ea1131d1-840e-4071-9dea-26a790114f8a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ffeb57f6-e819-4f84-ad16-b9ec3a54cc00"
        },
        "item": {
          "id": "02941097-8e83-4e4b-9e9b-16d329496c31",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6fabfe0e-468e-4a64-a5f8-b06d41e54f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ee3cc-8d78-4a1a-bfad-31d6704ba6f9",
        "cursor": {
          "ref": "e95f6165-73f0-4944-b711-2250dc917841",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cce89ce2-bc07-409d-af16-187513cf71aa"
        },
        "item": {
          "id": "c96ee3cc-8d78-4a1a-bfad-31d6704ba6f9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "55c29e77-a266-46f3-875d-9aac0ed9e8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af613d69-364b-4633-8cf5-862a37752bc1",
        "cursor": {
          "ref": "71120a94-a672-4b62-9374-723c3f4c3768",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a23d84dd-16ff-4e07-8dc5-a695df75cff4"
        },
        "item": {
          "id": "af613d69-364b-4633-8cf5-862a37752bc1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "349eb975-89eb-4cfc-8294-756726f1a0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c086b5e-bd9d-4ff0-b612-c23ea3483652",
        "cursor": {
          "ref": "a03a708a-baa2-4a22-986b-703fe48f74d3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3aee6495-104f-4ba4-bbbe-7136e95fd3af"
        },
        "item": {
          "id": "4c086b5e-bd9d-4ff0-b612-c23ea3483652",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "52a17c7f-1b4b-4963-acd1-eec9692a2ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c39e7a-6d7a-490d-8fa4-818fd7ca1dbe",
        "cursor": {
          "ref": "cc7b65df-a3a9-4bf2-9f29-507ca940d874",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f9e587b-d566-4a38-a001-e3174b05f166"
        },
        "item": {
          "id": "63c39e7a-6d7a-490d-8fa4-818fd7ca1dbe",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d72f395-f927-4618-bf9c-d24e53357754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbd31d1-3bea-42fb-8779-dedb8ac27dde",
        "cursor": {
          "ref": "8bfc6837-899c-4a3a-9913-92b4546cf30b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e9aa1b98-5e9f-4022-8e87-5dbb1c900696"
        },
        "item": {
          "id": "dbbd31d1-3bea-42fb-8779-dedb8ac27dde",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0eddebf2-a083-43f7-b29c-d4985e14ffb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23470f38-f3a6-4f75-9d56-cf7bd6cb6566",
        "cursor": {
          "ref": "4a1c636a-cd0c-4b74-b0d3-4609e988ae88",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "43a60243-68bd-404b-aedd-a55339f6fcb6"
        },
        "item": {
          "id": "23470f38-f3a6-4f75-9d56-cf7bd6cb6566",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "952a88ee-4219-4ae7-bd84-a06ffdc6c705",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6d9c429b-7f01-462e-b6a9-05a1ceda94e1",
        "cursor": {
          "ref": "c7c8e13f-db88-4f13-9742-125179163f12",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a78fa335-c98e-4a5b-8135-5e39cea3cb90"
        },
        "item": {
          "id": "6d9c429b-7f01-462e-b6a9-05a1ceda94e1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df76c2a7-770d-4be1-946e-c3fdbb19fbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3e7e1f-90f7-4e9f-a036-2975f4b1e085",
        "cursor": {
          "ref": "984b8863-bf3c-4116-ba01-d785a402edd0",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "709d40cb-6ec5-48af-991f-ebb73bb549e1"
        },
        "item": {
          "id": "1c3e7e1f-90f7-4e9f-a036-2975f4b1e085",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c70e1b5a-2f8e-4b61-aeb2-aac291ff7e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9340e5-421a-4f86-9796-b5cea3507ed0",
        "cursor": {
          "ref": "d758b291-1244-46e6-9681-d7cc678e1aa2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b2189d5a-0c60-4391-aabf-e3e6139f0248"
        },
        "item": {
          "id": "dd9340e5-421a-4f86-9796-b5cea3507ed0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5689b626-b00c-47ab-9592-c17c7406b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2962db5d-391b-49b3-92d2-392719c066a2",
        "cursor": {
          "ref": "a603bb70-0362-4818-8809-54d6ce92b709",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "67368a33-7c45-44a2-a504-fbd836f7bdb7"
        },
        "item": {
          "id": "2962db5d-391b-49b3-92d2-392719c066a2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2d2e7064-7247-4cbd-923b-c7fc4d216a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50179069-a63b-42dc-a4f7-b2d11d1ddcde",
        "cursor": {
          "ref": "97167fe1-3a43-4e52-8b6a-f11a6f83571a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "587b1e2b-0c8f-4fd8-b6d9-3da13d9b0b35"
        },
        "item": {
          "id": "50179069-a63b-42dc-a4f7-b2d11d1ddcde",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2224d190-5046-4c14-b72a-903710b24153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b7e3a-9227-49c2-a7d3-ae34ee738f3b",
        "cursor": {
          "ref": "7fcf20f4-e7a6-4779-8ebe-e0654c82f142",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9b8931ac-c600-40a8-b9ce-46ce8268e5e2"
        },
        "item": {
          "id": "418b7e3a-9227-49c2-a7d3-ae34ee738f3b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9840fea3-d8f9-4100-adb5-d19cfe774dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01753685-a52c-4591-b58e-5855cdfcb409",
        "cursor": {
          "ref": "76d458c1-388b-4a84-9d3d-9ed15d8d948c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e1236f02-a0d2-499b-9b84-74df500d01ee"
        },
        "item": {
          "id": "01753685-a52c-4591-b58e-5855cdfcb409",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "af5698ea-6d1f-4701-ba0d-16b248736fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65575493-c6f0-4906-a36b-19a6edd98777",
        "cursor": {
          "ref": "72835b2e-a29d-46ec-ad56-4341d4c3b97a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "96d7e190-e9bf-49a5-9d95-c77dc9ee2051"
        },
        "item": {
          "id": "65575493-c6f0-4906-a36b-19a6edd98777",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b8366819-3fa8-48b0-94dd-e8d66201dc10",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "26336fa3-6fca-44a9-b0c4-aa6814531514",
        "cursor": {
          "ref": "8a4fa941-948c-4d75-9176-2fe15dfbbe1b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2d6bf681-9f30-491a-b30a-0b55e4d9bd10"
        },
        "item": {
          "id": "26336fa3-6fca-44a9-b0c4-aa6814531514",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3d26b668-f93f-4daa-bef6-5dabc1349edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c9f834-237a-4b6d-b290-c3e3fb926fc7",
        "cursor": {
          "ref": "654a8696-2b71-48ef-9a31-0bbbd9c2c561",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2680deaf-bcc2-412e-a4bf-a020049b1a5e"
        },
        "item": {
          "id": "92c9f834-237a-4b6d-b290-c3e3fb926fc7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "11eb7b09-61ac-475c-aba0-9582644e1384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0c3613-8183-44d3-ba00-a3f590529a0c",
        "cursor": {
          "ref": "16bfc403-6b35-4643-b907-e441252a9398",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "edbbcb6d-cecb-4631-806a-032c4de8dc91"
        },
        "item": {
          "id": "5b0c3613-8183-44d3-ba00-a3f590529a0c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "55689b36-4c31-44f8-9cf6-e283bff802f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b897c3-438b-40c7-a98f-1d45dc856184",
        "cursor": {
          "ref": "4ad10265-4f9f-44d4-87f1-66d96cd1be44",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f4245fdf-bd90-4910-aafe-1444f41ed740"
        },
        "item": {
          "id": "75b897c3-438b-40c7-a98f-1d45dc856184",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "82f9776b-c073-4d94-82dd-513109d0090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081ca2cc-706b-4be4-9809-ddc162f1c177",
        "cursor": {
          "ref": "c84c92cd-b522-454b-9e8c-9eb2d62da340",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4ac44741-75ca-4ce9-9d7e-e8ab3f2742bf"
        },
        "item": {
          "id": "081ca2cc-706b-4be4-9809-ddc162f1c177",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f22b0457-bfdf-40b3-a0cc-8d3b6654e55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e2a788-aa6c-468d-b863-615744ae39bc",
        "cursor": {
          "ref": "1a732c80-492c-49e2-8efc-f4d21a338555",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cfca7bbc-c6a0-493a-b335-b63bdd23e9b9"
        },
        "item": {
          "id": "a0e2a788-aa6c-468d-b863-615744ae39bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6350dbc1-244d-4f8f-99f0-a0f6cea92754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb3918c-5bf4-46b7-b785-61b717f186a8",
        "cursor": {
          "ref": "abe15209-81a6-4316-9a4c-091bf338447f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4beb1e23-6f9c-4a42-9453-c388a7ea11db"
        },
        "item": {
          "id": "1eb3918c-5bf4-46b7-b785-61b717f186a8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7d7e0378-0a95-45f9-88f5-3965192922b3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 101,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "0ad10096-81fc-485f-b4b4-6f78944b9a7f",
        "cursor": {
          "ref": "39c83196-2869-4b64-963f-ad87d864af6f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7a26fd8e-dd9f-4fa6-8f79-7d83c26a0ea9"
        },
        "item": {
          "id": "0ad10096-81fc-485f-b4b4-6f78944b9a7f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "77443605-0d0b-4e4a-b733-1ad16a6a5888",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df33864b-6e8a-44dd-9ae7-a954ad8a3f28",
        "cursor": {
          "ref": "65adc860-b0a0-43ad-b2b4-82670f13ea45",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9846a73d-4718-4307-8177-5daee728b259"
        },
        "item": {
          "id": "df33864b-6e8a-44dd-9ae7-a954ad8a3f28",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64a5bd7e-711d-4cc0-ac54-7226bd9f50bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b36814-f22e-414d-8e76-7fcbf08500d7",
        "cursor": {
          "ref": "4a64503f-2071-442d-9531-c91861e648b6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c6628e98-0136-4e2f-ab0a-129b1637337a"
        },
        "item": {
          "id": "19b36814-f22e-414d-8e76-7fcbf08500d7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef95f118-410c-4a9c-8950-5fd1593714c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352c5cd6-d17f-46c5-b8b0-95560c113bd8",
        "cursor": {
          "ref": "3c1df8ab-8db2-4588-b6d2-98706a580563",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0b163566-adf1-48b9-bc01-27309ab16984"
        },
        "item": {
          "id": "352c5cd6-d17f-46c5-b8b0-95560c113bd8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d3c9618-7f0a-421e-b61d-a140287e1b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed274c20-2ef1-4c80-b352-ca5ab0d712aa",
        "cursor": {
          "ref": "704e3c94-1ec3-4166-91b2-b1eb845da983",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a4411f7b-cb75-4a76-b186-43688ad2d764"
        },
        "item": {
          "id": "ed274c20-2ef1-4c80-b352-ca5ab0d712aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "27043933-8a39-40a0-9bf4-7075645dca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6822ad-23a8-445b-8a71-4e76fc3dbf39",
        "cursor": {
          "ref": "ccb6fe47-7a0c-4144-94a8-1c72e42b6395",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "407dad48-ada0-4792-8036-b5dd9eb25b40"
        },
        "item": {
          "id": "2d6822ad-23a8-445b-8a71-4e76fc3dbf39",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea725600-f0af-4bfb-a505-f80fa3f42e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d1a89c-0f62-4a36-91b7-64f30e23f6b7",
        "cursor": {
          "ref": "52988da3-a908-4310-872b-19e1607e0922",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aaab3d80-e85c-42e5-a572-cbd03af71c37"
        },
        "item": {
          "id": "e9d1a89c-0f62-4a36-91b7-64f30e23f6b7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e36c57a8-e6d4-4ddd-923f-025db32b726c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee443629-6708-4e36-9f2a-28b75ac2a373",
        "cursor": {
          "ref": "447ce345-69d6-4ac7-81e0-6d17363cffd1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3638279c-01bd-426b-b153-d306586bb05f"
        },
        "item": {
          "id": "ee443629-6708-4e36-9f2a-28b75ac2a373",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "044d7ca2-4015-441d-99b9-d532e8b8b9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33c96ef-0d7a-454a-bf2e-81bf6acc45bc",
        "cursor": {
          "ref": "7b022d21-dee9-4b41-9f60-3522953fcfed",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "309cedb9-d7a5-4cfb-b1c5-7a82b8774fe6"
        },
        "item": {
          "id": "b33c96ef-0d7a-454a-bf2e-81bf6acc45bc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a10d4b9b-9ab4-4b5f-844d-d33fdde26deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccf2203-88f0-4dc4-b112-bfd5207f842d",
        "cursor": {
          "ref": "6c21252f-91e1-4860-b69c-a3443ef928a1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "36e0cae2-73af-43f5-8801-0113712afe4d"
        },
        "item": {
          "id": "cccf2203-88f0-4dc4-b112-bfd5207f842d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "08b1bd6d-b553-4562-9401-dd70e3fcdf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6067f66-7631-4bf5-a36d-db32aa4459a6",
        "cursor": {
          "ref": "6e25f031-d51b-4bf5-81f4-919cac0a933a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dd8a7d01-20aa-4b1e-9ab6-4c8cfb23a72c"
        },
        "item": {
          "id": "a6067f66-7631-4bf5-a36d-db32aa4459a6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "08956a38-391b-4f21-9bf4-37f793d1d217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ea84ca-703e-4c4f-b1ed-814f059efe37",
        "cursor": {
          "ref": "8da20211-4a74-4365-ad22-b723d8bd8d83",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "70ce0ad5-5e3c-4f7a-b192-9107b14de3a0"
        },
        "item": {
          "id": "f8ea84ca-703e-4c4f-b1ed-814f059efe37",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5cd23193-4d5f-4ec5-bcd8-3db21074c796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cf90c7-36ff-4351-b876-b114edf76c75",
        "cursor": {
          "ref": "4fc581e6-d18e-4a15-8117-a3500fa8650b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "41f08ea6-185e-4f5a-8d66-31ba5a089c02"
        },
        "item": {
          "id": "37cf90c7-36ff-4351-b876-b114edf76c75",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "81f746f2-d54a-45b8-a803-f4ab4ee46f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4eff60-f2bc-4c26-abde-c5e2dc6881ab",
        "cursor": {
          "ref": "3d283a76-159f-4e6e-8009-c6e690f086f7",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a5938466-5d57-4d61-aa37-e934e3a7a3bd"
        },
        "item": {
          "id": "6d4eff60-f2bc-4c26-abde-c5e2dc6881ab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bd30050e-0b31-4b32-b6c5-d2777987bb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e7f35f-498a-44e6-8f12-1441dd461a3a",
        "cursor": {
          "ref": "42fe6428-9e90-45b7-8864-0a8f13e831e7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f4a71558-4713-4e12-b91d-0d5c30021d3f"
        },
        "item": {
          "id": "53e7f35f-498a-44e6-8f12-1441dd461a3a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f72e2c76-df0c-4c95-9618-081288fe0ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feeadc2e-651b-4264-a770-d3fecb564737",
        "cursor": {
          "ref": "f6c15f83-db36-4a70-bf45-fb16985c62fd",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a80e0bd5-faa2-4384-9613-18ab46acbe17"
        },
        "item": {
          "id": "feeadc2e-651b-4264-a770-d3fecb564737",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "16ee381c-2a6d-4e4c-a7b4-71745da1e57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe08824-035a-417c-8551-f2106d4e6c98",
        "cursor": {
          "ref": "b4d9b9dd-32a5-49b8-859a-8a2299b7145a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "595c7ca8-2e92-41f9-9458-c492d59c37fd"
        },
        "item": {
          "id": "1fe08824-035a-417c-8551-f2106d4e6c98",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6aae0b38-6ca9-49cd-9b7c-efd4658783bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b170eaf-21b0-424a-8b84-698f5ffb71b9",
        "cursor": {
          "ref": "5047a68a-07b9-4d09-bee5-90e907c2cef4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0d2c175c-d89c-4a8c-8983-6b776584d4f1"
        },
        "item": {
          "id": "8b170eaf-21b0-424a-8b84-698f5ffb71b9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3f520534-ba78-4172-a1f7-5c976688ae83",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4e2de9b3-8fa4-467b-81b6-d486f62d52eb",
        "cursor": {
          "ref": "e4d43eb5-081d-4972-b8b1-4a4699bb9f97",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d8c3c79c-4df2-4f65-be04-5c0345184851"
        },
        "item": {
          "id": "4e2de9b3-8fa4-467b-81b6-d486f62d52eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "318d0de4-ab06-4cbe-b75f-0f31fd22b0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02437f27-6204-4a9e-921c-e7366880f5ed",
        "cursor": {
          "ref": "f66d3da4-9ad8-4406-aa33-e5a848fb27a7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9031bab0-0d42-4b59-853c-8c745e1e5752"
        },
        "item": {
          "id": "02437f27-6204-4a9e-921c-e7366880f5ed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f9a6d51c-af78-4679-8437-7621f10f4ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412dedbf-b0d6-4d31-99d0-22127a0bbf0f",
        "cursor": {
          "ref": "a1167a82-3cf6-4be3-90e8-4007bef443f2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "77a71dcb-5178-4e6c-a221-f68efa6a99b4"
        },
        "item": {
          "id": "412dedbf-b0d6-4d31-99d0-22127a0bbf0f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0417673d-54a9-418c-aeec-998fc8f06e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4763d8-3539-4df4-8734-7b7806a7dbff",
        "cursor": {
          "ref": "e8494598-3fb5-4070-914b-d9a9d560c15b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "27713b6d-40a4-4398-bd9b-1642e3fce0d9"
        },
        "item": {
          "id": "5c4763d8-3539-4df4-8734-7b7806a7dbff",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d523f1ba-31d8-43b9-a545-e44c41793921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201b4085-7db6-4e03-82e4-c452582aa141",
        "cursor": {
          "ref": "ba9e3288-c1ff-4293-a6bb-096c3c841b83",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd747ee8-ea81-4115-8538-2df554ef6b03"
        },
        "item": {
          "id": "201b4085-7db6-4e03-82e4-c452582aa141",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "91c56d41-900a-400c-965d-4d2d869b4b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cde5982-b2c4-4883-a555-26648e584345",
        "cursor": {
          "ref": "dd14fd33-d2c0-4922-b27d-c920358e8920",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c10abe96-305c-4a92-b872-be5fdf01726f"
        },
        "item": {
          "id": "1cde5982-b2c4-4883-a555-26648e584345",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "119f9c5e-a855-4f96-854e-e0a16abcd7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99621f7c-6543-41f4-a53b-753bd9c1f05f",
        "cursor": {
          "ref": "6e089c34-14c4-47a1-8844-ea2fe2f5f8aa",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bf715e2c-0961-44a4-8eb7-c651042008b4"
        },
        "item": {
          "id": "99621f7c-6543-41f4-a53b-753bd9c1f05f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2406e6da-7309-4835-b464-ff6a02f24dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a51ef2-ff44-4f52-a523-ad9b7980713a",
        "cursor": {
          "ref": "90757172-82ae-4aa2-bdab-c74dffb2200b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3bdb2b29-a9b9-451d-97be-76eda932a124"
        },
        "item": {
          "id": "d7a51ef2-ff44-4f52-a523-ad9b7980713a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4bcc52fb-f56d-43f4-8524-6a0f11eaafab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 209,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "eb101875-3d0b-4953-b766-310eacc2f197",
        "cursor": {
          "ref": "184bb458-4f65-49e5-b09b-87e386c8d3ba",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ecbb326c-ec6b-4ea7-870d-ab3fe04d691f"
        },
        "item": {
          "id": "eb101875-3d0b-4953-b766-310eacc2f197",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aefca35b-844c-44c4-ae45-73ec4d6815d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860ed1af-f087-4c8a-8445-ea73cce2ee14",
        "cursor": {
          "ref": "c1ada37c-4f14-4498-9791-aa2030a8e22f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b7571896-1188-4d56-9778-0a53f0180326"
        },
        "item": {
          "id": "860ed1af-f087-4c8a-8445-ea73cce2ee14",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "567fd7cf-639e-4960-87e0-243be74d13e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6164a11d-d341-4d5c-aff7-4d37eed2951d",
        "cursor": {
          "ref": "52f42c5f-8979-40d8-baba-200e0392e1b0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "551fa88b-4f0a-4618-8d35-e5a59bc6ecc8"
        },
        "item": {
          "id": "6164a11d-d341-4d5c-aff7-4d37eed2951d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5092ea73-f144-4319-9fba-5ab67841682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35437f0d-4a47-40bf-ad02-f2eb6b196dea",
        "cursor": {
          "ref": "2e721dcc-8675-4a3a-b47b-cfea85897083",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "23ddaa2a-73e5-4b3f-a017-cd4992871c01"
        },
        "item": {
          "id": "35437f0d-4a47-40bf-ad02-f2eb6b196dea",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39d1ad81-c5af-41e9-acc0-75976a8b19ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01a6f4b-afee-4668-9982-e6cf2c3f1c97",
        "cursor": {
          "ref": "e9e0d081-8b9a-43bd-ad5c-ca46b465e643",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "01c767d2-08be-48da-bb18-ca277bc2712e"
        },
        "item": {
          "id": "a01a6f4b-afee-4668-9982-e6cf2c3f1c97",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e45a794-f7ef-40e8-a53c-c8017b8fab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f977d81-46b3-4801-a667-31465239aba6",
        "cursor": {
          "ref": "214559c3-d077-4279-a9a4-3cc91f79dd08",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "995519b9-208d-49fa-a2b0-f32f3ac18b53"
        },
        "item": {
          "id": "0f977d81-46b3-4801-a667-31465239aba6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f256402-e519-474c-90b1-8eee33ba499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078cc706-49bb-4299-a7f6-4e8cb15bc983",
        "cursor": {
          "ref": "dce1aa60-2d89-416e-9fe9-d788be89dcc6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ebd2c3d5-de86-4f7f-b857-22dcca287399"
        },
        "item": {
          "id": "078cc706-49bb-4299-a7f6-4e8cb15bc983",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "42a2b148-587e-40b0-a588-00a92b61e724",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "8e9b6fda-ef6f-4830-a6b7-76e8f672866d",
        "cursor": {
          "ref": "63dbcc98-c88e-4063-ac40-a8f7ceee8470",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ab43fea5-8846-44cc-927e-cb6de4c8d694"
        },
        "item": {
          "id": "8e9b6fda-ef6f-4830-a6b7-76e8f672866d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56d606e4-eba3-4306-8e72-b8b3b8961732",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "97a1b432-08d4-49e7-bd85-76dafb3a63bd",
        "cursor": {
          "ref": "aac52246-2ef5-4702-926b-88acfdf79568",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1d4d59b9-7139-40a9-9d5a-97561ed4028d"
        },
        "item": {
          "id": "97a1b432-08d4-49e7-bd85-76dafb3a63bd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e493ac4c-3ec7-456c-9758-cf9e2b554585",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "f91d2def-4caf-440a-99d9-cb9e018f22b9",
        "cursor": {
          "ref": "67e416ca-50da-4d28-b955-e3398dc30928",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "11cb0d65-0161-4ef2-8df0-8946d20fe3b5"
        },
        "item": {
          "id": "f91d2def-4caf-440a-99d9-cb9e018f22b9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cd7f8684-ff75-4d29-ab10-edd62c4308dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "91754edf-1946-456b-8baa-4660d4e600a2",
        "cursor": {
          "ref": "4160e174-f505-4cfa-8daa-a5a61e925bec",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5a6aafd1-e673-4637-b5d6-612458781f44"
        },
        "item": {
          "id": "91754edf-1946-456b-8baa-4660d4e600a2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6c4378a2-ff81-4887-b2d0-5736b8096221",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "6bab3309-67d7-45a2-b5bb-c074e55bff1f",
        "cursor": {
          "ref": "28be5f4a-7576-40f1-953c-fcd61c4ba2da",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "62a7bf0f-9177-4237-aeec-6944458065ad"
        },
        "item": {
          "id": "6bab3309-67d7-45a2-b5bb-c074e55bff1f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f98bcaf5-abf8-4a5e-9812-e73f6961b7bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "7dcac96a-e566-45e6-b4f1-46e9d1e362ab",
        "cursor": {
          "ref": "fed1c1fb-9101-4ef5-9b21-0f23c1c95549",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a078479f-aa7a-421c-98cb-42ecc8216dd9"
        },
        "item": {
          "id": "7dcac96a-e566-45e6-b4f1-46e9d1e362ab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "610fc081-0291-4380-952f-15caaa0d5481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46568fc-0698-42de-a842-cc606c72d9a7",
        "cursor": {
          "ref": "25dc7643-eca5-46dc-b34d-62713b980242",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9429cb79-8bc1-4c73-8ff1-7a8b576b93c6"
        },
        "item": {
          "id": "b46568fc-0698-42de-a842-cc606c72d9a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b40b9f38-1ec0-444f-9527-1753c4e57059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea804947-cfd3-47a4-9510-c98c05bf134b",
        "cursor": {
          "ref": "6687a29b-2f8c-4a49-bf6f-4e018dcf054a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a31af7d0-8511-4c1e-bdd2-699afcee87e7"
        },
        "item": {
          "id": "ea804947-cfd3-47a4-9510-c98c05bf134b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a19b7284-58fc-4d60-bc25-13c31fb9224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5b7b7f-4508-4d86-8f40-f5709d2e77fd",
        "cursor": {
          "ref": "8a8465ed-3230-4291-9be3-628d2f720c88",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "655ff69a-a4a6-4608-a4b7-8b91358055bc"
        },
        "item": {
          "id": "5d5b7b7f-4508-4d86-8f40-f5709d2e77fd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ac23d85c-0e35-4ee2-8222-d9f0776e10fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefe13b3-368a-44b5-b9f7-5f7a08f36a29",
        "cursor": {
          "ref": "0afa517c-3c86-45f6-af24-b363505d204c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ca72f3dc-c5a8-4681-9047-38d60b6f6fa6"
        },
        "item": {
          "id": "cefe13b3-368a-44b5-b9f7-5f7a08f36a29",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "af8330f7-5405-4fe0-a5fc-fac4cc494f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abf8d67-9314-4f37-b677-91c1e982ff48",
        "cursor": {
          "ref": "869bcdb1-09cc-4341-ae85-77eb6a5f5dd4",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "11589629-bf58-409e-8cb3-c6d393917085"
        },
        "item": {
          "id": "6abf8d67-9314-4f37-b677-91c1e982ff48",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "75a437b9-4753-42ef-a15a-5ce38c7f8b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e243a69c-bb92-4e24-9dfe-9640c1a13deb",
        "cursor": {
          "ref": "6dfc6e4f-0462-4ed0-becb-57f59c09e6e2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "26097686-09f9-41b8-ac76-d506bb6c25d9"
        },
        "item": {
          "id": "e243a69c-bb92-4e24-9dfe-9640c1a13deb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "046070b5-1331-462b-b62b-7c63762cdb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c745bc3-222f-4a67-9e6d-00cf9759c0d5",
        "cursor": {
          "ref": "4dcb597c-0459-4607-88c5-ca07d99cff55",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1694c045-111e-4779-bc5a-00c9c970ecaa"
        },
        "item": {
          "id": "0c745bc3-222f-4a67-9e6d-00cf9759c0d5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4bedab58-108f-4b58-a9d7-28b32d867016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d452d07d-b702-4e1f-9fa0-60adaaa9aae7",
        "cursor": {
          "ref": "11dbef85-c6f4-4eab-8125-d7cd9e0cc0d0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6af4ed39-2539-4955-a12a-bf127f8e470b"
        },
        "item": {
          "id": "d452d07d-b702-4e1f-9fa0-60adaaa9aae7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e529e16a-35db-49a2-8c50-f51f2961e23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fe7be7-a189-4020-8c3d-b18c0c17a038",
        "cursor": {
          "ref": "d4fddee5-b59d-4cea-a67b-d63f506f9e60",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "640dc00a-7c10-402f-bf50-bb79f9e57d9f"
        },
        "item": {
          "id": "00fe7be7-a189-4020-8c3d-b18c0c17a038",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bc6c7dea-b841-4194-b7f4-3013f019bbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a434851-a37b-4725-b772-059c7a094720",
        "cursor": {
          "ref": "1641a2cd-0084-42b3-8948-f08d9ec35552",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "11b2ff18-53c8-47ac-898b-d2403ea4c9d4"
        },
        "item": {
          "id": "0a434851-a37b-4725-b772-059c7a094720",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a05b99a1-7732-4b73-b63a-f25fa6c34b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bc6e57-92d7-49bc-87fa-c3109de275b6",
        "cursor": {
          "ref": "481b603b-830f-4a17-836f-c28b2aba5465",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fa371093-d716-407f-a9d3-da02737ac90c"
        },
        "item": {
          "id": "c3bc6e57-92d7-49bc-87fa-c3109de275b6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3c421b2f-50da-41fe-819b-c5ca7fb790ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e1dfcc-55cb-4181-931a-f5bdc5643a87",
        "cursor": {
          "ref": "33ece935-5e41-4df2-ae25-967c2002814c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fddc47af-3d50-458b-b525-bbd089f5e857"
        },
        "item": {
          "id": "f8e1dfcc-55cb-4181-931a-f5bdc5643a87",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "03fb7b30-0c34-49bf-90b1-750cc01967e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e7ff55-2631-49b7-acd1-b1d525ae9a28",
        "cursor": {
          "ref": "4bf0dd1f-2a3c-44cb-b62e-2ca67830b6ae",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "db407b02-437a-449c-8806-0cfdfbe5e5ed"
        },
        "item": {
          "id": "14e7ff55-2631-49b7-acd1-b1d525ae9a28",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "81ab5ca7-f162-4908-8598-34c8d9277a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf906377-9ef0-4b2a-b803-c97d174edffd",
        "cursor": {
          "ref": "fe9e959c-8a3d-4ab9-904a-dc2952439c2a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "20a19d11-d364-453f-96c3-57a460329504"
        },
        "item": {
          "id": "bf906377-9ef0-4b2a-b803-c97d174edffd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2df3be1d-3fec-4c22-9c3b-d398ad47cf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687b1d98-5202-4cc9-b5aa-0f6b6346e0ed",
        "cursor": {
          "ref": "8a475023-3cad-4e35-a286-7ab378557367",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7572d96f-faeb-4fb2-bc7a-0840e2e09600"
        },
        "item": {
          "id": "687b1d98-5202-4cc9-b5aa-0f6b6346e0ed",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4f64d9f9-2a20-43c8-a63d-f7aa16c5171d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad4c33-d3fc-4a67-8381-c4468bdf7843",
        "cursor": {
          "ref": "06a0f063-2035-4f3d-8920-7d9fc8fb49cd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4ce8aaac-af87-4b51-a94b-778f511dddfe"
        },
        "item": {
          "id": "71ad4c33-d3fc-4a67-8381-c4468bdf7843",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8a4d843e-7b01-42a3-81e7-7a57b47a97dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c782d8-bf93-4223-9d6a-3c9a91dc6be5",
        "cursor": {
          "ref": "68ff5060-c348-4fcc-b529-c16b07f05ee7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4492076e-a987-4613-b772-ebddab193dce"
        },
        "item": {
          "id": "c0c782d8-bf93-4223-9d6a-3c9a91dc6be5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3fe4728b-2330-45bc-a80d-e5ff72d6326a",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ea9acbf6-ca8b-49f0-9f28-eeaa9a990efb",
        "cursor": {
          "ref": "ebd05dbf-8110-4c6a-a454-01dfc677a4ad",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ba674c3-46ce-4e29-830d-f45096a8f9da"
        },
        "item": {
          "id": "ea9acbf6-ca8b-49f0-9f28-eeaa9a990efb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5432a44e-9ba9-4f77-bf6f-a671c95cf1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf72c551-d21f-4c2e-aee1-7247503791c4",
        "cursor": {
          "ref": "02692c3c-23c5-4616-a38d-47316144f441",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0c081078-4932-4105-8d46-fb53d612273f"
        },
        "item": {
          "id": "cf72c551-d21f-4c2e-aee1-7247503791c4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "10b3e42a-0a01-441e-82ae-d1ee712d6506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71de7acf-19c1-41f4-a614-4c229d29fd78",
        "cursor": {
          "ref": "cd2da6bf-401b-4b8f-8cd6-ae73e3090f4a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad6d1068-a62c-4503-8f7e-726d88313f9e"
        },
        "item": {
          "id": "71de7acf-19c1-41f4-a614-4c229d29fd78",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "984fe0ad-e67e-4a48-aac8-b51272ea2753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c6b614-90a1-42ac-b698-8475cd5de3ac",
        "cursor": {
          "ref": "d7ff6979-dd9d-4328-b708-f7995424b3b1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3294b8e4-76fd-489f-a954-757d0a884dc5"
        },
        "item": {
          "id": "08c6b614-90a1-42ac-b698-8475cd5de3ac",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "141ec970-6c73-4293-83ec-eba072e682ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa381f6-7e94-493b-9a07-6f11b1fc0057",
        "cursor": {
          "ref": "66dd9a96-1925-4326-9b6b-e30933ba0b9f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "28979f6c-143d-4bfc-86ac-a57a4b564085"
        },
        "item": {
          "id": "ffa381f6-7e94-493b-9a07-6f11b1fc0057",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "795a49cf-c965-4bcb-8fe3-2ae497787e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba76856b-6c3f-4936-8e1a-7719c894fffe",
        "cursor": {
          "ref": "2935df90-ad12-40ab-b7bf-e0b9159b404a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0adc3917-b836-4294-b078-40700cc49c39"
        },
        "item": {
          "id": "ba76856b-6c3f-4936-8e1a-7719c894fffe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ca2549af-e585-4344-8fa8-fcec280fa787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de53d3d7-08cd-420a-ba97-0e2bfe675756",
        "cursor": {
          "ref": "41d5afc9-2347-49e2-bddf-5a97410cecc0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "14ef3618-04e0-41b7-8c7a-bd73ceabe5da"
        },
        "item": {
          "id": "de53d3d7-08cd-420a-ba97-0e2bfe675756",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7768e7a5-fbde-49c1-ba07-314824d743f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa30ff3-0bf9-4afc-a3de-982be1c4f760",
        "cursor": {
          "ref": "84084ed8-4947-40f0-bd73-18351715266d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "99261cf4-cd16-4252-89e4-f04a3f5029c9"
        },
        "item": {
          "id": "3fa30ff3-0bf9-4afc-a3de-982be1c4f760",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3f25903a-6035-4303-9490-069d5edfcb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb5d104-5ef4-4d6e-b973-f035be2557c3",
        "cursor": {
          "ref": "254af23f-21b7-489a-9d61-6bb9372cc79c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d552c3be-600c-41ba-81ff-2c650c8f2a39"
        },
        "item": {
          "id": "fcb5d104-5ef4-4d6e-b973-f035be2557c3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f278bc2-81f0-44ff-ad2a-0e1ac7243b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8001222a-746b-44a1-bb60-9548a66a641c",
        "cursor": {
          "ref": "846ed9dc-6d8d-447a-832f-e8158e45f781",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "63020816-abc1-4c89-b079-af612bcd82e6"
        },
        "item": {
          "id": "8001222a-746b-44a1-bb60-9548a66a641c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b2c9f343-24d2-418c-8486-e4bf4c3ca39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f15d9c-3d04-476a-af9e-409a016b59fe",
        "cursor": {
          "ref": "25e7c05c-a94f-4251-87cb-5ba15ff40303",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0289af37-8a6c-4e03-a7cb-528e4eb4a768"
        },
        "item": {
          "id": "15f15d9c-3d04-476a-af9e-409a016b59fe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e83dc29f-597b-4c20-bf32-190ecd9a1859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71e57dc-61c3-4eb6-a0c4-19084f018ef0",
        "cursor": {
          "ref": "da6c504a-c66e-4602-889b-b7ca6ab12516",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "96d9b4e7-01bc-4c4e-80ce-477d278cd101"
        },
        "item": {
          "id": "b71e57dc-61c3-4eb6-a0c4-19084f018ef0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a7bc840e-ac61-448c-ba1c-98c652974625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126eb3af-4eaf-48d1-a625-5f48d585c9c6",
        "cursor": {
          "ref": "82a7b08d-474e-48c7-af10-b83bfd7cef54",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9eab30f-b09b-4e22-b29f-3e45ff486411"
        },
        "item": {
          "id": "126eb3af-4eaf-48d1-a625-5f48d585c9c6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "18adfa85-1b37-47bb-ae1e-6dec056fb323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ad7c96-58d2-443f-a599-48bb637f5606",
        "cursor": {
          "ref": "d982c5b7-becc-4b36-9027-c0817ee77be5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ef83d358-c266-4c99-bc66-aa22e260a270"
        },
        "item": {
          "id": "c5ad7c96-58d2-443f-a599-48bb637f5606",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "de75c453-2e33-4b44-8115-efb53948ed4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d24c3ff-b6bf-41e9-bf6e-a877f5ad2ee3",
        "cursor": {
          "ref": "bbbb7bfa-b892-439b-aff7-a3a71c802cf2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c9e1e756-02c2-41b9-bb6b-2d693e81ca9b"
        },
        "item": {
          "id": "5d24c3ff-b6bf-41e9-bf6e-a877f5ad2ee3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f16dadc9-55d4-4894-813f-f1f7bcfaa9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b04eaad-7a3f-46a3-b854-8ac45a5e29c8",
        "cursor": {
          "ref": "fc7aac67-dddc-4890-9bfc-924f90600974",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4d7d354e-2623-4fcd-9e4b-0e7feadf422f"
        },
        "item": {
          "id": "3b04eaad-7a3f-46a3-b854-8ac45a5e29c8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ae1b142f-c665-417d-97af-6bf5aa17dfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0421d64-c487-4c97-8384-6e3a929c03f1",
        "cursor": {
          "ref": "455a89d4-35eb-45a1-8ff3-703330f8231d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bd0c630b-9bc3-424b-9c35-b3edb4664127"
        },
        "item": {
          "id": "a0421d64-c487-4c97-8384-6e3a929c03f1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ab9fe2e5-539b-4d23-9913-b6e7ca01180c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c79337-d9e9-413b-95e4-629f9c7ea1be",
        "cursor": {
          "ref": "6aa759ee-f3d5-4015-a895-92acb33d569e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4e5d69ac-e6dd-4131-8d02-6a51a038ad61"
        },
        "item": {
          "id": "f2c79337-d9e9-413b-95e4-629f9c7ea1be",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9c5ebf30-d017-4c74-9467-4a177226a482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec93bd7-9e57-4463-9d7c-097d74c6289e",
        "cursor": {
          "ref": "63b7b69b-e9bc-461d-9f79-831f63fa3909",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3335bcd6-2d36-427b-b5ae-c5a09a5bc0f2"
        },
        "item": {
          "id": "cec93bd7-9e57-4463-9d7c-097d74c6289e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5f18d246-d2f3-4482-991b-8720f1f783d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284f6b8b-608b-4f65-bd5d-b411e0e81fe1",
        "cursor": {
          "ref": "d2051a8d-3deb-4ba1-9009-9c359358a3ea",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "30d6eea6-ad1a-4eca-a82e-754b314a2c2c"
        },
        "item": {
          "id": "284f6b8b-608b-4f65-bd5d-b411e0e81fe1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c24fb0ed-a06c-4b5d-9381-f0a2ec59b71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e9fee7-91df-4a10-98f7-bb8f7100cc7d",
        "cursor": {
          "ref": "f34b5442-55a5-4029-9262-2b772b1a2c21",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3b46bf10-32e2-4e50-81ac-03e68dc89da5"
        },
        "item": {
          "id": "50e9fee7-91df-4a10-98f7-bb8f7100cc7d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d67fe289-af8e-45dc-8d24-beea19a014e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6181055c-e14a-488c-bee5-544fbf582504",
        "cursor": {
          "ref": "d11bc98b-779c-4f56-b155-b02788386d0e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a045aed-fd67-4cd4-919d-eebbd9980f0f"
        },
        "item": {
          "id": "6181055c-e14a-488c-bee5-544fbf582504",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6efd93bc-c348-4ca7-bfed-6f29060d6a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adeb964-8382-4fb3-beeb-085c9196475b",
        "cursor": {
          "ref": "2f52134f-fe6c-4635-b2f7-b8f25419969b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3a64438e-d6ac-4d7a-94d1-48a37310269f"
        },
        "item": {
          "id": "8adeb964-8382-4fb3-beeb-085c9196475b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f407dc1c-af97-4c66-b453-80a20b95197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed7580c-c450-48b7-85e6-389b3f5ae64b",
        "cursor": {
          "ref": "1fd4bde2-3ba6-4a03-a6cb-6ba83df6d57d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "222a4476-492c-4a4c-85e5-a357b77c105a"
        },
        "item": {
          "id": "2ed7580c-c450-48b7-85e6-389b3f5ae64b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0df1ce03-5c40-4b71-b1f3-150083934b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345e527d-3ace-491c-95a7-16ff9978aa1f",
        "cursor": {
          "ref": "e157a4a9-4df3-4fe6-8373-338e478c9bf4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fcf70ffd-a85e-4d3f-abba-8b59153d8479"
        },
        "item": {
          "id": "345e527d-3ace-491c-95a7-16ff9978aa1f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "758dd7e0-a853-420c-983e-62fbc09430d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b062cc-bd33-4626-ba0b-aef89d465bcf",
        "cursor": {
          "ref": "525e0684-89a7-4483-9deb-266a0dbd136a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7b58d89b-3c90-4c6b-b454-6fda0dbee31d"
        },
        "item": {
          "id": "68b062cc-bd33-4626-ba0b-aef89d465bcf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "47ab4247-3455-4be8-8fea-36030b21dfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0167ca11-afcd-4bba-b8ad-79260ea250df",
        "cursor": {
          "ref": "15166772-5478-45d0-bad3-1a710256857c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "782fc304-df0b-4789-8db3-35ee88769d1c"
        },
        "item": {
          "id": "0167ca11-afcd-4bba-b8ad-79260ea250df",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9347be12-279c-425b-bc50-3524dc2bedcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ff68b9-af2e-4f39-92d5-1f34f5cc06f6",
        "cursor": {
          "ref": "5393a7d7-d17a-4e00-8718-2a09fd8b5fdd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "449178ce-08da-474a-af7d-95f3b3ed001e"
        },
        "item": {
          "id": "68ff68b9-af2e-4f39-92d5-1f34f5cc06f6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "58c5a9ca-b123-43ea-a45a-5e8b5a25bd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee56afd-beac-4295-ac8c-c4c578ac93d9",
        "cursor": {
          "ref": "401b9dc3-71a3-4c7e-9bcc-b4d26e987299",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5576089b-b528-44f3-886a-99f0f7b4cbfe"
        },
        "item": {
          "id": "6ee56afd-beac-4295-ac8c-c4c578ac93d9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8d296825-4023-4cb9-af53-5eda8e6cbd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7dbba5-5401-4097-8200-03e43c3eaceb",
        "cursor": {
          "ref": "d68191e7-658a-465e-b3b1-7af3875945a0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fe506378-284b-4221-b0e7-e61bbd9da652"
        },
        "item": {
          "id": "0f7dbba5-5401-4097-8200-03e43c3eaceb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "99c61bee-f5e2-425b-86e5-50a4a08a783f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382331e7-f33b-427f-92bf-c0ef873fe633",
        "cursor": {
          "ref": "959cd169-4df1-4f2c-8961-e7bb9af7517a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a006f1d8-4d05-4ca7-8589-d291c636beb6"
        },
        "item": {
          "id": "382331e7-f33b-427f-92bf-c0ef873fe633",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c806551c-f73b-4586-ba75-9f653298289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238ce488-7f3e-4e49-8fb6-31b687fd8520",
        "cursor": {
          "ref": "5fe86284-9edb-47d4-b085-46f15254776f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "55f0902f-7a59-42fa-a6c7-1567b224e530"
        },
        "item": {
          "id": "238ce488-7f3e-4e49-8fb6-31b687fd8520",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b30fb4cc-8c17-4c5c-8c79-97e7ac19d6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480702cc-50e9-4a9b-a346-27810f3a720e",
        "cursor": {
          "ref": "83283d32-43e3-401f-9104-56eee601f4b4",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "127f692b-f3ce-4d89-8c81-125ef2fc4393"
        },
        "item": {
          "id": "480702cc-50e9-4a9b-a346-27810f3a720e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f910d128-797c-4e62-aac6-d1e167906371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf3a2a8-3f91-4dd7-a3cc-f7cf89d10f76",
        "cursor": {
          "ref": "0ac932f0-2d5a-4649-83b5-a971d172d67c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "de2cc121-7c27-40bc-8941-b276aec64f1e"
        },
        "item": {
          "id": "5bf3a2a8-3f91-4dd7-a3cc-f7cf89d10f76",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0d082ecd-9986-48dc-90bc-118bdd1b8b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4eb5cf-4f70-4a78-a3b8-dd6622b4a490",
        "cursor": {
          "ref": "ef3b3f48-8ed9-4a84-9afc-add15140cbb7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1ca36f74-acdc-4d5a-9402-f1e1baf849f3"
        },
        "item": {
          "id": "8c4eb5cf-4f70-4a78-a3b8-dd6622b4a490",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f64c6506-14a2-4ad1-b9c5-62c997b4e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234e38b2-b977-430a-8c0b-d301b6081477",
        "cursor": {
          "ref": "7283e5e6-ca5d-473b-85d7-e9ca6dcd3b36",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "735dd409-4efe-4dc5-b223-904df4cd71f7"
        },
        "item": {
          "id": "234e38b2-b977-430a-8c0b-d301b6081477",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b4c2734e-c268-40fa-bb62-91fa8f2999ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ecee14-cf4b-4925-97d6-d2a9dab373ee",
        "cursor": {
          "ref": "ed86b54e-0f8d-4305-9774-0317a07b77c2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "faa2cddc-a1ea-4eb4-80b6-33dfee80ff28"
        },
        "item": {
          "id": "19ecee14-cf4b-4925-97d6-d2a9dab373ee",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e51637b1-d049-4d97-a6ff-6a9fe74c8b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b520ee5-0a26-4216-92a2-fb5be0f8ca27",
        "cursor": {
          "ref": "ec812fc8-bcf2-4664-bed1-d565944a847e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a5fa3a02-6558-4d9d-86d7-155992325a20"
        },
        "item": {
          "id": "5b520ee5-0a26-4216-92a2-fb5be0f8ca27",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9ffacfab-3a2a-4543-8735-da68b25515c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4718bcb-0e16-4056-90e2-7d84d6c6d247",
        "cursor": {
          "ref": "008f19b4-4c3d-4278-8573-fab4de673ae2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bb3e4505-b5cd-45bb-bce8-d7a633d934c4"
        },
        "item": {
          "id": "d4718bcb-0e16-4056-90e2-7d84d6c6d247",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0e1a07ef-5a17-4e11-8106-7b4b47c4a4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9002bb26-b469-4e0a-a2d0-659ab5c67a55",
        "cursor": {
          "ref": "6ea2285e-e32f-4bbc-8d25-81f44da10ffa",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ef2d2d4c-93d5-48f4-acb6-4162c55fee3d"
        },
        "item": {
          "id": "9002bb26-b469-4e0a-a2d0-659ab5c67a55",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "114f0859-9d04-4eeb-a46c-667f0e7e1f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eb1f27-5a7d-4de0-98a8-52af1beb14e5",
        "cursor": {
          "ref": "d847a539-6993-4cc6-946b-2d54f6ed5d7d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "830b925a-2606-4909-850a-b83269ce8ae1"
        },
        "item": {
          "id": "92eb1f27-5a7d-4de0-98a8-52af1beb14e5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ca0d2d02-8cf6-458a-af14-ffea2af5f19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4f676f-5254-4a7d-81d3-5fde2e19d911",
        "cursor": {
          "ref": "7a474ea9-a139-4c01-9598-a53a761c0148",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "244c4867-8659-47c3-8ae4-4316a7e1a880"
        },
        "item": {
          "id": "5a4f676f-5254-4a7d-81d3-5fde2e19d911",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "63856ce0-c431-4801-84ec-7525d22b24c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13b542c-7f07-4ea3-8f3b-1a34fdb31e55",
        "cursor": {
          "ref": "0483a51e-4cdb-4477-adf3-6a001975b610",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ba0e05e1-148c-4430-a025-bb6ea0b3c103"
        },
        "item": {
          "id": "f13b542c-7f07-4ea3-8f3b-1a34fdb31e55",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c5f71c1a-660f-45ad-be2b-eaae836f36c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c32f034-e0d4-44aa-b950-254003ea823c",
        "cursor": {
          "ref": "ecce8407-3594-4397-9629-45f21ff8a251",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6ec3af5a-e98e-48fe-a689-256b2941400f"
        },
        "item": {
          "id": "1c32f034-e0d4-44aa-b950-254003ea823c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aac7c527-ee87-4e63-8c51-e3484e3a09fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5009e2a5-5684-4b05-bb2b-09c63389048e",
        "cursor": {
          "ref": "c38a7a47-4f9e-4209-9ddd-b2c2279f9262",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c1bebb8f-c9ba-4501-955b-9418e376f862"
        },
        "item": {
          "id": "5009e2a5-5684-4b05-bb2b-09c63389048e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dc5b0a2e-b28a-407e-b201-a16a53c66532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f762f51-069e-4bd8-b855-a07fe32e8a46",
        "cursor": {
          "ref": "79253dda-f648-4930-b442-fb91c1f47721",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8ba62066-3aa1-4fce-895b-86072a15bb60"
        },
        "item": {
          "id": "4f762f51-069e-4bd8-b855-a07fe32e8a46",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f21e3dbf-d1b0-47f9-b26b-58faad409ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af2dcc1-ad8a-4bab-bd5b-51313f2e4a76",
        "cursor": {
          "ref": "ead2167c-3395-4d9c-8d15-6400173c7d21",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "abb4363e-d8e5-4069-8272-cf59e42b1246"
        },
        "item": {
          "id": "8af2dcc1-ad8a-4bab-bd5b-51313f2e4a76",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8b11e868-5abc-4953-91f5-11077a802dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed621dc-563d-45d0-a61e-6dac11715c3d",
        "cursor": {
          "ref": "85b84dc7-dbaa-498f-80e7-b2924ed9a139",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "221b6440-7da5-40f5-9690-ce7c67f52dcd"
        },
        "item": {
          "id": "2ed621dc-563d-45d0-a61e-6dac11715c3d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "31f8371a-0d1d-40a4-8c45-53a906007a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c0e581-289e-4444-84f6-dd6efd304595",
        "cursor": {
          "ref": "1d59d071-3646-4324-818e-bd120742b2c3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd9a2338-19d4-4f91-8b81-9b595537af47"
        },
        "item": {
          "id": "49c0e581-289e-4444-84f6-dd6efd304595",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "307bce38-9b9f-4a1e-88dd-75b65c09074e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f19280-f4bb-405d-a80c-2c4316ef1131",
        "cursor": {
          "ref": "c4c481d0-8a5b-4ab2-ad7a-878e5d56a4ae",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b939683d-514c-4bd5-be5f-27cddd1c98b8"
        },
        "item": {
          "id": "89f19280-f4bb-405d-a80c-2c4316ef1131",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3417b918-e699-43fa-a3e0-1b2ec5623880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29609c4-9dc1-4573-8f72-6db3dafa8592",
        "cursor": {
          "ref": "2b5ad4e0-2be3-4f7e-9d75-2689cfbc5c48",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1b1952a8-947b-4aab-af10-f5d0962091cb"
        },
        "item": {
          "id": "a29609c4-9dc1-4573-8f72-6db3dafa8592",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0f0219ec-8717-4095-bbc9-ef658c17c565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33924e2b-b3dd-4c0c-9b0a-a28d9995faa5",
        "cursor": {
          "ref": "31aa4f5d-98d5-45fc-9de2-713239f0c682",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "569c3ecf-2319-49fd-b86a-06786aeca17e"
        },
        "item": {
          "id": "33924e2b-b3dd-4c0c-9b0a-a28d9995faa5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "905b9bc5-f070-4a66-a585-46e6f8181363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f24a03-7d2c-4ae3-8efa-5d7651fe2817",
        "cursor": {
          "ref": "9f4119a7-b54e-4147-ade4-48c15c4fe3b7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "729f0a2d-c612-40b9-a165-b816d54106d7"
        },
        "item": {
          "id": "09f24a03-7d2c-4ae3-8efa-5d7651fe2817",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5a3c090b-d67a-4ff8-9e69-a240ed4cc2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad85aa-bedc-466f-871c-bc716c44eca1",
        "cursor": {
          "ref": "e931d370-16bc-4fc0-b976-1e7456123d42",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7aed3510-ed40-4abe-8091-56627defc8d3"
        },
        "item": {
          "id": "9aad85aa-bedc-466f-871c-bc716c44eca1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "98fd0de5-0a3c-455f-9df1-6c3710390b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7308b2ed-1f3e-42ec-a932-416fec44010a",
        "cursor": {
          "ref": "15c83951-1a09-4255-8120-d2bf4197c07f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "41e13e83-0a50-45f1-8eaf-35123e09f89b"
        },
        "item": {
          "id": "7308b2ed-1f3e-42ec-a932-416fec44010a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "22c6712f-af1c-4f77-9160-a1742686826d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803f7ad8-d33d-4a6f-a355-ba52daf25466",
        "cursor": {
          "ref": "2f4c14f7-45de-42f8-b700-d3e9bafc3fcb",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "711ab86b-4a65-4caf-85f3-99b6f815ba2a"
        },
        "item": {
          "id": "803f7ad8-d33d-4a6f-a355-ba52daf25466",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5ba9ea91-e2f3-4ac5-931b-61b2f747510b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65b4713-0395-4703-860b-fd7639a89766",
        "cursor": {
          "ref": "f02d4bef-db64-44cb-949c-0ab4603c55b8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3274c1ee-2cc5-4f06-b1ff-335e84b0f445"
        },
        "item": {
          "id": "d65b4713-0395-4703-860b-fd7639a89766",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a42d0590-0ee6-48c5-940c-70316f85c429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd58fba3-2f10-440a-97a2-d273deaba6e9",
        "cursor": {
          "ref": "f385b80b-0bda-4a6d-a67b-fdf02f4aab7f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a0763596-de6c-47df-b75c-a5a4a797e954"
        },
        "item": {
          "id": "bd58fba3-2f10-440a-97a2-d273deaba6e9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a73af7e8-aec7-42a6-b77a-7a7d8348356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e1bc92-ff3c-47d4-822a-519915c84346",
        "cursor": {
          "ref": "d7cd9ccc-fb54-40e6-b0d6-ed6985e00f47",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b628dffd-feb9-4ce2-af63-57d2dcc655d8"
        },
        "item": {
          "id": "e7e1bc92-ff3c-47d4-822a-519915c84346",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d8461c3-e035-46f2-bd99-820b6e1af883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160f9332-8eb4-4285-b1d5-992522e6be05",
        "cursor": {
          "ref": "7049760a-92c3-4e48-b2a0-421cc5bbee6d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a48bb743-a8ff-475e-b5f5-4cd2c2865f5a"
        },
        "item": {
          "id": "160f9332-8eb4-4285-b1d5-992522e6be05",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1f9504dd-0a01-4920-ba06-57e298fe75c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a9d521-f5d4-4b7a-b8ee-66c6662c22b5",
        "cursor": {
          "ref": "dc223395-2581-4794-a9ce-812812f3cd4e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "35b45bd3-5ad2-408c-bbd1-1af7eca2b6e1"
        },
        "item": {
          "id": "74a9d521-f5d4-4b7a-b8ee-66c6662c22b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "94912c03-1a18-4656-97d9-57d2abadeb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71db3613-4e6d-4735-9f20-93eda5cab085",
        "cursor": {
          "ref": "75f102c5-e77a-42b8-8d0d-570977c4b82f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "040a1881-6820-47fa-afad-57921ca8374c"
        },
        "item": {
          "id": "71db3613-4e6d-4735-9f20-93eda5cab085",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "27bad8ec-f3dd-48d8-af54-2fecd7ad5042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28658b05-032b-420a-8eb6-7f0d5393979f",
        "cursor": {
          "ref": "196e3e1b-bb61-43a9-9b9a-ebaf1c1eaaec",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "93cd9ddc-3b68-424a-8366-39cee19604bf"
        },
        "item": {
          "id": "28658b05-032b-420a-8eb6-7f0d5393979f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4283aa9a-448b-483d-9bb3-34dfe20b4853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566a147e-1b0d-4f69-8806-51bb37238e52",
        "cursor": {
          "ref": "d638a18c-f2ac-474b-80c0-61198f6df912",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "edd50801-9c69-4f47-81d8-0783fa332ce6"
        },
        "item": {
          "id": "566a147e-1b0d-4f69-8806-51bb37238e52",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d4790af3-5286-4b65-9ca2-ad6161f31109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a6aac6-79b3-47d3-9556-8f1e46307615",
        "cursor": {
          "ref": "e15c46aa-7955-4815-8c59-37708f359c94",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e8d7fa85-8bc9-4461-97b4-33ed68c1afba"
        },
        "item": {
          "id": "32a6aac6-79b3-47d3-9556-8f1e46307615",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5522f4a4-e1a7-4b31-b4a9-8b555b7236f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b7f00b-fccf-4da1-b880-17b191ad0a11",
        "cursor": {
          "ref": "8073fab0-d9f7-44fa-8cb1-9ec1a91a848e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "96d10e0e-7331-40d6-8982-ebe96375a1b1"
        },
        "item": {
          "id": "67b7f00b-fccf-4da1-b880-17b191ad0a11",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e8843ef-9271-47a4-94c1-1015a1a70f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e590f4ef-7ae9-408c-ad33-81fef2270e32",
        "cursor": {
          "ref": "1e5c07ca-031d-4d53-9a8c-9b726a8eefb1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b5c16bd9-117e-46f0-b789-8c4574b58064"
        },
        "item": {
          "id": "e590f4ef-7ae9-408c-ad33-81fef2270e32",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a9aea7ac-c9e9-4040-93ca-35a07cd32580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95670b02-e84c-4046-88db-990681556c7c",
        "cursor": {
          "ref": "2d10b09d-1b14-4d80-8c79-8ffa13c48191",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9e7c3e52-ae89-46e1-95e9-71cd8d39e145"
        },
        "item": {
          "id": "95670b02-e84c-4046-88db-990681556c7c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e43c6e5f-52a2-4dde-8160-4d6f1327782c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae8d405-d806-41bb-a76c-51bf12bd948e",
        "cursor": {
          "ref": "d329122c-4300-4d27-a931-918d170f38b8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "08845efc-3fc7-4ad5-91dc-21a500253d43"
        },
        "item": {
          "id": "2ae8d405-d806-41bb-a76c-51bf12bd948e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9642f7c3-719a-4132-ac6d-dad87c9cabb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d8c155-4832-4239-ab55-d9f7bbb4e062",
        "cursor": {
          "ref": "db813118-745d-4ad0-a319-7d4799affda1",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1548d3a0-357a-4cc2-8cf7-3bc9c683f68b"
        },
        "item": {
          "id": "30d8c155-4832-4239-ab55-d9f7bbb4e062",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7726831b-6b50-4a2e-8d10-df1f685ec7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccf97cb-1ae7-420d-9598-b3374c5d187f",
        "cursor": {
          "ref": "cc329dda-2b62-46d9-925c-91cb8dbfe700",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "342b0ece-b3ff-479e-87cd-c77723ca2609"
        },
        "item": {
          "id": "1ccf97cb-1ae7-420d-9598-b3374c5d187f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "be470587-aca6-4f50-bf7b-85feb24b1549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83a2b3f-6be8-4fd4-87df-a0267c8f9e2a",
        "cursor": {
          "ref": "4f3f3f4c-3b63-4a8a-a0ea-ef73eb2d3ba0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "694736a2-84b3-4200-b20b-2305c4886140"
        },
        "item": {
          "id": "f83a2b3f-6be8-4fd4-87df-a0267c8f9e2a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a9176264-54ab-4cb5-a383-61eca46a79cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de3d2aa-0e78-4d87-8d7f-0fdd00da4fbb",
        "cursor": {
          "ref": "d51c1962-c50d-43eb-914a-7fd69f6ad059",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c790bd82-9af0-4641-915e-94b237f97ac5"
        },
        "item": {
          "id": "5de3d2aa-0e78-4d87-8d7f-0fdd00da4fbb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0adac43c-aa8a-4a02-92d7-aad6bcb9a513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267b5fe1-ffe3-48ce-95f7-901ad8ad126a",
        "cursor": {
          "ref": "9c44f937-d577-424f-9579-0d8bb6feb2f6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3d61bddc-bafd-43ae-b23f-3d16fab5c0a7"
        },
        "item": {
          "id": "267b5fe1-ffe3-48ce-95f7-901ad8ad126a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2dd677f7-660c-4279-aa0d-819363b57526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1121e91a-1ec2-40af-8091-a59fe73bc660",
        "cursor": {
          "ref": "f5c90321-c935-4c7e-b4f7-9093748099e9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d793ff36-5e0a-4525-adf4-879200a77a5f"
        },
        "item": {
          "id": "1121e91a-1ec2-40af-8091-a59fe73bc660",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cae25f1e-a491-4d46-a1ee-457d875800c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a917ca42-e16d-4567-82af-a99bb4669991",
        "cursor": {
          "ref": "7ac5f4cd-4ce0-4543-bfaa-7bcc769893e0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "55147be7-57bc-43c8-b7ce-8bf4e39e146b"
        },
        "item": {
          "id": "a917ca42-e16d-4567-82af-a99bb4669991",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "55f0b53a-1fcb-466c-87be-5d1068e2c065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0fc304-8ff2-4bc1-bd5b-c27470d30647",
        "cursor": {
          "ref": "f9a12544-f1a7-4f9b-bf7a-48d7ba598ae0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4088bd05-687c-48c7-9753-f7ca16bc71ee"
        },
        "item": {
          "id": "3f0fc304-8ff2-4bc1-bd5b-c27470d30647",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "227d93c3-6e36-485a-8e95-c743bd78285c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471a0d32-8f6c-446c-b7aa-15812f4115ca",
        "cursor": {
          "ref": "3cfbb8d6-657a-4aaa-9f08-07bb441dfda8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d45bb92b-20a0-4cbc-ac91-0a3d793eaa61"
        },
        "item": {
          "id": "471a0d32-8f6c-446c-b7aa-15812f4115ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e426b716-25a7-4b34-83db-223cd38d24f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b91c0e-0910-4b53-9847-7ab5ce3830ef",
        "cursor": {
          "ref": "e05e5dc1-aa4a-4a27-9309-a54fc2982466",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c8fc2f3e-6bec-46de-b8e0-32a38497a6b9"
        },
        "item": {
          "id": "a2b91c0e-0910-4b53-9847-7ab5ce3830ef",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dc42ce3f-9955-4aff-a6f2-9f44d55c2f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa65e88-e110-4dfe-b385-c891c4d1e8a2",
        "cursor": {
          "ref": "0a9c5847-5ce8-46ec-bec8-973cb1007f96",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "00661efb-ef33-4dcb-8395-b5510616c528"
        },
        "item": {
          "id": "1fa65e88-e110-4dfe-b385-c891c4d1e8a2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9b1f4f77-243b-4a46-b7f5-5ec8d37fb66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11d8c2e-e367-436d-9d91-b8eca10ca637",
        "cursor": {
          "ref": "e1b075d3-d481-4f3c-a12a-5feab9ed31f8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b3f84a21-8905-4737-9769-0fe527873491"
        },
        "item": {
          "id": "a11d8c2e-e367-436d-9d91-b8eca10ca637",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f82a219e-67e9-4efa-8796-eafa745812fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 106,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac859899-7ddb-43ef-9645-439446322906",
        "cursor": {
          "ref": "88dff218-5859-4d50-a5a2-e2664fd68bb3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3ffe2913-8fce-4d12-888b-0756338c0e6c"
        },
        "item": {
          "id": "ac859899-7ddb-43ef-9645-439446322906",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "32d8dd60-ca0e-4207-b1e9-22d7a9c4a3db",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99dbb6c-c7d6-4ab8-9fce-6c560b0ea03e",
        "cursor": {
          "ref": "64bef3a5-4bfa-46b6-bdd3-1fec463460fe",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fe124846-5062-4793-8106-ae3253b8aef0"
        },
        "item": {
          "id": "e99dbb6c-c7d6-4ab8-9fce-6c560b0ea03e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bfadc01c-6e5a-4e7e-bf05-e8df47febb7a",
          "status": "OK",
          "code": 200,
          "responseTime": 3496,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6f4609-65cb-4d9e-9d44-43a5e0a02352",
        "cursor": {
          "ref": "9fa1f278-e749-493b-9410-6e290f08260a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "57d42b14-37a8-4f03-a2da-dd4a31b93dd1"
        },
        "item": {
          "id": "1f6f4609-65cb-4d9e-9d44-43a5e0a02352",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e56fec4-7336-4a51-b765-0bb112a437e4",
          "status": "OK",
          "code": 200,
          "responseTime": 3010,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b86ba1-cd53-4a82-a448-751bf76ff7ee",
        "cursor": {
          "ref": "441292c8-3295-4a0c-9dd6-7a97328434e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6fe4fc60-a64c-490c-8f97-d6d0bb8fdfe2"
        },
        "item": {
          "id": "b1b86ba1-cd53-4a82-a448-751bf76ff7ee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "805f7b4b-3377-476d-a9c5-254b1445aa26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b86ba1-cd53-4a82-a448-751bf76ff7ee",
        "cursor": {
          "ref": "441292c8-3295-4a0c-9dd6-7a97328434e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6fe4fc60-a64c-490c-8f97-d6d0bb8fdfe2"
        },
        "item": {
          "id": "b1b86ba1-cd53-4a82-a448-751bf76ff7ee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "805f7b4b-3377-476d-a9c5-254b1445aa26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc88148c-70f1-488d-99c8-67f0267228b0",
        "cursor": {
          "ref": "470b9d1a-70d5-4fa5-8826-958267052ced",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "11384e2e-510c-4aad-9528-7413d57d44a5"
        },
        "item": {
          "id": "dc88148c-70f1-488d-99c8-67f0267228b0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1f8badc5-b6f3-466b-97aa-d414b906a814",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb33312-573e-4381-97b9-540a7a6f035f",
        "cursor": {
          "ref": "f8aee1c2-f1d8-4055-bca2-c3f32be3317d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6a538366-2464-40e6-b270-8e005c004e90"
        },
        "item": {
          "id": "5fb33312-573e-4381-97b9-540a7a6f035f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3f0e22f2-c4d3-43b9-b0b9-67311d483f46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}